{"version":3,"sources":["Utils/Animatior.js","Components/ColumnMiddle/StickerPreview.js","Assets/Icons/Smile.js","Notifications.js","Components/Player/PipPlayer.js","Components/Tile/ForwardTargetChat.js","Utils/Text.js","Utils/Language.js","Components/Popup/ForwardDialog.js","Assets/Icons/Document2.js","Assets/Icons/SharedMedia.js","Assets/Icons/Verified.js","Components/Tile/DialogTitle.js","Components/Tile/DialogStatus.js","Components/Tile/Chat.js","Assets/Icons/Back.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnMiddle/Notifications.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/SharedMedia/SharedMediaTabs.js","Assets/Icons/Delete.js","Assets/Icons/Share.js","Components/Tile/SharedMedia/ContextMenu.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/Tile/SharedMedia/SharedDocument.js","Components/Tile/SharedMedia/SharedLinkTile.js","Components/Tile/SharedMedia/SharedLink.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedMediaContent.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Assets/Icons/Search.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeader.js","Components/ColumnRight/SharedMedia.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/DialogContent.js","Assets/Icons/Pin.js","Components/Tile/DialogBadge.js","Assets/Icons/Error.js","Assets/Icons/Pending.js","Assets/Icons/Sent.js","Assets/Icons/Succeeded.js","Components/Message/Status.js","Components/Tile/DialogMeta.js","Assets/Icons/Archive.js","Assets/Icons/Unarchive.js","Assets/Icons/Pin2.js","Assets/Icons/PinOff.js","Assets/Icons/Mute.js","Assets/Icons/Unmute.js","Assets/Icons/User.js","Assets/Icons/Group.js","Assets/Icons/Message.js","Assets/Icons/Unread.js","Components/Tile/Dialog.js","Components/Tile/DialogPlaceholder.js","Components/Additional/VirtualizedList.js","Utils/DOM.js","Assets/Icons/Channel.js","Assets/Icons/Menu.js","Assets/Icons/Help.js","Assets/Icons/Settings.js","Workers/CacheManager.js","Stores/CacheStore.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/Search/SearchInput.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/Filters.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/Archive.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/SectionHeader.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/SidebarPage.js","Assets/Icons/Folder.js","Assets/Icons/Edit.js","Assets/Icons/LogOut.js","Assets/Icons/More.js","Components/ColumnLeft/Settings/SettingsMenuButton.js","Assets/Icons/Data.js","Assets/Icons/Language.js","Components/ColumnLeft/Settings/Main.js","Assets/Icons/AddImage.js","Components/ColumnLeft/NewChatPhoto.js","Components/ColumnLeft/Settings/EditProfile.js","Assets/Icons/Add.js","Assets/Icons/NewPrivate.js","Assets/Icons/NonContacts.js","Assets/Icons/NewGroup.js","Assets/Icons/NewChannel.js","Assets/Icons/ReadChats.js","Assets/Icons/Bots.js","Assets/Icons/Done.js","Components/Tile/FilterChat.js","Components/Tile/FilterText.js","Components/Tile/Chip.js","Components/Tile/ChatChip.js","Components/ColumnLeft/Settings/EditFilterChats.js","Components/ColumnLeft/Settings/CreateFilter.js","Utils/Filter.js","Components/Tile/Filter.js","Components/Tile/RecommendedFilter.js","Components/ColumnLeft/Settings/Filters.js","Assets/Icons/Colorize.js","Components/Tile/Wallpaper.js","Components/ColumnLeft/Settings/ChatBackground.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/Settings/General.js","Components/ColumnLeft/Language.js","Components/ColumnLeft/Settings/Notifications.js","Assets/Icons/Stop.js","Components/Tile/Session.js","Components/ColumnLeft/Settings/ActiveSessions.js","Assets/Icons/Unblock.js","Components/ColumnLeft/Settings/BlockedUsers.js","Assets/Icons/Device.js","Assets/Icons/RemoveMember.js","Components/ColumnLeft/Settings/PrivacySecurity.js","Components/ColumnLeft/Settings/Settings.js","Components/ColumnLeft/Contacts.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/NewChannel.js","Components/Tile/UserChip.js","Components/ColumnLeft/AddParticipants.js","Components/ColumnLeft/NewGroupParams.js","Components/ColumnLeft/NewGroup.js","Components/Popup/SidebarDialog.js","Utils/Archive.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Assets/Icons/Send.js","Assets/Icons/Microphone.js","Assets/Icons/Attach.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Components/Popup/CreatePollDialog.js","Components/Popup/EditUrlDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Components/Popup/PasteFilesDialog.js","Components/ColumnMiddle/RecordTimer.js","Components/Popup/EditMediaDialog.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBox.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommand.js","Components/ColumnMiddle/Footer.js","Assets/Icons/AddMember.js","Assets/Icons/Broom.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/HeaderChatSubtitle.js","Components/Tile/HeaderChat.js","Components/ColumnMiddle/AnimatedItem.js","Components/ColumnMiddle/AnimatedCounter.js","Components/ColumnMiddle/HeaderCommand.js","Assets/Icons/PlaylistEdit.js","Components/ColumnMiddle/PinnedMessageBorder.js","Components/ColumnMiddle/PinnedMessage.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Actions/InstantView.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/ActionBar.js","Assets/Icons/Copy.js","Assets/Icons/FrameCheck.js","Assets/Icons/RemoveCheck.js","Components/Message/MessageMenu.js","Assets/Icons/PinFilled.js","Components/Message/Meta.js","Components/Message/Album/AlbumItem.js","Components/Message/DayMeta.js","Components/Message/Forward.js","Components/Message/Album/GroupedMessages.js","Components/Message/UnreadSeparator.js","Components/Tile/EmptyTile.js","Components/Message/Album/Album.js","Components/Message/Album/DocumentAlbum.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/MessageContext.js","Assets/Icons/ArrowTopRight.js","Assets/Icons/ShareFilled.js","Components/Message/Markup/KeyboardButton.js","Components/Message/Markup/KeyboardRow.js","Components/Message/Markup/ReplyMarkup.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/ColumnMiddle/PinnedMessagesHeader.js","Components/ColumnMiddle/PinnedMessages.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/SelectChatPlaceholder.js","Components/ColumnMiddle/DialogDetails.js","Components/InstantView/Article.js","Assets/Icons/Left.js","Components/Viewer/MediaCaption.js","Components/Viewer/InstantViewMediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/InstantViewMediaViewer.js","Components/InstantView/InstantViewer.js","Components/Tile/MediaInfo.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaInfo.js","Components/Viewer/ProfileMediaViewer.js","Components/Popup/AlertDialog.js","Components/Popup/BlockSenderDialog.js","Components/Popup/ClearHistoryDialog.js","Components/Popup/DeleteMessagesDialog.js","Components/Popup/InputPasswordDialog.js","Components/Popup/LeaveChatDialog.js","Components/Popup/OpenGameDialog.js","Components/Popup/OpenUrlDialog.js","Components/Popup/RequestUrlDialog.js","Components/Popup/PinMessageDialog.js","Components/Additional/NotificationTimer.js","Components/Popup/UnpinMessageDialog.js","Components/Actions.js","Utils/Game.js","Components/MainPage.js"],"names":["Animator","constructor","duration","options","start","this","stopped","id","requestAnimationFrame","startInternal","timeStamp","startTime","endTime","draw","now","every","x","to","last","time","Math","min","p","val","outSine","forEach","from","func","stop","cancelAnimationFrame","n","sin","PI","StickerPreview","React","Component","state","emoji","prevPropsSticker","loadStickerEmojis","sticker","TdLibController","send","then","result","props","setState","emojis","join","componentDidUpdate","prevProps","prevState","snapshot","componentDidMount","render","className","displaySize","STICKER_PREVIEW_DISPLAY_SIZE","source","StickerSourceEnum","PREVIEW","createSvgIcon","d","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","maxSnack","MAX_SNACK","displayName","getDisplayName","PipPlayer","super","onClientUpdateMediaShortcut","update","event","onKeyDown","key","code","altKey","ctrlKey","metaKey","shiftKey","video","handled","handleClose","handleSeek","currentTime","PLAYER_SEEK_STEP_SMALL","PLAYER_SEEK_STEP_BIG","handleVolume","volume","PLAYER_VOLUME_STEP","handleClick","handleMute","handleFullScreen","progress","Number","replace","handleSeekProgress","handlePlaybackRate","playbackRate","PLAYER_PLAYBACKRATE_STEP","stopPropagation","preventDefault","clamp","PLAYER_VOLUME_MIN","PLAYER_VOLUME_MAX","showMediaHint","round","rate","PLAYER_PLAYBACKRATE_MIN","PLAYER_PLAYBACKRATE_MAX","onFullScreenChange","fullscreen","document","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","getElementById","onWindowResize","player","oldLeft","parseInt","style","left","oldTop","top","normalizePosition","handleLoadedData","target","handleLoadedMetadata","buffered","waiting","handleCanPlay","play","pause","handlePlay","onPlay","hidden","clientUpdate","handlePause","onPause","handleEnded","onEnded","setCurrentTime","handleTimeUpdate","fileId","handleVolumeChange","onVolumeChange","handleProgress","handleWaiting","startStopPlayer","paused","handlePlayerMouseDown","pip","focus","mouseDownRoot","nativeEvent","which","offsetX","offsetY","onmousemove","handleMouseMove","onmouseup","handleMouseUp","windowDragging","clientX","clientY","handleMouseDown","dragging","draggingTime","handleChange","value","handleChangeCommitted","isFinite","handlePanelEnter","panelEnter","handlePanelLeave","handleMouseOver","clearTimeout","mouseOverTimeout","setTimeout","videoInfo","handleVolumeSliderChange","handleVolumeSliderChangeCommitted","activeElement","blur","prevVolume","root","exitFullscreen","requestFullscreen","getCurrentTime","file","FileStore","get","remote","unique_id","PlayerStore","clearCurrentTime","handlePanelDoubleClick","handleClickRoot","handleDoubleClick","handleFocus","KeyboardManager","add","keyboardHandler","handleBlur","remove","KeyboardHandler","prevVideo","connectPlayer","window","addEventListener","on","componentWillUnmount","disconnectPlayer","removeEventListener","off","text","pipPlayer","pipParams","container","onloadedmetadata","onloadeddata","oncanplay","onplay","onpause","onended","ontimeupdate","onvolumechange","onprogress","onwaiting","innerHTML","appendChild","checkGlue","playerWidth","clientWidth","playerHeight","clientHeight","documentWidth","documentElement","documentHeight","glueLeft","glueRight","PIP_PLAYER_BORDER_PRECISION","glueTop","glueBottom","element","method","mozRequestFullScreen","webkitRequestFullscreen","call","mozCancelFullScreen","webkitExitFullscreen","bufferedTime","Player","getBufferedTime","bufferedValue","timeString","getDurationString","floor","durationString","fullscreenEnabled","mozFullScreenEnabled","webkitFullscreenEnabled","classNames","onMouseDown","onMouseMove","onClick","onDoubleClick","onFocus","onBlur","tabIndex","Hint","e","Close","onMouseEnter","onMouseLeave","width","Slider","max","step","classes","rail","track","thumb","active","onChange","onChangeCommitted","Pause","getVolumeIcon","disabled","FullScreen","Progress","withTranslation","chatId","selected","onSelect","t","shortTitle","getChatShortTitle","ChatTile","copy","a","navigator","clipboard","writeText","console","error","copyOld","successful","createElement","contentEditable","readOnly","all","position","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","body","select","execCommand","Error","removeChild","sprintf","args","postProcess","cyrillicInput","isCyrillicPackId","packId","getCyrillicInput","input","length","currentPackId","OptionStore","suggestedPackId","Map","output","i","has","latinInput","getLatinInput","enhance","compose","withSnackbar","loadContent","getPublicMessageLink","promises","getChatsPromise","offset_order","offset_chat_id","limit","push","savedMessagesPromise","user_id","UserStore","getMyId","force","Promise","map","catch","chats","savedMessages","chatIds","chat_ids","store","getStore","loadChatsContent","messageIds","isSupergroup","getChatUsername","chat_id","message_id","for_album","for_comment","publicMessageLink","forward","handleCopyLink","link","handleScheduledAction","message","enqueueSnackbar","closeSnackbar","snackKey","autoHideDuration","NOTIFICATION_AUTO_HIDE_DURATION_MS","preventDuplicate","action","IconButton","aria-label","color","getForwardPhotoSize","MessageStore","can_be_forwarded","content","photo","sizes","handleSend","clearSelection","inputMessageContent","getInnerText","messageRef","current","targetChats","targetChatId","AppStore","invokeScheduledAction","caption","entities","reply_to_message_id","disable_notifications","from_background","reply_markup","input_message_content","disable_web_page_preview","clear_draft","size","height","thumbnail","added_sticker_file_ids","ttl","from_chat_id","message_ids","as_album","handleChangeSelection","delete","set","forceUpdate","innerText","handleSearchKeyDown","keyCode","handleSearchKeyUp","searchRef","trim","searchText","searchResults","globalSearchResults","latinText","cyrillicText","chatsSource","concat","filter","canSendMessages","hasSearchText","query","handleSearchPaste","plainText","clipboardData","getData","handleMessageKeyUp","handleMessagePaste","getChatTitle","toLocaleLowerCase","indexOf","toLowerCase","setSearchFocus","createRef","searchResultsMap","filteredResults","foundChats","open","manager","modalManager","transitionDuration","onClose","aria-labelledby","aria-describedby","ref","suppressContentEditableWarning","placeholder","onKeyUp","onPaste","DialogActions","Button","autoFocus","DialogTitle","onFastUpdatingComplete","onUpdateChatTitle","shouldComponentUpdate","nextProps","nextState","ChatStore","showSavedMessages","isVerified","isChatVerified","title","defaultProps","DialogStatus","onUpdateUserStatus","chat","type","updateSubtitle","fullInfo","BasicGroupStore","getFullInfo","basic_group_id","members","find","subtitle","getChatSubtitleWithoutTyping","isAccent","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","supergroup_id","onUpdateBasicGroup","basic_group","onUpdateSupergroup","supergroup","prevChatId","SupergroupStore","externalSubtitle","Chat","onTileSelect","showStatus","big","showTitle","isSavedMessages","isMeChat","backButton","info","isPrivateChat","isChannelChat","Notifications","onUpdateChatNotificationSettings","isMuted","isChatMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","toggleChatNotificationSettings","debounce","NOTIFICATION_DEBOUNCE_DELAY_MS","NotificationStore","ListItem","button","alignItems","ListItemIcon","Checkbox","edge","checked","disableRipple","ListItemText","primary","Typography","variant","noWrap","secondary","onUpdateMessageContent","selectedIndex","media","getMedia","setMediaState","onUpdateDeleteMessages","onUpdateNewMessage","hasObserver","setSelection","supergroupMembers","photoAndVideo","audio","url","voiceNote","groupsInCommon","hasMembers","hasPhotoAndVideo","hasDocument","hasAudio","hasUrl","hasVoiceNote","hasGroupsInCommon","index","onClientUpdateChatMedia","currentChatId","onClientUpdateMediaTab","transition","isSmallWidth","scroll","filtersRef","item","membersFilter","filterRef","firstChild","offsetLeft","photoAndVideoFilter","documentFilter","audioFilter","urlFilter","voiceNoteFilter","groupsInCommonFilter","filterSelection","filterSelectionRef","transitionStyle","cssText","scrollWidth","animator","scrollLeft","offsetWidth","handleFilterClick","throttle","observeResize","unobserveResize","filters","observer","ResizeObserver","observe","resizeObserver","unobserve","tabsCount","r","handleOpenMessage","messageId","openChat","handleForward","forwardMessages","handleDelete","deleteMessages","anchorPosition","showOpenMessage","can_be_deleted_only_for_self","can_be_deleted_for_all_users","Popover","anchorReference","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","MenuItem","Share","Delete","SharedPhoto","onClientUpdatePhotoBlob","photoSize","thumbSize","handleOpenContextMenu","contextMenu","handleCloseContextMenu","thumbnailSize","prevPhoto","getSize","minithumbnail","nextContext","openMedia","miniSrc","data","thumbSrc","getSrc","src","isBlurredThumbnail","onContextMenu","backgroundImage","backgroundSize","PHOTO_SIZE","PHOTO_THUMBNAIL_SIZE","i18n","date","dateString","Date","toLocaleDateString","language","day","month","year","hour","minute","hour12","SharedLinkTile","isBlurred","THUMBNAIL_BLURRED_SIZE_90","isVideoNote","hasVideoNote","hasSrc","Boolean","tileColor","abs","charCodeAt","draggable","alt","SharedLink","webPage","entity","getTitleFromUrl","startsWith","decodedUrl","decodeURI","hostname","URL","split","domain","punycode","ToUnicode","description","animation","video_note","display_url","videoNote","album_cover_minithumbnail","album_cover_thumbnail","getPhotoSize","longTextMaxLength","urlEntities","isValidEntity","showLinks","oneLinkText","offset","nonEmptyUrlEntities","entityText","substring","links","mail","typeUrl","SafeLink","getFormattedText","getFirstLetter","sender","voice","VoiceNoteTile","MessageAuthor","AudioAction","MediaStatus","icon","SharedVideo","onClientUpdateVideoThumbnailBlob","overScanCount","SharedMediaContent","items","some","scrollTop","list","listRef","offsetTop","viewportHeight","offsetParent","offsetHeight","renderIds","getRenderIds","onUpdateMessageSend","getSource","isValidContent","slice","SHARED_MESSAGE_SLICE_LIMIT","rowHeight","getRowHeight","params","loading","completed","migrateCompleted","getFilter","handleScroll","onLoadNext","handleVirtScroll","setScrollPosition","isVisibleItem","prevScrollTop","loadIncomplete","lastMessages","messages","fromMessageId","requestId","sender_user_id","from_message_id","finally","currentParams","total_count","isValidMessage","incompleteResults","setItems","loadMessageContents","onLoadMigratedNext","handleOpen","popup","openUser","isValidPhotoAndVideoContent","isValidDocumentContent","isValidAudioContent","isValidUrlContent","isValidVoiceNoteContent","web_page","loadUsersContent","renderIdsList","contentHeight","controls","itemHeight","getItemHeight","getItemTemplate","onOpen","User","userId","voice_note","withSaveRef","withRestoreRef","loadChatContents","getGroupChatMembers","getChatFullInfo","handleUsernameHint","username","telegramUrlOption","handlePhoneHint","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleHeaderClick","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","handleOpenUser","getContentHeight","handleTabClick","divider","dividerRef","scrollTo","behavior","mediaRef","scrollHeight","SCROLL_PRECISION","getSnapshotBeforeUpdate","theme","counters","migratedCounters","el","groupInCommonCount","group_in_common_count","bio","getChatBio","isGroupChat","isMe","users","member","user","sort","y","getUserStatusOrder","getUrlMentionHashtagEntities","bioText","bioEntities","openChatTitle","chatUrl","onScroll","List","wordWrap","toUpperCase","paddingLeft","GroupsInCommonHeader","GroupsInCommon","handleSelect","getChatUserId","minHeight","handleSearch","searchInputRef","onSearch","onCloseSearch","openSearch","handleKeyDown","handleKeyUp","handlePaste","ANIMATION_DURATION_200MS","SpeedDialIcon","openIcon","SharedMediaBase","getListClassName","getSearchListClassName","TypeError","migratedChatId","migratedItems","new_content","old_content","between","findIndex","insertByOrder","messageComparatorDesc","callback","getSearchFilter","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","searchItems","searchMigratedItems","handleCloseSearch","hasSearch","getHeader","searchMessages","SharedAudios","propTypes","PropTypes","number","isRequired","bool","SharedDocuments","SharedLinks","SharedMediaHeader","close","SharedMedia","Tabs","indicatorColor","textColor","scrollable","scrollButtons","fullWidth","Tab","label","minWidth","SharedPhotos","SharedVideos","SharedVoiceNotes","ChatInfo","onClientUpdatePageWidth","handleCloseChatDetails","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","loadChatCounters","loadMigratedCounters","getPhotoFromChat","loadProfileMediaViewerContent","getChatCounters","setCounters","getSupergroupId","upgraded_from_basic_group_id","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","dialogChatId","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedMedia","onOpenSharedLinks","onOpenSharedPhotos","onOpenSharedVideos","onOpenSharedVoiceNotes","onClientUpdateClearHistory","clearHistory","inProgress","onUpdateUser","last_message","onUpdate","contentControl","typingString","getChatTypingString","draft","getChatDraft","showChatDraft","getLastMessageContent","senderName","getLastMessageSenderName","strokeWidth","fill","fillRule","x1","y1","x2","y2","strokeLinecap","strokeLinejoin","DialogBadge","chatList","unread_count","isPinned","isChatPinned","showUnreadMentionCount","showChatUnreadMentionCount","showUnreadCount","showChatUnreadCount","Pin","stroke","transform","cx","cy","Status","old_message_id","sending_state","newMessageId","sendingState","onUpdateChatReadOutbox","last_read_outbox_message_id","unread","prevMessageId","isMessageUnread","viewBox","Pending","Sent","Succeeded","getLastMessageDate","is_outgoing","Dialog","previousChatId","handleContextMenu","contextMenuId","canPinChats","canTogglePin","canToggleArchive","canAddChatToList","canMute","pinnedSumMaxOption","isChatArchived","isSecret","isChatSecret","chat_list","pinnedSum","reduce","handlePin","toggleChatIsPinned","handleArchive","addChatToList","handleViewInfo","handleRead","isChatUnread","is_marked_as_unread","viewMessages","toggleChatIsMarkedAsUnread","handleDeleteChat","leaveChat","dialog","isLastPinned","ApplicationStore","deleteChat","canDeleteChat","deleteChatTitle","getDeleteChatTitle","isSelected","getChatId","isUnread","isArchived","showOnline","Unarchive","Group","getViewInfoTitle","Unmute","Mute","Unread","DialogPlaceholder","titleWidth","contentWidth","cos","listWrapper","right","VirtualizedList","setViewportHeight","parseFloat","getComputedStyle","getPropertyValue","getListRenderIds","getListRef","renderItem","findLastTextNode","nodeType","Node","TEXT_NODE","childNodes","textNode","focusInput","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","load","localStorage","getItem","JSON","parse","save","setItem","stringify","removeItem","clear","EventEmitter","reset","archiveChatIds","meChat","cacheContacts","contacts","cache","authorization_state","CacheManager","onClientUpdate","clearDataUrls","addTdLibListener","removeTdLibListener","saveInternal","files","dropCache","user_ids","parseCache","archiveChats","basicGroups","supergroups","setDataUrl","OutputTypingManager","small","updateChatChatLists","option","getCache","fileMap","userMap","basicGroupMap","supergroupMap","chatMap","blob","getBlob","basicGroup","values","entries","resolve","reject","fileReader","FileReader","readAsDataURL","onload","onerror","results","deleteDataUrl","onUpdateAuthorizationState","authorizationState","handleMenuOpen","isAuthorizationReady","anchorEl","currentTarget","handleMenuClose","handleCheckUpdates","handleNewChannel","handleNewGroup","handleContacts","handleArchived","openArchive","handleSaved","CacheStore","handleSettings","handleHelp","searchChat","getAuthorizationState","timeout","showClose","mainMenuControl","Menu","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","Channel","Saved","Help","closeIcon","aria-owns","aria-haspopup","SearchInput","stopImmediatePropagation","onBackspace","handleInput","inputRef","hint","showIcon","onInput","DialogsHeader","handleSearchTextChange","onSearchTextChange","setInitQuery","searchInput","showBack","onClientUpdateLanguageChange","onClientUpdateCacheLoaded","cachedFilters","main","chat_filter_id","onUpdateChatFilters","FilterStore","handleMainClick","onClientUpdateChatList","openChatList","handleWheel","deltaY","LocalizationStore","onWheel","DialogListItem","DialogsList","chatListEquals","scrollToTop","loadFirstSlice","onClientUpdateLeaveChat","hiddenChats","initDB","saveCache","onSaveCache","onUpdateChatPosition","onUpdateChatOrder","hasChatList","order","getChatOrder","currentIndex","chatOrder","newChatIds","setChatId","_m","reorderChats","SCROLL_CHATS_PRECISION","onLoadPrev","fistSliceLoaded","showArchive","archiveTitle","cacheItems","orderedChatIds","b","orderCompare","isDifferentOrder","oldChatIds","CHAT_SLICE_LIMIT","offsetOrder","offsetChatId","offsetChat","log","shift","replaceChats","appendChats","newChats","dialogs","lastPinnedId","Array","_chats","_c","ids","innerListRef","TopChat","PureComponent","onDelete","FoundPublicChat","selectedChatId","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","getMessageDate","getMessageSenderName","senderFullName","getMessageSenderFullName","getContent","tile","UserTile","SectionHeader","command","multiline","children","modals","isComposing","concatSearchResults","arr","j","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","local","savedMessagesStrings","includes","splice","recentlyFound","trimmedText","substr","USERNAME_LENGTH_MIN","globalPromises","globalPromise","latinTrimmedText","globalLatinPromise","globalResults","global","offset_date","offset_message_id","linkMessage","messageLinkInfo","keys","topPromise","category","recentlyFoundPromise","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","filterDuplicateMessages","handleTopChatsScroll","handleDeleteRecentlyFoundChat","handleDeleteTopChat","searchOrLoadContent","topChats","recentlyFoundChats","localChats","globalChatsMap","globalChats","globalLinkChat","globalMessagesMap","globalMessages","globalLinkMessage","count","messagesCaption","SidebarPage","Slide","direction","in","mountOnEnter","unmountOnExit","cloneElement","handleLogOut","handleDone","logOut","More","LogOut","DialogContentText","onEditProfile","onGeneral","onNotifications","onPrivacySecurity","onLanguage","onFilters","Edit","Data","packageJson","version","handleCancel","cropper","cropperRef","getCroppedCanvas","toBlob","blobURL","createObjectURL","onChoose","handleAttach","attachPhotoRef","click","handleAttachComplete","readImageSize","fileURL","defaultURL","getFitSize","fitWidth","fitHeight","AddImage","multiple","accept","margin","aspectRatio","viewMode","guides","Check","handleUsernameChange","newUsername","usernameRef","usernameCheck","newUsername2","handleChoosePhoto","name","loadChatContent","firstNameRef","lastNameRef","bioRef","userFullInfo","firstName","first_name","lastName","last_name","setName","setBio","setUsername","newFirstName","newLastName","newBio","hasError","usernameLabel","getSimpleMarkupEntities","formattedText","TextField","defaultValue","role","undefined","getChatType","Radio","Chip","divRef","setStyleCSSText","div","ChatChip","handleChatChange","search","mode","handleBackspace","focusedItem","include_contacts","include_non_contacts","include_bots","include_groups","include_channels","included_chat_ids","lastItem","exclude_muted","exclude_read","exclude_archived","excluded_chat_ids","wrapPanelRef","itemsRef","prevFilter","include","prevItems","isDeleting","wrapPanel","prevHeight","prevOffsetHeight","prevCSSText","prevMap","panel","animatePanel","currentHeight","collapsed","scrollIntoView","animateItems","prevOffsets","doubleTransform","currentOffset","prevOffset","NonContacts","Bots","handleSearchClose","zIndex","scrollRef","marginTop","RLottie","lazy","loadAnimationData","closeData","requests","fetch","onDone","editFilter","titleRef","isFilterValid","handleAnimationClick","lottie","lottieRef","isPaused","handleDeleteIncludeContacts","newEditFilter","handleDeleteIncludeNonContacts","handleDeleteIncludeGroups","handleDeleteIncludeChannels","handleDeleteIncludeBots","handleDeleteIncludedChat","handleDeleteExcludeMuted","handleDeleteExcludeRead","handleDeleteExcludeArchived","handleDeleteExcludedChat","handleOpenFilterChats","openFilterChats","handleCloseFilterChats","setDefaultFilterTitle","included","excluded","handleTitleChange","FILTER_TITLE_MAX_LENGTH","prevFilterId","shook","filterId","Done","Suspense","fallback","autoplay","loop","stringData","Add","handleOpenDialog","handleCloseDialog","handleDeleteCancel","handleDeleteConfirm","onEdit","getFilterSubtitle","handleAdd","recommendedFilter","disableElevation","loadData","handleCreateFilter","FILTER_COUNT_MAX","openFilter","icon_name","pinned_chat_ids","handleCloseFilter","handleEditFilter","recommendedFilters","filtersMap","filterInfo","hasFilters","hasRecommendedFilters","chat_filters","startIcon","Wallpaper","loaded","onClientUpdateDocumentThumbnailBlob","wallpaper","handleLoad","backgroundPosition","FileProgress","cancelButton","selectedId","loadBackgroundContent","backgrounds","loadBackgroundsContent","wallpapers","withTheme","emit","getColor","handleAccentChange","getColorString","red","orange","amber","green","indigo","deepPurple","palette","FormControl","component","FormLabel","focused","RadioGroup","FormControlLabel","control","handleAppearance","themePickerRef","for_dark_theme","openChatBackground","closeChatBackground","Colorize","languages","language_packs","inputProps","native_name","handleMuteFor","property","settings","newSettings","mute_for","handleShowPreview","show_preview","handleContactJoined","contactJoined","contactJoinedOption","privateChatsSettings","groupChatsSettings","channelChatsSettings","setScopeNotificationSettings","setContactJoinedOption","oldSettings","oldMuteFor","oldShowPreview","notification_settings","isEnabled","showPreview","session","is_current","handleTerminate","onTerminate","application_name","application_version","device_model","platform","system_version","ip","region","country","last_active_date","showDate","Stop","openAll","handleTerminateAllOther","handleCloseConfirmation","handleDoneConfirmation","sessions","session_id","handleCloseAllConfirmation","handleDoneAllConfirmation","other","primaryTypographyProps","BlockedUser","memo","onUnblock","useState","setContextMenu","setTop","setLeft","useTranslation","Unblock","handleUnblockUser","unblockSender","senders","openBlockedUsers","openActiveSessions","user_full_info","is_blocked","closeActiveSessions","closeBlockedUsers","sessionsCount","usersCount","RemoveMember","Device","onUpdateChatPhoto","openEditProfile","closeEditProfile","openGeneral","closeGeneral","openNotifications","closeNotifications","openPrivacySecurity","closePrivacySecurity","openLanguage","closeLanguage","openFilters","closeFilters","handleCloseSettings","setFullInfo","UserListItem","Contacts","handleDebounceScroll","handleThrottleScroll","loadRenderIdsContent","currentItems","userIds","getUserFullName","localeCompare","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","location","reload","Download","defaultPhoto","defaultPhotoFile","descriptionRef","is_channel","defaultPhotoURL","file_type","priority","THUMBNAIL_PRIORITY","UserChip","getUserShortName","selectedItems","array","newMap","newArray","newFocusedItem","selectedItemsMap","publicItems","publicChats","getUserIds","getTitle","onChoosePhoto","itemsCaption","openParams","addParticipantsRef","newGroupParamsRef","handleCloseParams","SidebarDialog","onClientUpdateSearchChat","searchChatId","handleDialogEnter","header","headerRef","onClientUpdateSettings","openSettings","meChatId","onClientUpdateContacts","openContacts","onClientUpdateNewGroup","openNewGroup","onClientUpdateNewChannel","openNewChannel","visible","paper","onEnter","getArchiveTitle","archive","chatsOrder","defaultTimeout","enter","enteringScreen","exit","leavingScreen","Dialogs","handleSaveCache","prevShowArchive","mainCurrent","dialogListRef","archiveCurrent","archiveListRef","archiveList","listCurrent","onClientUpdateArchive","onClientUpdateThemeChange","dialogsHeaderRef","handleCloseArchive","handleCloseContacts","handleCloseNewGroup","handleCloseNewChannel","mainItems","archiveItems","loadCache","mainChats","mainCacheItems","archiveCacheItems","CSSTransition","ChatInfoDialog","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateDialogChatId","handleMenuClick","handleAttachPhoto","onAttachPhoto","ANIMATION_DURATION_300MS","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","Attach","canSendMediaMessages","canSendPolls","focusNode","node","toEnd","lastNode","utils","special","navigational","isSpecial","isNavigational","getText","optionTextRef","dataset","maxLength","remainLength","hasSelection","toString","onFocusNext","isCollapsed","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","POLL_OPTION_MAX_LENGTH","is_chosen","data-length","POLL_OPTION_LENGTH","data-max-length","fontSize","POLL_OPTION_HINT_LENGTH","align","handleClientUpdateNewPoll","poll","PollStore","confirm","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","handleFocusNextOption","question","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","backspace","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextIndex","nextNode","getHint","addCount","hasPollData","handleConfirmationDone","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","handleChangeAnonymous","handleChangeAllowMultipleAnswers","handleChangeType","handleAllowMultipleAnswersClick","is_anonymous","allowMultipleAnswers","allow_multiple_answers","allowMultipleAnswersDisabled","quizPoll","canAddOption","flexGrow","POLL_QUESTION_LENGTH","POLL_QUESTION_HINT_LENGTH","Divider","disableTypography","FormGroup","background","isValidPoll","handleTextKeyDown","urlInputRef","handleUrlKeyDown","handleTextChange","handleUrlChange","defaultText","defaultUrl","textInputRef","textError","validateUrl","urlError","onCancel","textRef","urlRef","prevOpen","display","flexDirection","autoComplete","ReplyTile","onClientUpdateBlob","THUMBNAIL_BLURRED_SIZE_40","onGetMessageResult","isDeletedMessage","closePinned","getReplyThumbnail","getReplyMinithumbnail","editMessageId","editMessage","replyMessage","onConfirm","RecordTimer","onClientUpdateRecordStart","timer","setInterval","diff","onClientUpdateRecordStop","onClientUpdateRecordError","normalizeM","msStr","normalizeS","msToTime","s","ms","secs","mins","hrs","handleSelectionChange","captionRef","saveSelection","handleEnter","newItem","setFormattedText","editFile","editMedia","sendAsPhoto","getEntities","editMessageAction","performer","repeat","handleBold","handleItalic","handleMono","handleUrl","handleClear","handleUnderline","handleStrikeThrough","openEditUrlDialog","startContainer","endContainer","parentElement","nodeName","href","openEditUrl","closeEditUrlDialog","restoreSelection","clearInnerHtml","handleCancelEditUrl","handleDoneEditUrl","parentNode","textContent","setEnd","handleEditMedia","editMediaRef","handleEditMediaComplete","getMediaPhotoFromFile","handleSendAsPhoto","nodes","getNodes","rangeCount","getRangeAt","isEditing","isPhoto","doneLabel","lastAction","setTyping","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","selectionChangeListener","newMessageRef","onClientUpdateSendText","onClientUpdateInputShake","onClientUpdateSendFiles","handleSendFiles","is_permanent","onClientUpdateEditMessage","recordingTime","saveDraftAndSelection","restoreDraftAndSelection","openEditMedia","isEditedMedia","setEditMessage","onClientUpdateFocusWindow","saveDraft","onUpdateChatDraftMessage","loadDraft","onClientUpdateAnimationSend","thumbnailWidth","thumbnailHeight","sendMessage","onClientUpdateStickerSend","onClientUpdateReply","replyToMessageId","setInputFocus","beforeEditText","getChatDraftReplyToMessageId","handleCancelRecord","setDraft","chatSelectOptions","switchInline","setChatDraftMessage","chatDraftMessage","draftMessage","draft_message","getDraftMessage","input_message_text","draftEquals","handleSubmit","startRecord","recordingReady","VOICENOTE_MIN_RECORD_DURATION","handleStopRecord","handleRecord","inputContent","editedMessage","editMessageText","editMessageCaption","handleAttachPhotoComplete","newFile","getNewItem","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","charCode","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","handleSendAudio","handleSendVoiceNote","originalEvent","kind","getAsFile","handlePasteConfirm","handlePasteCancel","handleUpdateDraftConfirm","newDraft","handleUpdateDraftCancel","setBlob","updatePhotoBlob","clearDraft","alert","handleEmojiSelect","native","setHints","setRecordingReadyState","getTextAndCaretPosition","_range","cloneRange","selectNodeContents","endOffset","lastTextNode","handleCancelEditMedia","closeEditMediaDialog","editMessageMedia","editContent","sendPhoto","iSize","handleSendMedia","cancelled","recorder","stream","getAudioTracks","mediaDevices","getUserMedia","recordPermissionDenied","constraints","channelCount","sampleRate","applyConstraints","mimeType","audioBitsPerSecond","workerOptions","encoderWorkerFactory","Worker","process","OggOpusEncoderWasmPath","MediaRecorder","chunks","ondataavailable","onstart","onstop","Blob","audioURL","Audio","trunc","waveform","handleClosePermission","sendFile","AnimationStore","StickerStore","sendAsFile","getMediaDocumentFromFile","performance","match","emojiRegex","exec","timestamp","stickers","searchUsernameOrHashtag","usernameOnly","searchResultUsernames","cancelDelayRunnable","searchPosition","lastText","lastUsernameOnly","resultStartPosition","resultLength","foundType","dogPosition","ch","lastPosition","closeHints","usersMap","usernameString","hasSpace","newResult","newResultsMap","inlineBots","object","isMeUser","isDeletedUser","showUsersResult","message_thread_id","notifyDataSetChanged","notify","openHints","cancel","isMediaEditing","isTextMessage","Microphone","Send","FooterCommand","onCommand","onUpdateChatLastMessage","hasLastMessage","onUpdateChatIsBlocked","isBlocked","hasBasicGroupId","hasSupergroupId","handleJoin","handleDeleteAndExit","remove_from_chat_list","handleUnblock","handleStartBot","botStartMessage","botUserId","parameter","sendBotStartMessage","isBotChat","status","is_member","permissions","can_send_messages","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","handleUnpin","pinned","requestUnpinMessage","handleSwitchBlocked","getChatSender","requestBlockSender","canClearHistory","unpinMessage","hasOnePinnedMessage","switchBlocked","canSwitchBlocked","Broom","AddMember","HeaderChatSubtitle","onUpdateChatOnlineMemberCount","onUpdateUserChatAction","getChatSubtitle","isAccentSubtitle","isAccentChatSubtitle","HeaderChat","AnimatedItem","animate","scrollDown","containerRef","item1","item1Ref","item2","item2Ref","prevItem","AnimatedCounter","counter","prevCounter","reverse","counterStr","canBeDeleted","canBeForwarded","PinnedMessageBorder","drawRect","radius","getClipPath","barHeight","getBarHeight","getMarkHeight","getMarkTranslateY","getTrackTranslateY","trackHeight","getTrackHeight","markHeight","clipPathId","clipPath","markTranslateY","trackTranslateY","onClientUpdateCurrentPinnedMessage","scrollToMessageId","onUpdateMessageIsPinned","setPinnedState","is_pinned","animateText","textElement","text1Element","text2Element","currentMessageId","currentPrevMessageId","clientData","getClientData","currentPinned","lastPhoto","onClientUpdateSetChatClientData","nextThumbnail","nextMinithumbnail","clickedPinned","handleEditClick","prevPropsChatId","unpinned","prevMessage","prevContent","PlaylistEdit","connectionState","getConnectionState","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","handleSearchChat","localize","str","showProgressAnimation","HeaderProgress","VolumeButton","prevValue","buttonOver","popupOver","onClientUpdateMediaVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","handleDragStart","handleDragEnd","visibility","onDragStart","onDragEnd","orientation","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","RepeatEnum","NONE","REPEAT","REPEAT_ONE","getIcon","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","PlaybackRateButton","onClientUpdateMediaPlaybackRate","onClientUpdateMediaAudioPlaybackRate","audioPlaybackRate","nextRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","Time","onClientUpdateMediaTime","currentTimeString","handleReverse","Playlist","scrollToActive","playlist","block","playlistItemEquals","itemRefMap","ReactDOM","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","isCurrentSource","onClientUpdateMediaPlaylist","openTimeout","titleMouseOver","getPageBlock","instantView","openInstantViewMedia","iv","getMediaFunc","ivCache","urlCache","openInstantView","force_full","loadInstantViewContent","setInstantViewContent","newWindow","opener","handleSeekForward","videoRef","handleSeekBackward","handleSeekTo","seekTime","fadeOutVolume","pausedForRecord","fadeInVolume","useAudioPlaybackRate","onClientUpdateMediaSeek","currentValue","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","startPlayingFile","prevSrc","getMediaSrc","getMediaMimeType","playing","srcSource","onClientUpdateMediaBlob","startPlaying","supportsStreaming","onClientUpdateMediaClose","handlePrev","handleNext","moveNext","handleVideoEnded","hasVoice","muted","videoWidth","videoHeight","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","openMediaInstantView","getMessageAudio","addMediaSessionHandlers","removeMediaSessionHandlers","mediaSession","setActionHandler","currentVolume","volumeInterval","clearInterval","useAudioRate","getMediaTitle","showPlaybackRate","getDateHint","getDate","showRepeat","showShuffle","autoPlay","disablePictureInPicture","onLoadedMetadata","onCanPlay","onTimeUpdate","onProgress","PlayArrow","onUpdateChatActionBar","handleReportSpam","handleReportUnrelatedLocation","handleSharePhoneNumber","handleAddContact","phone_number","contact","vcard","share_phone_number","handleBlockUser","action_bar","points","confirmStopPoll","handleConfirmStopPoll","handleCloseConfirm","handleStopPoll","stopPoll","handleUnvote","cancelPollAnswer","copyLink","handleCopyPublicMessageLink","httpUrl","handleReply","isMessagePinned","requestPinMessage","handleEdit","isEmptySelection","selectMessage","handleDownload","saveBlob","canBeUnvoted","canMessageBeUnvoted","canBeClosed","canMessageBeClosed","canBeReplied","canBePinned","canPinMessages","isServiceMessage","canMessageBeForwarded","canMessageBeDeleted","canBeEdited","canMessageBeEdited","recording","canBeSelected","hasSelectedMessage","canCopyLink","canCopyPublicMessageLink","isPublicSupergroup","FrameCheck","Copy","RemoveCheck","onUpdateMessageEdited","editDate","edit_date","onUpdateMessageInteractionInfo","interaction_info","interactionInfo","prevMessageIds","albumHistoryEquals","isOutgoing","onDateClick","views","view_count","forward_count","dateStr","dateHintStr","viewsStr","getViews","AlbumItem","getAlbumItem","inlineMeta","getWebPage","Photo","Video","Document","onClientUpdateMessageHighlighted","highlighted","onClientUpdateClearSelection","tagName","handleSelection","onClientUpdateLanguage","getFullYear","arrowRef","handleArrowRef","openForward","forwardInfo","origin","getForwardTitle","isForwardOriginHidden","POSITION_FLAG_LEFT","POSITION_FLAG_RIGHT","POSITION_FLAG_TOP","POSITION_FLAG_BOTTOM","MessageGroupedLayoutAttempt","lineCounts","heights","GroupedMessagePosition","minX","maxX","minY","maxY","w","h","flags","spanSize","getInfo","siblingHeights","leftSpanOffset","GroupedMessages","posArray","positions","maxSizeWidth","hasSibling","scale","multiHeight","end","sum","calculate","desiredWidth","totalWidth","totalHeight","paddingsWidth","maxSizeHeight","averageAspectRatio","proportions","forceCalc","getWidthHeight","isLast","maxAspectRation","croppedRatios","firstLine","secondLine","thirdLine","fourthLine","attempts","optimal","optimalDiff","maxHeight","attempt","minLineHeight","MAX_VALUE","c","lineHeight","spanLeft","posToFix","ratio","pos","position1","position2","secondWidth","firstWidth","position3","thirdHeight","secondHeight","rightWidth","leftWidth","firstHeight","position4","h0","w0","w2","w1","h1","h2","side","byMinSize","lastSide","lastSize","currentSide","EmptyTile","Album","lastHighlighted","oldEmojiMatches","emojiMatches","grouped","showTail","showUnreadSeparator","forward_info","m","hasCaption","meta","handleDateClick","showForward","showMessageForward","showReply","suppressTitle","hasTitle","isChannel","isPrivate","sender_name","handleSelectUser","handleSelectChat","withBubble","tailRounded","onMouseOver","onMouseOut","handleMouseOut","onAnimationEnd","handleAnimationEnd","handleReplyClick","PHOTO_DISPLAY_SIZE","showData","DocumentAlbum","lastSelected","FilesDropTarget","onClientUpdateDragging","dragParams","handleDragEnter","handleDrop","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","MessageContext","createContext","withMessage","MessageComponent","Consumer","handleCallbackQueryAnswer","via_bot_user_id","show_alert","game","LStore","getString","showAlert","ok","showSnackbar","showOpenGameAlert","is_verified","showOpenUrlAlert","ask","tryTelegraph","payload","game_short_name","short_name","passwordState","has_password","showInputPasswordAlert","password","onCloseDialog","onError","forward_text","button_id","skip_confirm","showRequestUrlAlert","buttonId","in_current_chat","inline","setText","openChatSelect","ArrowTopRight","ShareFilled","KeyboardRow","row","ReplyMarkup","markup","rows","Provider","WebPage","displaySmallSize","displayExtraSmallSize","site_name","Sticker","MESSAGE","VoiceNote","VideoNote","Animation","stretch","smallPhoto","totalLength","extraSmallPhoto","float","marginLeft","handleInstantViewClick","instant_view_version","getTwitterInstagramEntities","e1","webPageContent","webPageMediaTop","webPageMediaBottom","webPageInstantView","outlinedPrimary","SvgIcon","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","Message","onClientUpdateMessageShake","updateMessageContent","handleUpdateMessageContentAndEditedOnce","updateMessageEdited","newEmojiMatches","getEmojiMatches","startMessageEditing","stopMessageEditing","mouseDown","mouseOut","openReply","isMetaBubble","getMessageStyle","withRef","chatPhotoStyle","borderRadius","ServiceMessage","getServiceMessageContent","cacheLoaded","onClientUpdateDialogsReady","dialogsReady","ScrollDownButton","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","loadStickersContent","onClientUpdateLocalStickersHint","previewStickerId","cancelSend","loadPreviewContent","stickerId","loadStickerContent","stickersPerRow","hintsRef","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","column","prevRow","nextRow","prevColumn","nextColumn","ceil","getSticker","mouseDownStickerId","dict","foundStickers","stickerIndex","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","preview","HINTS","ScrollBehaviorEnum","Object","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","SCROLL_TO_POSITION","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateStartMessageEditing","history","scrollBottomAfterEditing","onClientUpdateStopMessageEditing","scrollBehavior","newState","scrollDownVisible","scrollBehaviorNone","insert","handleScrollBehavior","deleteHistory","onClientUpdateTryEditMessage","defferedActions","onClientUpdateOpenReply","replyHistory","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","onUpdateMessageSendSucceeded","replaceMessage","updateItemsInView","insertPrevious","loadIncompleteHistory","MAX_ITERATIONS","complete","isCompleteHistory","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","lastRequestKey","lastRequests","getRequest","insertNext","currentHistory","supergroupId","basicGroupChat","messagesMap","itemsInView","messageWrapper","mapEquals","inViewMap","updatePinnedMessage","scrollToNext","minId","maxId","pinnedMinId","pinnedMaxId","updateScrollDownVisibility","prevHistory","cancelUpdatePinnedMessage","scrollToBottom","scrollToMessage","scrollToUnread","scrollToPosition","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","handleListDragEnter","types","handleScrollDownClick","lastReply","pop","separatorMessageId","scrollDownButtonRef","historyEquals","previousChat","scrollPosition","last_read_inbox_message_id","highlightMessage","loadDraftContent","getChatMedia","scrollMessage","getScrollMessage","viewAction","hasFocus","cancelLoadMessageContents","getMessagePhoto","cancelGetRemoteFile","getMessageSticker","oldMessageId","showMessageTitle","isFirst","isFirstUnread","senderEquals","forwardInfoEquals","MESSAGE_SPLIT_MAX_TIME_S","showMessageDate","prevDate","getMonth","media_album_id","albumAdded","album","ALBUM_MESSAGES_LIMIT","nextMessage","isNextFirstUnread","nextShowTitle","pinnedCount","selectedCount","onClientUpdateOpenPinned","opened","onClientUpdateClosePinned","handleUnpinAll","unpinAllTitle","getStickersLink","stickerSet","handleShare","disableEnforceFocus","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","is_installed","set_id","contentRef","hasScroll","scrollBottom","handleInViewport","elementRect","contentRect","getBoundingClientRect","bottom","STICKER_SET","inViewportFunc","closeChatSelect","DialogDetails","onClientUpdateClearOpenChatOptions","chatOpenOptions","onClientUpdateChatSelect","onClientUpdateDocumentBlob","thumbnailTime","onClientUpdateChatBackground","onClientUpdateChatDetailsVisibility","messagesList","wallpaperSrc","articleRefs","withIV","forwardedRef","page_blocks","is_rtl","blocks","dir","MediaCaption","InstantViewMediaViewerContent","onClientUpdatePictureInPicture","getViewerFile","onClientUpdateMediaThumbnailBlob","prevMedia","getViewerThumbnail","getViewerMinithumbnail","mime_type","speed","isPlaying","thumbnailSrc","MEDIA_VIEWER_VIDEO_MAX_SIZE","getThumb","poster","handleContentClick","isEmptyText","credit","Caption","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","MediaViewerDownloadButton","onUpdateFile","is_downloading_completed","checkFileLoaded","saveDisabled","prevPropsFileId","getLocalFile","propsDisabled","getBlockMedia","handlePrevious","hasPreviousMedia","loadMedia","hasNextMedia","preloadIVMediaViewerContent","setInstantViewViewerContent","cancelPreloadIVMediaViewerContent","getInputMediaContent","handleSave","saveMedia","handleWrapperMouseDown","mouseDownTarget","handleWrapperClick","getValidBlocks","isValidMediaBlock","getBlockCaption","getBlockUrl","maxCount","formatString","onClientUpdateInstantViewViewerContent","onClientUpdateInstantViewUrl","InstantViewStore","getCurrent","oldUrl","hash","scrollToHash","handleBack","instantViewerRef","articleRef","prevInstantView","mounted","scrollToBlock","findDOMNode","scrollToElement","details","finished","currentElement","getInnerBlocks","IVContext","IV_PHOTO_SIZE","MediaInfo","dateHint","tileControl","getMediaFile","isVideoMessage","getMediaThumbnail","loadNextBuffer","getMediaMinithumbnail","isEmbed","isEmbedMessage","isVideo","isAnimation","isAnimationMessage","embed_url","frameBorder","allowFullScreen","scrolling","totalCount","loadMediaViewerContent","isMediaContent","firstSliceLoaded","inserted","oldHistory","filterMap","moveToNextMedia","accumulator","currentId","deletedCount","setMediaViewerContent","loadHistory","MEDIA_SLICE_LIMIT","preloadMediaViewerContent","cancelPreloadMediaViewerContent","handleDialogOpen","loadPrevious","loadNext","nextId","deleteConfirmationOpened","handleDialogClose","deleteForAll","revoke","handleChangeDeleteForAll","handleInvertColors","nextBackground","hasPrevousMedia","deleteConfirmationContent","deleteConfirmation","PHOTO_BIG_SIZE","ProfileMediaViewerContent","onClientUpdateChatBlob","onClientUpdateUserBlob","handlePhotoClick","onPrevious","PROFILE_PHOTO_BIG_SIZE","getBlobUrl","ProfileMediaInfo","photos","preloadProfileMediaViewerContent","getProfilePhoto","saveOrDownload","updateChatPhotoBlob","inputFile","chatPhoto","profile_photo_id","obj","prevFileId","currentFileId","inHistory","profilePhoto","profilePhotoBig","userProfilePhoto","getProfilePhotoDateHint","reportSpam","handleReportSpamChange","handleDeleteChatChange","reportText","getChatLocation","address","handleRevokeChange","canBeDeletedForAllUsers","formatPluralString","handleClickShowPassword","showPassword","getErrorMessage","passwordHint","password_hint","errorMessage","InputLabel","htmlFor","Input","endAdornment","InputAdornment","FormHelperText","getDeleteDialogText","overflowWrap","value1","value2","handleValue1Change","handleValue2Change","bot_user_id","request_write_access","text1","entities1","option1","option2","text2","entities2","NotificationTimer","handleTimer","seconds","expire","timerId","onTimeout","setMilliseconds","getMilliseconds","toFixed","CircularProgress","pinMessage","openUrlAlert","openGameAlert","requestUrlAlert","inputPasswordAlert","requestBlockSenderAlert","onClientUpdateBlockSender","onClientUpdateInputPasswordAlert","onPassword","onClientUpdateOpenGameAlert","handleOpenGameContinue","onClientUpdateOpenUrlAlert","handleOpenUrlContinue","onClientUpdateRequestUrlAlert","onClientUpdateSnackbar","onClientUpdateAlert","onClientUpdateUnpinMessage","handleUnpinMessageContinue","onClientUpdatePinMessage","handlePinMessageContinue","onClientUpdateDeleteMessages","handleClearHistoryContinue","request","handleLeaveContinue","undo","getLeaveChatNotification","isChatMember","isCreator","handleDeleteMessagesContinue","clientUpdateType","addScheduledAction","persist","removeScheduledAction","pinMessageAction","unpinMessageAction","unpinAllMessages","handleAlertContinue","sharedPreferences","existing","addHash","encodeURIComponent","chars","Uint8Array","crypto","getRandomValues","curHash","openGameInBrowser","handleRequestUrlContinue","allow_write_access","handleInputPasswordContinue","handleBlockSenderContinue","blockSender","reason","reportChat","withLanguage","onClientUpdateInstantViewContent","instantViewContent","onClientUpdateOpenChat","onClientUpdateOpenUser","isChatDetailsVisible","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","currentDialogChatId","dialogDetailsRef"],"mappings":"gIAOA,MAAMA,EACFC,YAAYC,EAAUC,EAAU,IAAK,KASrCC,MAAQ,KACJC,KAAKC,SAAU,EACfD,KAAKE,GAAKC,sBAAsBH,KAAKI,gBAXL,KAcpCA,cAAgBC,IAAc,MAClBC,EAAwBN,KAAxBM,UAAWT,EAAaG,KAAbH,SAEnBG,KAAKM,UAAYD,EACjBL,KAAKO,QAAUD,EAAYT,EAC3BG,KAAKQ,KAAKH,IAnBsB,KAsBpCG,KAAOC,IAAQ,MACHR,EAA0CD,KAA1CC,QAASJ,EAAiCG,KAAjCH,SAAUS,EAAuBN,KAAvBM,UAAWR,EAAYE,KAAZF,QAMtC,GAJIW,EAAMH,EAAYT,GAAYC,EAAQY,MAAMC,GAAKA,EAAEC,KAAOD,EAAEE,QAC5Db,KAAKC,SAAU,GAGfA,EAAS,OAEb,MAAMa,EAAOC,KAAKC,IAAIP,EAAMH,EAAWT,GACjCoB,EAAiB,IAAbpB,EAAiB,EAAMiB,EAAOjB,EAClCqB,EAAMvB,EAASwB,QAAQF,GAE7BnB,EAAQsB,QAAQT,IAAM,MACVU,EAAmBV,EAAnBU,KAAMT,EAAaD,EAAbC,GAAIU,EAASX,EAATW,KAClBX,EAAEE,KAAOQ,GAAQT,EAAKS,GAAQH,EAC9BI,EAAKX,EAAEE,QAGXb,KAAKE,GAAKC,sBAAsBH,KAAKQ,OAzCL,KA4CpCe,KAAO,KACHvB,KAAKC,SAAU,EACfuB,qBAAqBxB,KAAKE,KA7C1BF,KAAKF,QAAUA,EACfE,KAAKH,SAAWA,EAGpB,eAAe4B,GACX,OAAOV,KAAKW,IAAKD,EAAIV,KAAKY,GAAM,IA4CzBhC,O,6BC1Df,kDAyFeiC,IA3Ef,cAA6BC,IAAMC,UAAW,eAAD,oBACzCC,MAAQ,CACJC,MAAO,KACPC,iBAAkB,MAHmB,KAoCzCC,kBAAoBC,IAAY,MAEpBjC,EADkBiC,EAAlBA,QACAjC,GAERkC,IAAgBC,KAAK,CACjB,QAAS,mBACTF,QAAS,CAAE,QAAS,cAAejC,QACpCoC,KAAKC,IACAvC,KAAKwC,MAAML,UAAYA,GACvBnC,KAAKyC,SAAS,CACVT,MAAOO,EAAOG,OAAOC,KAAK,UAxC1C,gCAAgCH,EAAOT,GAAQ,MACnCI,EAAYK,EAAZL,QACAF,EAAqBF,EAArBE,iBAER,OAAIE,GAAWF,EACJ,CACHA,iBAAkBE,EAClBH,MAAO,MAIR,KAGXY,mBAAmBC,EAAWC,EAAWC,GAAW,MACxCZ,EAAYnC,KAAKwC,MAAjBL,QAEJA,GAAWA,IAAYU,EAAUV,SACjCnC,KAAKkC,kBAAkBC,GAI/Ba,oBAAqB,MACTb,EAAYnC,KAAKwC,MAAjBL,QAEJA,GACAnC,KAAKkC,kBAAkBC,GAoB/Bc,SAAU,MACEd,EAAYnC,KAAKwC,MAAjBL,QACAH,EAAUhC,KAAK+B,MAAfC,MAER,OAAKG,EAGD,yBAAKe,UAAU,mBACX,yBAAKA,UAAU,yBAAyBlB,GACxC,kBAAC,IAAD,CACIG,QAASA,EACTgB,YAAaC,KACbC,OAAQC,IAAkBC,WARjB,Q,yGCtE7B,4BASeC,gBACX,0BAAMC,EAAE,2nCACR,U,i1FCgBWC,MAff,SAAmCC,GAC/B,MAAMC,UAA6B/B,IAAMC,UACrCmB,SACI,OACI,kBAAC,IAAD,CAAkBY,SAAUC,KACxB,kBAACH,EAAqB3D,KAAKwC,SAO3C,OAFAoB,EAAqBG,YAArB,oCAAgEC,YAAeL,GAA/E,KAEOC,G,oHCw3BIK,MA72Bf,cAAwBpC,IAAMC,UAC1BlC,YAAY4C,GACR0B,MAAM1B,GADS,KA6CnB2B,4BAA8BC,IAAW,MAC7BC,EAAUD,EAAVC,MACHA,GAELrE,KAAKsE,UAAUD,IAjDA,KAoDnBC,UAAYD,IAAU,MACVE,EAAkDF,EAAlDE,IAAKC,EAA6CH,EAA7CG,KAAMC,EAAuCJ,EAAvCI,OAAQC,EAA+BL,EAA/BK,QAASC,EAAsBN,EAAtBM,QAASC,EAAaP,EAAbO,SAErCC,EAAU7E,KAAKwC,MAAfqC,MACR,IAAKA,EAAO,OAEZ,IAAIC,GAAU,EACd,OAAQN,GACJ,IAAK,SACIC,GAAWC,GAAYC,GAAYC,IACpC5E,KAAK+E,cACLD,GAAU,GAEd,MAEJ,IAAK,YACIL,GAAWC,GAAYC,GAAYC,IACpC5E,KAAKgF,WAAWH,EAAMI,YAAcC,KACpCJ,GAAU,GAEd,MAEJ,IAAK,OACIL,GAAWC,GAAYC,GAAYC,IACpC5E,KAAKgF,WAAWH,EAAMI,YAAcE,KACpCL,GAAU,GAEd,MAEJ,IAAK,aACIL,GAAWC,GAAYC,GAAYC,IACpC5E,KAAKgF,WAAWH,EAAMI,YAAcC,KACpCJ,GAAU,GAEd,MAEJ,IAAK,OACIL,GAAWC,GAAYC,GAAYC,IACpC5E,KAAKgF,WAAWH,EAAMI,YAAcE,KACpCL,GAAU,GAEd,MAEJ,IAAK,UACIL,GAAWC,GAAYC,GAAYC,IACpC5E,KAAKoF,aAAaP,EAAMQ,OAASC,MACjCR,GAAU,GAEd,MAEJ,IAAK,YACIL,GAAWC,GAAYC,GAAYC,IACpC5E,KAAKoF,aAAaP,EAAMQ,OAASC,MACjCR,GAAU,GAEd,MAEJ,IAAK,QACL,IAAK,OACIL,GAAWC,GAAYC,GAAYC,IACpC5E,KAAKuF,cACLT,GAAU,GAEd,MAEJ,IAAK,OACIL,GAAWC,GAAYC,GAAYC,IACpC5E,KAAKwF,aACLV,GAAU,GAEd,MAEJ,IAAK,OACIL,GAAWC,GAAYC,GAAYC,IACpC5E,KAAKyF,mBACLX,GAAU,GAEd,MAEJ,IAAK,OACIL,GAAWC,GAAYC,GAAYC,IAEpCE,GAAU,GAEd,MAEJ,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACD,IAAKL,IAAWC,IAAYC,IAAYC,EAAU,CAC9C,MAAMc,EAAW,IAAIC,OAAOpB,EAAIqB,QAAQ,QAAS,KAAO,GACxD5F,KAAK6F,mBAAmBH,GACxBZ,GAAU,EAEd,MAEJ,IAAK,OACIL,GAAWC,GAAYC,GAAYC,IACpC5E,KAAKgF,WAAW,GAChBF,GAAU,GAEd,MAEJ,IAAK,MACIL,GAAWC,GAAYC,GAAYC,IACpC5E,KAAKgF,WAAWH,EAAMhF,SAAW,GACjCiF,GAAU,GAEd,MAEJ,IAAK,QACIL,GAAWC,GAAYC,IAAWC,IACnC5E,KAAK8F,mBAAmBjB,EAAMkB,aAAeC,KAC7ClB,GAAU,GAEd,MAEJ,IAAK,SACIL,GAAWC,GAAYC,IAAWC,IACnC5E,KAAK8F,mBAAmBjB,EAAMkB,aAAeC,KAC7ClB,GAAU,GAMlBA,IACAT,EAAM4B,kBACN5B,EAAM6B,mBA3LK,KAyMnBd,aAAeC,IAAW,MACdR,EAAU7E,KAAKwC,MAAfqC,MACHA,IAELQ,EAASc,YAAMd,EAAQe,KAAmBC,MAE1CxB,EAAMQ,OAASA,EACfrF,KAAKsG,cAAL,UAAsBvF,KAAKwF,MAAqB,IAAf1B,EAAMQ,QAAvC,QAhNe,KAmNnBS,mBAAqBU,IAAS,MAClB3B,EAAU7E,KAAKwC,MAAfqC,MACHA,IAEL2B,EAAOL,YAAMK,EAAMC,IAAyBC,KAE5C7B,EAAMkB,aAAeS,EACrBxG,KAAKsG,cAAL,UAAsBE,EAAtB,QA1Ne,KA6NnBX,mBAAqBH,IAAa,MACtBb,EAAU7E,KAAKwC,MAAfqC,MACHA,GAEL7E,KAAKgF,WAAWU,EAAWb,EAAMhF,WAjOlB,KAoOnBmF,WAAaC,IAAgB,MACjBJ,EAAU7E,KAAKwC,MAAfqC,MACHA,IAELI,EAAckB,YAAMlB,EAAa,EAAGJ,EAAMhF,UAAY,GAEtDgF,EAAMI,YAAcA,EACpBjF,KAAKyC,SAAS,CAAEwC,kBA3OD,KA8OnB0B,mBAAqB,KACjB,MAEMC,GAFoBC,SAASC,mBAAqBD,SAASE,sBAAwBF,SAASG,2BACzEH,SAASI,eAAe,sBAGjDjH,KAAKyC,SAAS,CACVmE,gBApPW,KAwPnBM,eAAiB,KAGb,GAD0BL,SAASC,mBAAqBD,SAASE,sBAAwBF,SAASG,wBAC3E,OAEvB,MAAMG,EAASN,SAASI,eAAe,cAEjCG,EAAUC,SAASF,EAAOG,MAAMC,KAAM,IACtCC,EAASH,SAASF,EAAOG,MAAMG,IAAK,IARvB,EAUGzH,KAAK0H,kBAAkBN,EAASI,GAAQ,GAAtDD,EAVW,EAUXA,KAAME,EAVK,EAULA,IAEVL,IAAYG,GAAQC,IAAWC,IAGnCN,EAAOG,MAAMC,KAAOA,EAAO,KAC3BJ,EAAOG,MAAMG,IAAMA,EAAM,OAxQV,KAkUnBE,iBAAmBtD,IACWA,EAAlBuD,QAnUO,KAuUnBC,qBAAuBxD,IAAU,MACbQ,EAAUR,EAAlBuD,OACR,IAAK/C,EAAO,OAFgB,MAIpBI,EAAgBjF,KAAK+B,MAArBkD,YACApF,EAA+BgF,EAA/BhF,SAAUwF,EAAqBR,EAArBQ,OAAQyC,EAAajD,EAAbiD,SAG1B9H,KAAKyC,SAAS,CACV5C,WAEAwF,SACA0C,SAAS,EACTD,YACD,KACM7C,IAELJ,EAAMI,YAAcA,MAxVT,KA4VnB+C,cAAgB3D,IAAU,MACNQ,EAAUR,EAAlBuD,OAER5H,KAAKyC,SAAS,CACVsF,SAAS,GACV,KACC,IAAKlD,EAAO,OAEK7E,KAAK+B,MAAdkG,KAEJpD,EAAMoD,OAENpD,EAAMqD,WAxWC,KA6WnBC,WAAa9D,IAAU,MACX+D,EAAWpI,KAAKwC,MAAhB4F,OAERpI,KAAKyC,SAAS,CACVwF,MAAM,EACNI,QAAQ,IAGZjG,IAAgBkG,aAAa,CAAE,QAAS,gCACxCF,GAAUA,EAAO/D,IAtXF,KAyXnBkE,YAAclE,IAAU,MACZmE,EAAYxI,KAAKwC,MAAjBgG,QAERxI,KAAKyC,SAAS,CACVwF,MAAM,EACNI,QAAQ,IAGZjG,IAAgBkG,aAAa,CAAE,QAAS,iCACxCE,GAAWA,EAAQnE,IAlYJ,KAqYnBoE,YAAcpE,IAAU,MACZqE,EAAY1I,KAAKwC,MAAjBkG,QAERtG,IAAgBkG,aAAa,CAAE,QAAS,iCACxCI,GAAWA,EAAQrE,GAJA,MAMXQ,EAAU7E,KAAKwC,MAAfqC,MACR7E,KAAK2I,eAAe,CAAC1D,YAAa,EAAGpF,SAAUgF,EAAMhF,YA5YtC,KA+YnB+I,iBAAmBvE,IAAU,MACTQ,EAAUR,EAAlBuD,OACR,IAAK/C,EAAO,OAFY,MAIhBgE,EAAW7I,KAAKwC,MAAhBqG,OACA5D,EAA4CJ,EAA5CI,YAAapF,EAA+BgF,EAA/BhF,SAAUwF,EAAqBR,EAArBQ,OAAQyC,EAAajD,EAAbiD,SAEvC9H,KAAKyC,SAAS,CACV5C,WACAoF,cACAI,SACAyC,aAGJ1F,IAAgBkG,aAAa,CACzB,QAAS,oCACTO,SACA5D,cACApF,WACAwF,SACAyC,aAGJ9H,KAAK2I,eAAe,CAAE1D,cAAapF,cAtapB,KAyanBiJ,mBAAqBzE,IAAU,MACnB0E,EAAmB/I,KAAKwC,MAAxBuG,eAEQlE,EAAUR,EAAlBuD,OACR,IAAK/C,EAAO,OAJc,MAMlBQ,EAAWR,EAAXQ,OAERrF,KAAKyC,SAAS,CACV4C,WAGJjD,IAAgBkG,aAAa,CAAE,QAAU,0BAA2BjD,WACpE0D,GAAkBA,EAAe1E,IAtblB,KAybnB2E,eAAiB3E,IAAU,MACPQ,EAAUR,EAAlBuD,OACR,IAAK/C,EAAO,OAFU,MAIdgE,EAAW7I,KAAKwC,MAAhBqG,OAEAf,EAAajD,EAAbiD,SAER9H,KAAKyC,SAAS,CACVqF,aAGJ1F,IAAgBkG,aAAa,CACzB,QAAS,kCACTO,SACAf,cAxcW,KA4cnBmB,cAAgB,KACZjJ,KAAKyC,SAAS,CAAEsF,SAAS,KA7cV,KAgdnBxC,YAAc,KACVvF,KAAKkJ,mBAjdU,KAodnBA,gBAAkB,KAAO,MACbrE,EAAU7E,KAAKwC,MAAfqC,MACHA,IAEe7E,KAAK+B,MAAjBgG,QAEJ/H,KAAKyC,SAAS,CACVwF,MAAOjI,KAAK+B,MAAMkG,KAClBI,QAAQ,IAGRxD,EAAMsE,OACNtE,EAAMoD,OAENpD,EAAMqD,UAleC,KAuenBkB,sBAAwB/E,IACpB,MAAMgF,EAAMxC,SAASI,eAAe,sBAChCoC,GAAKA,EAAIC,QAEbtJ,KAAKuJ,eAAgB,EACrBlF,EAAM6B,iBAE0B,IAA5B7B,EAAMmF,YAAYC,QAEtBzJ,KAAK0J,QAAUrF,EAAMmF,YAAYE,QACjC1J,KAAK2J,QAAUtF,EAAMmF,YAAYG,QAEjC9C,SAAS+C,YAAc5J,KAAK6J,gBAC5BhD,SAASiD,UAAY9J,KAAK+J,cAE1B/J,KAAKyC,SAAS,CACVuH,gBAAgB,MAvfL,KA2fnBD,cAAgB1F,IACZA,EAAM6B,iBAENW,SAAS+C,YAAc,KACvB/C,SAASiD,UAAY,KAErB9J,KAAKyC,SAAS,CACVuH,gBAAgB,KAlgBL,KA8iBnBH,gBAAkBxF,IACdA,EAAM6B,iBADiB,QAGDlG,KAAK0H,kBAAkBrD,EAAM4F,QAAUjK,KAAK0J,QAASrF,EAAM6F,QAAUlK,KAAK2J,SAAS,GAAjGpC,EAHe,EAGfA,KAAME,EAHS,EAGTA,IAERN,EAASN,SAASI,eAAe,cACvCE,EAAOG,MAAMC,KAAOA,EAAO,KAC3BJ,EAAOG,MAAMG,IAAMA,EAAM,MArjBV,KAwjBnB0C,gBAAkB9F,IACdA,EAAM4B,kBADiB,MAGfpB,EAAU7E,KAAKwC,MAAfqC,MACHA,GAEL7E,KAAKyC,SAAS,CACV2H,UAAU,EACVC,aAAcxF,EAAMI,eAhkBT,KAokBnBqF,aAAe,CAACjG,EAAOkG,KAAW,MACtB1F,EAAU7E,KAAKwC,MAAfqC,MACHA,GAEL7E,KAAKyC,SAAS,CACV4H,aAAcE,EAAQ1F,EAAMhF,YAzkBjB,KA6kBnB2K,sBAAwB,KAAO,MAAD,EACSxK,KAAK+B,MAAhCqI,EADkB,EAClBA,SAAUC,EADQ,EACRA,aACbD,GAELpK,KAAKyC,SAAS,CACV2H,UAAU,EACVnF,YAAaoF,EACbA,aAAc,GACf,KAAO,MACExF,EAAU7E,KAAKwC,MAAfqC,MACHA,GAEDc,OAAO8E,SAASJ,KAChBxF,EAAMI,YAAcoF,MA1lBb,KA+lBnBK,iBAAmB,KACf1K,KAAK2K,YAAa,GAhmBH,KAmmBnBC,iBAAmB,KACf5K,KAAK2K,YAAa,GApmBH,KAumBnBE,gBAAkBxG,IACdrE,KAAKuJ,eAAgB,EACFvJ,KAAK+B,MAAhBsG,QAGJrI,KAAKyC,SAAS,CACV4F,QAAQ,IAIhByC,aAAa9K,KAAK+K,kBAClB/K,KAAK+K,iBAAmBC,WAAW,KAC3BhL,KAAK2K,YACJ3K,KAAK+B,MAAMkG,MACXjI,KAAK+B,MAAMlC,UAEhBG,KAAKyC,SAAS,CACV4F,QAAQ,KAEb,MA1nBY,KA6nBnBtD,YAAc,KACV3C,IAAgBkG,aAAa,CACzB,QAAS,+BACT2C,UAAW,QAhoBA,KAooBnBC,yBAA2B,CAAC7G,EAAOgB,KAC3BA,IAAWrF,KAAK+B,MAAMsD,QAE1BrF,KAAKyC,SAAS,CACV4C,UACD,KAAO,MACER,EAAU7E,KAAKwC,MAAfqC,MACHA,IAELA,EAAMQ,OAASA,MA7oBJ,KAipBnB8F,kCAAoC9G,IACdrE,KAAKwC,MAAfqC,OAGRgC,SAASuE,cAAcC,QArpBR,KAwpBnB7F,WAAa,KAAO,MACRX,EAAU7E,KAAKwC,MAAfqC,MACHA,IAEgB,IAAjBA,EAAMQ,OACNR,EAAMQ,OAASrF,KAAKsL,YAAc,IAElCtL,KAAKsL,WAAazG,EAAMQ,OACxBR,EAAMQ,OAAS,KAhqBJ,KAoqBnBI,iBAAmBpB,IACfA,GAASA,EAAM4B,kBAEf,MAAMsF,EAAO1E,SAASI,eAAe,sBAChCsE,IAEqB1E,SAASC,mBAAqBD,SAASE,sBAAwBF,SAASG,wBAE9FhH,KAAKwL,iBAITxL,KAAKyL,kBAAkBF,KAhrBR,KA+rBnBG,eAAiB,KAAO,MACZ7C,EAAW7I,KAAKwC,MAAhBqG,OAEF8C,EAAOC,IAAUC,IAAIhD,GAC3B,IAAK8C,EAAM,OAJQ,MAMXG,EAAWH,EAAXG,OACR,IAAKA,EAAQ,OAPM,MASXC,EAAcD,EAAdC,UACR,OAAKA,EAEEC,IAAYN,eAAeK,QAFlC,GAzsBe,KA8sBnBpD,eAAiB1D,IAAgB,MACrB4D,EAAW7I,KAAKwC,MAAhBqG,OAEF8C,EAAOC,IAAUC,IAAIhD,GAC3B,IAAK8C,EAAM,OAJiB,MAMpBG,EAAWH,EAAXG,OACR,IAAKA,EAAQ,OAPe,MASpBC,EAAcD,EAAdC,UACHA,IAEA9G,EAGD+G,IAAYrD,eAAeoD,EAAW9G,GAFtC+G,IAAYC,iBAAiBF,KA3tBlB,KAiuBnBG,uBAAyB7H,IACrBA,EAAM6B,iBACN7B,EAAM4B,mBAnuBS,KAsuBnBkG,gBAAkB9H,IACdA,EAAM4B,kBAEoBjG,KAAlBuJ,eAGRvJ,KAAKkJ,mBA5uBU,KA+uBnBkD,kBAAoB/H,IAChBA,EAAM4B,kBAEoBjG,KAAlBuJ,eAGRvJ,KAAKyF,iBAAiBpB,IArvBP,KAwvBnBgI,YAAc,KACVC,IAAgBC,IAAIvM,KAAKwM,kBAzvBV,KA6vBnBC,WAAa,KACTH,IAAgBI,OAAO1M,KAAKwM,kBA3vB5BxM,KAAKwM,gBAAkB,IAAIG,IAAgB3M,KAAKsE,WAChDtE,KAAK+B,MAAQ,GAGjB,gCAAgCS,EAAOT,GAAQ,MACnC8C,EAAkErC,EAAlEqC,MAAOhF,EAA2D2C,EAA3D3C,SAAUoF,EAAiDzC,EAAjDyC,YAAaI,EAAoC7C,EAApC6C,OAAQ4C,EAA4BzF,EAA5ByF,KAAMH,EAAsBtF,EAAtBsF,SAAUC,EAAYvF,EAAZuF,QAC9D,OAAIhG,EAAM6K,YAAc/H,EACb,CACH+H,UAAW/H,EACXhF,WACAoF,cACAI,SACA4C,OACAH,WACAC,UACAqC,UAAU,EACV/B,QAAQ,EACRzB,YAAY,GAIb,KAGX5D,oBAAqB,MACT6B,EAAU7E,KAAKwC,MAAfqC,MACR7E,KAAK6M,cAAchI,GACnBiI,OAAOC,iBAAiB,SAAU/M,KAAKkH,gBACvCL,SAASkG,iBAAiB,mBAAoB/M,KAAK2G,oBACnDqF,IAAYgB,GAAG,4BAA6BhN,KAAKmE,6BAGrD8I,uBAAwB,MACZpI,EAAU7E,KAAKwC,MAAfqC,MACR7E,KAAKkN,iBAAiBrI,GACtBiI,OAAOK,oBAAoB,SAAUnN,KAAKkH,gBAC1CL,SAASsG,oBAAoB,mBAAoBnN,KAAK2G,oBACtDqF,IAAYoB,IAAI,4BAA6BpN,KAAKmE,6BAElDmI,IAAgBI,OAAO1M,KAAKwM,iBAqJhClG,cAAc+G,GAAO,MACTxE,EAAW7I,KAAKwC,MAAhBqG,OAERzG,IAAgBkG,aAAa,CACzB,QAAS,wBACTO,SACAwE,SAsERzK,mBAAmBC,EAAWC,EAAWC,GAAW,MACxC8B,EAAU7E,KAAKwC,MAAfqC,MAEJhC,EAAUgC,QAAUA,IACpB7E,KAAKkN,iBAAiBrK,EAAUgC,OAChC7E,KAAK6M,cAAchI,IAI3BgI,cAAchI,GACV,IAAKA,EAAO,OAEZ,MAAMyI,EAAYzG,SAASI,eAAe,cAHzB,EAIKjH,KAAK0H,kBAAkBsE,IAAYuB,UAAUhG,KAAMyE,IAAYuB,UAAU9F,KAAK,GAA5FF,EAJS,EAITA,KAAME,EAJG,EAIHA,IACd6F,EAAUhG,MAAMC,KAAOA,EAAO,KAC9B+F,EAAUhG,MAAMG,IAAMA,EAAM,KAEHZ,SAASI,eAAe,sBAChCqC,QAIjB,MAAMkE,EAAY3G,SAASI,eAAe,wBACrCuG,IAEL3I,EAAM4I,iBAAmBzN,KAAK6H,qBAC9BhD,EAAM6I,aAAe1N,KAAK2H,iBAC1B9C,EAAM8I,UAAY3N,KAAKgI,cACvBnD,EAAM+I,OAAS5N,KAAKmI,WACpBtD,EAAMgJ,QAAU7N,KAAKuI,YACrB1D,EAAMiJ,QAAU9N,KAAKyI,YACrB5D,EAAMkJ,aAAe/N,KAAK4I,iBAC1B/D,EAAMmJ,eAAiBhO,KAAK8I,mBAC5BjE,EAAMoJ,WAAajO,KAAKgJ,eACxBnE,EAAMqJ,UAAYlO,KAAKiJ,cAEvBuE,EAAUW,UAAY,GACtBX,EAAUY,YAAYvJ,IAG1BqI,iBAAiBrI,GACRA,IAELA,EAAM4I,iBAAmB,KACzB5I,EAAM6I,aAAe,KACrB7I,EAAM8I,UAAY,KAClB9I,EAAM+I,OAAS,KACf/I,EAAMgJ,QAAU,KAChBhJ,EAAMiJ,QAAU,KAChBjJ,EAAMkJ,aAAe,KACrBlJ,EAAMmJ,eAAiB,KACvBnJ,EAAMoJ,WAAa,KACnBpJ,EAAMqJ,UAAY,MAuMtBxG,kBAAkBH,EAAME,EAAK4G,GAAY,GACrC,MAAMlH,EAASN,SAASI,eAAe,cACjCqH,EAAcnH,EAASA,EAAOoH,YAAc,IAC5CC,EAAerH,EAASA,EAAOsH,aAAe,IAE/BC,EAAkB7H,SAAS8H,gBAAxCJ,YACcK,EAAmB/H,SAAS8H,gBAA1CF,aA+BR,OA7BIJ,GAAarO,KAAK6O,SAClBtH,EAAO,EACA8G,GAAarO,KAAK8O,UACzBvH,EAAOmH,EAAgBJ,GAKvB/G,GADAA,EAAOA,EAAOwH,IAA8B,EAAIxH,GAClCmH,EAAgBJ,EAAcS,IAA8BL,EAAgBJ,EAAc/G,EACxGA,EAAOpB,YAAMoB,EAAM,EAAGmH,EAAgBJ,IAGtCD,GAAarO,KAAKgP,QAClBvH,EAAM,EACC4G,GAAarO,KAAKiP,WACzBxH,EAAMmH,EAAiBJ,GAGvB/G,GADAA,EAAMA,EAAMsH,IAA8B,EAAItH,GAClCmH,EAAiBJ,EAAeO,IAA8BH,EAAiBJ,EAAe/G,EAC1GA,EAAMtB,YAAMsB,EAAK,EAAGmH,EAAiBJ,IAGzCxO,KAAK6O,SAAoB,IAATtH,EAChBvH,KAAK8O,UAAYvH,IAASmH,EAAgBJ,EAC1CtO,KAAKgP,QAAkB,IAARvH,EACfzH,KAAKiP,WAAaxH,IAAQmH,EAAiBJ,EAE3CxC,IAAYuB,UAAY,CAAEhG,OAAME,OAEzB,CAAEF,OAAME,OAwInBgE,kBAAkByD,GACd,MAAMC,EAASD,EAAQzD,mBAAqByD,EAAQE,sBAAwBF,EAAQG,wBAEpFF,GAAUA,EAAOG,KAAKJ,GAG1B1D,iBACI,MAAM2D,EAAStI,SAAS2E,gBAAkB3E,SAAS0I,qBAAuB1I,SAAS2I,qBAEnFL,GAAUA,EAAOG,KAAKzI,UAqE1B5D,SAAU,MACE4F,EAAW7I,KAAKwC,MAAhBqG,OADH,EAE0H7I,KAAK+B,MAA5HiI,EAFH,EAEGA,eAAgBI,EAFnB,EAEmBA,SAAUC,EAF7B,EAE6BA,aAAcpF,EAF3C,EAE2CA,YAAapF,EAFxD,EAEwDA,SAAUoI,EAFlE,EAEkEA,KAAMF,EAFxE,EAEwEA,QAASD,EAFjF,EAEiFA,SAAUO,EAF3F,EAE2FA,OAAQhD,EAFnG,EAEmGA,OAAQuB,EAF3G,EAE2GA,WAE1G9F,EAAOsJ,EAAWC,EAAepF,EACjCsF,EAAQ1K,EAAW,EAAIiB,EAAOjB,EAAW,EACzC4P,EAAeC,IAAOC,gBAAgB7O,EAAMgH,GAC5C8H,EAAgB/P,EAAW,EAAI4P,EAAe5P,EAAW,EAEzDgQ,EAAaC,YAAkB/O,KAAKgP,MAAMjP,IAAS,GACnDkP,EAAiBF,YAAkB/O,KAAKgP,MAAMlQ,IAAa,GAG3DoQ,EAAoBpJ,SAASoJ,mBAAqBpJ,SAASqJ,sBAAwBrJ,SAASsJ,wBAElG,OACI,yBACIjQ,GAAG,aACHgD,UAAWkN,IAAW,aAAc,CAAE,sBAAuBpG,EAAgB,wBAAyBpD,IACtGyJ,YAAarQ,KAAKoJ,sBAClBkH,YAAatQ,KAAK6K,gBAClB0F,QAASvQ,KAAKmM,gBACdqE,cAAexQ,KAAKoM,mBACpB,yBACIlM,GAAG,qBACHgD,UAAWkN,IAAW,CAAE,4BAA6B/H,IACrDoI,QAASzQ,KAAKqM,YACdqE,OAAQ1Q,KAAKyM,WACbkE,SAAU,GACV,yBAAKzQ,GAAG,yBACR,kBAAC0Q,EAAA,EAAD,CAAM/H,OAAQA,IAEd,4BAAQwH,YAAaQ,GAAKA,EAAE5K,kBAAmB/C,UAAWkN,IAAW,gBAAiB,sBAAuB,CAAE,sBAAuB/H,IAAWkI,QAASvQ,KAAK+E,aAC3J,kBAAC+L,EAAA,EAAD,OAEJ,yBACI5N,UAAWkN,IAAW,eAAgB,CAAE,sBAAuB/H,IAC/DkI,QAASM,GAAKA,EAAE5K,kBAChBoK,YAAaQ,GAAKA,EAAE5K,kBACpBuK,cAAexQ,KAAKkM,uBACpB6E,aAAc/Q,KAAK0K,iBACnBsG,aAAchR,KAAK4K,kBACnB,yBAAK1H,UAAU,iBACX,0BAAMA,UAAU,6BAA6BoE,MAAO,CAAE2J,MAAuB,IAAhBrB,EAAsB,OACnF,kBAACsB,EAAA,EAAD,CACI3G,MAAOA,EACPvJ,IAAK,EACLmQ,IAAK,EACLC,KAAM,KACNC,QAAS,CACL9F,KAAM,qBACN+F,KAAM,qBACNC,MAAO,sBACPC,MAAO,sBACPC,OAAQ,wBAEZC,SAAU1R,KAAKsK,aACfqH,kBAAmB3R,KAAKwK,sBACxB6F,YAAarQ,KAAKmK,mBAG1B,yBAAKjH,UAAU,mBACX,4BAAQA,UAAU,gBAAgBqN,QAASvQ,KAAKuF,aAC3C0C,EAAO,kBAAC2J,EAAA,EAAD,MAAe,kBAAC,IAAD,OAE3B,yBAAK1O,UAAU,eAAf,UACQ2M,EADR,cACwBG,IAExB,yBAAK9M,UAAU,iBACX,kBAACgO,EAAA,EAAD,CACI3G,MAAOlF,EACPrE,IAAK,EACLmQ,IAAK,EACLC,KAAM,KACNC,QAAS,CACL9F,KAAM,qBACN+F,KAAM,qBACNC,MAAO,sBACPC,MAAO,sBACPC,OAAQ,wBAEZC,SAAU1R,KAAKkL,yBACfyG,kBAAmB3R,KAAKmL,qCAGhC,4BAAQjI,UAAU,gBAAgBqN,QAASvQ,KAAKwF,YAC3CkK,IAAOmC,cAAcxM,IAE1B,4BAAQnC,UAAU,gBAAgB4O,UAAW7B,EAAmBM,QAASvQ,KAAKyF,kBAC1E,kBAACsM,EAAA,EAAD,SAOZ,kBAACC,EAAA,EAAD,CAAUjK,QAASA,Q,qFCn1BxBkK,oBAnCf,cAAgCpQ,IAAMC,UAClCmB,SAAU,MAAD,EACqCjD,KAAKwC,MAAvC0P,EADH,EACGA,OAAQC,EADX,EACWA,SAAUC,EADrB,EACqBA,SAAUC,EAD/B,EAC+BA,EAE9BC,EAAaC,YAAkBL,GAAQ,EAAMG,GAEnD,OACI,yBACInP,UAAWkN,IAAW,sBAAuB,CAAE,+BAAgC+B,IAC/E5B,QAAS6B,GACT,yBAAKlP,UAAU,4BACX,yBAAKA,UAAU,oCACX,kBAACsP,EAAA,EAAD,CAAUN,OAAQA,KAErBC,GAAY,yBAAKjP,UAAU,kCAC5B,yBACIA,UAAWkN,IACP,2BACA+B,EAAW,oCAAsC,yCAGzD,yBAAKjP,UAAU,mCAEnB,yBAAKA,UAAU,6BAA6BoP,OC/BrD,SAAeG,EAAtB,kC,2CAAO,WAAoBpF,GAApB,SAAAqF,EAAA,kEAEKC,UAAUC,UAFf,gCAGWD,UAAUC,UAAUC,UAAUxF,GAHzC,iCAIY,GAJZ,uDAOCyF,QAAQC,MAAM,sDAAd,MAPD,iCAUIC,EAAQ3F,IAVZ,wD,sBAaP,SAAS2F,EAAQ3F,GACb,IAAI6B,EACA+D,EACJ,IAqBI,IApBA/D,EAAUrI,SAASqM,cAAc,aACzBC,iBAAkB,EAC1BjE,EAAQkE,UAAW,EACnBlE,EAAQ3E,MAAQ8C,EAChB6B,EAAQ5H,MAAM+L,IAAM,QACpBnE,EAAQ5H,MAAMgM,SAAW,QACzBpE,EAAQ5H,MAAMG,IAAM,EACpByH,EAAQ5H,MAAMiM,KAAO,mBACrBrE,EAAQ5H,MAAMkM,WAAa,MAC3BtE,EAAQ5H,MAAMmM,iBAAmB,OACjCvE,EAAQ5H,MAAMoM,cAAgB,OAC9BxE,EAAQ5H,MAAMqM,aAAe,OAC7BzE,EAAQ5H,MAAMsM,WAAa,OAE3B/M,SAASgN,KAAKzF,YAAYc,GAE1BA,EAAQ5F,QACR4F,EAAQ4E,WAERb,EAAapM,SAASkN,YAAY,SAE9B,MAAM,IAAIC,MAEd,OAAO,EACT,SACElB,QAAQC,MAAM,uDAAwDE,GA1B1E,QA4BQ/D,GACArI,SAASgN,KAAKI,YAAY/E,GAIlC,OAAO,E,oBC/CJ,SAASgF,EAAQ7B,EAAG9N,KAAQ4P,GAC/B,OAAO9B,EAAE9N,EAAK,CAAE6P,YAAa,UAAWF,QAASC,IAGrD,IAAIE,EAAgB,KAwCpB,SAASC,EAAiBC,GACtB,IAAKA,EAAQ,OAAO,EADU,MAGtBhK,EAAUgK,EAAVhK,MACR,QAAKA,GAEkB,OAAhBA,EAAMA,MAGjB,SAASiK,EAAiBC,GACtB,IAAKA,EAAO,OAAO,KACnB,IAAKA,EAAMC,OAAQ,OAAO,KAE1B,MAAMC,EAAgBC,IAAY/I,IAAI,oBAChCgJ,EAAkBD,IAAY/I,IAAI,8BAExC,KAD0ByI,EAAiBK,IAAkBL,EAAiBO,IACtD,OAAO,KAE/BR,EAAgBA,GAvwBV,IAAIC,EAAS,GACb,IAAK,IAAIC,EAAI,EAAGA,EAAIP,EAAMC,OAAQM,IAAK,CACnC,IAAIX,EAAcY,IAAIR,EAAMO,IAGxB,OAAO,KAFPD,GAAUV,EAAcxI,IAAI4I,EAAMO,IAM1C,MAAkB,KAAXD,EAAgB,KAAOA,EAGlC,IAAIG,EAAa,KAwCjB,SAASC,EAAcV,GACnB,IAAKA,EAAO,OAAO,KACnB,IAAKA,EAAMC,OAAQ,OAAO,KAE1BQ,EAAaA,GAzb,IAAK,IAAIC,EAAI,EAAGA,EAAIP,EAAMC,OAAQM,IAAK,CACnC,IAAIE,EAAWD,IAAIR,EAAMO,IAGrB,OAAO,KAFPD,GAAUG,EAAWrJ,IAAI4I,EAAMO,IAMvC,MAAkB,KAAXD,EAAgB,KAAOA,E,sDCiYnBK,OALCC,YACZpD,cACAqD,IAGWF,CA5ef,cAA4BvT,IAAMC,UAC9BlC,YAAY4C,GAAQ,IAAD,EACf0B,MAAM1B,GADS,YAoBnB+S,YApBmB,qBAoBL,0CAAA7C,EAAA,4DACV,EAAK8C,uBAECC,EAAW,GACXC,EAAkBtT,IAAgBC,KAAK,CACzC,QAAS,WACTsT,aAAc,sBACdC,eAAgB,EAChBC,MAAO,MAEXJ,EAASK,KAAKJ,GAERK,EAAuB3T,IAAgBC,KAAK,CAC9C,QAAS,oBACT2T,QAASC,IAAUC,UACnBC,OAAO,IAEXV,EAASK,KAAKC,GAjBJ,SAmB2BK,QAAQ/C,IAAIoC,EAASY,IAAI1V,GAAKA,EAAE2V,MAAMzF,GAAK,QAnBtE,mCAmBH0F,EAnBG,KAmBIC,EAnBJ,KAqBV,EAAK/T,SAAS,CACVgU,QAASF,EAAMG,SACfF,cAAeA,IAGbG,EAAQ/K,IAAUgL,WACxBC,YAAiBF,EAAOJ,EAAMG,UA3BpB,0CApBK,KAkDnBlB,qBAlDmB,qBAkDI,kCAAA9C,EAAA,0DACY,EAAKlQ,MAA5B0P,EADW,EACXA,OAAQ4E,EADG,EACHA,WACX5E,EAFc,oDAGd4E,EAHc,sDAIfA,EAAWpC,OAAS,GAJL,oDAKdqC,aAAa7E,GALC,oDAMd8E,YAAgB9E,GANF,oEAQE9P,IAAgBC,KAAK,CACtC,QAAS,iBACT4U,QAAS/E,EACTgF,WAAYJ,EAAW,GACvBK,WAAW,EACXC,aAAa,IAbE,QAQb7U,EARa,OAgBnB,EAAKE,SAAS,CACV4U,kBAAmB9U,IAjBJ,0CAlDJ,KAuEnBwC,YAAc,KACVuS,YAAQ,OAxEO,KA2EnBC,eAAiB,KAAO,MACZlF,EAAMrS,KAAKwC,MAAX6P,EACAgF,EAAsBrX,KAAK+B,MAA3BsV,kBAEHA,GACAA,EAAkBG,OAEvB/E,EAAK4E,EAAkBG,MAEvBxX,KAAKyX,sBAAsBpF,EAAE,iBApFd,KAuFnBoF,sBAAwBC,IAAY,MAAD,EACY1X,KAAKwC,MAAxCmV,EADuB,EACvBA,gBAAiBC,EADM,EACNA,cAEnBC,EAAWF,EAAgBD,EAAS,CACtCI,iBAAkBC,IAClBC,kBAAkB,EAClBC,OAAQ,CACJ,kBAACC,EAAA,EAAD,CACI3T,IAAI,QACJ4T,aAAW,QACXC,MAAM,UACNlV,UAAU,4BACVqN,QAAS,IAAMqH,EAAcC,IAC7B,kBAAC/G,EAAA,EAAD,WApGG,KA0GnBuH,oBAAsB,CAACnG,EAAQ4E,KAC3B,GAA0B,IAAtBA,EAAWpC,OAAc,OAAO,KAEpC,MAAMgD,EAAUY,IAAazM,IAAIqG,EAAQ4E,EAAW,IACpD,IAAKY,EAAS,OAAO,KAJqB,MAMlCa,EAA8Bb,EAA9Ba,iBAAkBC,EAAYd,EAAZc,QAC1B,IAAKD,GAAyC,2BAArBC,EAAQ,SAAuC,CAAC,MAC7DC,EAAUD,EAAVC,MACR,IAAKA,EAAO,OAAO,KAFiD,MAI5DC,EAAUD,EAAVC,MACR,GAAIA,GAASA,EAAMhE,OACf,OAAOgE,EAAMA,EAAMhE,OAAS,GAIpC,OAAO,MA3HQ,KA8HnBiE,WAAa,KACT3Y,KAAK+E,cACL6T,cAFe,QAIqC5Y,KAAKwC,MAAjD0P,EAJO,EAIPA,OAAQ4E,EAJD,EAICA,WAAY+B,EAJb,EAIaA,oBAC5B,IAAK3G,IAAW4E,IAAe+B,EAAqB,OAEpD,MAAMxL,EAAOrN,KAAK8Y,aAAa9Y,KAAK+Y,WAAWC,SAE/ChZ,KAAKiZ,YAAY7X,QAAjB,sCAAyB,WAAM8X,GAAN,qBAAAxG,EAAA,yDACjBmG,EADiB,gCAEXM,KAASC,sBAAT,0CAAkElH,IAFvD,cAGb7E,IACI,YAAawL,EACbA,EAAoBQ,QAAU,CAC1B,QAAS,gBACThM,OACAiM,SAAU,MAGdlX,IAAgBC,KAAK,CACjB,QAAS,cACT4U,QAASiC,EACTK,oBAAqB,EACrBC,uBAAuB,EACvBC,iBAAiB,EACjBC,aAAc,KACdC,sBAAuB,CACnB,QAAS,mBACTtM,KAAM,CACF,QAAS,gBACTA,OACAiM,SAAU,MAEdM,0BAA0B,EAC1BC,aAAa,MAM7BzX,IAAgBC,KAAK,CACjB,QAAS,cACT4U,QAASiC,EACTK,oBAAqB,EACrBC,uBAAuB,EACvBC,iBAAiB,EACjBC,aAAc,KACdC,sBAAuBd,IAvCV,+BA6CfiB,EAAO,EAAKzB,oBAAoBnG,EAAQ4E,IA7CzB,wBA+CT7F,EAAyB6I,EAAzB7I,MAAO8I,EAAkBD,EAAlBC,OAAQtB,EAAUqB,EAAVrB,MA/CN,UAiDXU,KAASC,sBAAT,0CAAkElH,IAjDvD,eAkDjB9P,IAAgBC,KAAK,CACjB,QAAS,cACT4U,QAASiC,EACTK,oBAAqB,EACrBC,uBAAuB,EACvBC,iBAAiB,EACjBC,aAAc,KACdC,sBAAuB,CACnB,QAAS,oBACTlB,MAAO,CACH,QAAS,cACTvY,GAAIuY,EAAMvY,IAEd8Z,UAAW,KACXC,uBAAwB,GACxBhJ,MAAOA,EACP8I,OAAQA,EACRV,QAAS,CACL,QAAS,gBACThM,OACAiM,SAAU,MAEdY,IAAK,KAxEI,+BA+EjB7M,EA/EiB,kCAgFX8L,KAASC,sBAAT,0CAAkElH,IAhFvD,QAiFjB9P,IAAgBC,KAAK,CACjB,QAAS,cACT4U,QAASiC,EACTK,oBAAqB,EACrBC,uBAAuB,EACvBC,iBAAiB,EACjBC,aAAc,KACdC,sBAAuB,CACnB,QAAS,mBACTtM,KAAM,CACF,QAAS,gBACTA,OACAiM,SAAU,MAEdM,0BAA0B,EAC1BC,aAAa,KAhGJ,QAqGrBzX,IAAgBC,KAAK,CACjB,QAAS,kBACT4U,QAASiC,EACTiB,aAAcjI,EACdkI,YAAatD,EACb0C,uBAAuB,EACvBC,iBAAiB,EACjBY,UAAU,IA5GO,0CAAzB,kCAAAra,KAAA,iBAvIe,KAwPnBsa,sBAAwBpI,IAChBlS,KAAKiZ,YAAYhE,IAAI/C,GACrBlS,KAAKiZ,YAAYsB,OAAOrI,GAExBlS,KAAKiZ,YAAYuB,IAAItI,EAAQA,GAKjClS,KAAKya,eAjQU,KAoQnB3B,aAAe5J,IAAY,MACff,EAAce,EAAdf,UAMR,MALkB,SAAdA,GAAsC,oBAAdA,IACxBe,EAAQf,UAAY,MAEFe,EAAdwL,WAzQO,KA8QnBC,oBAAsBtW,IACI,KAAlBA,EAAMuW,SACNvW,EAAM6B,kBAhRK,KAoRnB2U,kBApRmB,qBAoRC,gDAAAnI,EAAA,0DACmB,EAAK3Q,MAAhC0U,EADQ,EACRA,QAASD,EADD,EACCA,cAEXtH,EAAU,EAAK4L,UAAU9B,QAHf,oDAOE,UADV7K,EAAce,EAAdf,YACkC,oBAAdA,IACxBe,EAAQf,UAAY,MAGlBuM,EAAY,EAAK5B,aAAa5J,GAAS6L,OAX7B,wBAaZ,EAAKtY,SAAS,CAAEuY,WAAY,KAAMC,cAAe,GAAIC,oBAAqB,KAb9D,kCAiBVC,EAAYhG,EAAcuF,GAC1BU,EAAe5G,EAAiBkG,GAEhCW,EAAc7E,EACd,CAACA,EAActW,IAAIob,OAAO7E,EAAQ8E,OAAO5a,GAAKA,IAAM6V,EAActW,IAAMsb,YAAgB7a,KACxF8V,EAEAwE,EAAgBI,EAAYE,OAC9B5a,GACI,EAAK8a,cAAc9a,EAAG+Z,IACrBS,GAAa,EAAKM,cAAc9a,EAAGwa,IACnCC,GAAgB,EAAKK,cAAc9a,EAAGya,IAG/C,EAAK3Y,SAAS,CAAEuY,WAAYN,EAAWO,kBA/BvB,UAiCK7Y,IAAgBC,KAAK,CACtC,QAAS,sBACTqZ,MAAOhB,EACP7E,MAAO,MApCK,WAiCVtT,EAjCU,OAuCZ,EAAKR,MAAMiZ,aAAeN,EAvCd,mDA2ChB,EAAKjY,SAAS,CACVyY,oBAAqB3Y,EAAOmU,WA5ChB,0CApRD,KAoUnBiF,kBAAoBtX,IAChB,MAAMuX,EAAYvX,EAAMwX,cAAcC,QAAQ,cAC1CF,IACAvX,EAAM6B,iBACNW,SAASkN,YAAY,cAAc,EAAO6H,KAxU/B,KA4UnBG,mBAAqB,KACjB,MAAM7M,EAAUlP,KAAK+Y,WAAWC,QAChC,IAAK9J,EAAS,OAFS,MAIff,EAAce,EAAdf,UACU,SAAdA,GAAsC,oBAAdA,IACxBe,EAAQf,UAAY,OAlVT,KAsVnB6N,mBAAqB3X,IACjB,MAAMuX,EAAYvX,EAAMwX,cAAcC,QAAQ,cAC1CF,IACAvX,EAAM6B,iBACNW,SAASkN,YAAY,cAAc,EAAO6H,KA1V/B,KA8VnBH,cAAgB,CAACvJ,EAAQ8I,KAAgB,MAC7B3I,EAAMrS,KAAKwC,MAAX6P,EACAmE,EAAkBxW,KAAK+B,MAAvByU,cAER,GAAIA,GAAiBtE,IAAWsE,EAActW,GAAI,CAE9C,IAAqE,KADvD+b,YAAa/J,GAAQ,EAAMG,IAAM,IACrC6J,oBAAoBC,QAAQnB,EAAWoB,eAC7C,OAAO,EAKf,OAAsE,KADvDH,YAAa/J,GAAQ,EAAOG,IAAM,IACtC6J,oBAAoBC,QAAQnB,EAAWoB,iBAKsB,KADvDpF,YAAgB9E,IAAW,IAC/BgK,oBAAoBC,QAAQnB,EAAWoB,gBA/WrC,KAsXnBC,eAAiB,KACbrR,WAAW,KACP,GAAIhL,KAAK8a,UAAU9B,QAAS,CACRhZ,KAAK8a,UAAU9B,QAEvB1P,UAEb,MA1XHtJ,KAAK+B,MAAQ,CACT0U,QAAS,GACTD,cAAe,MAGnBxW,KAAK8a,UAAYjZ,IAAMya,YACvBtc,KAAK+Y,WAAalX,IAAMya,YAExBtc,KAAKiZ,YAAc,IAAInE,IAG3B9R,oBACIhD,KAAKuV,cAELvV,KAAKqc,iBA+WTpZ,SAAU,MACEoP,EAAMrS,KAAKwC,MAAX6P,EADH,EASDrS,KAAK+B,MANL0U,EAHC,EAGDA,QACAuE,EAJC,EAIDA,WACAC,EALC,EAKDA,cACAC,EANC,EAMDA,oBACA1E,EAPC,EAODA,cACAa,EARC,EAQDA,kBAOEd,GAJcC,EACd,CAACA,EAActW,IAAIob,OAAO7E,EAAQ8E,OAAO5a,GAAKA,IAAM6V,EAActW,IAAMsb,YAAgB7a,KACxF8V,GAEoBJ,IAAI1V,GAC1B,kBAAC,EAAD,CACI4D,IAAK5D,EACLuR,OAAQvR,EACRwR,SAAUnS,KAAKiZ,YAAYhE,IAAItU,GAC/ByR,SAAU,IAAMpS,KAAKsa,sBAAsB3Z,MAI7C4b,EAAmB,IAAIzH,KAAKmG,GAAiB,IAAI5E,IAAI1V,GAAK,CAACA,EAAGA,KAC9D6b,GAAmBtB,GAAuB,IAAIK,OAChD5a,GAAKA,IAAM6V,EAActW,IAAMsb,YAAgB7a,KAAO4b,EAAiBtH,IAAItU,IAGzE8b,GAAcxB,GAAiB,IAChCK,OAAOkB,GACPnG,IAAI1V,GACD,kBAAC,EAAD,CACI4D,IAAK5D,EACLuR,OAAQvR,EACRwR,SAAUnS,KAAKiZ,YAAYhE,IAAItU,GAC/ByR,SAAU,IAAMpS,KAAKsa,sBAAsB3Z,MAIvD,OACI,kBAAC,IAAD,CACI+b,MAAM,EACNC,QAASC,IACTC,mBAAoB,EACpBC,QAAS9c,KAAK+E,YACdgY,kBAAgB,uBAChBC,mBAAiB,6BACjB9Z,UAAU,kBACV,kBAAC,IAAD,CAAahD,GAAG,wBAAwBmS,EAAE,gBAC1C,yBACI4K,IAAKjd,KAAK8a,UACV5a,GAAG,wBACHgD,UAAU,oBACViQ,iBAAe,EACf+J,gCAA8B,EAC9BC,YAAa9K,EAAE,UACf/N,UAAWtE,KAAK2a,oBAChByC,QAASpd,KAAK6a,kBACdwC,QAASrd,KAAK2b,oBAElB,yBAAKzY,UAAU,0BACX,yBAAKA,UAAU,uBAAuBqT,GACrCyE,GAAc,yBAAK9X,UAAU,8BAA8BuZ,IAE/Dzc,KAAKiZ,YAAYa,KAAO,GACrB,yBACImD,IAAKjd,KAAK+Y,WACV7Y,GAAG,yBACHiT,iBAAe,EACf+J,gCAA8B,EAC9BC,YAAa9K,EAAE,gBACf+K,QAASpd,KAAK+b,mBACdsB,QAASrd,KAAKgc,qBAGtB,kBAACsB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQhN,QAASvQ,KAAK+E,YAAaqT,MAAM,WACpC/F,EAAE,WAENrS,KAAKiZ,YAAYa,KAAO,GACrB,kBAACyD,EAAA,EAAD,CAAQhN,QAASvQ,KAAK2Y,WAAYP,MAAM,UAAUoF,WAAS,GACtDnL,EAAE,UAGTrS,KAAKiZ,YAAYa,MAAQzC,GACvB,kBAACkG,EAAA,EAAD,CAAQhN,QAASvQ,KAAKuX,eAAgBa,MAAM,WACvC/F,EAAE,kB,wEChfhB7O,gBACX,0BAAMC,EAAE,ulBACR,a,wCCFWD,gBACX,0BAAMC,EAAE,2zCACR,e,oBCFWD,gBACX,0BAAMC,EAAE,+PACR,Y,eCIJ,MAAMga,WAAoB5b,IAAMC,UAAW,eAAD,oBAyBtC4b,uBAAyBtZ,IACrBpE,KAAKya,eA1B6B,KA6BtCkD,kBAAoBvZ,IAAW,MACnB8N,EAAWlS,KAAKwC,MAAhB0P,OAEJ9N,EAAO6S,UAAY/E,GAEvBlS,KAAKya,eAjCTmD,sBAAsBC,EAAWC,GAAY,MAAD,EAClB9d,KAAKwC,MAAnB0P,EADgC,EAChCA,OAAQG,EADwB,EACxBA,EAEhB,OAAIwL,EAAU3L,SAAWA,GAIrB2L,EAAUxL,IAAMA,EAOxBrP,oBACI+a,KAAU/Q,GAAG,mCAAoChN,KAAK0d,wBACtDK,KAAU/Q,GAAG,kBAAmBhN,KAAK2d,mBAGzC1Q,uBACI8Q,KAAU3Q,IAAI,mCAAoCpN,KAAK0d,wBACvDK,KAAU3Q,IAAI,kBAAmBpN,KAAK2d,mBAe1C1a,SAAU,MAAD,EACoCjD,KAAKwC,MAAtC6P,EADH,EACGA,EAAGH,EADN,EACMA,OAAQ8L,EADd,EACcA,kBAEbC,EAAaC,aAAehM,GAC5BiM,EAAQlC,YAAa/J,EAAQ8L,EAAmB3L,GAEtD,OACI,yBAAKnP,UAAU,gBACX,0BAAMA,UAAU,qBAAqBib,GACpCF,GAAc,kBAAC,GAAD,CAAmB/a,UAAU,wBAW5Dua,GAAYW,aAAe,CACvBJ,mBAAmB,GAGR/L,qBAAkBwL,I,yBCqIlBY,OAjMf,cAA2Bxc,IAAMC,UAC7BlC,YAAY4C,GACR0B,MAAM1B,GADS,KA+DnB8b,mBAAqBla,IAAW,MACpB8N,EAAWlS,KAAKwC,MAAhB0P,OACFqM,EAAOR,KAAUlS,IAAIqG,GAC3B,IAAKqM,EAAM,OACX,IAAKA,EAAKC,KAAM,OAEhB,IAAIC,GAAiB,EACrB,OAAQF,EAAKC,KAAK,UACd,IAAK,qBAAsB,CACvB,MAAME,EAAWC,KAAgBC,YAAYL,EAAKC,KAAKK,gBACvD,GAAIH,GAAYA,EAASI,QAAS,CACfJ,EAASI,QAAQC,KAAKpe,GAAKA,EAAEqV,UAAY5R,EAAO4R,WAE3DyI,GAAiB,GAGzB,MAEJ,IAAK,kBAML,IAAK,iBACGF,EAAKC,KAAKxI,UAAY5R,EAAO4R,UAC7ByI,GAAiB,GASzBA,GACAze,KAAKye,eAAevM,IAnGT,KAuGnBuM,eAAiBvM,IACblS,KAAKyC,SAAS,CACVuc,SAAUC,YAA6B/M,GACvCgN,SAAUC,YAAkCjN,MA1GjC,KA8GnBkN,qBAAuBhb,IAAW,MACtB8N,EAAWlS,KAAKwC,MAAhB0P,OACFqM,EAAOR,KAAUlS,IAAIqG,GAC3B,IAAKqM,EAAM,OAHkB,MAKrBC,EAASD,EAATC,KACHA,KAGDA,GACmB,oBAAlBA,EAAK,UAAoD,mBAAlBA,EAAK,UAC7CA,EAAKxI,UAAY5R,EAAO4R,SAExBhW,KAAKye,eAAevM,KA3HT,KA+HnBmN,2BAA6Bjb,IAAW,MAC5B8N,EAAWlS,KAAKwC,MAAhB0P,OACFqM,EAAOR,KAAUlS,IAAIqG,GAC3B,IAAKqM,EAAM,OAHwB,MAK3BC,EAASD,EAATC,KACHA,GAEDA,GAA0B,uBAAlBA,EAAK,UAAqCA,EAAKK,iBAAmBza,EAAOya,gBACjF7e,KAAKye,eAAevM,IAxIT,KA4InBoN,2BAA6Blb,IAAW,MAC5B8N,EAAWlS,KAAKwC,MAAhB0P,OACFqM,EAAOR,KAAUlS,IAAIqG,GAC3B,IAAKqM,EAAM,OAHwB,MAK3BC,EAASD,EAATC,KACHA,GAEDA,GAA0B,uBAAlBA,EAAK,UAAqCA,EAAKe,gBAAkBnb,EAAOmb,eAChFvf,KAAKye,eAAevM,IArJT,KAyJnBsN,mBAAqBpb,IAAW,MACpB8N,EAAWlS,KAAKwC,MAAhB0P,OACFqM,EAAOR,KAAUlS,IAAIqG,GAC3B,IAAKqM,EAAM,OAHgB,MAKnBC,EAASD,EAATC,KACHA,GAEDA,GAA0B,uBAAlBA,EAAK,UAAqCA,EAAKK,iBAAmBza,EAAOqb,YAAYvf,IAC7FF,KAAKye,eAAevM,IAlKT,KAsKnBwN,mBAAqBtb,IAAW,MACpB8N,EAAWlS,KAAKwC,MAAhB0P,OACFqM,EAAOR,KAAUlS,IAAIqG,GAC3B,IAAKqM,EAAM,OAHgB,MAKnBC,EAASD,EAATC,KACHA,GAEDA,GAA0B,uBAAlBA,EAAK,UAAqCA,EAAKe,gBAAkBnb,EAAOub,WAAWzf,IAC3FF,KAAKye,eAAevM,IA/KT,MAGPA,EAAWlS,KAAKwC,MAAhB0P,OAERlS,KAAK+B,MAAQ,CACT6d,WAAY1N,EACZ8M,SAAUC,YAA6B/M,GACvCgN,SAAUC,YAAkCjN,IAIpD,gCAAgC1P,EAAOT,GACnC,GAAIS,EAAM0P,SAAWnQ,EAAM6d,WAAY,CAAC,MAC5B1N,EAAW1P,EAAX0P,OAER,MAAO,CACH0N,WAAY1N,EACZ8M,SAAUC,YAA6B/M,GACvCgN,SAAUC,YAAkCjN,IAIpD,OAAO,KAGX0L,sBAAsBC,EAAWC,GAAY,MACjC5L,EAAWlS,KAAKwC,MAAhB0P,OADgC,EAETlS,KAAK+B,MAA5Bid,EAFgC,EAEhCA,SAAUE,EAFsB,EAEtBA,SAElB,OAAIrB,EAAU3L,SAAWA,IAIrB4L,EAAUkB,WAAaA,GAIvBlB,EAAUoB,WAAaA,GAO/Blc,oBACIiT,IAAUjJ,GAAG,mBAAoBhN,KAAKse,oBACtCK,KAAgB3R,GAAG,mBAAoBhN,KAAKwf,oBAC5CK,KAAgB7S,GAAG,mBAAoBhN,KAAK0f,oBAC5CzJ,IAAUjJ,GAAG,qBAAsBhN,KAAKof,sBACxCT,KAAgB3R,GAAG,2BAA4BhN,KAAKqf,4BACpDQ,KAAgB7S,GAAG,2BAA4BhN,KAAKsf,4BAGxDrS,uBACIgJ,IAAU7I,IAAI,mBAAoBpN,KAAKse,oBACvCK,KAAgBvR,IAAI,mBAAoBpN,KAAKwf,oBAC7CK,KAAgBzS,IAAI,mBAAoBpN,KAAK0f,oBAC7CzJ,IAAU7I,IAAI,qBAAsBpN,KAAKof,sBACzCT,KAAgBvR,IAAI,2BAA4BpN,KAAKqf,4BACrDQ,KAAgBzS,IAAI,2BAA4BpN,KAAKsf,4BAuHzDrc,SAAU,MACY6c,EAAqB9f,KAAKwC,MAApCwc,SADH,EAE0Bhf,KAAK+B,MAA5Bid,EAFH,EAEGA,SAAUE,EAFb,EAEaA,SAElB,OACI,yBAAKhc,UAAWkN,IAAW,gBAAiB,CAAE,uBAAwB8O,KACjEY,EAAmBA,EAAmB,KAAO,KAC7Cd,K,OC1LjB,MAAMe,WAAale,IAAMC,UACrBlC,YAAY4C,GACR0B,MAAM1B,GADS,KAanB+C,YAAc,KAAO,MAAD,EACavF,KAAKwC,MAA1B0P,EADQ,EACRA,OAAQE,EADA,EACAA,SACXA,GAELA,EAASF,IAjBM,MAGPA,EAAWlS,KAAKwC,MAAhB0P,OACRlS,KAAK+B,MAAQ,CACTwc,KAAMR,KAAUlS,IAAIqG,IAI5B0L,sBAAsBC,EAAWC,GAC7B,OAAOD,EAAU3L,SAAWlS,KAAKwC,MAAM0P,OAU3CjP,SAAU,MAAD,EACqFjD,KAAKwC,MAAvF0P,EADH,EACGA,OAAQ8M,EADX,EACWA,SAAUgB,EADrB,EACqBA,aAAcC,EADnC,EACmCA,WAAYjC,EAD/C,EAC+CA,kBAAmBkC,EADlE,EACkEA,IAAKC,EADvE,EACuEA,UAEtEC,EAAkBC,aAASnO,GAEjC,OACI,yBAAKhP,UAAWkN,IAAW,OAAQ,CAAE,WAAY8P,IAAQ3P,QAASvQ,KAAKuF,aACnE,yBAAKrC,UAAU,gBACX,kBAACsP,EAAA,EAAD,CAAU0N,IAAKA,EAAKhO,OAAQA,EAAQE,SAAU4N,EAAchC,kBAAmBA,IAC9EmC,GACG,yBAAKjd,UAAU,sBACX,yBAAKA,UAAU,kBACX,kBAAC,GAAD,CAAagP,OAAQA,EAAQ8L,kBAAmBA,KAEnDiC,KAAgBG,IAAoBpC,IACjC,yBAAK9a,UAAU,mBACX,kBAAC,GAAD,CAAcgP,OAAQA,EAAQ8M,SAAUA,SAqB5Ee,GAAK3B,aAAe,CAChBJ,mBAAmB,EACnBiC,YAAY,EACZE,WAAW,GAGAJ,UCxEAvc,gBACX,0BAAMC,EAAE,0tBACR,Q,OCuCWwO,qBAnCf,cAAgCpQ,IAAMC,UAClClC,YAAY4C,GACR0B,MAAM1B,GAGVS,SAAU,MAAD,EAC+CjD,KAAKwC,MAAjD0P,EADH,EACGA,OAAQG,EADX,EACWA,EAAGiO,EADd,EACcA,WAAY/P,EAD1B,EAC0BA,QAASuM,EADnC,EACmCA,QAExC,IAAIyD,EAAOlO,EAAE,YAOb,OANImO,aAActO,GACdqO,EAAOlO,EAAE,QACFoO,YAAcvO,KACrBqO,EAAOlO,EAAE,gBAIT,yBAAKnP,UAAU,iBACVod,GACG,kBAACpI,EAAA,EAAD,CAAYhV,UAAU,qBAAqBqN,QAASuM,GAChD,kBAAC,GAAD,OAGR,yBAAK5Z,UAAU,oCAAoCqN,QAASA,GACxD,0BAAMrN,UAAU,yBAAyBqd,KAE3CD,GACE,kBAACpI,EAAA,EAAD,CAAYhV,UAAU,sBAAsBqN,QAASuM,GACjD,kBAAChM,EAAA,EAAD,W,8BCuDT4P,OAlFf,cAA4B7e,IAAMC,UAC9BlC,YAAY4C,GACR0B,MAAM1B,GADS,KAsCnBme,iCAAmCvc,IAAW,MAClC6S,EAAY7S,EAAZ6S,QACA/E,EAAWlS,KAAKwC,MAAhB0P,OAEH+E,GACDA,IAAY/E,GAEhBlS,KAAKyC,SAAS,CAAEme,QAASC,YAAY3O,MA7CtB,KAgDnB4O,kCAAoC1c,IAAW,MACnC8N,EAAWlS,KAAKwC,MAAhB0P,OACFqM,EAAOR,KAAUlS,IAAIqG,GAE3B,OAAQ9N,EAAO2c,MAAM,UACjB,IAAK,sCAC0B,uBAAvBxC,EAAKC,KAAK,UAA4D,uBAAvBD,EAAKC,KAAK,UACzDxe,KAAKyC,SAAS,CAAEme,QAASC,YAAY3O,KAEzC,MAEJ,IAAK,wCAC0B,oBAAvBqM,EAAKC,KAAK,UAAyD,mBAAvBD,EAAKC,KAAK,UACtDxe,KAAKyC,SAAS,CAAEme,QAASC,YAAY3O,OA7DlC,KAoEnB8O,2BAA6B,KACzBhhB,KAAKyC,SAAS,CAAEme,SAAU5gB,KAAK+B,MAAM6e,UACrC5gB,KAAKihB,wCAtEU,KAyEnBC,4BAA8B,KAAO,MACzBhP,EAAWlS,KAAKwC,MAAhB0P,OACA0O,EAAY5gB,KAAK+B,MAAjB6e,QAERO,aAA+BjP,EAAQ0O,IA7ExB,MAGP1O,EAAW1P,EAAX0P,OAERlS,KAAK+B,MAAQ,CACT6d,WAAY1N,EACZ0O,QAASC,YAAY3O,IAGzBlS,KAAKihB,qCAAuCG,YACxCphB,KAAKkhB,4BACLG,KAIR,gCAAgC7e,EAAOT,GACnC,GAAIS,EAAM0P,SAAWnQ,EAAM6d,WAAY,CAAC,MAC5B1N,EAAW1P,EAAX0P,OAER,MAAO,CACH0N,WAAY1N,EACZ0O,QAASC,YAAY3O,IAG7B,OAAO,KAGXlP,oBACI+a,KAAU/Q,GAAG,iCAAkChN,KAAK2gB,kCACpDW,KAAkBtU,GAAG,kCAAmChN,KAAK8gB,mCAGjE7T,uBACI8Q,KAAU3Q,IAAI,iCAAkCpN,KAAK2gB,kCACrDW,KAAkBlU,IAAI,kCAAmCpN,KAAK8gB,qC,OCHvD7O,qBA/Bf,cAAoCyO,GAChCzd,SAAU,MACEoP,EAAMrS,KAAKwC,MAAX6P,EACAuO,EAAY5gB,KAAK+B,MAAjB6e,QAER,OACI,kBAACW,GAAA,EAAD,CAAUC,QAAM,EAACte,UAAU,oBAAoBue,WAAW,aAAalR,QAASvQ,KAAKghB,4BACjF,kBAACU,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CACIze,UAAU,yBACV0e,KAAK,QACLC,SAAUjB,EACVxI,MAAM,UACNzH,UAAW,EACXmR,eAAa,EACbpQ,SAAU1R,KAAKghB,8BAGvB,kBAACe,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CAAYC,QAAQ,UAAUC,QAAM,GAC/B9P,EAAE,kBAGX+P,UAA6C/P,EAAjCuO,EAAmC,mBAAvB,yB,iBC6Z7B3O,qBArbf,cAA8BpQ,IAAMC,UAChClC,YAAY4C,GACR0B,MAAM1B,GADS,KAqFnB6f,uBAAyBje,IAAW,MACxB8N,EAAWlS,KAAKwC,MAAhB0P,OACAoQ,EAAkBtiB,KAAK+B,MAAvBugB,cAER,GAAIpQ,IADgB9N,EAAZ6S,QAEJ,OAGJ,MAAMsL,EAAQjK,IAAakK,SAAStQ,GACpClS,KAAKyiB,cAAcF,EAAOD,IA9FX,KAiGnBI,uBAAyBte,IAAW,MACxB8N,EAAWlS,KAAKwC,MAAhB0P,OACAoQ,EAAkBtiB,KAAK+B,MAAvBugB,cAER,GAAIpQ,IADgB9N,EAAZ6S,QAEJ,OAGJ,MAAMsL,EAAQjK,IAAakK,SAAStQ,GACpClS,KAAKyiB,cAAcF,EAAOD,IA1GX,KA6GnBK,mBAAqBve,IAAW,MACpB8N,EAAWlS,KAAKwC,MAAhB0P,OACAoQ,EAAkBtiB,KAAK+B,MAAvBugB,cAER,GAAIpQ,IADgB9N,EAAZsT,QACeT,QACnB,OAGJ,MAAMsL,EAAQjK,IAAakK,SAAStQ,GACpClS,KAAKyiB,cAAcF,EAAOD,IAtHX,KAyHnBM,YAAc,IACH,mBAAoB9V,OA1HZ,KAmJnB5F,eAAiB,KACblH,KAAK6iB,cAAa,IApJH,KAuJnBJ,cAAgB,CAACF,EAAOD,KAAmB,MAC/BpQ,EAAWlS,KAAKwC,MAAhB0P,OAEF4M,EAAUyD,IAASA,EAAMO,mBAAqBP,EAAMO,kBAAkBhE,SAAayD,EAAM7D,UAAY6D,EAAM7D,SAASI,UAAiB,GACrIiE,EAAgBR,EAAQA,EAAMQ,cAAgB,GAC9Clc,EAAW0b,EAAQA,EAAM1b,SAAW,GACpCmc,EAAQT,EAAQA,EAAMS,MAAQ,GAC9BC,EAAMV,EAAQA,EAAMU,IAAM,GAC1BC,EAAYX,EAAQA,EAAMW,UAAY,GACtCC,EAAiBZ,EAAQA,EAAMY,eAAiB,GAEhDC,EAAatE,EAAQpK,OAAS,EAC9B2O,EAAmBN,EAAcrO,OAAS,EAC1C4O,EAAczc,EAAS6N,OAAS,EAChC6O,EAAWP,EAAMtO,OAAS,EAC1B8O,EAASP,EAAIvO,OAAS,EACtB+O,EAAeP,EAAUxO,OAAS,EAClCgP,EAAoBP,EAAezO,OAAS,IAG3B,IAAnB4N,GACqB,IAAlBA,IAAwBc,GACN,IAAlBd,IAAwBe,GACN,IAAlBf,IAAwBgB,GACN,IAAlBhB,IAAwBiB,GACN,IAAlBjB,IAAwBkB,GACN,IAAlBlB,IAAwBmB,GACN,IAAlBnB,IAAwBoB,KAEvBN,EACAd,EAAgB,EACTe,EACPf,EAAgB,EACTgB,EACPhB,EAAgB,EACTiB,EACPjB,EAAgB,EACTkB,EACPlB,EAAgB,EACTmB,EACPnB,EAAgB,EACToB,IACPpB,EAAgB,GAGpBlgB,IAAgBkG,aAAa,CACzB,QAAS,uBACT4J,SACAyR,MAAOrB,KAIftiB,KAAKyC,SAAS,CACV6f,gBACAxD,UACAiE,gBACAlc,WACAmc,QACAC,MACAC,YACAC,kBACD,KACMnjB,KAAK4iB,eAAe5iB,KAAK6iB,kBArNnB,KAyNnBe,wBAA0Bxf,IAAW,MACjByf,EAAkB7jB,KAAKwC,MAA/B0P,OACAoQ,EAAkBtiB,KAAK+B,MAAvBugB,cACApQ,EAAkB9N,EAAlB8N,OAAQqQ,EAAUne,EAAVme,MACZrQ,IAAW2R,GAEf7jB,KAAKyiB,cAAcF,EAAOD,IA/NX,KAkOnBwB,uBAAyB1f,IAAW,MACxB8N,EAAkB9N,EAAlB8N,OAAQyR,EAAUvf,EAAVuf,MACZzR,IAAWlS,KAAKwC,MAAM0P,QAE1BlS,KAAKyC,SAAS,CACV6f,cAAeqB,GAChB,KACM3jB,KAAK4iB,eAAe5iB,KAAK6iB,kBAzOnB,KA6OnBA,aAAe,CAACkB,GAAa,KAAU,MAAD,EACM/jB,KAAK+B,MAArCugB,EAD0B,EAC1BA,cAD0B,EACX0B,aACvB,IAAuB,IAAnB1B,EAAsB,OAE1B,MAEM2B,EAASjkB,KAAKkkB,WAAWlL,QAE/B,IAAImL,EAAO,KACP5c,EAAO,EACX,MAAM6c,EAAgBpkB,KAAKqkB,UAAUxY,IAAI,WACnB,IAAlByW,GAAuB8B,IAEvB7c,GADA4c,EAAOC,EAAcE,YACTC,YAGhB,MAAMC,EAAsBxkB,KAAKqkB,UAAUxY,IAAI,iBACzB,IAAlByW,GAAuBkC,IAEvBjd,GADA4c,EAAOK,EAAoBF,YACfC,YAGhB,MAAME,EAAiBzkB,KAAKqkB,UAAUxY,IAAI,YACpB,IAAlByW,GAAuBmC,IAEvBld,GADA4c,EAAOM,EAAeH,YACVC,YAGhB,MAAMG,EAAc1kB,KAAKqkB,UAAUxY,IAAI,SACjB,IAAlByW,GAAuBoC,IAEvBnd,GADA4c,EAAOO,EAAYJ,YACPC,YAGhB,MAAMI,EAAY3kB,KAAKqkB,UAAUxY,IAAI,OACf,IAAlByW,GAAuBqC,IAEvBpd,GADA4c,EAAOQ,EAAUL,YACLC,YAGhB,MAAMK,EAAkB5kB,KAAKqkB,UAAUxY,IAAI,aACrB,IAAlByW,GAAuBsC,IAEvBrd,GADA4c,EAAOS,EAAgBN,YACXC,YAGhB,MAAMM,EAAuB7kB,KAAKqkB,UAAUxY,IAAI,kBAMhD,GALsB,IAAlByW,GAAuBuC,IAEvBtd,GADA4c,EAAOU,EAAqBP,YAChBC,aAGXJ,EAAM,OAEX,MAAMW,EAAkB9kB,KAAK+kB,mBAAmB/L,QAChD,GAAI8L,EAAiB,CACjB,MAAME,EAAkBjB,EAAa,gDAAkD,KACvFe,EAAgBxd,MAAM2d,QAAtB,gBAAyC1d,EArD7B,EAqDZ,sBAAqE4c,EAAKe,YAAc,EAAxF,eAA0GF,GAG9G,GAAIb,GAAQJ,EAAW,CAAC,MACZoB,EAAanlB,KAAbmlB,SAEJA,GACAA,EAAS5jB,OAGbvB,KAAKmlB,SAAW,IAAIxlB,KAAS,IAAK,CAC9B,CACI0B,KAAM4iB,EAAOmB,WACbxkB,GAAIuF,YAAMoB,EAAO0c,EAAOoB,YAAc,EAAIlB,EAAKkB,YAAc,EAAG,EAAGpB,EAAOiB,YAAcjB,EAAOoB,aAC/F/jB,KAAMiG,GAAS0c,EAAOmB,WAAa7d,KAI3CyD,WAAW,KACFhL,KAAKmlB,UAEVnlB,KAAKmlB,SAASplB,SACf,KA5TQ,KAmUnBulB,kBAAoB,CAACjhB,EAAOnE,KACxB,GAAImE,GAA0B,IAAjBA,EAAMmd,OAAc,OADF,QAEHxhB,KAAKwC,MAAzB0P,EAFuB,EAEvBA,OAAQ3B,EAFe,EAEfA,QAEhBA,GAAWA,EAAQlM,GAEnBjC,IAAgBkG,aAAa,CACzB,QAAS,uBACT4J,SACAyR,MAAOzjB,KAzUXF,KAAKqkB,UAAY,IAAIvP,IACrB9U,KAAKkkB,WAAariB,IAAMya,YACxBtc,KAAK+kB,mBAAqBljB,IAAMya,YAEhCtc,KAAK+B,MAAQ,GAEb/B,KAAKkH,eAAiBqe,YAASvlB,KAAKkH,eAAgB,KAGxD,gCAAgC1E,EAAOT,GAGnC,GAFmBS,EAAX0P,SAEOnQ,EAAM6d,WAAY,CAC7B,MAAM2C,EAAQjK,IAAakK,SAAShgB,EAAM0P,QAEpC4M,EAAUyD,IAASA,EAAMO,mBAAqBP,EAAMO,kBAAkBhE,SAAayD,EAAM7D,UAAY6D,EAAM7D,SAASI,UAAiB,GACrIiE,EAAgBR,EAAQA,EAAMQ,cAAgB,GAC9Clc,EAAW0b,EAAQA,EAAM1b,SAAW,GACpCmc,EAAQT,EAAQA,EAAMS,MAAQ,GAC9BC,EAAMV,EAAQA,EAAMU,IAAM,GAC1BC,EAAYX,EAAQA,EAAMW,UAAY,GACtCC,EAAiBZ,EAAQA,EAAMY,eAAiB,GAEtD,IAAIb,GAAiB,EAiBrB,OAhBIxD,EAAQpK,OAAS,EACjB4N,EAAgB,EACTS,EAAcrO,OAAS,EAC9B4N,EAAgB,EACTzb,EAAS6N,OAAS,EACzB4N,EAAgB,EACTU,EAAMtO,OAAS,EACtB4N,EAAgB,EACTW,EAAIvO,OAAS,EACpB4N,EAAgB,EACTY,EAAUxO,OAAS,EAC1B4N,EAAgB,EACTa,EAAezO,OAAS,IAC/B4N,EAAgB,GAGb,CACH1C,WAAYpd,EAAM0P,OAClBoQ,gBACAxD,UACAiE,gBACAlc,WACAmc,QACAC,MACAC,YACAC,iBACAa,cAAc,GAItB,OAAO,KAGXhhB,oBACIhD,KAAKwlB,gBACLxlB,KAAK6iB,eAELvK,IAAatL,GAAG,uBAAwBhN,KAAK8jB,wBAC7CxL,IAAatL,GAAG,wBAAyBhN,KAAK4jB,yBAC9CtL,IAAatL,GAAG,mBAAoBhN,KAAK2iB,oBACzCrK,IAAatL,GAAG,uBAAwBhN,KAAK0iB,wBAC7CpK,IAAatL,GAAG,uBAAwBhN,KAAKqiB,wBAGjDzf,mBAAmBC,EAAWC,EAAWC,GACrC/C,KAAKylB,kBACLzlB,KAAKwlB,gBAGTvY,uBACIjN,KAAKylB,kBACLnN,IAAalL,IAAI,uBAAwBpN,KAAK8jB,wBAC9CxL,IAAalL,IAAI,wBAAyBpN,KAAK4jB,yBAC/CtL,IAAalL,IAAI,mBAAoBpN,KAAK2iB,oBAC1CrK,IAAalL,IAAI,uBAAwBpN,KAAK0iB,wBAC9CpK,IAAalL,IAAI,uBAAwBpN,KAAKqiB,wBA2ClDmD,gBACI,IAAKxlB,KAAK4iB,cAAe,OACzB,MAAM8C,EAAU1lB,KAAKkkB,WAAWlL,QAChC,IAAK0M,EAAS,OAEd,MAAMC,EAAW,IAAIC,eAAe5lB,KAAKkH,gBACzCye,EAASE,QAAQH,GAEjB1lB,KAAK8lB,eAAiB,CAAEH,WAAUD,WAGtCD,kBACI,IAAKzlB,KAAK4iB,cAAe,OACzB,IAAK5iB,KAAK8lB,eAAgB,OAFZ,QAIgB9lB,KAAK8lB,eAA3BH,EAJM,EAINA,SAAUD,EAJJ,EAIIA,QACbC,GACAD,GAELC,EAASI,UAAUL,GAgMvBziB,SAAU,MACEoP,EAAMrS,KAAKwC,MAAX6P,EADH,EAE8FrS,KAAK+B,MAAhGugB,EAFH,EAEGA,cAAexD,EAFlB,EAEkBA,QAASiE,EAF3B,EAE2BA,cAAelc,EAF1C,EAE0CA,SAAUmc,EAFpD,EAEoDA,MAAOC,EAF3D,EAE2DA,IAAKC,EAFhE,EAEgEA,UAAWC,EAF3E,EAE2EA,eAE1E6C,GACDlH,EAAQpK,OAAS,EAAI,EAAI,IACzBqO,EAAcrO,OAAS,EAAI,EAAI,IAC/B7N,EAAS6N,OAAS,EAAI,EAAI,IAC1BsO,EAAMtO,OAAS,EAAI,EAAI,IACvBuO,EAAIvO,OAAS,EAAI,EAAI,IACrBwO,EAAUxO,OAAS,EAAI,EAAI,IAC3ByO,EAAezO,OAAS,EAAI,EAAI,GAWrC,OARIoK,EAAQpK,OAAS,GACdqO,EAAcrO,OAAS,GACvB7N,EAAS6N,OAAS,GAClBsO,EAAMtO,OAAS,GACfuO,EAAIvO,OAAS,GACbwO,EAAUxO,OAAS,GACnByO,EAAezO,OAAS,GAM/B1U,KAAKqkB,UAAY,IAAIvP,IAEjB,yBAAK5R,UAAWkN,IAAW,OAAQ,sBAC/B,yBAAKlN,UAAU,uBACf,yBAAK+Z,IAAKjd,KAAKkkB,WAAYhhB,UAAWkN,IAAW,UAAW,CAAC,8BAA+B4V,EAAY,KACnGlH,EAAQpK,OAAS,GACd,yBACIuI,IAAKgJ,GAAKjmB,KAAKqkB,UAAU7J,IAAI,UAAWyL,GACxC/iB,UAAWkN,IAAW,SAAU,CAAC,mBAAoB4V,EAAY,GAAI,CAAE,gBAAmC,IAAlB1D,IACxFjS,YAAaQ,GAAK7Q,KAAKslB,kBAAkBzU,EAAG,IAC5C,8BAAOwB,EAAE,kBAGhB0Q,EAAcrO,OAAS,GACpB,yBACIuI,IAAKgJ,GAAKjmB,KAAKqkB,UAAU7J,IAAI,gBAAiByL,GAC9C/iB,UAAWkN,IAAW,SAAU,CAAC,mBAAoB4V,EAAY,GAAI,CAAE,gBAAmC,IAAlB1D,IACxFjS,YAAaQ,GAAK7Q,KAAKslB,kBAAkBzU,EAAG,IAC5C,8BAAOwB,EAAE,qBAGhBxL,EAAS6N,OAAS,GACf,yBACIuI,IAAKgJ,GAAKjmB,KAAKqkB,UAAU7J,IAAI,WAAYyL,GACzC/iB,UAAWkN,IAAW,SAAU,CAAC,mBAAoB4V,EAAY,GAAI,CAAE,gBAAmC,IAAlB1D,IACxFjS,YAAaQ,GAAK7Q,KAAKslB,kBAAkBzU,EAAG,IAC5C,8BAAOwB,EAAE,qBAGhB2Q,EAAMtO,OAAS,GACZ,yBACIuI,IAAKgJ,GAAKjmB,KAAKqkB,UAAU7J,IAAI,QAASyL,GACtC/iB,UAAWkN,IAAW,SAAU,CAAC,mBAAoB4V,EAAY,GAAI,CAAE,gBAAmC,IAAlB1D,IACxFjS,YAAaQ,GAAK7Q,KAAKslB,kBAAkBzU,EAAG,IAC5C,8BAAOwB,EAAE,qBAGhB4Q,EAAIvO,OAAS,GACV,yBACIuI,IAAKgJ,GAAKjmB,KAAKqkB,UAAU7J,IAAI,MAAOyL,GACpC/iB,UAAWkN,IAAW,SAAU,CAAC,mBAAoB4V,EAAY,GAAI,CAAE,gBAAmC,IAAlB1D,IACxFjS,YAAaQ,GAAK7Q,KAAKslB,kBAAkBzU,EAAG,IAC5C,8BAAOwB,EAAE,qBAGhB6Q,EAAUxO,OAAS,GAChB,yBACIuI,IAAKgJ,GAAKjmB,KAAKqkB,UAAU7J,IAAI,YAAayL,GAC1C/iB,UAAWkN,IAAW,SAAU,CAAC,mBAAoB4V,EAAY,GAAI,CAAE,gBAAmC,IAAlB1D,IACxFjS,YAAaQ,GAAK7Q,KAAKslB,kBAAkBzU,EAAG,IAC5C,8BAAOwB,EAAE,qBAGhB8Q,EAAezO,OAAS,GACrB,yBACIuI,IAAKgJ,GAAKjmB,KAAKqkB,UAAU7J,IAAI,iBAAkByL,GAC/C/iB,UAAWkN,IAAW,SAAU,CAAC,mBAAoB4V,EAAY,GAAI,CAAE,gBAAmC,IAAlB1D,IACxFjS,YAAaQ,GAAK7Q,KAAKslB,kBAAkBzU,EAAG,IAC5C,8BAAOwB,EAAE,sBAGjB,yBAAK4K,IAAKjd,KAAK+kB,mBAAoB7hB,UAAU,wBAhE9C,Q,4DC/WJM,gBACX,0BAAMC,EAAE,suBACR,UCHWD,gBACX,0BAAMC,EAAE,gmCACR,S,OCqGWwO,qBA1Ff,cAA0BpQ,IAAMC,UAAW,eAAD,oBACtCokB,kBAAoB7hB,IAAU,MAAD,EACcrE,KAAKwC,MAApC0P,EADiB,EACjBA,OAAQiU,EADS,EACTA,WAEhBrJ,EAHyB,EACEA,SAEnBzY,GAER+hB,YAASlU,EAAQiU,IANiB,KAStCE,cAAgBhiB,IAAU,MAAD,EACkBrE,KAAKwC,MAApC0P,EADa,EACbA,OAAQiU,EADK,EACLA,WAEhBrJ,EAHqB,EACMA,SAEnBzY,GAERiiB,YAAgBpU,EAAQ,CAACiU,KAdS,KAiBtCI,aAAeliB,IAAU,MAAD,EACmBrE,KAAKwC,MAApC0P,EADY,EACZA,OAAQiU,EADI,EACJA,WAEhBrJ,EAHoB,EACOA,SAEnBzY,GAERmiB,YAAetU,EAAQ,CAACiU,KAG5BljB,SAAU,MAAD,EAC4EjD,KAAKwC,MAA9E6P,EADH,EACGA,EAAGH,EADN,EACMA,OAAQiU,EADd,EACcA,UAAWzJ,EADzB,EACyBA,KAAMI,EAD/B,EAC+BA,QAAS2J,EADxC,EACwCA,eAAgBC,EADxD,EACwDA,gBAEvDhP,EAAUY,IAAazM,IAAIqG,EAAQiU,GACzC,IAAKzO,EAAS,OAAO,KAJhB,MAMGa,EAAiFb,EAAjFa,iBAAkBoO,EAA+DjP,EAA/DiP,6BAA8BC,EAAiClP,EAAjCkP,6BAExD,OACI,kBAACC,GAAA,EAAD,CACInK,KAAMA,EACNI,QAASA,EACTgK,gBAAgB,iBAChBL,eAAgBA,EAChBM,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QAEhB5W,YAAaQ,GAAKA,EAAE5K,kBACpBsK,QAASM,GAAKA,EAAE5K,mBAChB,kBAACkhB,GAAA,EAAD,KACKT,GACG,kBAACU,GAAA,EAAD,CAAU7W,QAASvQ,KAAKkmB,mBACpB,kBAACxE,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACK,GAAA,EAAD,CAAcC,QAAS3P,EAAE,kBAGhCkG,GACG,kBAAC6O,GAAA,EAAD,CAAU7W,QAASvQ,KAAKqmB,eACpB,kBAAC3E,GAAA,EAAD,KACI,kBAAC2F,GAAD,OAEJ,kBAACtF,GAAA,EAAD,CAAcC,QAAS3P,EAAE,eAG/BsU,GAAgCC,IAC9B,kBAACQ,GAAA,EAAD,CAAUhP,MAAM,YAAY7H,QAASvQ,KAAKumB,cACtC,kBAAC7E,GAAA,EAAD,KACI,kBAAC4F,GAAD,OAEJ,kBAACvF,GAAA,EAAD,CAAcC,QAAS3P,EAAE,kB,gBC5ErD,MAAMkV,WAAoB1lB,IAAMC,UAAW,eAAD,iCACtCC,MAAQ,GAD8B,KAkEtCylB,wBAA0BpjB,IAAW,MAAD,EACCpE,KAAK+B,MAA9B0lB,EADwB,EACxBA,UAAWC,EADa,EACbA,UACX7e,EAAWzE,EAAXyE,OAEJ4e,GAAaA,EAAUhP,OAASgP,EAAUhP,MAAMvY,KAAO2I,EACvD7I,KAAKya,cACEiN,GAAaA,EAAUjP,OAASiP,EAAUjP,MAAMvY,KAAO2I,GAC9D7I,KAAKya,eAzEyB,KA6EtCkN,sBA7EsC,sCA6Ed,WAAMtjB,GAAN,iBAAAqO,EAAA,qDAChBrO,IACAA,EAAM6B,iBACN7B,EAAM4B,mBAEc,EAAKlE,MAArB6lB,YAGJ,EAAKnlB,SAAS,CAAEmlB,aAAa,KAEvBrgB,EAAOlD,EAAM4F,QACbxC,EAAMpD,EAAM6F,QAElB,EAAKzH,SAAS,CACVmlB,aAAa,EACbrgB,OACAE,SAhBY,yCA7Ec,2DAkGtCogB,uBAAyBxjB,IACjBA,GACAA,EAAM4B,kBAGVjG,KAAKyC,SAAS,CAAEmlB,aAAa,KApGjC,gCAAgCplB,EAAOT,GAAQ,MACnC0W,EAA+BjW,EAA/BiW,MAAOqB,EAAwBtX,EAAxBsX,KAAMgO,EAAkBtlB,EAAlBslB,cAErB,OAAIrP,IADkB1W,EAAdgmB,UAEG,CACHA,UAAWtP,EAEXmP,aAAa,EACbrgB,KAAM,EACNE,IAAK,EAELggB,UAAWO,YAAQvP,EAAMC,MAAOoB,GAChC4N,UAAWM,YAAQvP,EAAMC,MAAOoP,GAChCG,cAAexP,EAAMwP,eAItB,KAGXrK,sBAAsBC,EAAWC,EAAWoK,GAAc,MAAD,EACCloB,KAAKwC,MAAnD0P,EAD6C,EAC7CA,OAAQiU,EADqC,EACrCA,UAAW1N,EAD0B,EAC1BA,MAAOiO,EADmB,EACnBA,gBADmB,EAElB1mB,KAAK+B,MAAhC6lB,EAF6C,EAE7CA,YAAargB,EAFgC,EAEhCA,KAAME,EAF0B,EAE1BA,IAE3B,OAAIyK,IAAW2L,EAAU3L,SAIrBiU,IAActI,EAAUsI,YAIxB1N,IAAUoF,EAAUpF,QAIpBiO,IAAoB7I,EAAU6I,kBAI9BkB,IAAgB9J,EAAU8J,cAI1BrgB,IAASuW,EAAUvW,MAInBE,IAAQqW,EAAUrW,SAO1BzE,oBACI4I,IAAUoB,GAAG,wBAAyBhN,KAAKwnB,yBAG/Cva,uBACIrB,IAAUwB,IAAI,wBAAyBpN,KAAKwnB,yBA2ChDvkB,SAAU,MAAD,EAC4DjD,KAAKwC,MAA9D0P,EADH,EACGA,OAAQiU,EADX,EACWA,UAAWgC,EADtB,EACsBA,UAAWzB,EADjC,EACiCA,gBAAiBpf,EADlD,EACkDA,MADlD,EAEmEtH,KAAK+B,MAArEkmB,EAFH,EAEGA,cAAeP,EAFlB,EAEkBA,UAAWD,EAF7B,EAE6BA,UAAWG,EAFxC,EAEwCA,YAAargB,EAFrD,EAEqDA,KAAME,EAF3D,EAE2DA,IAEhE,IAAKggB,EAAW,OAAO,KAEvB,MAAMW,EAAUH,EAAgB,2BAA6BA,EAAcI,KAAO,KAC5EC,EAAWC,YAAOb,EAAYA,EAAUjP,MAAQ,MAChD+P,EAAMD,YAAOd,EAAUhP,OACX2P,GAAWK,aAAmBf,GAEhD,OACI,oCACI,yBAAKxkB,UAAU,eAAeoE,MAAOA,EAAOiJ,QAAS4X,EAAWO,cAAe1oB,KAAK2nB,uBAChF,yBAAKzkB,UAAU,uBAAuBoE,MAAO,CAAEqhB,gBAAgB,OAAD,OAASL,GAAYF,EAArB,KAAiCQ,eAAgB,UAC1GJ,IAAQF,GACL,yBAAKplB,UAAU,4BAA4BoE,MAAO,CAAEqhB,gBAAgB,OAAD,OAASH,EAAT,UAI/E,kBAAC,GAAD,CACItW,OAAQA,EACRiU,UAAWA,EACXM,eAAgB,CAAEhf,MAAKF,QACvBmV,KAAMkL,EACNlB,gBAAiBA,EACjB5J,QAAS9c,KAAK6nB,2BAmBlCN,GAAYnJ,aAAe,CACvBtE,KAAM+O,IACNf,cAAegB,KAGJvB,U,gBChDAtV,qBA7Gf,cAA6BpQ,IAAMC,UAAW,eAAD,iCACzCC,MAAQ,CACJ6lB,aAAa,EACbrgB,KAAM,EACNE,IAAK,GAJgC,KAsCzCkgB,sBAtCyC,sCAsCjB,WAAMtjB,GAAN,iBAAAqO,EAAA,qDAChBrO,IACAA,EAAM6B,iBACN7B,EAAM4B,mBAEc,EAAKlE,MAArB6lB,YAGJ,EAAKnlB,SAAS,CAAEmlB,aAAa,KAEvBrgB,EAAOlD,EAAM4F,QACbxC,EAAMpD,EAAM6F,QAElB,EAAKzH,SAAS,CACVmlB,aAAa,EACbrgB,OACAE,SAhBY,yCAtCiB,2DA2DzCogB,uBAAyBxjB,IACjBA,GACAA,EAAM4B,kBAGVjG,KAAKyC,SAAS,CAAEmlB,aAAa,KAzDjChK,sBAAsBC,EAAWC,EAAWoK,GAAc,MAAD,EACNloB,KAAKwC,MAA5C0P,EAD6C,EAC7CA,OAAQiU,EADqC,EACrCA,UAAWO,EAD0B,EAC1BA,gBAD0B,EAElB1mB,KAAK+B,MAAhC6lB,EAF6C,EAE7CA,YAAargB,EAFgC,EAEhCA,KAAME,EAF0B,EAE1BA,IAE3B,OAAIyK,IAAW2L,EAAU3L,SAIrBiU,IAActI,EAAUsI,YAIxBO,IAAoB7I,EAAU6I,kBAI9BkB,IAAgB9J,EAAU8J,cAI1BrgB,IAASuW,EAAUvW,MAInBE,IAAQqW,EAAUrW,QAoC1BxE,SAAU,MAAD,EACgDjD,KAAKwC,MAAlD0P,EADH,EACGA,OAAQiU,EADX,EACWA,UAAWO,EADtB,EACsBA,gBAAiBqC,EADvC,EACuCA,KADvC,EAE8B/oB,KAAK+B,MAAhC6lB,EAFH,EAEGA,YAAargB,EAFhB,EAEgBA,KAAME,EAFtB,EAEsBA,IAErBiQ,EAAUY,IAAazM,IAAIqG,EAAQiU,GACzC,IAAKzO,EAAS,OAAO,KALhB,MAOGsR,EAAStR,EAATsR,KAEFC,EAAa,IAAIC,KAAY,IAAPF,GAAaG,mBAAmB,CAACJ,EAAKK,UAAW,CACzEC,IAAK,UACLC,MAAO,QACPC,KAAM,UACNC,KAAM,UACNC,OAAQ,UACRC,QAAQ,IAGZ,OACI,oCACI,yBAAKxmB,UAAU,kBAAkBwlB,cAAe1oB,KAAK2nB,uBAChDnF,aAAS9K,EAAS,IAAMyQ,aAAUjW,EAAQiU,GAAW,GAAO,CAAE6C,KAAMC,KAEzE,kBAAC,GAAD,CACI/W,OAAQA,EACRiU,UAAWA,EACXM,eAAgB,CAAEhf,MAAKF,QACvBmV,KAAMkL,EACNlB,gBAAiBA,EACjB5J,QAAS9c,KAAK6nB,6B,gBCrBnB8B,OA1Ef,cAA6B9nB,IAAMC,UAAW,eAAD,oBAqBzC0lB,wBAA0BpjB,IAAW,MACzB4V,EAAcha,KAAKwC,MAAnBwX,UACR,IAAKA,EAAW,OAEhB,MAAMrO,EAAOqO,EAAUrO,MAAQqO,EAAUvB,MACpC9M,GAEDvH,EAAOyE,SAAW8C,EAAKzL,IACvBF,KAAKya,eA5BbzX,oBACI4I,IAAUoB,GAAG,qCAAsChN,KAAKwnB,yBACxD5b,IAAUoB,GAAG,iCAAkChN,KAAKwnB,yBACpD5b,IAAUoB,GAAG,oCAAqChN,KAAKwnB,yBACvD5b,IAAUoB,GAAG,wBAAyBhN,KAAKwnB,yBAC3C5b,IAAUoB,GAAG,mCAAoChN,KAAKwnB,yBACtD5b,IAAUoB,GAAG,iCAAkChN,KAAKwnB,yBACpD5b,IAAUoB,GAAG,qCAAsChN,KAAKwnB,yBAG5Dva,uBACIrB,IAAUwB,IAAI,qCAAsCpN,KAAKwnB,yBACzD5b,IAAUwB,IAAI,iCAAkCpN,KAAKwnB,yBACrD5b,IAAUwB,IAAI,oCAAqCpN,KAAKwnB,yBACxD5b,IAAUwB,IAAI,wBAAyBpN,KAAKwnB,yBAC5C5b,IAAUwB,IAAI,mCAAoCpN,KAAKwnB,yBACvD5b,IAAUwB,IAAI,iCAAkCpN,KAAKwnB,yBACrD5b,IAAUwB,IAAI,qCAAsCpN,KAAKwnB,yBAe7DvkB,SAAU,MAAD,EAC0DjD,KAAKwC,MAA5D0P,EADH,EACGA,OAAQiU,EADX,EACWA,UAAWnM,EADtB,EACsBA,UAAWiO,EADjC,EACiCA,cAAe9J,EADhD,EACgDA,MAE/CiK,EAAUH,EAAgB,2BAA6BA,EAAcI,KAAO,KAC5EG,EAAMD,YAAOvO,EAAYA,EAAUrO,MAAQqO,EAAUvB,MAAQ,MAC7DmR,GAAcpB,GAAOJ,GAAYK,aAAmBzO,EAAW6P,MAC/DC,EAAcC,aAAa7X,EAAQiU,GACnC6D,EAASC,QAAQzB,GAAOJ,GAExB8B,EAAS,qBAAkBnpB,KAAKopB,IAAIhM,EAAMiM,WAAW,IAAM,EAAK,GAEtE,OACI,yBAAKlnB,UAAWkN,IAAW,mBAAoB,CAAE,CAAC8Z,IAAaF,KAC1DA,EACG,yBACI9mB,UAAWkN,IACP,yBACA,CAAE,+BAAgC0Z,GAClC,CAAE,gBAAiBtB,GAAOoB,GAC1B,CAAE,sBAAuBpB,GAAOJ,GAAWwB,IAE/CS,WAAW,EACX7B,IAAKA,GAAOJ,EACZkC,IAAI,KAGR,8BAAOnM,M,iBCzD3B,MAAMoM,WAAmB1oB,IAAMC,UAAW,eAAD,iCACrCC,MAAQ,CACJ6lB,aAAa,EACbrgB,KAAM,EACNE,IAAK,GAJ4B,KA8CrCkgB,sBA9CqC,sCA8Cb,WAAMtjB,GAAN,iBAAAqO,EAAA,qDAChBrO,IACAA,EAAM6B,iBACN7B,EAAM4B,mBAEc,EAAKlE,MAArB6lB,YAGJ,EAAKnlB,SAAS,CAAEmlB,aAAa,KAEvBrgB,EAAOlD,EAAM4F,QACbxC,EAAMpD,EAAM6F,QAElB,EAAKzH,SAAS,CACVmlB,aAAa,EACbrgB,OACAE,SAhBY,yCA9Ca,2DAmErCogB,uBAAyBxjB,IACjBA,GACAA,EAAM4B,kBAGVjG,KAAKyC,SAAS,CAAEmlB,aAAa,KAjEjChK,sBAAsBC,EAAWC,EAAWoK,GAAc,MAAD,EACYloB,KAAKwC,MAA9D0P,EAD6C,EAC7CA,OAAQiU,EADqC,EACrCA,UAAWqE,EAD0B,EAC1BA,QAASnR,EADiB,EACjBA,QAASqN,EADQ,EACRA,gBADQ,EAElB1mB,KAAK+B,MAAhC6lB,EAF6C,EAE7CA,YAAargB,EAFgC,EAEhCA,KAAME,EAF0B,EAE1BA,IAE3B,OAAIyK,IAAW2L,EAAU3L,SAIrBiU,IAActI,EAAUsI,YAIxBqE,IAAY3M,EAAU2M,UAItBnR,IAAYwE,EAAUxE,UAItBqN,IAAoB7I,EAAU6I,kBAI9BkB,IAAgB9J,EAAU8J,cAI1BrgB,IAASuW,EAAUvW,MAInBE,IAAQqW,EAAUrW,UAoC1B,qBAAqBgjB,GACjB,IAAKA,EAAQ,OAAO,EADK,MAGjBjM,EAASiM,EAATjM,KACR,QAAKA,IAGiB,sBAAlBA,EAAK,UACa,0BAAlBA,EAAK,UACa,+BAAlBA,EAAK,UAIbkM,gBAAgBzH,GACZ,IACIA,EAAMA,EAAI0H,WAAW,QAAU1H,EAAM,UAAYA,EACjD,MAAM2H,EAAaC,UAAU5H,GAEvB6H,EAAW,IAAIC,IAAIH,GAAYE,SAASE,MAAM,KAC9CC,EAASH,EAASpW,QAAU,EAAIoW,EAASA,EAASpW,OAAS,GAAK,IAAIqW,IAAIH,GAAYE,SAE1F,OAAOI,KAASC,UAAUF,GAC5B,MAAOlY,GACLD,QAAQC,MAAM,QAAUkQ,EAAM,KAAOlQ,GAGzC,OAAO,KAGX9P,SAAU,MAAD,EACmDjD,KAAKwC,MAArD0P,EADH,EACGA,OAAQiU,EADX,EACWA,UAAWqE,EADtB,EACsBA,QAAS9D,EAD/B,EAC+BA,gBAD/B,EAE8B1mB,KAAK+B,MAAhC6lB,EAFH,EAEGA,YAAargB,EAFhB,EAEgBA,KAAME,EAFtB,EAEsBA,IAErBiQ,EAAUY,IAAazM,IAAIqG,EAAQiU,GACzC,IAAKzO,EAAS,OAAO,KAErB,IAAIsC,EAAY,KACZiO,EAAgB,KAChBzP,EAAU,KATT,EAUoHgS,GAAW,CAChIrM,MAAO,GACPiN,YAAa,CACT,QAAS,gBACT/d,KAAM,GACNiM,SAAU,IAEdb,MAAO,KACP4S,UAAW,KACXrI,MAAO,KACPnc,SAAU,KACV1E,QAAS,KACT0C,MAAO,KACPymB,WAAY,KACZrI,IAAK,IAdUmI,GAVd,EAUCG,YAVD,EAUcH,aAAa3S,EAV3B,EAU2BA,MAAO0F,EAVlC,EAUkCA,MAAO8E,EAVzC,EAUyCA,IAAKoI,EAV9C,EAU8CA,UAAWrI,EAVzD,EAUyDA,MAAOnc,EAVhE,EAUgEA,SAAU1E,EAV1E,EAU0EA,QAAS0C,EAVnF,EAUmFA,MAAmB2mB,EAVtG,EAU0FF,WAiB3FD,GACApD,EAAgBoD,EAAUpD,cAC1BjO,EAAYqR,EAAUrR,WACfgJ,GACPiF,EAAgBjF,EAAMyI,0BACtBzR,EAAYgJ,EAAM0I,uBACX7kB,GACPohB,EAAgBphB,EAASohB,cACzBjO,EAAYnT,EAASmT,WACd7X,GACP8lB,EAAgB9lB,EAAQ8lB,cACxBjO,EAAY7X,EAAQ6X,WACbnV,GACPojB,EAAgBpjB,EAAMojB,cACtBjO,EAAYnV,EAAMmV,WACXwR,IACPvD,EAAgBuD,EAAUvD,cAC1BjO,EAAYwR,EAAUxR,WAGrBA,GAAciO,IAAiBxP,IAChCwP,EAAgBxP,EAAMwP,cACtBjO,EAAY2R,YAAalT,EAAMC,MAAOmQ,MAjDrC,MAoDmBnR,EAAQc,QAA1BnL,EApDD,EAoDCA,KAAMgM,EApDP,EAoDOA,QAEZ,GADAhM,EAAOA,GAAQgM,EACL,CAAC,MACCC,EAAajM,EAAbiM,SACR,GAAIA,GAAYA,EAAS5E,OAAS,EAAG,CACjC,MAAMkX,EAAoB,GACpBC,EAAcvS,EAASiC,OAAOgP,GAAWuB,eACzCC,EAAYF,EAAYnX,OAAS,GAAKrH,EAAKA,KAAKqH,OAASkX,EACzDI,EAAkC,IAApB1S,EAAS5E,QAAuC,IAAvB4E,EAAS,GAAG2S,QAAgB3S,EAAS,GAAG5E,SAAWrH,EAAKA,KAAKqH,OAEpGwX,EAAsBL,EACvBtQ,OAAO5a,IACJ,IAAIwrB,EAAaC,aAAU/e,EAAKA,KAAM1M,EAAEsrB,OAAQtrB,EAAEsrB,OAAStrB,EAAE+T,QAAQqG,OAGrE,OAFAoR,EAAaA,EAAWvmB,QAAQ,UAAU,KAExB8O,OAAS,IAG7B2X,EAAQH,EAAoB7V,IAAI,CAAC1V,EAAGqU,KAClC,MAAMmX,EAAaC,aAAU/e,EAAKA,KAAM1M,EAAEsrB,OAAQtrB,EAAEsrB,OAAStrB,EAAE+T,QAC/DuO,EAAMkJ,EACN,IAAIG,GAAO,EAEX,OAAQ3rB,EAAE6d,KAAK,UACX,IAAK,wBAAyB,CAAC,MACd+N,EAAY5rB,EAAE6d,KAAnByE,IACJsJ,IACAtJ,EAAMsJ,GAEV,MAEJ,IAAK,oBACD,MAEJ,IAAK,6BACDD,GAAO,EAMf,OAFAnO,EAAQA,GAASne,KAAK0qB,gBAAgBzH,IAAQ,IAG1C,kBAACuJ,GAAA,EAAD,CAAUjoB,IAAKyQ,EAAG9R,UAAU,kBAAkB+f,IAAKA,EAAKqJ,KAAMA,GACzDH,KAKjB,GAAIJ,EAAW,CACX,IAAItoB,GAAKyoB,EAAoBxX,OAAS,GAAKwX,EAAoB,GAAGD,OAAS,EAAI5e,EAAKA,KAAK+e,UAAU,EAAGF,EAAoB,GAAGD,QAAU5e,EAAKA,OAAS+d,EAAY/d,MAAQ,GACzK5J,EAAIA,EAAEsX,OACNvC,EACI,oCACK/U,IAAMuoB,GAAe,yBAAK9oB,UAAU,wBAAwBO,GAC7D,6BAAM4oB,QAEX,CACH,IAAI5oB,EAAI2nB,EAAY/d,MAAQ,GAC5B5J,EAAIA,EAAEsX,OACNvC,EACI,oCACK/U,GAAK,yBAAKP,UAAU,wBAAwBO,GAC7C,yBAAKP,UAAU,oBAAoBupB,aAAiBpf,EAAM1M,GAAKA,EAAG,CAAEmrB,cAAevB,GAAWuB,kBAItGtB,IACArM,EAAQA,GAASne,KAAK0qB,gBAAgBzH,KAKlD,OACI,oCACI,yBAAK/f,UAAU,cAAcwlB,cAAe1oB,KAAK2nB,uBAC7C,kBAAC,GAAD,CACIzV,OAAQA,EACRiU,UAAWA,EACX8B,cAAeA,EACfjO,UAAWA,EACXmE,MAAOuO,YAAe1sB,KAAK0qB,gBAAgBzH,MAE/C,yBAAK/f,UAAU,uBACVib,GAAS,yBAAKjb,UAAU,kBAAkBib,GAC1C3F,IAGT,kBAAC,GAAD,CACItG,OAAQA,EACRiU,UAAWA,EACXM,eAAgB,CAAEhf,MAAKF,QACvBmV,KAAMkL,EACNlB,gBAAiBA,EACjB5J,QAAS9c,KAAK6nB,2BAgBnB0C,U,8CCtIAtY,qBApIf,cAA8BpQ,IAAMC,UAAW,eAAD,iCAC1CC,MAAQ,CACJ6lB,aAAa,EACbrgB,KAAM,EACNE,IAAK,GAJiC,KA0C1CkgB,sBA1C0C,sCA0ClB,WAAMtjB,GAAN,iBAAAqO,EAAA,qDAChBrO,IACAA,EAAM6B,iBACN7B,EAAM4B,mBAEc,EAAKlE,MAArB6lB,YAGJ,EAAKnlB,SAAS,CAAEmlB,aAAa,KAEvBrgB,EAAOlD,EAAM4F,QACbxC,EAAMpD,EAAM6F,QAElB,EAAKzH,SAAS,CACVmlB,aAAa,EACbrgB,OACAE,SAhBY,yCA1CkB,2DA+D1CogB,uBAAyBxjB,IACjBA,GACAA,EAAM4B,kBAGVjG,KAAKyC,SAAS,CAAEmlB,aAAa,KA7DjChK,sBAAsBC,EAAWC,EAAWoK,GAAc,MAAD,EACKloB,KAAKwC,MAAvD0P,EAD6C,EAC7CA,OAAQiU,EADqC,EACrCA,UAAWjD,EAD0B,EAC1BA,UAAWwD,EADe,EACfA,gBADe,EAElB1mB,KAAK+B,MAAhC6lB,EAF6C,EAE7CA,YAAargB,EAFgC,EAEhCA,KAAME,EAF0B,EAE1BA,IAE3B,OAAIyK,IAAW2L,EAAU3L,SAIrBiU,IAActI,EAAUsI,YAIxBjD,IAAcrF,EAAUqF,YAIxBwD,IAAoB7I,EAAU6I,kBAI9BkB,IAAgB9J,EAAU8J,cAI1BrgB,IAASuW,EAAUvW,MAInBE,IAAQqW,EAAUrW,SAoC1BxE,SAAU,MAAD,EACsEjD,KAAKwC,MAAxE0P,EADH,EACGA,OAAQ6W,EADX,EACWA,KAAM5C,EADjB,EACiBA,UAAWjD,EAD5B,EAC4BA,UAAWiF,EADvC,EACuCA,UAAWzB,EADlD,EACkDA,gBADlD,EAE8B1mB,KAAK+B,MAAhC6lB,EAFH,EAEGA,YAAargB,EAFhB,EAEgBA,KAAME,EAFtB,EAEsBA,IAErBiQ,EAAUY,IAAazM,IAAIqG,EAAQiU,GACzC,IAAKzO,EAAS,OAAO,KAErB,IAAKwL,EAAW,OAAO,KAPlB,MASG8F,EAAiBtR,EAAjBsR,KAAM2D,EAAWjV,EAAXiV,OACR1D,EAAa,IAAIC,KAAY,IAAPF,GAAaG,mBAAmB,CAACJ,EAAKK,UAAW,CACzEC,IAAK,UACLC,MAAO,QACPC,KAAM,UACNC,KAAM,UACNC,OAAQ,UACRC,QAAQ,IAGJ7pB,EAA0BqjB,EAA1BrjB,SAAiB8L,EAASuX,EAAhB0J,MAElB,OACI,oCACI,yBAAK1pB,UAAU,oBAAoBwlB,cAAe1oB,KAAK2nB,uBACnD,kBAACkF,GAAA,EAAD,CAAe3a,OAAQA,EAAQiU,UAAWA,EAAWxa,KAAMA,EAAMwc,UAAWA,IAC5E,yBAAKjlB,UAAU,sBACX,yBAAKA,UAAU,kBAAiB,kBAAC4pB,GAAA,EAAD,CAAeH,OAAQA,EAAQxG,UAAWA,KAC1E,yBAAKjjB,UAAU,mBACX,kBAAC6pB,GAAA,EAAD,CACI7a,OAAQA,EACRiU,UAAWA,EACXtmB,SAAUA,EACV8L,KAAMA,EACNqd,KAAMC,IAEV,kBAAC+D,GAAA,EAAD,CAAa9a,OAAQA,EAAQiU,UAAWA,EAAW8G,KAAM,kBAIrE,kBAAC,GAAD,CACI/a,OAAQA,EACRiU,UAAWA,EACXM,eAAgB,CAAEhf,MAAKF,QACvBmV,KAAMkL,EACNlB,gBAAiBA,EACjB5J,QAAS9c,KAAK6nB,6B,OCpHlC,MAAMqF,WAAoBrrB,IAAMC,UAAW,eAAD,iCACtCC,MAAQ,CACJ6lB,aAAa,EACbrgB,KAAM,EACNE,IAAK,GAJ6B,KAkDtC0lB,iCAAmC/oB,IAAW,MAClC4V,EAAcha,KAAKwC,MAAMqC,MAAzBmV,UACAnR,EAAWzE,EAAXyE,OAER,IAAKmR,EAAW,OAJyB,MAMjCrO,EAASqO,EAATrO,KACJA,GAAQA,EAAKzL,KAAO2I,GACpB7I,KAAKya,eA1DyB,KA8DtCkN,sBA9DsC,sCA8Dd,WAAMtjB,GAAN,iBAAAqO,EAAA,qDAChBrO,IACAA,EAAM6B,iBACN7B,EAAM4B,mBAEc,EAAKlE,MAArB6lB,YAGJ,EAAKnlB,SAAS,CAAEmlB,aAAa,KAEvBrgB,EAAOlD,EAAM4F,QACbxC,EAAMpD,EAAM6F,QAElB,EAAKzH,SAAS,CACVmlB,aAAa,EACbrgB,OACAE,SAhBY,yCA9Dc,2DAmFtCogB,uBAAyBxjB,IACjBA,GACAA,EAAM4B,kBAGVjG,KAAKyC,SAAS,CAAEmlB,aAAa,KAjFjC5kB,oBACI4I,IAAUoB,GAAG,iCAAkChN,KAAKmtB,kCAGxDlgB,uBACIrB,IAAUwB,IAAI,iCAAkCpN,KAAKmtB,kCAGzDvP,sBAAsBC,EAAWC,EAAWoK,GAAc,MAAD,EACCloB,KAAKwC,MAAnD0P,EAD6C,EAC7CA,OAAQiU,EADqC,EACrCA,UAAWthB,EAD0B,EAC1BA,MAAO6hB,EADmB,EACnBA,gBADmB,EAElB1mB,KAAK+B,MAAhC6lB,EAF6C,EAE7CA,YAAargB,EAFgC,EAEhCA,KAAME,EAF0B,EAE1BA,IAE3B,OAAIyK,IAAW2L,EAAU3L,SAIrBiU,IAActI,EAAUsI,YAIxBthB,IAAUgZ,EAAUhZ,QAIpB6hB,IAAoB7I,EAAU6I,kBAI9BkB,IAAgB9J,EAAU8J,cAI1BrgB,IAASuW,EAAUvW,MAInBE,IAAQqW,EAAUrW,SAgD1BxE,SAAU,MAAD,EAC4DjD,KAAKwC,MAA9D0P,EADH,EACGA,OAAQiU,EADX,EACWA,UAAWgC,EADtB,EACsBA,UAAW7gB,EADjC,EACiCA,MAAOof,EADxC,EACwCA,gBADxC,EAE0C1mB,KAAKwC,MAAMqC,MAAlDojB,EAFH,EAEGA,cAAejO,EAFlB,EAEkBA,UAAWna,EAF7B,EAE6BA,SAF7B,EAG8BG,KAAK+B,MAAhC6lB,EAHH,EAGGA,YAAargB,EAHhB,EAGgBA,KAAME,EAHtB,EAGsBA,IAErB2gB,EAAUH,EAAgB,2BAA6BA,EAAcI,KAAO,KAC5EC,EAAWC,YAAOvO,EAAYA,EAAUrO,KAAO,MAC/Cie,EAAYtB,EAAWG,aAAmBzO,GAAaiQ,QAAQ7B,GAErE,OACI,oCACI,yBAAKllB,UAAU,eAAeoE,MAAOA,EAAOiJ,QAAS4X,EAAWO,cAAe1oB,KAAK2nB,uBAChF,yBAAKzkB,UAAU,wBACX,yBACIA,UAAWkN,IAAW,uBAAwB,CAC1C,gBAAiBwZ,EACjB,sBAAuBtB,GAAYsB,IAEvCtiB,MAAO,CAAEqhB,gBAAgB,OAAD,OAASL,GAAYF,EAArB,QAE5B,yBAAKllB,UAAU,qBAAqB4M,YAAkBjQ,MAG9D,kBAAC,GAAD,CACIqS,OAAQA,EACRiU,UAAWA,EACXM,eAAgB,CAAEhf,MAAKF,QACvBmV,KAAMkL,EACNlB,gBAAiBA,EACjB5J,QAAS9c,KAAK6nB,2BAmBlCqF,GAAY9O,aAAe,CACvBtE,KAAM+O,IACNf,cAAegB,KAGJoE,U,+jBCvIf,MAAME,GAAgB,EAEtB,MAAMC,WAA2BxrB,IAAMC,UACnClC,YAAY4C,GAAQ,IAAD,EACf0B,MAAM1B,GADS,YA2YnB6f,uBAAyBje,IAAW,MACxB6S,EAAwB7S,EAAxB6S,QAASC,EAAe9S,EAAf8S,WACThF,EAAWlS,KAAKwC,MAAhB0P,OAER,GAAIA,IAAW+E,EAAS,OAJO,QAMEjX,KAAK+B,MAA9BurB,EANuB,EAMvBA,MAAOhL,EANgB,EAMhBA,cACf,IAAKgL,EAAMC,KAAK5sB,GAAKA,EAAET,KAAOgX,GAAa,OAE3C,MAAMqL,EAAQjK,IAAakK,SAAStQ,GACpClS,KAAKyiB,cAAcF,EAAOD,IArZX,KAwZnBpb,eAAiB7C,IAAU,MAAD,EACOrE,KAAK+B,MAA1BurB,EADc,EACdA,MAAOE,EADO,EACPA,UAEEC,EAASztB,KAAK0tB,QAAvB1U,QACR,IAAKyU,EAAM,OAEX,MAAME,EAAYF,EAAKE,UACjBC,EAAiBH,EAAKI,aAAaC,aAEnCC,EAAY/tB,KAAKguB,aAAaV,EAAOM,EAAgBJ,EAAYG,GAEvE3tB,KAAKyC,SAAL,MAAmBsrB,KAnaJ,KAsanBE,oBAAsB7pB,IAAW,MACrB8N,EAAWlS,KAAKwC,MAAhB0P,OACAoQ,EAAkBtiB,KAAK+B,MAAvBugB,cAER,GAAIpQ,IADgB9N,EAAZsT,QACeT,QACnB,OAGJ,MAAMsL,EAAQjK,IAAakK,SAAStQ,GACpClS,KAAKyiB,cAAcF,EAAOD,IA/aX,KAkbnBK,mBAAqBve,IAAW,MACpB8N,EAAWlS,KAAKwC,MAAhB0P,OACAoQ,EAAkBtiB,KAAK+B,MAAvBugB,cAER,GAAIpQ,IADgB9N,EAAZsT,QACeT,QACnB,OAGJ,MAAMsL,EAAQjK,IAAakK,SAAStQ,GACpClS,KAAKyiB,cAAcF,EAAOD,IA3bX,KA8bnBI,uBAAyBte,IAAW,MACxB8N,EAAWlS,KAAKwC,MAAhB0P,OACAoQ,EAAkBtiB,KAAK+B,MAAvBugB,cAER,GAAIpQ,IADgB9N,EAAZ6S,QAEJ,OAGJ,MAAMsL,EAAQjK,IAAakK,SAAStQ,GACpClS,KAAKyiB,cAAcF,EAAOD,IAvcX,KA0cnBG,cAAgB,CAACF,EAAOD,KAAmB,MAC/BkL,EAAcxtB,KAAK+B,MAAnByrB,UAEF1O,EAAUyD,IAASA,EAAMO,mBAAqBP,EAAMO,kBAAkBhE,SAAYyD,EAAM7D,SAASI,UAAgB,GACjHiE,EAAgBR,EAAQA,EAAMQ,cAAgB,GAC9Clc,EAAW0b,EAAQA,EAAM1b,SAAW,GACpCmc,EAAQT,EAAQA,EAAMS,MAAQ,GAC9BC,EAAMV,EAAQA,EAAMU,IAAM,GAC1BC,EAAYX,EAAQA,EAAMW,UAAY,GACtCC,EAAiBZ,EAAQA,EAAMY,eAAiB,GAEhDC,EAAatE,EAAQpK,OAAS,EAC9B2O,EAAmBN,EAAcrO,OAAS,EAC1C4O,EAAczc,EAAS6N,OAAS,EAChC6O,EAAWP,EAAMtO,OAAS,EAC1B8O,EAASP,EAAIvO,OAAS,EACtB+O,EAAeP,EAAUxO,OAAS,EAClCgP,EAAoBP,EAAezO,OAAS,IAG3B,IAAnB4N,GACqB,IAAlBA,IAAwBc,GACN,IAAlBd,IAAwBe,GACN,IAAlBf,IAAwBgB,GACN,IAAlBhB,IAAwBiB,GACN,IAAlBjB,IAAwBkB,GACN,IAAlBlB,IAAwBmB,GACN,IAAlBnB,IAAwBoB,KAEvBN,EACAd,EAAgB,EACTe,EACPf,EAAgB,EACTgB,EACPhB,EAAgB,EACTiB,EACPjB,EAAgB,EACTkB,EACPlB,EAAgB,EACTmB,EACPnB,EAAgB,EACToB,IACPpB,EAAgB,IAIxB,MACMgL,EADSD,GAAmBa,UAAU5L,EAAeC,GAAOhH,OAAO5a,GAAK0sB,GAAmBc,eAAe7L,EAAe3hB,EAAE6X,UAC5G4V,MAAM,EAAGC,MAEbZ,EAASztB,KAAK0tB,QAAvB1U,QACR,IAAKyU,EAAM,OAEX,MAAME,EAAYF,EAAKE,UACjBC,EAAiBH,EAAKI,aAAaC,aAEzC9tB,KAAKyC,SAAS,CACV6f,gBACAyL,UAAW/tB,KAAKguB,aAAaV,EAAOM,EAAgBJ,EAAYG,GAChEW,UAAWjB,GAAmBkB,aAAajM,GAC3CgL,QACAkB,OAAQ,CACJC,SAAS,EACTC,WAAW,EACXC,kBAAkB,EAClBpT,OAAQ8R,GAAmBuB,UAAUtM,IAEzCxD,UACAiE,gBACAlc,WACAmc,QACAC,MACAC,YACAC,oBAlhBW,KAmjBnBW,uBAAyB1f,IAAW,MAChByf,EAAkB7jB,KAAKwC,MAA/B0P,OACAA,EAAiC9N,EAAjC8N,OAAeoQ,EAAkBle,EAAzBuf,MAChB,GAAIzR,IAAW2R,EAAe,OAE9B,MAAMtB,EAAQjK,IAAakK,SAASqB,GAE9B/E,EAAUyD,IAASA,EAAMO,mBAAqBP,EAAMO,kBAAkBhE,SAAYyD,EAAM7D,SAASI,UAAgB,GACjHiE,EAAgBR,EAAQA,EAAMQ,cAAgB,GAC9Clc,EAAW0b,EAAQA,EAAM1b,SAAW,GACpCmc,EAAQT,EAAQA,EAAMS,MAAQ,GAC9BC,EAAMV,EAAQA,EAAMU,IAAM,GAC1BC,EAAYX,EAAQA,EAAMW,UAAY,GACtCC,EAAiBZ,EAAQA,EAAMY,eAAiB,GAEtD,IAAI9f,EAAS,GACS,IAAlBif,EACAjf,EAASyb,EACgB,IAAlBwD,EACPjf,EAAS0f,EACgB,IAAlBT,EACPjf,EAASwD,EACgB,IAAlByb,EACPjf,EAAS2f,EACgB,IAAlBV,EACPjf,EAAS4f,EACgB,IAAlBX,EACPjf,EAAS6f,EACgB,IAAlBZ,IACPjf,EAAS8f,GAEb9f,EAASA,EAAOkY,OAAO5a,GAAK0sB,GAAmBc,eAAe7L,EAAe3hB,EAAE6X,UAE/ExY,KAAKyC,SAAS,CACV6f,gBACAyL,UAAW,IAAIjZ,IACfwZ,UAAWjB,GAAmBkB,aAAajM,GAC3CgL,MAAOjqB,EAAO+qB,MAAM,EAAGC,MACvBvP,UACAiE,gBACAlc,WACAmc,QACAC,MACAC,YACAC,iBACAqL,OAAQ,CACJC,SAAS,EACTC,WAAW,EACXC,kBAAkB,EAClBpT,OAAQ8R,GAAmBuB,UAAUtM,OApmB9B,KAymBnBsB,wBAA0Bxf,IAAW,MACjByf,EAAkB7jB,KAAKwC,MAA/B0P,OACAoQ,EAAkBtiB,KAAK+B,MAAvBugB,cAEApQ,EAAW9N,EAAX8N,OACR,GAAIA,IAAW2R,EAAe,OAE9B,MAAMtB,EAAQjK,IAAakK,SAAStQ,GACpClS,KAAKyiB,cAAcF,EAAOD,IAjnBX,KAonBnBuM,aAAe,CAACxqB,EAAOmJ,KAAe,MAC1BghB,EAAWxuB,KAAK+B,MAAhBysB,OAEJA,IAAWA,EAAOE,WAClB1uB,KAAK8uB,WAAWN,IAxnBL,KA8nBnBO,iBAAmB,CAAC1qB,EAAOmJ,KACGxN,KAAK0tB,QAAvB1U,SAGRhZ,KAAKgvB,kBAAkBxhB,EAAUggB,YAloBlB,KAqoBnByB,cAAgB,CAACtL,EAAOiK,EAAgBJ,KAAe,MAC3Cc,EAActuB,KAAK+B,MAAnBusB,UAKR,OAHgB3K,EAAQ2K,EAIVd,EAAYJ,GAAgBkB,IAHtB3K,EAAQ,GAAK2K,EAIhBd,EAAYI,EAAiBR,GAAgBkB,GA7oB/C,KA8pBnBU,kBAAoBxB,IAAc,MAAD,EAC0BxtB,KAAK+B,MAApDurB,EADqB,EACrBA,MAAkB4B,EADG,EACd1B,UAA0Bc,EADZ,EACYA,UAExBb,EAASztB,KAAK0tB,QAAvB1U,QACR,IAAKyU,EAAM,OAEX,MAAME,EAAYF,EAAKE,UACjBC,EAAiBH,EAAKI,aAAaC,aAEzC,GAAI/sB,KAAKopB,IAAIqD,EAAY0B,IAAkBZ,EAAW,CAClD,MAAMP,EAAY/tB,KAAKguB,aAAaV,EAAOM,EAAgBJ,EAAYG,GAEvE3tB,KAAKyC,SAAL,IACI+qB,aACGO,MA5qBI,KAirBnBe,WAjrBmB,sCAirBN,WAAON,EAAQW,GAAiB,GAAhC,yCAAAzc,EAAA,wDACDR,EAAW,EAAK1P,MAAhB0P,OADC,EAEwB,EAAKnQ,MAA9BurB,EAFC,EAEDA,MAAOhL,EAFN,EAEMA,cACPoM,EAAuDF,EAAvDE,UAAWnT,EAA4CiT,EAA5CjT,OAAQkT,EAAoCD,EAApCC,QAAmBW,EAAiBZ,EAA3Ba,SAEd,IAAlB/M,EALK,oDAMa,IAAlBA,EANK,oDAOJ/G,EAPI,qDAQLkT,EARK,uDASLC,EATK,0DAWLY,EAAgBhC,EAAM5Y,OAAS,EAAI4Y,EAAMA,EAAM5Y,OAAS,GAAGxU,GAAK,EAChEkvB,IACAE,EAAgBF,EAAa1a,OAAS,EAAI0a,EAAaA,EAAa1a,OAAS,GAAGxU,GAAK,GAEzFsuB,EAAOC,SAAU,EACjBD,EAAOe,UAAY,IAAIrG,KAhBd,UAkBY9mB,IAAgBC,KAAK,CACtC,QAAS,qBACT4U,QAAS/E,EACTwJ,MAAO,GACP8T,eAAgB,EAChBC,gBAAiBH,EACjBrD,OAAQ,EACRpW,MAAOwY,KACP9S,WACDmU,QAAQ,KACPlB,EAAOC,SAAU,IA5BZ,WAkBHlsB,EAlBG,OA+BTH,IAAgBC,KAAK,CACjB,QAAS,qBACT4U,QAAS/E,EACTwJ,MAAO,GACP8T,eAAgB,EAChBC,gBAAiBH,EACjBrD,OAAQ,EACRpW,MAAoC,EAA7BwY,KACP9S,YAGYoU,EAAkB,EAAK5tB,MAA/BysB,SACcmB,EAAcJ,YAAcf,EAAOe,UA3ChD,mDA+CDF,EAAa9sB,EAAb8sB,SACRb,EAAOa,SAAWA,EAClBb,EAAOE,UAAgC,IAApBW,EAAS3a,QAAyC,IAAzB2a,EAASO,YACrDpB,EAAOlB,MAAQA,EAAMhS,OAAO+T,EAAS9T,OAAO5a,GAAK0sB,GAAmBwC,eAAevN,EAAe3hB,KAC5FmvB,EAAoBX,GAAkBE,EAAS3a,OAAS,GAAK2a,EAAS3a,OAAS2Z,KAErF/V,IAAayX,SAASxtB,EAAO8sB,UACvB1Y,EAAQ/K,IAAUgL,WACxBoZ,YAAoBrZ,EAAOpU,EAAO8sB,UAElC,EAAK5sB,SAAS,CAAE6qB,MAAOkB,EAAOlB,QAE1BkB,EAAOE,UACP,EAAKuB,mBAAmBzB,GAAQ,GACzBsB,GACP,EAAKhB,WAAWN,GAAQ,GA9DnB,0CAjrBM,2DAuvBnB0B,WAAa/L,IAAS,MACVgM,EAAUnwB,KAAKwC,MAAf2tB,MAER,OAAQhM,EAAK,UACT,IAAK,UAAW,CAAC,MACLlN,EAAgBkN,EAAhBlN,QAAS/W,EAAOikB,EAAPjkB,GAEjBioB,aAAUlR,EAAS/W,GAAI,GACvB,MAEJ,IAAK,OAAQ,CAAC,MACFA,EAAOikB,EAAPjkB,GACRkmB,YAASlmB,GAELiwB,GACA/tB,IAAgBkG,aAAa,CACzB,QAAS,2BACT4J,OAAQ,IAGhB,MAEJ,IAAK,aAAc,CAAC,MACR8D,EAAYmO,EAAZnO,QACRoa,YAASpa,GAAS,GAEdma,GACA/tB,IAAgBkG,aAAa,CACzB,QAAS,2BACT4J,OAAQ,OAjxBxBlS,KAAK0tB,QAAU7rB,IAAMya,YAErBtc,KAAK+B,MAAQ,CACTyrB,UAAW,GAMnB,qBAAqBrJ,GACjB,GAAKA,EAEL,OAAQA,EAAK,UACT,IAAK,UAED,OADoBA,EAAZ3L,QACQ,UACZ,IAAK,eAGL,IAAK,eACD,OAEJ,IAAK,kBACD,OAAO,GAEX,IAAK,eACD,OAAO,GAEX,IAAK,mBACD,OAAO,GAEX,QACI,OAIZ,IAAK,OAGL,IAAK,OACD,OAAO,GAEX,QACI,QAKZ,oBAAoB8J,GAChB,OAAQA,GACJ,KAAK,EACD,OAAO,GAEX,KAAK,EACD,OAEJ,KAAK,EACD,OAAO,GAEX,KAAK,EACD,OAAO,GAEX,KAAK,EACD,OAEJ,KAAK,EAGL,KAAK,EACD,OAAO,IAiHnB,sBAAsBA,EAAe5K,GACjC,QAAKA,GAEE2V,GAAmBc,eAAe7L,EAAe5K,EAAQc,SAGpE,sBAAsB8J,EAAe9J,GACjC,OAAQ8J,GACJ,KAAK,EACD,OAAO,EAEX,KAAK,EACD,OAAO+K,GAAmBgD,4BAA4B7X,GAE1D,KAAK,EACD,OAAO6U,GAAmBiD,uBAAuB9X,GAErD,KAAK,EACD,OAAO6U,GAAmBkD,oBAAoB/X,GAElD,KAAK,EACD,OAAO6U,GAAmBmD,kBAAkBhY,GAEhD,KAAK,EACD,OAAO6U,GAAmBoD,wBAAwBjY,GAEtD,KAAK,EACD,OAAO,EAIf,OAAO,EAGX,mCAAmCA,GAC/B,OAAOA,IAAiC,iBAArBA,EAAQ,UAAoD,iBAArBA,EAAQ,UAGtE,2BAA2BA,GACvB,OAAOA,GAAgC,iBAArBA,EAAQ,SAG9B,8BAA8BA,GAC1B,OAAOA,IAAiC,oBAArBA,EAAQ,UAAuD,iBAArBA,EAAQ,UAGzE,yBAAyBA,GACrB,IAAKA,EAAS,OAAO,EADS,MAGtBkY,EAA4BlY,EAA5BkY,SAAUrjB,EAAkBmL,EAAlBnL,KAAMgM,EAAYb,EAAZa,QACxB,GAAIqX,EAAU,OAAO,EACrB,IAAKrjB,IAASgM,EAAS,OAAO,EALA,MAOtBC,GAAajM,GAAQgM,GAArBC,SACR,QAAKA,GAEEA,EAASyF,KACZpe,GACwB,sBAApBA,EAAE6d,KAAK,UACa,0BAApB7d,EAAE6d,KAAK,UACa,+BAApB7d,EAAE6d,KAAK,UAInB,+BAA+BhG,GAC3B,OAAOA,GAAgC,qBAArBA,EAAQ,SAG9B,iBAAiB8J,GACb,OAAQA,GACJ,KAAK,EACD,OAAO,KAEX,KAAK,EACD,MAAO,CAAE,QAAS,qCAEtB,KAAK,EACD,MAAO,CAAE,QAAS,gCAEtB,KAAK,EACD,MAAO,CAAE,QAAS,6BAEtB,KAAK,EACD,MAAO,CAAE,QAAS,2BAEtB,KAAK,EACD,MAAO,CAAE,QAAS,iCAEtB,KAAK,EACD,OAAO,KAIf,OAAO,KAGX,iBAAiBA,EAAeC,GAC5B,IAAKA,EACD,MAAO,GAGX,OAAQD,GACJ,KAAK,EACD,OAAQC,EAAMO,mBAAqBP,EAAMO,kBAAkBhE,SAAYyD,EAAM7D,SAASI,SAAW,GAErG,KAAK,EACD,OAAOyD,EAAMQ,eAAiB,GAElC,KAAK,EACD,OAAOR,EAAM1b,UAAY,GAE7B,KAAK,EACD,OAAO0b,EAAMS,OAAS,GAE1B,KAAK,EACD,OAAOT,EAAMU,KAAO,GAExB,KAAK,EACD,OAAOV,EAAMW,WAAa,GAE9B,KAAK,EACD,OAAOX,EAAMY,gBAAkB,GAIvC,MAAO,GAGX,gCAAgC3gB,EAAOT,GAGnC,GAFmBS,EAAX0P,SAEOnQ,EAAM6d,WAAY,CAC7B,MAAM2C,EAAQjK,IAAakK,SAAShgB,EAAM0P,QAEpC4M,EAAUyD,IAASA,EAAMO,mBAAqBP,EAAMO,kBAAkBhE,SAAYyD,EAAM7D,SAASI,UAAgB,GACjHiE,EAAgBR,EAAQA,EAAMQ,cAAgB,GAC9Clc,EAAW0b,EAAQA,EAAM1b,SAAW,GACpCmc,EAAQT,EAAQA,EAAMS,MAAQ,GAC9BC,EAAMV,EAAQA,EAAMU,IAAM,GAC1BC,EAAYX,EAAQA,EAAMW,UAAY,GACtCC,EAAiBZ,EAAQA,EAAMY,eAAiB,GAEtD,IAAIb,GAAiB,EACjBxD,EAAQpK,OAAS,EACjB4N,EAAgB,EACTS,EAAcrO,OAAS,EAC9B4N,EAAgB,EACTzb,EAAS6N,OAAS,EACzB4N,EAAgB,EACTU,EAAMtO,OAAS,EACtB4N,EAAgB,EACTW,EAAIvO,OAAS,EACpB4N,EAAgB,EACTY,EAAUxO,OAAS,EAC1B4N,EAAgB,EACTa,EAAezO,OAAS,IAC/B4N,EAAgB,GAEpB,MAAMjf,EAASgqB,GAAmBa,UAAU5L,EAAeC,GAAOhH,OAAO5a,GAAK0sB,GAAmBc,eAAe7L,EAAe3hB,EAAE6X,UAEjI,MAAO,CACHoH,WAAYpd,EAAM0P,OAClBoQ,gBACAyL,UAAW,IAAIjZ,IACfwZ,UAAWjB,GAAmBkB,aAAajM,GAC3CgL,MAAOjqB,EAAO+qB,MAAM,EAAGC,MACvBvP,UACAiE,gBACAlc,WACAmc,QACAC,MACAC,YACAC,iBACAa,cAAc,EACdwK,OAAQ,CACJC,SAAS,EACTC,WAAW,EACXC,kBAAkB,EAClBpT,OAAQ8R,GAAmBuB,UAAUtM,KAKjD,OAAO,KAGXtf,oBACI8J,OAAOC,iBAAiB,SAAU/M,KAAKkH,gBAEvCoR,IAAatL,GAAG,uBAAwBhN,KAAK8jB,wBAC7CxL,IAAatL,GAAG,wBAAyBhN,KAAK4jB,yBAC9CtL,IAAatL,GAAG,mBAAoBhN,KAAK2iB,oBACzCrK,IAAatL,GAAG,uBAAwBhN,KAAK0iB,wBAC7CpK,IAAatL,GAAG,uBAAwBhN,KAAKqiB,wBAC7C/J,IAAatL,GAAG,6BAA8BhN,KAAKiuB,qBACnD3V,IAAatL,GAAG,0BAA2BhN,KAAKiuB,qBAGpDhhB,uBACIH,OAAOK,oBAAoB,SAAUnN,KAAKkH,gBAE1CoR,IAAalL,IAAI,uBAAwBpN,KAAK8jB,wBAC9CxL,IAAalL,IAAI,wBAAyBpN,KAAK4jB,yBAC/CtL,IAAalL,IAAI,mBAAoBpN,KAAK2iB,oBAC1CrK,IAAalL,IAAI,uBAAwBpN,KAAK0iB,wBAC9CpK,IAAalL,IAAI,uBAAwBpN,KAAKqiB,wBAC9C/J,IAAalL,IAAI,6BAA8BpN,KAAKiuB,qBACpD3V,IAAalL,IAAI,0BAA2BpN,KAAKiuB,qBA8IrDrrB,mBAAmBC,EAAWC,EAAWC,GACrC,GAAIF,EAAUyqB,QAAUttB,KAAKwC,MAAM0P,QAAUpP,EAAUwf,gBAAkBtiB,KAAK+B,MAAMugB,cAAe,CAAC,MACxFgL,EAAUttB,KAAK+B,MAAfurB,MAEF3W,EAAQ/K,IAAUgL,WACxB,OAAQ5W,KAAK+B,MAAMugB,eACf,KAAK,EACDqO,YAAiBha,EAAO2W,EAAMjX,IAAI1V,GAAKA,EAAEqV,UACzC,MAEJ,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACDga,YAAoBrZ,EAAO2W,GAC3B,MAEJ,KAAK,EACDzW,YAAiBF,EAAO2W,KAwGxCU,aAAa3qB,EAAQuqB,EAAgBJ,GACjC,MAAMO,EAAY,IAAIjZ,IAChB8b,EAAgB,GAQtB,OAPAvtB,EAAOjC,QAAQ,CAAC+iB,EAAMR,KACd3jB,KAAKivB,cAActL,EAAOiK,EAAgBJ,KAC1CO,EAAUvT,IAAImJ,EAAOA,GACrBiN,EAAc9a,KAAK6N,MAIpB,CAAEoK,YAAW6C,iBAwFxBX,mBAAmBzB,EAAQW,IAwC3BlsB,SAAU,MAAD,EAYDjD,KAAK+B,MAVLugB,EAFC,EAEDA,cAFC,IAGDgL,aAHC,MAGO,GAHP,EAIDS,EAJC,EAIDA,UACAjP,EALC,EAKDA,QACAiE,EANC,EAMDA,cACAlc,EAPC,EAODA,SACAmc,EARC,EAQDA,MACAC,EATC,EASDA,IACAC,EAVC,EAUDA,UACAC,EAXC,EAWDA,eAYJ,KAPiBrE,GAAWA,EAAQpK,OAAS,GACtCqO,GAAiBA,EAAcrO,OAAS,GACxC7N,GAAYA,EAAS6N,OAAS,GAC9BsO,GAASA,EAAMtO,OAAS,GACxBuO,GAAOA,EAAIvO,OAAS,GACpBwO,GAAaA,EAAUxO,OAAS,GAChCyO,GAAkBA,EAAezO,OAAS,GAE7C,OAAQ,yBAAKuI,IAAKjd,KAAK0tB,UAG3B,GAAsB,IAAlBpL,GAAyC,IAAlBA,GAAyC,IAAlBA,EAAqB,CACnE,IAAIuO,EAAgB,EACpB,MAAMC,EAAWxD,EAAMjX,IAAI,CAAC1V,EAAGgjB,KAAW,MAC9B1M,EAAgBtW,EAAhBsW,QAAS/W,EAAOS,EAAPT,GACX6wB,EAAa1D,GAAmB2D,cAAcrwB,GACpD,OAAKowB,GAGLF,GAAiBE,IAEPhD,EAAUjU,MAAQiU,EAAU9Y,IAAI0O,KACtC,yBAAKpf,IAAG,kBAAa0S,EAAb,uBAAmC/W,GAAMgD,UAAU,yBAAyBoE,MAAO,CAAEG,IAAKopB,EAAgBE,IAC7G1D,GAAmB4D,gBAAgB3O,EAAe3hB,EAAG,IAAMX,KAAKkwB,WAAWvvB,MANzE,OAWf,OACI,yBAAKsc,IAAKjd,KAAK0tB,QAASxqB,UAAU,4BAA4BoE,MAAO,CAAEyS,OAAQ8W,IAC1EC,GAKb,OACI,yBAAK7T,IAAKjd,KAAK0tB,QAASxqB,UAAWkN,IAAW,uBAAwB,CAAE,qBAAwC,IAAlBkS,KACzFgL,EAAMjX,IAAI1V,GAAK0sB,GAAmB4D,gBAAgB3O,EAAe3hB,EAAG,IAAMX,KAAKkwB,WAAWvvB,OAj1BrG0sB,GAgFK4D,gBAAkB,CAAC3O,EAAe6B,EAAM+M,KAG3C,OAAQ5O,GACJ,KAAK,EAAG,CAAC,MACYpiB,EAAOikB,EAAhBnO,QACR,OACI,kBAACuL,GAAA,EAAD,CACIC,QAAM,EACNjd,IAAG,kBAAarE,GAChBgD,UAAU,yBACV,kBAACiuB,GAAA,EAAD,CAAMC,OAAQlxB,EAAIkS,SAAU8e,KAIxC,KAAK,EAAG,CAAC,MACGja,EAAyBkN,EAAzBlN,QAAS/W,EAAgBikB,EAAhBjkB,GAAIsY,EAAY2L,EAAZ3L,QACrB,MAAyB,iBAArBA,EAAQ,SAEJ,kBAAC,GAAD,CACIjU,IAAG,kBAAa0S,EAAb,uBAAmC/W,GACtCgS,OAAQ+E,EACRkP,UAAWjmB,EACX2E,MAAO2T,EAAQ3T,MACfsjB,UAAW+I,EACXxK,iBAxBG,IAwBczP,IAMzB,kBAAC,GAAD,CACI1S,IAAG,kBAAa0S,EAAb,uBAAmC/W,GACtCgS,OAAQ+E,EACRkP,UAAWjmB,EACXuY,MAAOD,EAAQC,MACf0P,UAAW+I,EACXxK,iBApCO,IAoCUzP,IAI7B,KAAK,EAAG,CAAC,MACGA,EAAgBkN,EAAhBlN,QAAS/W,EAAOikB,EAAPjkB,GACjB,OACI,kBAAC,GAAD,CACIqE,IAAG,kBAAa0S,EAAb,uBAAmC/W,GACtCgS,OAAQ+E,EACRkP,UAAWjmB,EACXwmB,iBA/CO,IA+CUzP,IAI7B,KAAK,EAAG,CAAC,MACGA,EAAyBkN,EAAzBlN,QAAS/W,EAAgBikB,EAAhBjkB,GAAgBikB,EAAZ3L,QACrB,OACI,kBAAC,GAAD,CACIjU,IAAG,kBAAa0S,EAAb,uBAAmC/W,GACtCgS,OAAQ+E,EACRkP,UAAWjmB,EACXwmB,iBA1DO,IA0DUzP,IAI7B,KAAK,EAAG,CAAC,MACGA,EAAyBkN,EAAzBlN,QAAS/W,EAAgBikB,EAAhBjkB,GAAIsY,EAAY2L,EAAZ3L,QACrB,OACI,kBAAC,GAAD,CACIjU,IAAG,kBAAa0S,EAAb,uBAAmC/W,GACtCgS,OAAQ+E,EACRkP,UAAWjmB,EACXsqB,QAAShS,EAAQkY,SACjBrX,QAASb,EAAQa,QACjB8O,UAAW+I,EACXxK,iBAxEO,IAwEUzP,IAI7B,KAAK,EAAG,CAAC,MACGA,EAAyBkN,EAAzBlN,QAAS/W,EAAgBikB,EAAhBjkB,GAAIsY,EAAY2L,EAAZ3L,QACrB,OACI,kBAAC,GAAD,CACIjU,IAAG,kBAAa0S,EAAb,uBAAmC/W,GACtCgS,OAAQ+E,EACRkP,UAAWjmB,EACXgjB,UAAW1K,EAAQ6Y,WACnBlJ,UAAW+I,EACXxK,iBArFO,IAqFUzP,IAI7B,KAAK,EAAG,CAAC,MACG/W,EAAOikB,EAAPjkB,GACR,OACI,kBAACqhB,GAAA,EAAD,CACIC,QAAM,EACNjd,IAAG,kBAAarE,GAChBgD,UAAU,yBACV,kBAAC,GAAD,CAAMgP,OAAQhS,EAAIkS,SAAU8e,MAM5C,OAAO,MAoqBA7D,U,gCCnUAjY,OAPCC,YACZic,cACArf,cACAqD,IACAic,cAGWnc,CAnff,cAA0BvT,IAAMC,UAC5BlC,YAAY4C,GACR0B,MAAM1B,GADS,KAgGnB6c,2BAA6Bjb,IACzB,MAAMma,EAAOR,KAAUlS,IAAI7L,KAAKwC,MAAM0P,QACjCqM,GAGDA,EAAKC,MACkB,uBAAvBD,EAAKC,KAAK,UACVD,EAAKC,KAAKK,iBAAmBza,EAAOya,gBAEpC7e,KAAKya,eAzGM,KA6GnB6E,2BAA6Blb,IACzB,MAAMma,EAAOR,KAAUlS,IAAI7L,KAAKwC,MAAM0P,QACjCqM,GAGDA,EAAKC,MACkB,uBAAvBD,EAAKC,KAAK,UACVD,EAAKC,KAAKe,gBAAkBnb,EAAOmb,eAEnCvf,KAAKya,eAtHM,KA0HnB2E,qBAAuBhb,IACnB,MAAMma,EAAOR,KAAUlS,IAAI7L,KAAKwC,MAAM0P,QACjCqM,KAGDA,EAAKC,MACmB,oBAAvBD,EAAKC,KAAK,UAAyD,mBAAvBD,EAAKC,KAAK,UACvDD,EAAKC,KAAKxI,UAAY5R,EAAO4R,SAE7BhW,KAAKya,gBAnIM,KAuInB6D,mBAAqBla,IACbpE,KAAK8e,QAAQ7J,IAAI7Q,EAAO4R,UACxBhW,KAAKya,eAzIM,KA6InBlF,YAAc,KACVvV,KAAKwxB,oBA9IU,KAiJnBA,iBAAmB,KAAO,MAAD,EACKxxB,KAAKwC,MAAvB0P,EADa,EACbA,OAAQie,EADK,EACLA,MAEVxZ,EAAQ/K,IAAUgL,WAExBC,YAAiBF,EAAO,CAACzE,IACzB,MAAM4M,EAAU2S,YAAoBvf,GAAQmE,IAAI1V,GAAKA,EAAEqV,SACvD2a,YAAiBha,EAAOmI,GAEpBqR,GACAuB,YAAgBxf,IA3JL,KA+JnByf,mBAAqB,KAAO,MAAD,EACD3xB,KAAKwC,MAAnB6P,EADe,EACfA,EAAGH,EADY,EACZA,OACL0f,EAAW5a,YAAgB9E,GACjC,IAAK0f,EAAU,OAEf,MAAMC,EAAoBjd,IAAY/I,IAAI,YAG1C4G,GAFqBof,EAAoBA,EAAkBtnB,MAAQ,yBAE/CqnB,GAEpB5xB,KAAKyX,sBAAsBpF,EAAE,gBAzKd,KA4KnBoF,sBAAwBC,IAAY,MAAD,EACY1X,KAAKwC,MAAxCmV,EADuB,EACvBA,gBAAiBC,EADM,EACNA,cAEnBC,EAAWF,EAAgBD,EAAS,CACtCI,iBAAkBC,IAClBC,kBAAkB,EAClBC,OAAQ,CACJ,kBAACC,EAAA,EAAD,CACI3T,IAAI,QACJ4T,aAAW,QACXC,MAAM,UACNlV,UAAU,4BACVqN,QAAS,KACLqH,EAAcC,KAElB,kBAAC/G,EAAA,EAAD,WA3LG,KAiMnBghB,gBAAkB,KAAO,MAAD,EACE9xB,KAAKwC,MAAnB6P,EADY,EACZA,EAAGH,EADS,EACTA,OACL6f,EAAcC,YAAmB9f,GAClC6f,IAELtf,EAAKwf,aAAkBF,IAEvB/xB,KAAKyX,sBAAsBpF,EAAE,kBAxMd,KA2MnB6f,kBAAoB,KAChBlyB,KAAK0tB,QAAQ1U,QAAQwU,UAAY,GA5MlB,KA+MnB2E,iBAAmB,KAAO,MAAD,EACKnyB,KAAKwC,MAAvB0P,EADa,EACbA,OAAQie,EADK,EACLA,MACV5R,EAAOR,KAAUlS,IAAIqG,GACtBqM,GACAA,EAAK9F,QAEV2Z,YAA6B,CAAElgB,WAE3Bie,GACA/tB,IAAgBkG,aAAa,CACzB,QAAS,2BACT4J,OAAQ,MA1ND,KA+NnBmgB,eAAiB,KAAO,MAAD,EACOryB,KAAKwC,MAAvB0P,EADW,EACXA,OAAQie,EADG,EACHA,MAEhB/J,YAASlU,EAAQ,MAAM,GAEnBie,GACA/tB,IAAgBkG,aAAa,CACzB,QAAS,2BACT4J,OAAQ,KAvOD,KA4OnBogB,eAAiBlB,IACbhB,YAASgB,GAAQ,IA7OF,KAgPnBmB,iBAAmB,IACVvyB,KAAK0tB,QAEH1tB,KAAK0tB,QAAQ1U,QAAQvK,aAFF,EAjPX,KAsPnB+jB,eAAiBnuB,IAAU,MACNopB,EAASztB,KAAK0tB,QAAvB1U,QACR,IAAKyU,EAAM,OAFW,MAILgF,EAAYzyB,KAAK0yB,WAA1B1Z,QACHyZ,GACDA,EAAQ9E,YAAcF,EAAKD,YAE3BC,EAAKD,UAAYiF,EAAQ9E,UACzBF,EAAKkF,SAAS,CACVlrB,IAAKgrB,EAAQ9E,UACbiF,SAAU,YAGdnF,EAAKD,UAAYiF,EAAQ9E,UAAY,GACrC3iB,WAAW,KACPyiB,EAAKkF,SAAS,CACVlrB,IAAKgrB,EAAQ9E,UACbiF,SAAU,YAEf,MA1QQ,KAoRnB/D,aAAexqB,IACX,IAAKrE,KAAK0tB,QAAS,OACnB,IAAK1tB,KAAK6yB,SAAU,OAFA,MAIHpF,EAASztB,KAAK0tB,QAAvB1U,QACR,IAAKyU,EAAM,OALS,MAOHlL,EAAUviB,KAAK6yB,SAAxB7Z,QACHuJ,IAEDkL,EAAKD,UAAYC,EAAKK,cAAgBL,EAAKqF,aAAeC,MAC1DxQ,EAAMsM,aAAaxqB,GAGvBke,EAAMwM,iBAAiB1qB,EAAOopB,KA/R9BztB,KAAK0tB,QAAU7rB,IAAMya,YACrBtc,KAAK0yB,WAAa7wB,IAAMya,YACxBtc,KAAK6yB,SAAWhxB,IAAMya,YALP,MAOPpK,EAAWlS,KAAKwC,MAAhB0P,OAERlS,KAAK8e,QAAU,IAAIhK,IACnB9U,KAAK+B,MAAQ,CACT6d,WAAY1N,GAIpB,gCAAgC1P,EAAOT,GACnC,OAAIS,EAAM0P,SAAWnQ,EAAM6d,WAChB,CACHA,WAAYpd,EAAM0P,QAInB,KAGX8gB,wBAAwBnwB,EAAWC,GACZ9C,KAAKwC,MAAhB0P,OADmC,MAG1Bub,EAASztB,KAAK0tB,QAAvB1U,QAYR,MAViB,CACbwU,UAF8CC,EAA1CD,UAGJsF,aAH8CrF,EAA/BqF,aAIfhF,aAJ8CL,EAAjBK,cAcrClQ,sBAAsBC,EAAWC,GAAY,MAAD,EACc9d,KAAKwC,MAAnD0P,EADgC,EAChCA,OAAQ+gB,EADwB,EACxBA,MAAOC,EADiB,EACjBA,SAAUC,EADO,EACPA,iBAEjC,OAAItV,EAAU3L,SAAWA,IAIrB2L,EAAUqV,WAAaA,IAIvBrV,EAAUsV,mBAAqBA,GAI/BtV,EAAUoV,QAAUA,IAO5BrwB,mBAAmBC,EAAWC,EAAWC,GAAW,MACxCmP,EAAWlS,KAAKwC,MAAhB0P,OACJrP,EAAUqP,SAAWA,GACrBlS,KAAKuV,cAHsC,MAM9BkY,EAASztB,KAAK0tB,QAAvB1U,QACAwU,EAA0CzqB,EAA1CyqB,UAA0CzqB,EAA/B+vB,aAA+B/vB,EAAjB+qB,aAC7BjrB,EAAUqP,SAAWA,EACrBub,EAAKD,UAAYA,EAEjBC,EAAKD,UAAY,EAIzBxqB,oBACIhD,KAAKuV,cAELU,IAAUjJ,GAAG,mBAAoBhN,KAAKse,oBACtCrI,IAAUjJ,GAAG,qBAAsBhN,KAAKof,sBACxCT,KAAgB3R,GAAG,2BAA4BhN,KAAKqf,4BACpDQ,KAAgB7S,GAAG,2BAA4BhN,KAAKsf,4BAGxDrS,uBACIgJ,IAAU7I,IAAI,mBAAoBpN,KAAKse,oBACvCrI,IAAU7I,IAAI,qBAAsBpN,KAAKof,sBACzCT,KAAgBvR,IAAI,2BAA4BpN,KAAKqf,4BACrDQ,KAAgBzS,IAAI,2BAA4BpN,KAAKsf,4BAwMzDrc,SAAU,MAAD,EAQDjD,KAAKwC,MANL8d,EAFC,EAEDA,WACApd,EAHC,EAGDA,UACAgP,EAJC,EAIDA,OACA4K,EALC,EAKDA,QACAqT,EANC,EAMDA,MACA9d,EAPC,EAODA,EAPC,MAUgCrS,KAAKwC,MAApC0wB,EAVD,EAUCA,SAAUC,EAVX,EAUWA,iBAEhBA,EAAmBA,GAAoB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAZlD,SAWLD,EAAWA,GAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAGgE7c,IACnG,CAAC+c,EAAIpe,IAAMoe,EAAKD,EAAiBne,IAfhC,mBAkBCuJ,GAlBD,8BAkBQR,KAAUlS,IAAIqG,IAC3B,IAAKqM,EACD,OACI,yBAAKrb,UAAU,gBACX,kBAAC,GAAD,CAAmB4Z,QAASA,IAC5B,yBAAKG,IAAKjd,KAAK0tB,QAASxqB,UAAWkN,IAAW,oBAAqB,wBAK/E,IAAIijB,EAAqB,EACzB,GAAI7S,aAActO,GAAS,CACvB,MAAMwM,EAAWzI,IAAU2I,YAAYL,EAAKC,KAAKxI,SACjDqd,EAAqB3U,EAAWA,EAAS4U,sBAAwBD,EAGrE,MAAMzB,EAAW5a,YAAgB9E,GAC3B6f,EAAcC,YAAmB9f,GACvC,IAAIqhB,EAAMC,YAAWthB,GACLuhB,aAAYvhB,GAA5B,MACMwhB,EAAOrT,aAASnO,GAEhB4M,EAAU2S,YAAoBvf,GAC9ByhB,EAAQ,GACd3zB,KAAK8e,QAAU,IAAIhK,IACnBgK,EAAQ1d,QAAQwyB,IACZ,MAAMC,EAAO5d,IAAUpK,IAAI+nB,EAAO5d,SAC9B6d,IACA7zB,KAAK8e,QAAQtE,IAAIqZ,EAAK3zB,GAAI2zB,EAAK3zB,IAC/ByzB,EAAM7d,KAAK+d,MAICF,EAAMG,KAAK,CAACnzB,EAAGozB,IACxBC,aAAmBD,GAAKC,aAAmBrzB,IAE5B0V,IAAIwd,GAC1B,kBAACtS,GAAA,EAAD,CAAUC,QAAM,EAACte,UAAU,YAAYqB,IAAKsvB,EAAK3zB,IAC7C,kBAACixB,GAAA,EAAD,CAAMC,OAAQyC,EAAK3zB,GAAIkS,SAAUpS,KAAKsyB,mBAL9C,MASQ7Z,EAAU8F,EAAV9F,MAER,GAAIgb,aAAYvhB,IAAWuO,YAAcvO,GAAS,CAAC,MAAD,EACG+hB,aAA6BV,EAAK,IAArEW,EADgC,EACtC7mB,KAAyB8mB,EADa,EACvB7a,SACnB6a,EAAYzf,OAAS,IACrB6e,EAAM9G,aAAiB,CAAE,QAAS,gBAAiBpf,KAAM6mB,EAAS5a,SAAU6a,KAIpF,IAAIC,EAAgB/hB,EAAE,eAClBoO,YAAcvO,GACdkiB,EAAgB/hB,EAAE,eACXohB,aAAYvhB,KACnBkiB,EAAgB/hB,EAAE,cAGtB,IAAIgiB,EAAU,GACd,GAAIzC,EACA,GAAIpR,aAActO,GACdmiB,EAAUzC,MACP,CAOHyC,EANezf,IAAY/I,IAAI,YAC1BtB,MACA6R,cACAxW,QAAQ,WAAY,IACpBA,QAAQ,UAAW,IAELgsB,EAI3B,MAAMpZ,EACF,oCACI,kBAAC,GAAD,CACItG,OAAQA,EACRoO,WAAYA,EACZxD,QAASA,EACTvM,QAASvQ,KAAKkyB,oBAElB,yBACIjV,IAAKjd,KAAK0tB,QACVxqB,UAAWkN,IAAW,oBAAqB,qBAC3CkkB,SAAUt0B,KAAK6uB,cACf,yBAAK3rB,UAAU,qBACX,kBAAC,GAAD,CACIgP,OAAQA,EACRgO,KAAK,EACLD,YAAY,EACZjC,mBAAoBmS,EACpBnQ,aAAcvH,EAAQzY,KAAKmyB,iBAAmB,QAEhDuB,GACE,kBAACa,GAAA,EAAD,CAAMrxB,UAAU,sBACXqwB,GACG,kBAAChS,GAAA,EAAD,CAAUre,UAAU,oBAAoBue,WAAW,cAC/C,kBAACC,GAAA,EAAD,KACI,kBAAC,KAAD,CAAkBxe,UAAU,4BAEhC,kBAAC6e,GAAA,EAAD,CACIC,QAASuR,EACTnR,UAAW5B,aAActO,GAAUG,EAAE,OAASA,EAAE,0BAChD/K,MAAO,CAAEkM,WAAY,WAAYghB,SAAU,iBAItD5C,GACG,kBAACrQ,GAAA,EAAD,CAAUC,QAAM,EAACte,UAAU,oBAAoBue,WAAW,aAAalR,QAASvQ,KAAK2xB,oBACjF,kBAACjQ,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACK,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CAAYC,QAAQ,UAAUC,QAAM,GAC/BkS,GAGTjS,UAAW5B,aAActO,GAAUG,EAAE,YAAcA,EAAE,iBAIhE0f,GACG,oCACI,kBAACxQ,GAAA,EAAD,CAAUC,QAAM,EAACte,UAAU,oBAAoBue,WAAW,aAAalR,QAASvQ,KAAK8xB,iBACjF,kBAACpQ,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACK,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CAAYC,QAAQ,UAAUC,QAAM,GAC/B8P,aAAkBF,IAG3B3P,UAAW/P,EAAE,aAK7B,kBAAC,GAAD,CAAuBH,OAAQA,IAC9Bie,GACG,kBAAC5O,GAAA,EAAD,CAAUC,QAAM,EAACte,UAAU,oBAAoBue,WAAW,aAAalR,QAASvQ,KAAKqyB,gBACjF,kBAACtQ,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CAAY7J,MAAM,UAAU8J,QAAQ,UAAUC,QAAM,GAC/CiS,EAAcK,eAGvBntB,MAAO,CAAEotB,YAAa,SAQ9C,yBAAKzX,IAAKjd,KAAK0yB,aACf,kBAAC,GAAD,CAAiBxgB,OAAQA,EAAQ3B,QAASvQ,KAAKwyB,iBAC/C,kBAAC,GAAD,CAAoBvV,IAAKjd,KAAK6yB,SAAU3gB,OAAQA,EAAQie,MAAOA,MAK3E,OAAOA,EAAQ,oCAAG3X,GAAc,yBAAKtV,UAAWkN,IAAW,eAAgBlN,IAAasV,M,OC3fjFmc,OArBf,cAAmC9yB,IAAMC,UACrCmB,SAAU,MACE6Z,EAAY9c,KAAKwC,MAAjBsa,QAER,OACI,yBAAK5Z,UAAU,iBACX,kBAACgV,EAAA,EAAD,CAAYhV,UAAU,qBAAqBqN,QAASuM,GAChD,kBAAC,GAAD,OAEJ,yBAAK5Z,UAAU,qCACX,0BAAMA,UAAU,yBAAhB,wB,OCJpB,MAAM0xB,WAAuB/yB,IAAMC,UAC/BlC,YAAY4C,GACR0B,MAAM1B,GADS,KA2BnBqyB,aAAe3iB,IAAW,MACdie,EAAUnwB,KAAKwC,MAAf2tB,MAER/J,YAASlU,GAELie,GACA/tB,IAAgBkG,aAAa,CACzB,QAAS,2BACT4J,OAAQ,KAhChBlS,KAAK+B,MAAQ,CACT0U,QAAS,IAIjBzT,oBAAqB,MACTkP,EAAWlS,KAAKwC,MAAhB0P,OAEFkf,EAAS0D,YAAc5iB,GACxBkf,GAELhvB,IAAgBC,KAAK,CACjB,QAAS,oBACT2T,QAASob,EACTxb,eAAgB,EAChBC,MAAO,MACRvT,KAAKC,IACJ,MAAMoU,EAAQ/K,IAAUgL,WACxBC,YAAiBF,EAAOpU,EAAOmU,UAE/B1W,KAAKyC,SAAS,CAAEgU,QAASlU,EAAOmU,aAiBxCzT,SAAU,MAAD,EACiCjD,KAAKwC,MAAnCuyB,EADH,EACGA,UAAWjY,EADd,EACcA,QAASqT,EADvB,EACuBA,MAGtB5Z,EAFcvW,KAAK+B,MAAjB0U,QAEcJ,IAAI1V,GACtB,kBAAC4gB,GAAA,EAAD,CAAUC,QAAM,EAACjd,IAAK5D,GAClB,kBAAC,GAAD,CAAMuR,OAAQvR,EAAGyR,SAAUpS,KAAK60B,iBAIlCrc,EACF,oCACI,kBAAC,GAAD,CAAsBsE,QAASA,IAC/B,yBAAK5Z,UAAU,wBAAwBoE,MAAO,CAAEytB,cAC3Cxe,IAKb,OAAO4Z,EAAQ,oCAAG3X,GAAc,yBAAKtV,UAAU,oBAAoBsV,IAW3Eoc,GAAexW,aAAe,CAC1B+R,OAAO,EACP4E,UAAW,GAGAH,U,oBCtFApxB,gBACX,0BAAMC,EAAE,wjBACR,U,iBCqIWwO,qBA9Hf,cAAgCpQ,IAAMC,UAClClC,YAAY4C,GACR0B,MAAM1B,GADS,KAsBnBwyB,aAAe,KACX,GAAIh1B,KAAKi1B,eAAejc,QAAS,CAE7B,GADkBhZ,KAAKi1B,eAAejc,QAAQ0B,UAC/B,CACX1a,KAAKi1B,eAAejc,QAAQ0B,UAAY,GAD7B,MAGHwa,EAAal1B,KAAKwC,MAAlB0yB,SACR,IAAKA,EAAU,OAGf,YADAA,EAAS,KATA,MAcTC,EAAkBn1B,KAAKwC,MAAvB2yB,cACAC,EAAep1B,KAAK+B,MAApBqzB,WAERp1B,KAAKyC,SAAS,CAAE2yB,YAAaA,IAEzBD,GACAA,KA1CW,KA8CnBE,cAAgBhxB,IACU,KAAlBA,EAAMuW,SACNvW,EAAM6B,kBAhDK,KAoDnBovB,YAAc,KACV,MAAMpmB,EAAUlP,KAAKi1B,eAAejc,QACpC,IAAK9J,EAAS,OAFE,MAIRf,EAAce,EAAdf,UACU,SAAdA,GAAsC,oBAAdA,IACxBe,EAAQf,UAAY,MANR,MAQRuM,EAAcxL,EAAdwL,UAEAwa,EAAal1B,KAAKwC,MAAlB0yB,SACHA,GAELA,EAASxa,IAjEM,KAoEnB6a,YAAclxB,IACV,MAAMuX,EAAYvX,EAAMwX,cAAcC,QAAQ,cAC1CF,IACAvX,EAAM6B,iBACNW,SAASkN,YAAY,cAAc,EAAO6H,KArE9C5b,KAAKi1B,eAAiBpzB,IAAMya,YAE5Btc,KAAK+B,MAAQ,CACTqzB,YAAY,GAIpBxyB,mBAAmBC,EAAWC,EAAWC,GAAW,MACxCqyB,EAAep1B,KAAK+B,MAApBqzB,WAEJA,GAAcA,IAAevyB,EAAUuyB,YACvCpqB,WAAW,KACHhL,KAAKi1B,eAAejc,SACpBhZ,KAAKi1B,eAAejc,QAAQ1P,SAEjCksB,KA0DXvyB,SAAU,MAAD,EAC4CjD,KAAKwC,MAA9C6P,EADH,EACGA,EAAG8L,EADN,EACMA,MAAO5N,EADb,EACaA,QAASuM,EADtB,EACsBA,QAASoY,EAD/B,EAC+BA,SAC5BE,EAAep1B,KAAK+B,MAApBqzB,WAER,OACI,yBAAKlyB,UAAU,iBACTkyB,EAUE,oCACI,yBAAKlyB,UAAU,4BACX,yBACIhD,GAAG,yBACH+c,IAAKjd,KAAKi1B,eACV9X,YAAa9K,EAAE,UACfc,iBAAe,EACf+J,gCAA8B,EAC9B5Y,UAAWtE,KAAKq1B,cAChBjY,QAASpd,KAAKs1B,YACdjY,QAASrd,KAAKu1B,gBAnB1B,oCACI,kBAACrd,EAAA,EAAD,CAAYhV,UAAU,qBAAqBqN,QAASuM,GAChD,kBAAC,GAAD,OAEJ,yBAAK5Z,UAAU,oCAAoCqN,QAASA,GACxD,0BAAMrN,UAAU,yBAAyBib,KAmBpD8L,QAAQiL,IACL,kBAAChd,EAAA,EAAD,CAAYhV,UAAU,sBAAsBmN,YAAarQ,KAAKg1B,cAC1D,kBAACS,GAAA,EAAD,CAAe/Y,KAAM0Y,EAAYnI,KAAM,kBAAC,GAAD,MAAgByI,SAAU,kBAAC5kB,EAAA,EAAD,a,OC5GzF,MAAM6kB,WAAwB9zB,IAAMC,UAChC8zB,mBACI,OAAO,KAGXC,yBACI,OAAO,KAGXj2B,YAAY4C,GAAQ,IAAD,EACf,gBAAmBmzB,GACf,MAAM,IAAIG,UAAU,uDAKxB5xB,MAAM1B,GAPS,YAgEnB6f,uBAAyBje,IAAW,MAAD,EACIpE,KAAKwC,MAAhC0P,EADuB,EACvBA,OAAQ6jB,EADe,EACfA,eADe,EAEE/1B,KAAK+B,MAA9BurB,EAFuB,EAEvBA,MAAO0I,EAFgB,EAEhBA,cAEP/e,EAAkD7S,EAAlD6S,QAASC,EAAyC9S,EAAzC8S,WAAyB+e,GAAgB7xB,EAA7B8xB,YAA6B9xB,EAAhB6xB,aAEpCve,EAAUY,IAAazM,IAAIoL,EAASC,GAG1C,GAAID,IAAY/E,EAAQ,CACpB,IAAKob,EAAM5Y,OAAQ,OACnB,IAAKyhB,YAAQjf,EAAYoW,EAAM,GAAGptB,GAAIotB,EAAMA,EAAM5Y,OAAS,GAAGxU,IAAI,GAAO,OAEzE,MAAMyjB,EAAQ2J,EAAM8I,UAAUz1B,GAAKA,EAAET,KAAOgX,GACxClX,KAAKmuB,eAAe8H,IACL,IAAXtS,EAEA3jB,KAAKyC,SAAS,CAAE6qB,MAAO+I,YAAc/I,EAAO5V,EAAS4e,QAGrDt2B,KAAKyC,SAAS,CAAE6qB,MAAO,IAAIA,EAAMc,MAAM,EAAGzK,GAAQjM,KAAY4V,EAAMc,MAAMzK,EAAQ,OAGvE,IAAXA,GAGA3jB,KAAKyC,SAAS,CAAE6qB,MAAOA,EAAM/R,OAAO5a,GAAKA,EAAET,KAAOgX,UAGvD,GAAID,IAAY8e,EAAgB,CACnC,IAAKC,EAActhB,OAAQ,OAC3B,IAAKyhB,YAAQjf,EAAY8e,EAAc,GAAG91B,GAAI81B,EAAcA,EAActhB,OAAS,GAAGxU,IAAI,GAAO,OAEjG,MAAMyjB,EAAQqS,EAAcI,UAAUz1B,GAAKA,EAAET,KAAOgX,GAChDlX,KAAKmuB,eAAe8H,IACL,IAAXtS,EAEA3jB,KAAKyC,SAAS,CACVuzB,cAAeK,YAAcL,EAAete,EAAS4e,QAIzDt2B,KAAKyC,SAAS,CACVuzB,cAAe,IAAIA,EAAc5H,MAAM,EAAGzK,GAAQjM,KAAYse,EAAc5H,MAAMzK,EAAQ,OAInF,IAAXA,GAGA3jB,KAAKyC,SAAS,CAAEuzB,cAAeA,EAAcza,OAAO5a,GAAKA,EAAET,KAAOgX,OAlH/D,KAwHnByL,mBAAqBve,IAAW,MAAD,EACQpE,KAAKwC,MAAhC0P,EADmB,EACnBA,OAAQ6jB,EADW,EACXA,eADW,EAEM/1B,KAAK+B,MAA9BurB,EAFmB,EAEnBA,MAAO0I,EAFY,EAEZA,cAEPte,EAAYtT,EAAZsT,QACAT,EAAYS,EAAZT,QAER,GAAIA,IAAY/E,EAAQ,OACxB,IAAKlS,KAAK6vB,eAAenY,GAAU,OAEnC,MAAMf,EAAQ/K,IAAUgL,WACxBoZ,YAAoBrZ,EAAO,CAACe,IAExBT,IAAY/E,EACZlS,KAAKyC,SAAS,CAAE6qB,MAAO,CAAC5V,GAAS4D,OAAOgS,KACjCrW,IAAY8e,GACnB/1B,KAAKyC,SAAS,CAAEuzB,cAAe,CAACte,GAAS4D,OAAO0a,MAxIrC,KA4InBtT,uBAAyBte,IAAW,MAAD,EACIpE,KAAKwC,MAAhC0P,EADuB,EACvBA,OAAQ6jB,EADe,EACfA,eADe,EAEE/1B,KAAK+B,MAA9BurB,EAFuB,EAEvBA,MAAO0I,EAFgB,EAEhBA,cAEP/e,EAAyB7S,EAAzB6S,QAASmD,EAAgBhW,EAAhBgW,YAEX/D,EAAM,IAAIvB,IAAIsF,EAAY/D,IAAI1V,GAAK,CAACA,EAAGA,KACvC41B,EAAW,KACTv2B,KAAK+B,MAAMurB,MAAM5Y,OAAS1U,KAAK+B,MAAMi0B,cAActhB,OAAS2Z,MAC5DruB,KAAK8uB,WAAW9uB,KAAKwuB,SAIzBvX,IAAY/E,EACZlS,KAAKyC,SAAS,CAAE6qB,MAAOA,EAAM/R,OAAO5a,IAAM0V,EAAIpB,IAAItU,EAAET,MAAQq2B,GACrDtf,IAAY8e,GACnB/1B,KAAKyC,SAAS,CAAEuzB,cAAeA,EAAcza,OAAO5a,IAAM0V,EAAIpB,IAAItU,EAAET,MAAQq2B,IA5JjE,KAgKnBhhB,YAAc,KACVvV,KAAKwuB,OAAS,CACVC,SAAS,EACTC,WAAW,EACXC,kBAAkB,EAClBrB,MAAO,GACP0I,cAAe,GACfza,OAAQvb,KAAKw2B,mBAEjBx2B,KAAK8uB,WAAW9uB,KAAKwuB,SAzKN,KA4KnBM,WA5KmB,sCA4KN,WAAON,EAAQW,GAAiB,GAAhC,+BAAAzc,EAAA,wDACDR,EAAW,EAAK1P,MAAhB0P,OACAwc,EAAsCF,EAAtCE,UAAWnT,EAA2BiT,EAA3BjT,OAAQ+R,EAAmBkB,EAAnBlB,OAAmBkB,EAAZC,QAFzB,qDAOLC,EAPK,wDASHY,EAAgBhC,EAAM5Y,OAAS,EAAI4Y,EAAMA,EAAM5Y,OAAS,GAAGxU,GAAK,EACtEsuB,EAAOC,SAAU,EAVR,UAWYrsB,IAAgBC,KAAK,CACtC,QAAS,qBACT4U,QAAS/E,EACTwJ,MAAO,GACP8T,eAAgB,EAChBC,gBAAiBH,EACjBrD,OAAQ,EACRpW,MAAOwY,KACP9S,WACDmU,QAAQ,KACPlB,EAAOC,SAAU,IArBZ,QAWHlsB,EAXG,OAwBTH,IAAgBC,KAAK,CACjB,QAAS,qBACT4U,QAAS/E,EACTwJ,MAAO,GACP8T,eAAgB,EAChBC,gBAAiBH,EACjBrD,OAAQ,EACRpW,MAAoC,EAA7BwY,KACP9S,WAGI8T,EAAa9sB,EAAb8sB,SACRb,EAAOE,UAAgC,IAApBW,EAAS3a,QAAyC,IAAzB2a,EAASO,YACrDpB,EAAOlB,MAAQA,EAAMhS,OAAO+T,EAAS9T,OAAO,EAAKsU,iBAC3CC,EAAoBX,GAAkBE,EAAS3a,OAAS,GAAK2a,EAAS3a,OAAS2Z,KAErF/V,IAAayX,SAASxtB,EAAO8sB,UACvB1Y,EAAQ/K,IAAUgL,WACxBoZ,YAAoBrZ,EAAOpU,EAAO8sB,UAElC,EAAK5sB,SAAS,CAAE6qB,MAAOkB,EAAOlB,QAE1BkB,EAAOE,UACP,EAAKuB,mBAAmBzB,GAAQ,GACzBsB,GACP,EAAKhB,WAAWN,GAAQ,GAjDnB,0CA5KM,2DAiOnByB,mBAjOmB,sCAiOE,WAAOzB,EAAQW,GAAiB,GAAhC,iCAAAzc,EAAA,wDACTqjB,EAAmB,EAAKvzB,MAAxBuzB,eACAxa,EAA4DiT,EAA5DjT,OAAQkT,EAAoDD,EAApDC,QAASE,EAA2CH,EAA3CG,iBAAiCrB,EAAUkB,EAAzBwH,cAItCD,EANY,qDAObtH,EAPa,qDAQbE,EARa,wDAUXW,EAAgBhC,EAAM5Y,OAAS,EAAI4Y,EAAMA,EAAM5Y,OAAS,GAAGxU,GAAK,EACtEsuB,EAAOC,SAAU,EAXA,UAYIrsB,IAAgBC,KAAK,CACtC,QAAS,qBACT4U,QAAS8e,EACTra,MAAO,GACP8T,eAAgB,EAChBC,gBAAiBH,EACjBrD,OAAQ,EACRpW,MAAOwY,KACP9S,WACDmU,QAAQ,KACPlB,EAAOC,SAAU,IAtBJ,WAYXlsB,EAZW,OAyBT8sB,EAAa9sB,EAAb8sB,SACRb,EAAOwH,cAAgB1I,EAAMhS,OAAO+T,EAAS9T,OAAO,EAAKsU,iBACzDrB,EAAOG,iBAAuC,IAApBU,EAAS3a,QAAyC,IAAzB2a,EAASO,YACtDE,EAAoBX,GAAkBE,EAAS3a,OAAS,GAAK2a,EAAS3a,OAAS2Z,MAEjFG,EAAOG,iBA9BM,mDAgCjBrW,IAAayX,SAASV,GAChB1Y,EAAQ/K,IAAUgL,WACxBoZ,YAAoBrZ,EAAO0Y,GAE3B,EAAK5sB,SAAS,CAAEuzB,cAAexH,EAAOwH,gBAElClG,GACA,EAAKG,mBAAmBzB,GAAQ,GAvCnB,0CAjOF,2DA4QnBK,aAAe,KACX,IAAK7uB,KAAK0tB,QAAS,OAEnB,MAAMD,EAAOztB,KAAK0tB,QAAQ1U,QAC1B,IAAKyU,EAAM,OAJM,MAMTe,EAAWxuB,KAAXwuB,OAEJf,EAAKD,UAAYC,EAAKK,cAAgBL,EAAKqF,aAAeC,OACtDvE,IAAWA,EAAOE,UAClB1uB,KAAK8uB,WAAWN,GAEhBxuB,KAAKiwB,mBAAmBzB,KAxRjB,KA6RnB0D,kBAAoB,KAChB,MAAMzE,EAAOztB,KAAK0tB,QAAQ1U,QACrByU,IAELA,EAAKD,UAAY,IAjSF,KAoSnBiJ,mBAAqB,KACjB,IAAKz2B,KAAK02B,cAAe,OAEzB,MAAMjJ,EAAOztB,KAAK02B,cAAc1d,QAChC,IAAKyU,EAAM,OAJY,MAMfkJ,EAAiB32B,KAAjB22B,aACHA,GAEDlJ,EAAKD,UAAYC,EAAKK,cAAgBL,EAAKqF,aAAeC,OACrD4D,EAAajI,UAGd1uB,KAAK42B,qBAAqBD,GAF1B32B,KAAK62B,aAAaF,KA/SX,KAsTnBE,aAtTmB,sCAsTJ,WAAOrI,EAAQW,GAAiB,GAAhC,mCAAAzc,EAAA,wDACHR,EAAW,EAAK1P,MAAhB0P,OACAwc,EAA6CF,EAA7CE,UAAWnT,EAAkCiT,EAAlCjT,OAAQ+R,EAA0BkB,EAA1BlB,MAAOmB,EAAmBD,EAAnBC,QAAS/S,EAAU8S,EAAV9S,OAIvCgT,EANO,qDAOPD,EAPO,wDASLa,EAAgBhC,EAAM5Y,OAAS,EAAI4Y,EAAMA,EAAM5Y,OAAS,GAAGxU,GAAK,EACtEsuB,EAAOC,SAAU,EAVN,UAWUrsB,IAAgBC,KAAK,CACtC,QAAS,qBACT4U,QAAS/E,EACTwJ,QACA8T,eAAgB,EAChBC,gBAAiBH,EACjBrD,OAAQ,EACRpW,MAAOwY,KACP9S,WACDmU,QAAQ,KACPlB,EAAOC,SAAU,IArBV,WAWLlsB,EAXK,OAwBH8sB,EAAa9sB,EAAb8sB,SACRb,EAAOlB,MAAQA,EAAMhS,OAAO+T,EAAS9T,OAAO,EAAKsU,iBACjDrB,EAAOE,UAAgC,IAApBW,EAAS3a,QAAyC,IAAzB2a,EAASO,YAC/CE,EAAoBX,GAAkBE,EAAS3a,OAAS,GAAK2a,EAAS3a,OAAS2Z,KAEjF,EAAKsI,eAAiBnI,EA7Bf,mDA+BXlW,IAAayX,SAASV,GAChB1Y,EAAQ/K,IAAUgL,WACxBoZ,YAAoBrZ,EAAO0Y,GAE3B,EAAK5sB,SAAS,CAAEq0B,YAAatI,EAAOlB,MAAOyJ,oBAAqBvI,EAAOwH,gBAEnExH,EAAOE,UACP,EAAKkI,qBAAqBpI,GAAQ,GAC3BsB,GACP,EAAK+G,aAAarI,GAAQ,GAxCnB,0CAtTI,2DAkWnBoI,qBAlWmB,sCAkWI,WAAOpI,EAAQW,GAAiB,GAAhC,mCAAAzc,EAAA,wDACXqjB,EAAmB,EAAKvzB,MAAxBuzB,eACAxa,EAAmEiT,EAAnEjT,OAAQkT,EAA2DD,EAA3DC,QAAwBnB,EAAmCkB,EAAlDwH,cAAsBrH,EAA4BH,EAA5BG,iBAAkBjT,EAAU8S,EAAV9S,MAI5Dqa,EANc,qDAOftH,EAPe,qDAQfE,EARe,wDAUbW,EAAgBhC,EAAM5Y,OAAS,EAAI4Y,EAAMA,EAAM5Y,OAAS,GAAGxU,GAAK,EACtEsuB,EAAOC,SAAU,EAXE,UAYErsB,IAAgBC,KAAK,CACtC,QAAS,qBACT4U,QAAS8e,EACTra,QACA8T,eAAgB,EAChBC,gBAAiBH,EACjBrD,OAAQ,EACRpW,MAAOwY,KACP9S,WACDmU,QAAQ,KACPlB,EAAOC,SAAU,IAtBF,WAYblsB,EAZa,OAyBX8sB,EAAa9sB,EAAb8sB,SACRb,EAAOwH,cAAgB1I,EAAMhS,OAAO+T,EAAS9T,OAAO,EAAKsU,iBACzDrB,EAAOG,iBAAuC,IAApBU,EAAS3a,QAAyC,IAAzB2a,EAASO,YACtDE,EAAoBX,GAAkBE,EAAS3a,OAAS,GAAK2a,EAAS3a,OAAS2Z,KAEjF,EAAKsI,eAAiBnI,EA9BP,mDAgCnBlW,IAAayX,SAASV,GAChB1Y,EAAQ/K,IAAUgL,WACxBoZ,YAAoBrZ,EAAO0Y,GAE3B,EAAK5sB,SAAS,CAAEq0B,YAAatI,EAAOlB,MAAOyJ,oBAAqBvI,EAAOwH,gBAEnElG,GACA,EAAK8G,qBAAqBpI,GAAQ,GAvCnB,0CAlWJ,2DA6YnBwG,aA7YmB,sCA6YJ,WAAM3nB,GAAN,eAAAqF,EAAA,wDACLgJ,EAAQrO,EAAOA,EAAK0N,OAAS,GADxB,uBAGP,EAAKic,oBAHE,0BAOX,EAAKL,aAAe,CAChBjb,QACAgT,WAAW,EACXC,kBAAkB,EAClBrB,MAAO,GACP0I,cAAe,GACfza,OAAQ,EAAKib,mBAEjB,EAAKK,aAAa,EAAKF,cAAc,GAf1B,yCA7YI,2DA+ZnBK,kBAAoB,KAChBh3B,KAAK22B,aAAe,KACpB32B,KAAKyC,SAAS,CAAEq0B,YAAa,GAAIC,oBAAqB,MAjavC,KAoanBlH,eAAiBnY,KACRA,GAEE1X,KAAKmuB,eAAezW,EAAQc,SA9ZnCxY,KAAK0tB,QAAU7rB,IAAMya,YACrBtc,KAAK02B,cAAgB70B,IAAMya,YAE3Btc,KAAK+B,MAAQ,CACTurB,MAAO,GACP0I,cAAe,GACfc,YAAa,GACbC,oBAAqB,IAI7BE,YACI,OAAO,EAGX9I,eAAe3V,GACX,MAAM,IAAIxE,MAAM,oDAGpBid,gBAAgBvZ,GAAU,MACdqe,EAAmB/1B,KAAKwC,MAAxBuzB,eACA9e,EAAgBS,EAAhBT,QAAS/W,EAAOwX,EAAPxX,GAEjB,OACI,kBAAC,GAAD,CACIqE,IAAG,kBAAa0S,EAAb,uBAAmC/W,GACtCgS,OAAQ+E,EACRkP,UAAWjmB,EACXwmB,gBAAiBzP,IAAY8e,IAKzCS,kBACI,MAAM,IAAIxiB,MAAM,qDAGpBkjB,YACI,MAAM,IAAIljB,MAAM,+CAGpBhR,oBACIhD,KAAKuV,cAEL+C,IAAatL,GAAG,uBAAwBhN,KAAK0iB,wBAC7CpK,IAAatL,GAAG,uBAAwBhN,KAAKqiB,wBAC7C/J,IAAatL,GAAG,mBAAoBhN,KAAK2iB,oBAG7C1V,uBACIqL,IAAalL,IAAI,uBAAwBpN,KAAK0iB,wBAC9CpK,IAAalL,IAAI,uBAAwBpN,KAAKqiB,wBAC9C/J,IAAalL,IAAI,mBAAoBpN,KAAK2iB,oBA6W9C1f,SAAU,MAAD,EACiCjD,KAAKwC,MAAnCuyB,EADH,EACGA,UAAWjY,EADd,EACcA,QAASqT,EADvB,EACuBA,MADvB,EAE8DnwB,KAAK+B,MAAhEurB,EAFH,EAEGA,MAAO0I,EAFV,EAEUA,cAAec,EAFzB,EAEyBA,YAAaC,EAFtC,EAEsCA,oBACnCJ,EAAiB32B,KAAjB22B,aAEFtH,EAAW/B,EAAMhS,OAAO0a,GAAe3f,IAAI1V,GAAKX,KAAKixB,gBAAgBtwB,IACrEw2B,EAAiBL,EAAYxb,OAAOyb,GAAqB1gB,IAAI1V,GAAKX,KAAKixB,gBAAgBtwB,IAE7F,OACI,oCACI,kBAAC,GAAD,CACIwd,MAAOne,KAAKk3B,YACZ3mB,QAASvQ,KAAKkyB,kBACdpV,QAASA,EACToY,SAAUl1B,KAAKi3B,YAAcj3B,KAAKg1B,aAAe,KACjDG,cAAen1B,KAAKg3B,oBAExB,yBACI/Z,IAAKjd,KAAK0tB,QACVxqB,UAAWkN,IAAW,oBAAqBpQ,KAAK41B,oBAChDtB,SAAUt0B,KAAK6uB,aACfvnB,MAAO,CAAEytB,UAAW5E,EAAQ4E,EAAY,OACvC1F,GAEJpF,QAAQ0M,IACL,yBACI1Z,IAAKjd,KAAK02B,cACVxzB,UAAWkN,IAAW,2BAA4BpQ,KAAK61B,0BACvDvB,SAAUt0B,KAAKy2B,oBACdU,KAUVxB,U,OCjef,MAAMyB,WAAqBzB,GACvBxH,eAAe3V,GACX,OAAOA,GAAgC,iBAArBA,EAAQ,SAG9Bge,kBACI,MAAO,CAAE,QAAS,6BAGtBU,YAGI,OAAO7kB,EAFOrS,KAAKwC,MAAX6P,GAEC,eAIjB+kB,GAAaC,UAAY,CACrBnlB,OAAQolB,KAAUC,OAAOC,WACzBzB,eAAgBuB,KAAUC,OAC1Bza,QAASwa,KAAUh2B,KAAKk2B,WACxBrH,MAAOmH,KAAUG,KACjB1C,UAAWuC,KAAUC,QAGzBH,GAAahZ,aAAe,CACxB+R,OAAO,EACP4E,UAAW,GAGA9iB,qBAAkBmlB,I,OC7BjC,MAAMM,WAAwB/B,GAC1BxH,eAAe3V,GACX,OAAOA,GAAgC,oBAArBA,EAAQ,SAG9Bge,kBACI,MAAO,CAAE,QAAS,gCAGtBU,YAGI,OAAO7kB,EAFOrS,KAAKwC,MAAX6P,GAEC,mBAIjBqlB,GAAgBL,UAAY,CACxBnlB,OAAQolB,KAAUC,OAAOC,WACzBzB,eAAgBuB,KAAUC,OAC1Bza,QAASwa,KAAUh2B,KAAKk2B,WACxBrH,MAAOmH,KAAUG,KACjB1C,UAAWuC,KAAUC,QAGzBG,GAAgBtZ,aAAe,CAC3B+R,OAAO,EACP4E,UAAW,GAGA9iB,qBAAkBylB,I,OC3BjC,MAAMC,WAAoBhC,GACtBxH,eAAe3V,GACX,IAAKA,EAAS,OAAO,EADD,MAGZkY,EAAmBlY,EAAnBkY,SAAUrjB,EAASmL,EAATnL,KAClB,GAAIqjB,EAAU,OAAO,EACrB,IAAKrjB,EAAM,OAAO,EALE,MAOZiM,EAAajM,EAAbiM,SACR,QAAKA,GAEEA,EAASyF,KACZpe,GACwB,sBAApBA,EAAE6d,KAAK,UACa,0BAApB7d,EAAE6d,KAAK,UACa,+BAApB7d,EAAE6d,KAAK,UAInBgY,kBACI,MAAO,CAAE,QAAS,2BAGtBU,YAGI,OAAO7kB,EAFOrS,KAAKwC,MAAX6P,GAEC,cAGb4e,gBAAgBvZ,GAAU,MACdqe,EAAmB/1B,KAAKwC,MAAxBuzB,eACA9e,EAAyBS,EAAzBT,QAASuB,EAAgBd,EAAhBc,QAAStY,EAAOwX,EAAPxX,GAE1B,OACI,kBAAC,GAAD,CACIqE,IAAG,kBAAa0S,EAAb,uBAAmC/W,GACtCgS,OAAQ+E,EACRkP,UAAWjmB,EACXsqB,QAAShS,EAAQkY,SACjBvI,UAAW,IAAMA,aAAUlR,EAAS/W,GAAI,GACxCwmB,gBAAiBzP,IAAY8e,KAM7C4B,GAAYN,UAAY,CACpBnlB,OAAQolB,KAAUC,OAAOC,WACzBzB,eAAgBuB,KAAUC,OAC1Bza,QAASwa,KAAUh2B,KAAKk2B,WACxBrH,MAAOmH,KAAUG,KACjB1C,UAAWuC,KAAUC,QAGzBI,GAAYvZ,aAAe,CACvB+R,OAAO,EACP4E,UAAW,GAGA9iB,qBAAkB0lB,I,2BCzClBC,OArBf,cAAgC/1B,IAAMC,UAClClC,YAAY4C,GACR0B,MAAM1B,GAGVS,SAAU,MACE40B,EAAU73B,KAAKwC,MAAfq1B,MAER,OACI,yBAAK30B,UAAU,iBACX,kBAACgV,EAAA,EAAD,CAAYhV,UAAU,qBAAqBqN,QAASsnB,GAChD,kBAAC,GAAD,OAEJ,yBAAK30B,UAAU,qCACX,0BAAMA,UAAU,yBAAhB,oB,OCZpB,MAAM40B,WAAoBj2B,IAAMC,UAAW,eAAD,oBACtCC,MAAQ,CACJwI,MAAO,GAF2B,KAKtCD,aAAe,CAACjG,EAAOkG,KACnBvK,KAAKyC,SAAS,CAAE8H,WAGpBtH,SAAU,MAAD,EACsBjD,KAAKwC,MAAxBsa,EADH,EACGA,QAASqT,EADZ,EACYA,MACT5lB,EAAUvK,KAAK+B,MAAfwI,MAEFiO,EACF,oCACI,kBAAC,GAAD,CAAmBqf,MAAO/a,IAC1B,kBAACib,GAAA,EAAD,CACIxtB,MAAOA,EACPmH,SAAU1R,KAAKsK,aACf0tB,eAAe,UACfC,UAAU,UACVC,YAAU,EACVC,cAAc,MACdC,WAAS,GACT,kBAACC,GAAA,EAAD,CAAKC,MAAM,QAAQhxB,MAAO,CAAEixB,SAAU,UACtC,kBAACF,GAAA,EAAD,CAAKC,MAAM,OAAOhxB,MAAO,CAAEixB,SAAU,UACrC,kBAACF,GAAA,EAAD,CAAKC,MAAM,QAAQhxB,MAAO,CAAEixB,SAAU,UACtC,kBAACF,GAAA,EAAD,CAAKC,MAAM,QAAQhxB,MAAO,CAAEixB,SAAU,YAKlD,OAAOpI,EAAQ,oCAAG3X,GAAc,yBAAKtV,UAAU,gBAAgBsV,IAWvEsf,GAAY1Z,aAAe,CACvB+R,OAAO,EACP4E,UAAW,GAGA+C,U,OC/Cf,MAAMU,WAAqB7C,GACvBC,mBACI,MAAO,qBAGXC,yBACI,MAAO,4BAGX1H,eAAe3V,GACX,OAAOA,GAAgC,iBAArBA,EAAQ,SAG9Bge,kBACI,MAAO,CAAE,QAAS,6BAGtBU,YAGI,OAAO7kB,EAFOrS,KAAKwC,MAAX6P,GAEC,eAGb4e,gBAAgBvZ,GAAU,MACdqe,EAAmB/1B,KAAKwC,MAAxBuzB,eACA9e,EAAyBS,EAAzBT,QAASuB,EAAgBd,EAAhBc,QAAStY,EAAOwX,EAAPxX,GAE1B,OACI,kBAAC,GAAD,CACIqE,IAAG,kBAAa0S,EAAb,uBAAmC/W,GACtCgS,OAAQ+E,EACRkP,UAAWjmB,EACXuY,MAAOD,EAAQC,MACf0P,UAAW,IAAMA,aAAUlR,EAAS/W,GAAI,GACxCwmB,gBAAiBzP,IAAY8e,KAM7CyC,GAAanB,UAAY,CACrBnlB,OAAQolB,KAAUC,OAAOC,WACzBzB,eAAgBuB,KAAUC,OAC1Bza,QAASwa,KAAUh2B,KAAKk2B,WACxBrH,MAAOmH,KAAUG,KACjB1C,UAAWuC,KAAUC,QAGzBiB,GAAapa,aAAe,CACxB+R,OAAO,EACP4E,UAAW,GAGA9iB,qBAAkBumB,I,OCrDjC,MAAMC,WAAqB9C,GACvBC,mBACI,MAAO,qBAGXC,yBACI,MAAO,4BAGX1H,eAAe3V,GACX,OAAOA,GAAgC,iBAArBA,EAAQ,SAG9Bge,kBACI,MAAO,CAAE,QAAS,6BAGtBU,YAGI,OAAO7kB,EAFOrS,KAAKwC,MAAX6P,GAEC,eAGb4e,gBAAgBvZ,GAAU,MACdqe,EAAmB/1B,KAAKwC,MAAxBuzB,eACA9e,EAAyBS,EAAzBT,QAASuB,EAAgBd,EAAhBc,QAAStY,EAAOwX,EAAPxX,GAE1B,OACI,kBAAC,GAAD,CACIqE,IAAG,kBAAa0S,EAAb,uBAAmC/W,GACtCgS,OAAQ+E,EACRkP,UAAWjmB,EACX2E,MAAO2T,EAAQ3T,MACfsjB,UAAW,IAAMA,aAAUlR,EAAS/W,GAAI,GACxCwmB,gBAAiBzP,IAAY8e,KAM7C0C,GAAapB,UAAY,CACrBnlB,OAAQolB,KAAUC,OAAOC,WACzBzB,eAAgBuB,KAAUC,OAC1Bza,QAASwa,KAAUh2B,KAAKk2B,WACxBrH,MAAOmH,KAAUG,KACjB1C,UAAWuC,KAAUC,QAGzBkB,GAAara,aAAe,CACxB+R,OAAO,EACP4E,UAAW,GAGA9iB,qBAAkBwmB,I,OCrDjC,MAAMC,WAAyB/C,GAC3BxH,eAAe3V,GACX,OAAOA,GAAgC,qBAArBA,EAAQ,SAG9Bge,kBACI,MAAO,CAAE,QAAS,iCAGtBU,YAGI,OAAO7kB,EAFOrS,KAAKwC,MAAX6P,GAEC,cAGb4kB,YACI,OAAO,EAGXhG,gBAAgBvZ,GAAU,MACdqe,EAAmB/1B,KAAKwC,MAAxBuzB,eACA9e,EAAyBS,EAAzBT,QAASuB,EAAgBd,EAAhBc,QAAStY,EAAOwX,EAAPxX,GAE1B,OACI,kBAAC,GAAD,CACIqE,IAAG,kBAAa0S,EAAb,uBAAmC/W,GACtCgS,OAAQ+E,EACRkP,UAAWjmB,EACXgjB,UAAW1K,EAAQ6Y,WACnBlJ,UAAW,IAAMA,aAAUlR,EAAS/W,GAAI,GACxCwmB,gBAAiBzP,IAAY8e,KAM7C2C,GAAiBrB,UAAY,CACzBnlB,OAAQolB,KAAUC,OAAOC,WACzBzB,eAAgBuB,KAAUC,OAC1Bza,QAASwa,KAAUh2B,KAAKk2B,WACxBrH,MAAOmH,KAAUG,KACjB1C,UAAWuC,KAAUC,QAGzBmB,GAAiBta,aAAe,CAC5B+R,OAAO,EACP4E,UAAW,GAGA9iB,qBAAkBymB,I,OCpCjC,MAAMC,WAAiB92B,IAAMC,UACzBlC,YAAY4C,GAAQ,IAAD,EACf0B,MAAM1B,GADS,YA4CnBo2B,wBAA0Bx0B,IACGA,EAAjB4f,eAGUhkB,KAAKwC,MAAf2tB,OAGRnwB,KAAK64B,2BAnDU,KAsDnBC,qBAAuB10B,IAAW,MACtB+rB,EAAUnwB,KAAKwC,MAAf2tB,MACAje,EAAWlS,KAAK+B,MAAhBmQ,OAEJie,GACAje,IAAW9N,EAAO20B,aAEtB/4B,KAAKg5B,aAAe,KACpBh5B,KAAKi5B,gBAAkB,KACvBj5B,KAAKk5B,YAAc,KACnBl5B,KAAKm5B,aAAe,KACpBn5B,KAAKo5B,aAAe,KACpBp5B,KAAKq5B,iBAAmB,KAExBr5B,KAAKyC,SAAS,CACVyP,OAAQ9N,EAAO20B,WACfhD,eAAgB,EAChBuD,WAAY,KACZC,mBAAmB,EACnBC,kBAAkB,EAClBC,qBAAqB,EACrBC,iBAAiB,EACjBC,iBAAiB,EACjBC,kBAAkB,EAClBC,kBAAkB,EAClBC,sBAAsB,EACtB5G,SAAUnV,KAAUgc,YAAY31B,EAAO20B,YACvC5F,iBAAkB,OAGjB/uB,EAAO20B,YACR/4B,KAAK64B,2BArFM,KAyFnBtjB,YAAcrD,IACVlS,KAAKg6B,iBAAiB9nB,GACtBlS,KAAKi6B,qBAAqB/nB,GAE1B,MAAMuG,EAAQyhB,YAAiBhoB,GAC1BuG,GACL0hB,YAA8BjoB,EAAQ,CAACuG,KA/FxB,KAkGnBuhB,iBAlGmB,sCAkGA,WAAM9nB,GAAN,eAAAQ,EAAA,qEACQ0nB,aAAgBloB,GADxB,UACTghB,EADS,OAEfnV,KAAUsc,YAAYnoB,EAAQghB,GAE1BhhB,IAAW,EAAKnQ,MAAMmQ,OAJX,iDAMf,EAAKzP,SAAS,CAAEywB,aAND,yCAlGA,2DA2GnB+G,qBA3GmB,sCA2GI,WAAM/nB,GAAN,qBAAAQ,EAAA,wDACdqE,aAAa7E,GADC,oDAGbwM,EAAWmB,KAAgBjB,YAAY0b,YAAgBpoB,IAH1C,oDAMmB2M,EAAmBH,EAAjD6b,6BANW,kEASAn4B,IAAgBC,KAAK,CACpC,QAAS,uBACTwc,iBACA1I,OAAO,IAZQ,WASboI,EATa,2EAiBI6b,aAAgB7b,EAAKre,IAjBzB,WAiBbgzB,EAjBa,OAkBnBnV,KAAUsc,YAAY9b,EAAKre,GAAIgzB,GAE3B,EAAKnxB,MAAMmQ,SAAWA,EApBP,mDAsBnB,EAAKzP,SAAS,CAAEszB,eAAgBxX,EAAKre,GAAIizB,iBAAkBpV,KAAUgc,YAAYxb,EAAKre,MAtBnE,0CA3GJ,2DAoInBs6B,sBAAwB,KACpBx6B,KAAKyC,SAAS,CAAEk3B,iBAAiB,KArIlB,KAwInBc,uBAAyB,KACrBz6B,KAAKyC,SAAS,CAAEk3B,iBAAiB,KAzIlB,KA4InBe,wBAA0B,KACtB16B,KAAKyC,SAAS,CAAE82B,mBAAmB,KA7IpB,KAgJnBoB,0BAA4B,KACxB36B,KAAKyC,SAAS,CAAE82B,mBAAmB,KAjJpB,KAoJnBV,uBAAyB,KAAO,MACpB1I,EAAUnwB,KAAKwC,MAAf2tB,MACenwB,KAAK+B,MAApBu3B,WAGJt5B,KAAKyC,SAAS,CAAE62B,WAAY,OACrBnJ,EACP/tB,IAAgBkG,aAAa,CACzB,QAAS,2BACT4J,OAAQ,IAGZ0oB,cAA4B,IAhKjB,KAoKnBC,0BAA4B,KACxB76B,KAAKyC,SAAS,CAAEg3B,qBAAqB,KArKtB,KAwKnBqB,2BAA6B,KACzB96B,KAAKyC,SAAS,CAAEg3B,qBAAqB,KAzKtB,KA4KnBsB,uBAAyB,KACrB/6B,KAAKyC,SAAS,CAAE+2B,kBAAkB,KA7KnB,KAgLnBwB,wBAA0B,KACtBh7B,KAAKyC,SAAS,CAAE+2B,kBAAkB,KAjLnB,KAoLnByB,2BAA6B,KACzBj7B,KAAKyC,SAAS,CAAEq3B,sBAAsB,KArLvB,KAwLnBoB,4BAA8B,KAC1Bl7B,KAAKyC,SAAS,CAAEq3B,sBAAsB,KAzLvB,KA4LnBqB,sBAAwB,KACpBn7B,KAAKyC,SAAS,CAAEi3B,iBAAiB,KA7LlB,KAgMnB0B,uBAAyB,KACrBp7B,KAAKyC,SAAS,CAAEi3B,iBAAiB,KAjMlB,KAoMnB2B,uBAAyB,KACrBr7B,KAAKyC,SAAS,CAAEm3B,kBAAkB,KArMnB,KAwMnB0B,wBAA0B,KACtBt7B,KAAKyC,SAAS,CAAEm3B,kBAAkB,KAzMnB,KA4MnB2B,uBAAyB,KACrBv7B,KAAKyC,SAAS,CAAEo3B,kBAAkB,KA7MnB,KAgNnB2B,wBAA0B,KACtBx7B,KAAKyC,SAAS,CAAEo3B,kBAAkB,KA9MlC75B,KAAKy7B,WAAa55B,IAAMya,YAHT,MAKP6T,EAAU3tB,EAAV2tB,MACAje,EAAyBiH,KAAzBjH,OAAQwpB,EAAiBviB,KAAjBuiB,aAEhB17B,KAAK+B,MAAQ,CACTmQ,OAAQie,EAAQuL,EAAexpB,EAC/B6jB,eAAgB,EAChBuD,WAAY,KACZC,mBAAmB,EACnBC,kBAAkB,EAClBC,qBAAqB,EACrBC,iBAAiB,EACjBC,iBAAiB,EACjBC,kBAAkB,EAClBC,kBAAkB,EAClBC,sBAAsB,EACtB5G,SAAU,KACVC,iBAAkB,MAI1BnwB,oBACIhD,KAAKuV,YAAYvV,KAAK+B,MAAMmQ,QAE5BiH,KAASnM,GAAG,qBAAsBhN,KAAK84B,sBACvC3f,KAASnM,GAAG,wBAAyBhN,KAAK44B,yBAG9C3rB,uBACIkM,KAAS/L,IAAI,qBAAsBpN,KAAK84B,sBACxC3f,KAAS/L,IAAI,wBAAyBpN,KAAK44B,yBAG/Ch2B,mBAAmBC,EAAWC,EAAWC,GAAW,MACxCmP,EAAWlS,KAAK+B,MAAhBmQ,OACJA,IAAWpP,EAAUoP,QACrBlS,KAAKuV,YAAYrD,GA4KzBjP,SAAU,MAAD,EACwBjD,KAAKwC,MAA1BU,EADH,EACGA,UAAWitB,EADd,EACcA,MADd,EAgBDnwB,KAAK+B,MAbLmQ,EAHC,EAGDA,OACAghB,EAJC,EAIDA,SACA6C,EALC,EAKDA,eACA5C,EANC,EAMDA,iBACAmG,EAPC,EAODA,WACAE,EARC,EAQDA,iBACAC,EATC,EASDA,oBACAC,EAVC,EAUDA,gBACAC,EAXC,EAWDA,gBACAC,EAZC,EAYDA,iBACAC,EAbC,EAaDA,iBACAC,EAdC,EAcDA,qBACAP,EAfC,EAeDA,kBAGE1V,EAAgB3R,GAAUonB,EAC1BvE,EAAY/0B,KAAKy7B,YAAcz7B,KAAKy7B,WAAWziB,QAAUhZ,KAAKy7B,WAAWziB,QAAQuZ,mBAAqB,EAE5G,IAAI/Z,EAAU,KAiHd,OAhHImhB,EACAnhB,EACI,kBAAC,GAAD,CACItG,OAAQ2R,EACRsM,MAAOA,EACP4E,UAAWA,EACXjY,QAAS9c,KAAKy6B,yBAGfjB,GACPx5B,KAAKg5B,aAAeh5B,KAAKg5B,cACrB,kBAAC,GAAD,CACI9mB,OAAQ2R,EACRkS,eAAgBA,EAChB5F,MAAOA,EACP4E,UAAWA,EACXjY,QAAS9c,KAAKg7B,0BAItBxiB,EAAUxY,KAAKg5B,cACRS,GACPz5B,KAAKi5B,gBAAkBj5B,KAAKi5B,iBACxB,kBAAC,GAAD,CACI/mB,OAAQ2R,EACRkS,eAAgBA,EAChB5F,MAAOA,EACP4E,UAAWA,EACXjY,QAAS9c,KAAK86B,6BAItBtiB,EAAUxY,KAAKi5B,iBACRS,GACP15B,KAAKk5B,YAAcl5B,KAAKk5B,aACpB,kBAAC,GAAD,CACIhnB,OAAQ2R,EACRkS,eAAgBA,EAChB5F,MAAOA,EACP4E,UAAWA,EACXjY,QAAS9c,KAAKo7B,yBAItB5iB,EAAUxY,KAAKk5B,aACRU,GACP55B,KAAKm5B,aAAen5B,KAAKm5B,cACrB,kBAAC,GAAD,CACIjnB,OAAQ2R,EACRkS,eAAgBA,EAChB5F,MAAOA,EACP4E,UAAWA,EACXjY,QAAS9c,KAAKs7B,0BAItB9iB,EAAUxY,KAAKm5B,cACRU,GACP75B,KAAKo5B,aAAep5B,KAAKo5B,cACrB,kBAAC,GAAD,CACIlnB,OAAQ2R,EACRkS,eAAgBA,EAChB5F,MAAOA,EACP4E,UAAWA,EACXjY,QAAS9c,KAAKw7B,0BAItBhjB,EAAUxY,KAAKo5B,cACRU,GACP95B,KAAKq5B,iBAAmBr5B,KAAKq5B,kBACzB,kBAAC,GAAD,CACInnB,OAAQ2R,EACRkS,eAAgBA,EAChB5F,MAAOA,EACP4E,UAAWA,EACXjY,QAAS9c,KAAKk7B,8BAItB1iB,EAAUxY,KAAKq5B,kBAEf7gB,EADO+gB,EAEH,kBAAC,GAAD,CACIrnB,OAAQ2R,EACRsM,MAAOA,EACP4E,UAAWA,EACXjY,QAAS9c,KAAK26B,4BAKlB,kBAAC,GAAD,CACI1d,IAAKjd,KAAKy7B,WACVvpB,OAAQ2R,EACRsM,MAAOA,EACP7P,WAAYgZ,IAAepnB,EAC3BghB,SAAUA,EACVC,iBAAkBA,EAClBwI,oBAAqB37B,KAAK06B,wBAC1BkB,mBAAoB57B,KAAK+6B,uBACzBc,sBAAuB77B,KAAK66B,0BAC5BiB,kBAAmB97B,KAAKw6B,sBACxBuB,kBAAmB/7B,KAAKm7B,sBACxBa,mBAAoBh8B,KAAKq7B,uBACzBY,mBAAoBj8B,KAAKu7B,uBACzBW,uBAAwBl8B,KAAKi7B,2BAC7Bne,QAAS9c,KAAK64B,yBAKnB1I,EACH,oCAAG3X,GAEH,yBAAKtV,UAAWkN,IAAW,YAAa,CAAE,gBAAiB+f,GAASjtB,IAAasV,IAW7FmgB,GAASva,aAAe,CACpBlb,UAAW,KACXmO,QAAS,KACT8e,OAAO,GAGIwI,U,iBCpQA1mB,qBAnHf,cAA4BpQ,IAAMC,UAAW,eAAD,oBAkCxCq6B,2BAA6B/3B,IACNpE,KAAKwC,MAAhB0P,SAEO9N,EAAO8N,SAClBlS,KAAKo8B,aAAeh4B,EAAOi4B,WAC3Br8B,KAAKya,gBAvC2B,KA2CxCiD,uBAAyBtZ,IACrBpE,KAAKya,eA5C+B,KA+CxC6hB,aAAel4B,IAAW,MACd8N,EAAWlS,KAAKwC,MAAhB0P,OACA2hB,EAASzvB,EAATyvB,KAEFtV,EAAOR,KAAUlS,IAAIqG,GAC3B,IAAKqM,EAAM,OACX,GAAIiC,aAActO,GAAS,OANN,MAQbqqB,EAAiBhe,EAAjBge,aACHA,GAEcA,EAAX5P,OACG3W,UAAY6d,EAAK3zB,IAE5BF,KAAKya,eA7D+B,KAgExC+hB,SAAWp4B,IACYpE,KAAKwC,MAAhB0P,SAEO9N,EAAO6S,SAEtBjX,KAAKya,eApETmD,sBAAsBC,EAAWC,GAAY,MAAD,EAClB9d,KAAKwC,MAAnB0P,EADgC,EAChCA,OAAQG,EADwB,EACxBA,EAEhB,OAAIwL,EAAU3L,SAAWA,GAIrB2L,EAAUxL,IAAMA,EAOxBrP,oBACI+a,KAAU/Q,GAAG,mCAAoChN,KAAK0d,wBACtDK,KAAU/Q,GAAG,2BAA4BhN,KAAKm8B,4BAC9Cpe,KAAU/Q,GAAG,yBAA0BhN,KAAKw8B,UAC5Cze,KAAU/Q,GAAG,wBAAyBhN,KAAKw8B,UAC3Cze,KAAU/Q,GAAG,sBAAuBhN,KAAKw8B,UACzCze,KAAU/Q,GAAG,uBAAwBhN,KAAKw8B,UAC1CvmB,IAAUjJ,GAAG,aAAchN,KAAKs8B,cAGpCrvB,uBACI8Q,KAAU3Q,IAAI,mCAAoCpN,KAAK0d,wBACvDK,KAAU3Q,IAAI,2BAA4BpN,KAAKm8B,4BAC/Cpe,KAAU3Q,IAAI,yBAA0BpN,KAAKw8B,UAC7Cze,KAAU3Q,IAAI,wBAAyBpN,KAAKw8B,UAC5Cze,KAAU3Q,IAAI,sBAAuBpN,KAAKw8B,UAC1Cze,KAAU3Q,IAAI,uBAAwBpN,KAAKw8B,UAyC/Cv5B,SAAU,MAAD,EACiBjD,KAAKwC,MAAnB0P,EADH,EACGA,OAAQG,EADX,EACWA,EAEhB,GAAIrS,KAAKo8B,aAAc,OAAO,yBAAKl5B,UAAU,kBAAkB,QAE/D,MAAMqb,EAAOR,KAAUlS,IAAIqG,GAC3B,IAAKqM,EAAM,OAAO,yBAAKrb,UAAU,kBAAkB,QAEnD,IAAIu5B,EAAiB,KACrB,MAAMC,EAAeC,YAAoBzqB,GAKzC,GAJIwqB,IACAD,EAAiB,0BAAMv5B,UAAU,yBAAyBw5B,KAGzDD,EAAgB,CACjB,MAAMG,EAAQC,YAAa3qB,GAC3B,GAAI4qB,aAAc5qB,GAAS,CACvB,MAAM7E,EAAOuvB,EAAMvvB,MAAQ,OAE3BovB,EACI,oCACI,0BAAMv5B,UAAU,wBAAwBmP,EAAE,SAAW,MACpDhF,IAMjB,IAAKovB,EAAgB,CACjB,MAAMjkB,EAAUukB,YAAsBxe,EAAMlM,IAAM,OAC5C2qB,EAAaC,YAAyB1e,EAAMlM,GAClDoqB,EACI,oCACKO,GAAc,0BAAM95B,UAAU,yBAAyB85B,EAAzC,MACdxkB,GAKb,OAAO,yBAAKtV,UAAU,kBAAkBu5B,MC1HjCj5B,gBACX,uBAAG05B,YAAY,IAAIC,KAAK,OAAOC,SAAS,WACpC,0BAAMC,GAAG,OAAOC,GAAG,OAAOC,GAAG,IAAIC,GAAG,KAAKt9B,GAAG,UAAUg9B,YAAY,OAAOO,cAAc,UACvF,0BACIh6B,EAAE,yfACFy5B,YAAY,OACZO,cAAc,QACdC,eAAe,WAGvB,O,OC8HWC,OA7Hf,cAA0B97B,IAAMC,UAAW,eAAD,oBA6CtCq6B,2BAA6B/3B,IACNpE,KAAKwC,MAAhB0P,SAEO9N,EAAO8N,SAClBlS,KAAKo8B,aAAeh4B,EAAOi4B,WAC3Br8B,KAAKya,gBAlDyB,KAsDtCiD,uBAAyBtZ,IACrBpE,KAAKya,eAvD6B,KA0DtC+hB,SAAWp4B,IAAW,MACV8N,EAAWlS,KAAKwC,MAAhB0P,OAEJ9N,EAAO6S,UAAY/E,GAEvBlS,KAAKya,eA/D6B,KAkEtCqG,kCAAoC1c,IAAW,MACnC8N,EAAWlS,KAAKwC,MAAhB0P,OAEFqM,EAAOR,KAAUlS,IAAIqG,GAC3B,GAAKqM,EAEL,OAAQna,EAAO2c,MAAM,UACjB,IAAK,sCAC0B,uBAAvBxC,EAAKC,KAAK,UAA4D,uBAAvBD,EAAKC,KAAK,UACzDxe,KAAKya,cAET,MAEJ,IAAK,wCAC0B,oBAAvB8D,EAAKC,KAAK,UAAyD,mBAAvBD,EAAKC,KAAK,UACtDxe,KAAKya,gBAhFrBmD,sBAAsBC,EAAWC,GAAY,MAAD,EACX9d,KAAKwC,MAA1B0P,EADgC,EAChCA,OAAQ0rB,EADwB,EACxBA,SAEhB,OAAI/f,EAAU3L,SAAWA,GAIrB2L,EAAU+f,WAAaA,EAO/B56B,oBACI+a,KAAU/Q,GAAG,mCAAoChN,KAAK0d,wBACtDK,KAAU/Q,GAAG,2BAA4BhN,KAAKm8B,4BAC9Cpe,KAAU/Q,GAAG,yBAA0BhN,KAAKw8B,UAC5Cze,KAAU/Q,GAAG,6BAA8BhN,KAAKw8B,UAChDze,KAAU/Q,GAAG,qBAAsBhN,KAAKw8B,UACxCze,KAAU/Q,GAAG,iCAAkChN,KAAKw8B,UACpDze,KAAU/Q,GAAG,sBAAuBhN,KAAKw8B,UACzCze,KAAU/Q,GAAG,wBAAyBhN,KAAKw8B,UAC3Cze,KAAU/Q,GAAG,uBAAwBhN,KAAKw8B,UAC1Cze,KAAU/Q,GAAG,+BAAgChN,KAAKw8B,UAClDze,KAAU/Q,GAAG,2BAA4BhN,KAAKw8B,UAC9Clb,KAAkBtU,GAAG,kCAAmChN,KAAK8gB,mCAGjE7T,uBACI8Q,KAAU3Q,IAAI,mCAAoCpN,KAAK0d,wBACvDK,KAAU3Q,IAAI,2BAA4BpN,KAAKm8B,4BAC/Cpe,KAAU3Q,IAAI,yBAA0BpN,KAAKw8B,UAC7Cze,KAAU3Q,IAAI,6BAA8BpN,KAAKw8B,UACjDze,KAAU3Q,IAAI,qBAAsBpN,KAAKw8B,UACzCze,KAAU3Q,IAAI,iCAAkCpN,KAAKw8B,UACrDze,KAAU3Q,IAAI,sBAAuBpN,KAAKw8B,UAC1Cze,KAAU3Q,IAAI,wBAAyBpN,KAAKw8B,UAC5Cze,KAAU3Q,IAAI,uBAAwBpN,KAAKw8B,UAC3Cze,KAAU3Q,IAAI,+BAAgCpN,KAAKw8B,UACnDze,KAAU3Q,IAAI,2BAA4BpN,KAAKw8B,UAC/Clb,KAAkBlU,IAAI,kCAAmCpN,KAAK8gB,mCA8ClE7d,SACI,GAAIjD,KAAKo8B,aAAc,OAAO,KADzB,QAGwBp8B,KAAKwC,MAA1B0P,EAHH,EAGGA,OAAQ0rB,EAHX,EAGWA,SAEVrf,EAAOR,KAAUlS,IAAIqG,GAC3B,IAAKqM,EAAM,OAAO,KANb,MAQGsf,EAAiBtf,EAAjBsf,aACFC,EAAWC,YAAa7rB,EAAQ0rB,GAEhCI,EAAyBC,aAA2B/rB,GACpDgsB,EAAkBC,aAAoBjsB,GACtC0O,EAAUC,YAAY3O,GAE5B,OACI,oCACK8rB,GACG,yBAAK96B,UAAU,gBACX,yBAAKA,UAAU,wBAAf,MAGPg7B,GACG,yBAAKh7B,UAAWkN,IAAW,CAAE,qBAAsBwQ,GAAW,iBAC1D,0BAAM1d,UAAU,qBAAqB26B,EAAe,EAAIA,EAAe,KAG9EC,IAAaI,IAAoBF,GAC9B,yBAAK96B,UAAU,uBACX,kBAACk7B,GAAD,CAASl7B,UAAU,iCChI5BM,gBACX,uBAAG66B,OAAO,OAAOnB,YAAY,IAAIC,KAAK,OAAOC,SAAS,WAClD,uBAAGkB,UAAU,iCAAiCnB,KAAK,UAAUC,SAAS,WAClE,0BAAM35B,EAAE,0iBAGhB,SCLWD,gBACX,uBAAG05B,YAAY,IAAIC,KAAK,OAAOC,SAAS,UAAUK,cAAc,QAAQC,eAAe,SACnF,uBAAGY,UAAU,kCACT,4BAAQpB,YAAY,MAAMqB,GAAG,KAAKC,GAAG,IAAIvY,EAAE,MAC3C,0BAAMoX,GAAG,KAAKC,GAAG,MAAMC,GAAG,KAAKC,GAAG,IAAIN,YAAY,QAClD,0BAAMG,GAAG,KAAKC,GAAG,IAAIC,GAAG,KAAKC,GAAG,IAAIN,YAAY,UAGxD,WCTW15B,gBACX,0BACI86B,UAAU,kCACV76B,EAAE,8iBAEN,QCLWD,gBACX,0BACI86B,UAAU,kCACV76B,EAAE,ylCAEN,a,OCgGWg7B,OA5Ff,cAAqB58B,IAAMC,UAAW,eAAD,oBACjCC,MAAQ,GADyB,KAmCjCksB,oBAAsB7pB,IAAW,MAAD,EACEpE,KAAKwC,MAA3B0P,EADoB,EACpBA,OAAQiU,EADY,EACZA,UACRuY,EAA4Bt6B,EAA5Bs6B,eAAgBhnB,EAAYtT,EAAZsT,QAExB,GAAIyO,IAAcuY,EAAgB,OAClC,IAAKhnB,EAAS,OALc,MAOpBT,EAA+BS,EAA/BT,QAAS/W,EAAsBwX,EAAtBxX,GAAIy+B,EAAkBjnB,EAAlBinB,cACjBzsB,IAAW+E,IAEfjX,KAAK4+B,aAAe1+B,EACpBF,KAAKyC,SAAS,CAAEo8B,aAAcF,MA9CD,KAiDjCG,uBAAyB16B,IAAW,MAAD,EACDpE,KAAKwC,MAA3B0P,EADuB,EACvBA,OAAQiU,EADe,EACfA,UACRlP,EAAyC7S,EAAzC6S,QAAS8nB,EAAgC36B,EAAhC26B,4BACTH,EAAiB5+B,KAAjB4+B,aAEJ1sB,IAAW+E,IAEV2nB,GAAgBA,GAAgBG,GAAgC5Y,GAAa4Y,IAC9E/+B,KAAKyC,SAAS,CAAEo8B,aAAc,KAAMG,QAAQ,KAtDpD,gCAAgCx8B,EAAOT,GAAQ,MACnCmQ,EAAsB1P,EAAtB0P,OAAQiU,EAAc3jB,EAAd2jB,UAEVzO,EAAUY,IAAazM,IAAIqG,EAAQiU,GACnC0Y,EAAennB,EAAUA,EAAQinB,cAAgB,KAEvD,OAAIzsB,IAAWnQ,EAAM6d,YAAcuG,IAAcpkB,EAAMk9B,cAC5C,CACHrf,WAAY1N,EACZ+sB,cAAe9Y,EACf0Y,eACAG,OAAQE,aAAgBhtB,EAAQiU,IAIjC,KAGXnjB,oBACI+a,KAAU/Q,GAAG,uBAAwBhN,KAAK8+B,wBAE1CxmB,IAAatL,GAAG,0BAA2BhN,KAAKiuB,qBAChD3V,IAAatL,GAAG,6BAA8BhN,KAAKiuB,qBAGvDhhB,uBACI8Q,KAAU3Q,IAAI,uBAAwBpN,KAAK8+B,wBAE3CxmB,IAAalL,IAAI,0BAA2BpN,KAAKiuB,qBACjD3V,IAAalL,IAAI,6BAA8BpN,KAAKiuB,qBA6BxDhrB,SAAU,MAAD,EAC4BjD,KAAK+B,MAA9B88B,EADH,EACGA,aACR,OAFK,EACiBG,OAKlBH,EACiC,8BAA1BA,EAAa,SAChB,kBAAC,GAAD,CACI37B,UAAU,SACVi8B,QAAQ,YACR73B,MAAO,CAAE2J,MAAO,GAAI8I,OAAQ,GAAIukB,UAAW,uBAG/C,kBAACc,GAAD,CACIl8B,UAAU,SACVi8B,QAAQ,YACR73B,MAAO,CAAE2J,MAAO,GAAI8I,OAAQ,GAAIukB,UAAW,oBAAqBD,OAAQ,kBAK7E,kBAACgB,GAAD,CAAUn8B,UAAU,SAASi8B,QAAQ,YAAY73B,MAAO,CAAE2J,MAAO,GAAI8I,OAAQ,KAnBzE,kBAACulB,GAAD,CAAep8B,UAAU,SAASi8B,QAAQ,YAAY73B,MAAO,CAAE2J,MAAO,GAAI8I,OAAQ,O,OCoBtF9H,qBAxFf,cAAyBpQ,IAAMC,UAAW,eAAD,oBAmCrCq6B,2BAA6B/3B,IACNpE,KAAKwC,MAAhB0P,SAEO9N,EAAO8N,SAClBlS,KAAKo8B,aAAeh4B,EAAOi4B,WAC3Br8B,KAAKya,gBAxCwB,KA4CrCiD,uBAAyBtZ,IACrBpE,KAAKya,eA7C4B,KAgDrC+hB,SAAWp4B,IACYpE,KAAKwC,MAAhB0P,SAEO9N,EAAO6S,SAEtBjX,KAAKya,eApDTmD,sBAAsBC,EAAWC,GAAY,MAAD,EAClB9d,KAAKwC,MAAnB0P,EADgC,EAChCA,OAAQG,EADwB,EACxBA,EAEhB,OAAIwL,EAAU3L,SAAWA,GAIrB2L,EAAUxL,IAAMA,EAOxBrP,oBACI+a,KAAU/Q,GAAG,mCAAoChN,KAAK0d,wBACtDK,KAAU/Q,GAAG,2BAA4BhN,KAAKm8B,4BAC9Cpe,KAAU/Q,GAAG,yBAA0BhN,KAAKw8B,UAC5Cze,KAAU/Q,GAAG,wBAAyBhN,KAAKw8B,UAC3Cze,KAAU/Q,GAAG,sBAAuBhN,KAAKw8B,UACzCze,KAAU/Q,GAAG,+BAAgChN,KAAKw8B,UAClDze,KAAU/Q,GAAG,2BAA4BhN,KAAKw8B,UAGlDvvB,uBACI8Q,KAAU3Q,IAAI,mCAAoCpN,KAAK0d,wBACvDK,KAAU3Q,IAAI,2BAA4BpN,KAAKm8B,4BAC/Cpe,KAAU3Q,IAAI,yBAA0BpN,KAAKw8B,UAC7Cze,KAAU3Q,IAAI,wBAAyBpN,KAAKw8B,UAC5Cze,KAAU3Q,IAAI,sBAAuBpN,KAAKw8B,UAC1Cze,KAAU3Q,IAAI,+BAAgCpN,KAAKw8B,UACnDze,KAAU3Q,IAAI,2BAA4BpN,KAAKw8B,UAwBnDv5B,SACI,GAAIjD,KAAKo8B,aAAc,OAAO,KADzB,MAGGlqB,EAAWlS,KAAKwC,MAAhB0P,OAEFqM,EAAOR,KAAUlS,IAAIqG,GAC3B,IAAKqM,EAAM,OAAO,KAElB,MAAMmV,EAAOrT,aAASnO,GAEdqqB,EAAiBhe,EAAjBge,aACR,IAAKA,EAAc,OAAO,KAE1B,MAAMvT,EAAOuW,YAAmBhhB,GAChC,IAAKyK,EAAM,OAAO,KAdb,MAgBG9oB,EAAoBq8B,EAApBr8B,GAAIs/B,EAAgBjD,EAAhBiD,YAEZ,OACI,yBAAKt8B,UAAU,eACVs8B,IAAgB9L,GACb,oCACI,kBAAC,GAAD,CAAQxhB,OAAQA,EAAQiU,UAAWjmB,IACnC,oCAGP8oB,MCvFFxlB,gBACX,0BAAMC,EAAE,s7CACR,WCFWD,gBACX,0BAAMC,EAAE,i3CACR,aCFWD,gBACX,0BAAMC,EAAE,2uCACR,QCFWD,gBACX,uBAAG25B,KAAK,OAAOkB,OAAO,eAAenB,YAAY,IAAIO,cAAc,QAAQC,eAAe,QAAQY,UAAU,iCACxG,0BAAM76B,EAAE,usBAEZ,UCJWD,gBACX,0BAAMC,EAAE,0+CACR,QCFWD,gBACX,0BAAMC,EAAE,0pBACR,UCFWD,gBACX,0BAAMC,EAAE,27BACR,QCFWD,gBACX,0BAAMC,EAAE,k7DACR,SCFWD,gBACX,0BAAMC,EAAE,qfACR,WCFWD,gBACX,0BAAMC,EAAE,klCACR,U,iBCkDJ,MAAMg8B,WAAe39B,YAGjBlC,YAAY4C,GAAQ,IAAD,EACf0B,MAAM1B,GADS,YAiEnBs2B,qBAAuB10B,IAAW,MACtB8N,EAAWlS,KAAKwC,MAAhB0P,OAEJA,IAAW9N,EAAOs7B,gBAAkBxtB,IAAW9N,EAAO20B,YACtD/4B,KAAKya,eArEM,KAyEnBoa,aAAexwB,IACU,IAAjBA,EAAMmd,QACN4E,YAASpmB,KAAKwC,MAAM0P,SA3ET,KA+EnBytB,kBA/EmB,sCA+EC,WAAMt7B,GAAN,iCAAAqO,EAAA,wDACZrO,IACAA,EAAM6B,iBACN7B,EAAM4B,mBAHM,EAKa,EAAKzD,MAA1B0P,EALQ,EAKRA,OAAQ0rB,EALA,EAKAA,UACQ,EAAK77B,MAArB6lB,YANQ,gBASZ,EAAKnlB,SAAS,CAAEmlB,aAAa,IATjB,8BAWNgY,EAAgB,IAAI1W,KAC1BuW,GAAOG,cAAgBA,EAEjBr4B,EAAOlD,EAAM4F,QACbxC,EAAMpD,EAAM6F,QACZ4zB,EAAWC,YAAa7rB,EAAQ0rB,GAhB1B,UAiBgB,EAAKiC,YAAY3tB,GAjBjC,kDAiB6C4rB,EAjB7C,WAiBNgC,EAjBM,KAkBNC,EAAmBC,YAAiB9tB,GACpC+tB,GAAW5f,aAASnO,GAEtButB,GAAOG,gBAAkBA,EArBjB,mDAyBZ,EAAKn9B,SAAS,CACVmlB,aAAa,EACbkY,eACAC,mBACAE,UACA14B,OACAE,QA/BQ,0CA/ED,2DAmHnBogB,uBAAyBxjB,IACjBA,GACAA,EAAM4B,kBAGVjG,KAAKyC,SAAS,CAAEmlB,aAAa,KAxHd,KA2HnBpiB,WAAanB,IACTrE,KAAK6nB,uBAAuBxjB,GADV,MAGV6N,EAAWlS,KAAKwC,MAAhB0P,OAERiP,aAA+BjP,GAAS2O,YAAY3O,KAhIrC,KAmInB2tB,YAnImB,sCAmIL,WAAM3tB,GAAN,uBAAAQ,EAAA,wDACFkrB,EAAa,EAAKp7B,MAAlBo7B,SAEFsC,EAAqBC,YAAejuB,GACpC0C,IAAY/I,IAAI,kCAChB+I,IAAY/I,IAAI,yBALZ,0CAMsB,GANtB,cAQJu0B,EAAWC,aAAanuB,GARpB,SASU9P,IAAgBC,KAAK,CACrC,QAAS,WACTi+B,UAAW1C,EACXjoB,aAAc,sBACdC,eAAgB,EAChBC,MAAOqqB,EAAmB31B,MAAQ,KAd5B,cASJgM,EATI,OAiBJgqB,EAAYhqB,EAAMG,SAAS8pB,OAAO,CAAC7/B,EAAGT,KACxC,GAAImgC,aAAangC,KAAQkgC,EAAU,OAAOz/B,EAE1C,MAAM4d,EAAOR,KAAUlS,IAAI3L,GAE3B,OAAOS,GAAK4d,GAAQwf,YAAaxf,EAAKre,GAAI09B,GAAY,EAAI,IAC3D,GAvBO,kBAyBH2C,EAAYL,EAAmB31B,OAzB5B,0CAnIK,2DA+JnBk2B,UA/JmB,sCA+JP,WAAMp8B,GAAN,qBAAAqO,EAAA,wDACR,EAAKmV,uBAAuBxjB,GADpB,EAGqB,EAAK7B,MAA1B0P,EAHA,EAGAA,OAAQ0rB,EAHR,EAGQA,UACVE,EAAWC,YAAa7rB,EAAQ0rB,KAEpB,EAAKiC,YAAY3tB,GAN3B,iDAQRwuB,aAAmBxuB,EAAQ0rB,GAAWE,GAR9B,yCA/JO,2DA0KnB6C,cA1KmB,sCA0KH,WAAMt8B,GAAN,eAAAqO,EAAA,wDACZ,EAAKmV,uBAAuBxjB,GAEpB6N,EAAW,EAAK1P,MAAhB0P,OACH8tB,YAAiB9tB,GAJV,iDAMZ0uB,aAAc1uB,EAAQ,CAAE,QAASiuB,YAAejuB,GAAU,eAAiB,oBAN/D,yCA1KG,2DAmLnB2uB,eAAiBx8B,IACbrE,KAAK6nB,uBAAuBxjB,GADN,MAGd6N,EAAWlS,KAAKwC,MAAhB0P,OAERkU,YAASlU,EAAQ,MAAM,IAxLR,KA2LnB4uB,WAAaz8B,IACTrE,KAAK6nB,uBAAuBxjB,GADV,MAGV6N,EAAWlS,KAAKwC,MAAhB0P,OAGR,GADiB6uB,aAAa7uB,GAChB,CACV,MAAMqM,EAAOR,KAAUlS,IAAIqG,GAC3B,IAAKqM,EAAM,OAFD,MAIFyiB,EAAoDziB,EAApDyiB,oBAAqBzE,EAA+Bhe,EAA/Bge,aAA+Bhe,EAAjBsf,aACxB,GAAKtB,EACpB0E,aAAa/uB,EAAQ,CAACqqB,EAAar8B,KAAK,GACjC8gC,GACPE,aAA2BhvB,GAAQ,QAGvCgvB,aAA2BhvB,GAAQ,IA5MxB,KAgNnBivB,iBAAmB98B,IACfrE,KAAK6nB,uBAAuBxjB,GADJ,MAGhB6N,EAAWlS,KAAKwC,MAAhB0P,OAERkvB,aAAUlvB,IAlNVlS,KAAKqhC,OAASx/B,IAAMya,YAEpB,MAAMiC,EAAOR,KAAUlS,IAAI7L,KAAKwC,MAAM0P,QACtClS,KAAK+B,MAAQ,CACTwc,OACAqJ,aAAa,EACbrgB,KAAM,EACNE,IAAK,GAIbmW,sBAAsBC,EAAWC,GAAY,MAAD,EACqB9d,KAAKwC,MAA1D0P,EADgC,EAChCA,OAAQG,EADwB,EACxBA,EAAGhK,EADqB,EACrBA,OAAQi5B,EADa,EACbA,aAAc1D,EADD,EACCA,SAAUt2B,EADX,EACWA,MAC3CsgB,EAAgB5nB,KAAK+B,MAArB6lB,YAER,OAAI/J,EAAU3L,SAAWA,IAKrB2L,EAAUxL,IAAMA,IAKhBwL,EAAUxV,SAAWA,IAKrBwV,EAAUyjB,eAAiBA,IAK3BxjB,EAAU8J,cAAgBA,IAK1B9J,EAAU8f,WAAaA,MAKvB/f,EAAUvW,QAASA,GAASA,EAAMG,MAAQoW,EAAUvW,MAAMG,UASlEzE,oBACIu+B,KAAiBv0B,GAAG,qBAAsBhN,KAAK84B,sBAGnD7rB,uBACIs0B,KAAiBn0B,IAAI,qBAAsBpN,KAAK84B,sBA0JpD71B,SAAU,MAAD,EAC2EjD,KAAKwC,MAA7E0P,EADH,EACGA,OAAQ0rB,EADX,EACWA,SAAU5f,EADrB,EACqBA,kBAAmB3V,EADxC,EACwCA,OAAQgK,EADhD,EACgDA,EAAiB/K,GADjE,EACmDg6B,aADnD,EACiEh6B,OADjE,EAEuEtH,KAAK+B,MAAzE6lB,EAFH,EAEGA,YAAargB,EAFhB,EAEgBA,KAAME,EAFtB,EAEsBA,IAAKs4B,EAF3B,EAE2BA,iBAAkBD,EAF7C,EAE6CA,aAAcG,EAF3D,EAE2DA,QAE1DuB,EAAaC,YAAcvvB,GAC3BwvB,EAAkBC,YAAmBzvB,EAAQG,GAE7CyrB,EAAWC,YAAa7rB,EAAQ0rB,GAEhCgE,EADgBL,KAAiBM,cACF3vB,EAC/B0O,EAAUC,YAAY3O,GACtB4vB,EAAWf,aAAa7uB,GACxB6vB,EAAa5B,YAAejuB,GAClC,OACI,kBAACqP,GAAA,EAAD,CACIC,QAAM,EACNte,UAAWkN,IAAW,SAAU,CAAE,gBAAiBwxB,GAAc,CAAE,gBAAiBv5B,IACpFgI,YAAarQ,KAAK60B,aAClBnM,cAAe1oB,KAAK2/B,kBACpBr4B,MAAOA,GAEH,yBAAKpE,UAAU,kBACX,kBAACsP,EAAA,EAAD,CAAUN,OAAQA,EAAQmvB,QAAM,EAACrjB,kBAAmBA,EAAmBgkB,YAAU,IACjF,yBAAK9+B,UAAU,wBACX,yBAAKA,UAAU,kBACX,kBAAC,GAAD,CAAagP,OAAQA,IACrB,kBAAC,GAAD,CAAYA,OAAQA,KAExB,yBAAKhP,UAAU,mBACX,kBAAC,GAAD,CAAegP,OAAQA,IACvB,kBAAC,GAAD,CAAaA,OAAQA,EAAQ0rB,SAAUA,OAInD,kBAAC/W,GAAA,EAAD,CACInK,KAAMkL,EACN9K,QAAS9c,KAAK6nB,uBACdf,gBAAgB,iBAChBL,eAAgB,CAAEhf,MAAKF,QACvBwf,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QAEhB5W,YAAaQ,GAAKA,EAAE5K,mBACpB,kBAACkhB,GAAA,EAAD,CAAU5W,QAASM,GAAKA,EAAE5K,mBACrB85B,GACG,kBAAC3Y,GAAA,EAAD,CAAU7W,QAASvQ,KAAK2gC,eACnBoB,EACG,oCACI,kBAACrgB,GAAA,EAAD,KACI,kBAACugB,GAAD,OAEJ,kBAAClgB,GAAA,EAAD,CAAcC,QAAS3P,EAAE,gBAG7B,oCACI,kBAACqP,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACK,GAAA,EAAD,CAAcC,QAAS3P,EAAE,eAKxCytB,GACG,kBAAC1Y,GAAA,EAAD,CAAU7W,QAASvQ,KAAKygC,WACnB3C,EACG,oCACI,kBAACpc,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACK,GAAA,EAAD,CAAcC,QAAS3P,EAAE,mBAG7B,oCACI,kBAACqP,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACK,GAAA,EAAD,CAAcC,QAAS3P,EAAE,gBAKzC,kBAAC+U,GAAA,EAAD,CAAU7W,QAASvQ,KAAK6gC,gBACpB,kBAACnf,GAAA,EAAD,KACKlB,aAActO,GAAU,kBAAC,GAAD,MAAe,kBAACgwB,GAAD,OAE5C,kBAACngB,GAAA,EAAD,CAAcC,QAASmgB,YAAiBjwB,EAAQG,MAElD4tB,GACE,kBAAC7Y,GAAA,EAAD,CAAU7W,QAASvQ,KAAKwF,YACnBob,EACG,oCACI,kBAACc,GAAA,EAAD,KACI,kBAAC0gB,GAAD,OAEJ,kBAACrgB,GAAA,EAAD,CAAcC,QAAS3P,EAAE,kBAG7B,oCACI,kBAACqP,GAAA,EAAD,KACI,kBAAC2gB,GAAD,OAEJ,kBAACtgB,GAAA,EAAD,CAAcC,QAAS3P,EAAE,iBAKzC,kBAAC+U,GAAA,EAAD,CAAU7W,QAASvQ,KAAK8gC,YACnBgB,EACG,oCACI,kBAACpgB,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACK,GAAA,EAAD,CAAcC,QAAS3P,EAAE,iBAG7B,oCACI,kBAACqP,GAAA,EAAD,KACI,kBAAC4gB,GAAD,OAEJ,kBAACvgB,GAAA,EAAD,CAAcC,QAAS3P,EAAE,oBAYpCmvB,GAAcE,GACX,kBAACta,GAAA,EAAD,CAAU7W,QAASvQ,KAAKmhC,kBACpB,kBAACzf,GAAA,EAAD,KACI,kBAAC4F,GAAD,OAEJ,kBAACvF,GAAA,EAAD,CAAcC,QAAS0f,SAmB3DjC,GAAOrhB,aAAe,CAClB/V,QAAQ,EACR2V,mBAAmB,GAGR/L,qBAAkBwtB,I,OC1YlB8C,OAvCf,cAAgC1gC,IAAMC,UAClCmB,SAAU,MAAD,EACgCjD,KAAKwC,MAAlC0P,EADH,EACGA,OAAQyR,EADX,EACWA,MAAOxD,EADlB,EACkBA,UAEvB,IAAIhC,EAAQ,KACRgC,IACAhC,EAAQlC,YAAa/J,GAAQ,IAGjC,MAAMswB,EAAU,UAAM,GAAuB,GAAlBzhC,KAAKW,IAAIiiB,GAApB,KACV8e,EAAY,UAAM,GAAuB,GAAlB1hC,KAAK2hC,IAAI/e,GAApB,KAElB,OACI,yBAAKzgB,UAAU,sBACX,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,4BACf,yBAAKA,UAAU,oCACX,yBAAKA,UAAU,kBACVid,EACGhC,EAEA,yBAAKjb,UAAU,2BAA2BoE,MAAO,CAAE2J,MAAOuxB,MAGlE,yBAAKt/B,UAAU,mBACX,yBAAKA,UAAU,6BAA6BoE,MAAO,CAAE2J,MAAOwxB,W,+jBC3BxF,MAAMn7B,GAAQ,CACVq7B,YAAa5oB,IAAM,CACfA,SACAzG,SAAU,aAEd6Q,KAAM,CAACR,EAAO5J,KAAR,CACFA,SACAxS,KAAM,EACNq7B,MAAO,EACPn7B,IAAKsS,EAAS4J,EACdrQ,SAAU,cAIX,MAAMuvB,WAAwBhhC,IAAMC,UACvClC,YAAY4C,GACR0B,MAAM1B,GADS,KAgDnBsgC,kBAAoB,KAAO,MACfz/B,EAAWrD,KAAKwC,MAAhBa,OACAmqB,EAAcxtB,KAAK+B,MAAnByrB,UACAxU,EAAYhZ,KAAK0tB,QAAjB1U,QACR,IAAKA,EAAS,OAEd,MAAM4U,EAAiBmV,WAAWj2B,OAAOk2B,iBAAiBhqB,EAAS,MAAMiqB,iBAAiB,WACpFlV,EAAY/tB,KAAKguB,aAAa3qB,EAAQuqB,EAAgBJ,GAG5DxtB,KAAKyC,SAAL,IAAgBmrB,kBAAmBG,KA1DpB,KAwFnBiB,kBAAoB3qB,IAAU,MAAD,EACerE,KAAKwC,MAArCa,EADiB,EACjBA,OAAQirB,EADS,EACTA,UAAWgG,EADF,EACEA,SADF,EAEat0B,KAAK+B,MAAnC6rB,EAFiB,EAEjBA,eAAgBJ,EAFC,EAEDA,UAExB,GAAIzsB,KAAKopB,IAAI9lB,EAAMuD,OAAO4lB,UAAYA,IAAcc,EAAW,CAC3D,MAAMP,EAAY/tB,KAAKguB,aAAa3qB,EAAQuqB,EAAgBvpB,EAAMuD,OAAO4lB,WAEzExtB,KAAKyC,SAAL,IACI+qB,UAAWnpB,EAAMuD,OAAO4lB,WACrBO,IAIPuG,GACAA,EAASjwB,IAtGE,KA8GnB4qB,cAAgB,CAACtL,EAAOiK,EAAgBJ,KAAe,MAAD,EACbxtB,KAAKwC,MAAlC4qB,EAD0C,EAC1CA,cAAekB,EAD2B,EAC3BA,UAKvB,OAHgB3K,EAAQ2K,EAIVd,EAAYJ,EAAgBkB,IAHtB3K,EAAQ,GAAK2K,EAIhBd,EAAYI,EAAiBR,EAAgBkB,GAnH9DtuB,KAAK0tB,QAAU7rB,IAAMya,YAErBtc,KAAK+B,MAAQ,CACTyrB,UAAW,EACXO,UAAW,IAAIjZ,IACf8b,cAAe,GACfhD,eAAgB,GAIxBhrB,mBAAmBC,EAAWC,EAAWC,GACjCF,EAAUQ,SAAWrD,KAAKwC,MAAMa,QAChCrD,KAAK8iC,oBAIbllB,sBAAsBC,EAAWC,EAAWoK,GACxC,OAAO,EAkBXllB,oBACI8J,OAAOC,iBAAiB,SAAU/M,KAAK8iC,mBAAmB,GAD1C,MAGR9pB,EAAYhZ,KAAK0tB,QAAjB1U,QACHA,IACLA,EAAQjM,iBAAiB,SAAU/M,KAAKgvB,mBAAmB,GAE3DhvB,KAAK8iC,qBAgBT9U,aAAa3qB,EAAQuqB,EAAgBJ,GACjC,MAAMO,EAAY,IAAIjZ,IAChB8b,EAAgB,GAQtB,OAPAvtB,EAAOjC,QAAQ,CAAC+iB,EAAMR,KACd3jB,KAAKivB,cAActL,EAAOiK,EAAgBJ,KAC1CO,EAAUvT,IAAImJ,EAAOA,GACrBiN,EAAc9a,KAAK6N,MAIpB,CAAEoK,YAAW6C,iBAGxB3jB,uBACIH,OAAOK,oBAAoB,SAAUnN,KAAK8iC,mBADvB,MAGX9pB,EAAYhZ,KAAK0tB,QAAjB1U,QACHA,GACLA,EAAQ7L,oBAAoB,SAAUnN,KAAKgvB,mBAG/CkU,mBAGI,OAFsBljC,KAAK+B,MAAnBgsB,UAuBZoV,aACI,OAAOnjC,KAAK0tB,QAehBzqB,SAAU,MAAD,EACgDjD,KAAKwC,MAAlDU,EADH,EACGA,UAAWG,EADd,EACcA,OAAQ+/B,EADtB,EACsBA,WAAY9U,EADlC,EACkCA,UAC/BP,EAAc/tB,KAAK+B,MAAnBgsB,UAEFT,GAASjqB,GAAU,IAAIgT,IAAI,CAAC8N,EAAMR,IAC7BoK,EAAU9Y,IAAI0O,IAAUyf,EAAW,CAAEzf,QAAOrc,MAAOA,GAAM6c,KAAKR,EAAO2K,MAKhF,OACI,yBAAKrR,IAAKjd,KAAK0tB,QAASxqB,UAAWkN,IAAW,QAASlN,IACnD,yBAAKoE,MAAOA,GAAMq7B,aAAat/B,GAAU,IAAIqR,OAAS4Z,IACjDhB,KAQrBuV,GAAgBzkB,aAAe,CAC3B/a,OAAQ,GACRirB,UAAW,GACXlB,cAAe,GAYJyV,UCjLR,SAASQ,GAAiBn0B,GAC7B,GAAIA,EAAQo0B,WAAaC,KAAKC,UAC1B,OAAOt0B,EAGX,IAAK,IAAI8F,EAAI9F,EAAQu0B,WAAW/uB,OAAS,EAAGM,GAAK,EAAGA,IAAK,CACrD,MAAM0uB,EAAWL,GAAiBn0B,EAAQu0B,WAAWzuB,IACrD,GAAI0uB,EACA,OAAOA,EAIf,OAAO,KAGJ,SAASC,GAAWz0B,GACvB,IAAKA,EAAS,OAEd,MAAMw0B,EAAWL,GAAiBn0B,GAClC,GAAIw0B,EAAU,CACV,MAAME,EAAQ/8B,SAASg9B,cACvBD,EAAME,SAASJ,EAAUA,EAAShvB,QAClCkvB,EAAMG,UAAS,GAEf,MAAMC,EAAYl3B,OAAOm3B,eACzBD,EAAUE,kBACVF,EAAUG,SAASP,GAGvB10B,EAAQ5F,QAGL,SAASkkB,GAAUte,EAAS0jB,EAAW,UACrC1jB,IAELA,EAAQse,UAAYzsB,KAAKC,IAAIkO,EAAQse,UAAW,IAChDxiB,WAAW,KACPkE,EAAQyjB,SAAS,CAAElrB,IAAK,EAAGmrB,cAC5B,I,+BCpCQpvB,gBACX,0BAAMC,EAAE,2oCACR,WCFWD,gBACX,0BAAMC,EAAE,ypBACR,QCFWD,gBACX,0BAAMC,EAAE,oiDACR,Q,UCFWD,gBACX,0BAAMC,EAAE,0uIACR,Y,SCsBWkZ,OADC,IAzBhB,MACUynB,KAAK7/B,GAAM,OAAD,2GACNgG,EAAQ85B,aAAaC,QAAQ//B,GADvB,yCAEO,MAFP,yCAKDggC,KAAKC,MAAMj6B,IALV,yDAOD,MAPC,yDAWVk6B,KAAKlgC,EAAKgG,GAAQ,OAAD,kGACnB85B,aAAaK,QAAQngC,EAAKggC,KAAKI,UAAUp6B,IADtB,2CAIjBmC,OAAOnI,GAAM,OAAD,kGACd8/B,aAAaO,WAAWrgC,GADV,2CAIZsgC,QAAS,OAAD,kGACVR,aAAaQ,QADH,6CCsUlB,MAAMluB,GAAQ,IA9Ud,cAAyBmuB,KACrBllC,cACIsE,QADU,KAYd6gC,MAAQ,KACJ/kC,KAAK0lB,QAAU,KACf1lB,KAAKyW,QAAU,GACfzW,KAAKglC,eAAiB,GACtBhlC,KAAKilC,OAAS,KACVjlC,KAAKklC,gBACLllC,KAAKmlC,SAAW,MAGpBnlC,KAAKolC,MAAQ,MArBH,KAwBd5I,SAAWp4B,IACP,OAAQA,EAAO,UACX,IAAK,2BAA4B,CAAC,MACtBihC,EAAwBjhC,EAAxBihC,oBACR,IAAKA,EAAqB,MAE1B,OAAQA,EAAoB,UACxB,IAAK,2BACDrlC,KAAK+kC,QACL/kC,KAAK6kC,QACL,MAEJ,IAAK,+BACL,IAAK,6BACL,IAAK,oCACL,IAAK,iCACL,IAAK,qCACDS,GAAa54B,OAAO,SACpB44B,GAAa54B,OAAO,SAChB1M,KAAKklC,eACLI,GAAa54B,OAAO,YAMhC,SAlDE,KAyDd64B,eAAiBnhC,IACb,OAAQA,EAAO,UACX,IAAK,2BACDpE,KAAKwlC,kBA5DH,KAmEdC,iBAAmB,KACfrjC,IAAgB4K,GAAG,SAAUhN,KAAKw8B,UAClCp6B,IAAgB4K,GAAG,eAAgBhN,KAAKulC,iBArE9B,KAwEdG,oBAAsB,KAClBtjC,IAAgBgL,IAAI,SAAUpN,KAAKw8B,UACnCp6B,IAAgBgL,IAAI,eAAgBpN,KAAKulC,iBAvEzCvlC,KAAKklC,eAAgB,EAErBllC,KAAK+kC,QAEL/kC,KAAKylC,mBAELzlC,KAAK2lC,aAAevkB,YAASphB,KAAK2lC,aAAc,KAoE9CvB,OAAQ,IAAD,+IAEH3uB,EAAW,IACRK,KAAKwvB,GAAalB,KAAK,SAAS9tB,MAAMvD,GAAS,OACxD0C,EAASK,KAAKwvB,GAAalB,KAAK,SAAS9tB,MAAMvD,GAAS,OACxD0C,EAASK,KAAKwvB,GAAalB,KAAK,WAAW9tB,MAAMvD,GAAS,OACtD,EAAKmyB,eACLzvB,EAASK,KAAKwvB,GAAalB,KAAK,YAAY9tB,MAAMvD,GAAS,OAPtD,SASqCqD,QAAQ/C,IAAIoC,GATjD,sCASJ2vB,EATI,KASGQ,EATH,KASUlgB,EATV,KASmByf,EATnB,KAWLU,GAAY,GACZT,IAASA,EAAM7uB,MAZV,iBAaIvB,EAAI,EAbR,aAaWA,EAAIowB,EAAM7uB,MAAM7B,QAb3B,sBAcO6nB,EAAiB6I,EAAM7uB,MAAMvB,GAA7BunB,gBACYA,EAAa/M,eAfhC,wBAgBGqW,GAAY,EAhBf,6BAamC7wB,IAbnC,+BAqBL6wB,IACAT,EAAQ,MAGZ,EAAKA,MAAQA,EACT,EAAKA,QACL,EAAKA,MAAMQ,MAAQA,GAAS,IAG5B,EAAKV,eACDC,KACCA,GAAY,IAAI/jC,QAAQT,IACrBsV,IAAUuE,IAAI7Z,KAGlB,EAAKwkC,SAAW,CACZ,QAAS,QACTW,SAAUX,EAAS9uB,IAAI1V,GAAKA,EAAET,IAC9B0vB,YAAauV,EAASzwB,SAKlC,EAAKgR,QAAUA,EAEX,EAAK0f,OACL,EAAKW,WAAW,EAAKX,OA/ChB,kBAmDF,EAAKA,OAnDH,4CAsDbW,WAAWX,GACP,IAAKA,EAAO,OADE,MAGNH,EAAiFG,EAAjFH,OAAQ1uB,EAAyE6uB,EAAzE7uB,MAAOyvB,EAAkEZ,EAAlEY,aAAcrS,EAAoDyR,EAApDzR,MAAOsS,EAA6Cb,EAA7Ca,YAAaC,EAAgCd,EAAhCc,YAAaN,EAAmBR,EAAnBQ,MAAO9lC,EAAYslC,EAAZtlC,SAG5E8lC,GAAS,IAAIrqB,OAAO5a,GAAKspB,QAAQtpB,IAAIS,QAAQ,EAAGlB,KAAI+iB,UACjDrX,IAAUu6B,WAAWjmC,EAAI+iB,MAG5B0Q,GAAS,IAAIvyB,QAAQT,IAClBsV,IAAUuE,IAAI7Z,MAGjBslC,GAAe,IAAI7kC,QAAQT,IACxBge,KAAgBnE,IAAI7Z,MAGvBulC,GAAe,IAAI9kC,QAAQT,IACxBkf,KAAgBrF,IAAI7Z,MAGvB4V,GAAS,IAAI+E,OAAO0qB,GAAgB,IAAI1qB,OAAO,CAAC2pB,IAAS7jC,QAAQT,IAC1DA,WACOA,EAAEylC,oBAETroB,KAAUvD,IAAI7Z,GACVA,EAAE8X,QACE9X,EAAE8X,MAAM4tB,OAAOz6B,IAAU4O,IAAI7Z,EAAE8X,MAAM4tB,OACrC1lC,EAAE8X,MAAMyH,KAAKtU,IAAU4O,IAAI7Z,EAAE8X,MAAMyH,MAEvCvf,EAAE2S,UACFyK,KAAUuoB,oBAAoB3lC,EAAET,IAEhCS,EAAE47B,cACFjkB,IAAakC,IAAI7Z,EAAE47B,kBAK9Bz8B,GAAW,IAAIsB,QAAQ,EAAElB,EAAIqmC,MAC1B3xB,IAAY4F,IAAIta,EAAIqmC,KAItBC,SAAS/vB,EAASuuB,GAAiB,IAAD,2IAC9ByB,EAAU,IAAI3xB,IACd4xB,EAAU,IAAI5xB,IACd6xB,EAAgB,IAAI7xB,IACpB8xB,EAAgB,IAAI9xB,IACpBmwB,EAAS,EAAKA,OACd1uB,EAAQE,EAAQJ,IAAI1V,GAAKod,KAAUlS,IAAIlL,IACvCkmC,EAAU,IAAI/xB,IAAIyB,EAAMF,IAAI1V,GAAK,CAACA,EAAET,GAAIS,KACxCqlC,EAAehB,EAAe3uB,IAAI1V,GAAKod,KAAUlS,IAAIlL,IAE3D4V,EAAM+E,OAAO0qB,GAAc1qB,OAAO,CAAC2pB,IAAS7jC,QAAQT,IAAM,MAC9C8X,EAA8B9X,EAA9B8X,MAAO+F,EAAuB7d,EAAvB6d,KAAM+d,EAAiB57B,EAAjB47B,aACrB,GAAI9jB,GAASA,EAAM4tB,MAAO,CAAC,MACfnmC,EAAOuY,EAAM4tB,MAAbnmC,GACR,GAAIA,EAAI,CACJ,MAAM4mC,EAAOl7B,IAAUm7B,QAAQ7mC,GAC3B4mC,GACAL,EAAQjsB,IAAIta,EAAI4mC,IAK5B,OAAQtoB,EAAK,UACT,IAAK,qBAAsB,CACvB,MAAMwoB,EAAaroB,KAAgB9S,IAAI2S,EAAKK,gBACxCmoB,GACAL,EAAcnsB,IAAIwsB,EAAW9mC,GAAI8mC,GAGzC,IAAK,kBACL,IAAK,iBAAkB,CACnB,MAAMnT,EAAO5d,IAAUpK,IAAI2S,EAAKxI,SAC5B6d,GACA6S,EAAQlsB,IAAIqZ,EAAK3zB,GAAI2zB,GAG7B,IAAK,qBAAsB,CACvB,MAAMlU,EAAaE,KAAgBhU,IAAI2S,EAAKe,eACxCI,GACAinB,EAAcpsB,IAAImF,EAAWzf,GAAIyf,IAK7C,GAAI4c,EAAc,CAAC,MACP5P,EAAW4P,EAAX5P,OACR,OAAQA,EAAO,UACX,IAAK,oBAAqB,CACtB,MAAMkH,EAAO5d,IAAUpK,IAAI8gB,EAAO3W,SAC9B6d,GACA6S,EAAQlsB,IAAIqZ,EAAK3zB,GAAI2zB,GAEzB,MAEJ,IAAK,oBAAqB,CACtB,MAAMtV,EAAOR,KAAUlS,IAAI8gB,EAAO1V,SAC9BsH,GACAsoB,EAAQrsB,IAAI+D,EAAKre,GAAIqe,GAEzB,WA3DoB,kBAiE7B,CACHyK,KAAM,IAAIE,KACV+b,SACA1uB,MAAO,IAAIswB,EAAQI,UACnBjB,eACArS,MAAO,IAAI+S,EAAQO,UACnBhB,YAAa,IAAIU,EAAcM,UAC/Bf,YAAa,IAAIU,EAAcK,UAC/BrB,MAAO,IAAIa,EAAQS,WACnBpnC,QAAS,IAAI8U,IAAY0Y,MAAM4Z,aA1EC,4CA8ElCzC,KAAK/e,EAASjP,EAASuuB,GAAiB,IAAD,mHACzC,EAAKvuB,QAAUA,EACf,EAAKuuB,eAAiBA,EAFmB,KAG3B,EAAKC,OAHsB,qCAGN7iC,IAAgBC,KAAK,CACpD,QAAS,oBACT2T,QAASC,IAAUC,UACnBC,OAAO,IAN8B,6BAGzC,EAAK8uB,OAHoC,MAQrC,EAAKC,cARgC,yBASrB,EAAKC,SATgB,uCASE/iC,IAAgBC,KAAK,CACxD,QAAS,gBAVwB,4BASrC,EAAK8iC,SATgC,aAazC,EAAKzf,QAAUA,EAEf,EAAKigB,eAfoC,4CAkBvCA,eAAgB,IAAD,8IAEG,EAAKa,SAAS,EAAK/vB,QAAS,EAAKuuB,gBAFpC,cAEXI,EAFW,OAGXQ,EAAQR,EAAMQ,MACpBR,EAAMQ,MAAQ,GAJG,SAMXN,GAAab,KAAK,QAASW,GANhB,cAQX3vB,EAAW,GACjBmwB,EAAMxkC,QAAQT,IAAM,MAAD,cACIA,EADJ,GACRT,EADQ,KACJ4mC,EADI,KAEfrxB,EAASK,KACL,IAAIM,QAAQ,CAAC+wB,EAASC,KAClB,MAAMC,EAAa,IAAIC,WACvBD,EAAWE,cAAcT,GACzBO,EAAWG,OAAS32B,IAChBs2B,EAAQ,CAAEjnC,KAAI+iB,IAAKpS,EAAEjJ,OAAOrF,UAEhC8kC,EAAWI,QAAU52B,IACjBs2B,EAAQ,YAnBP,UAyBK/wB,QAAQ/C,IAAIoC,GAzBjB,eAyBXiyB,EAzBW,iBA2BXpC,GAAab,KAAK,QAASiD,GA3BhB,YA6Bb,EAAKxC,cA7BQ,wBA8BPC,EAAW,EAAKA,SAASW,SAASzvB,IAAI1V,GAAKsV,IAAUpK,IAAIlL,IA9BlD,UA+BP2kC,GAAab,KAAK,WAAYU,GA/BvB,YAkCb,EAAKzf,QAlCQ,kCAmCP4f,GAAab,KAAK,UAAW,EAAK/e,SAnC3B,4CAuCrBmf,QACI,MAAMpvB,EAAW,GACjBA,EAASK,KAAKwvB,GAAa54B,OAAO,SAAS4J,MAAMvD,GAAS,OAC1D0C,EAASK,KAAKwvB,GAAa54B,OAAO,SAAS4J,MAAMvD,GAAS,OAC1D0C,EAASK,KAAKwvB,GAAa54B,OAAO,WAAW4J,MAAMvD,GAAS,OAC5D0C,EAASK,KAAKwvB,GAAa54B,OAAO,YAAY4J,MAAMvD,GAAS,OAC7D0C,EAASK,KAAKwvB,GAAa54B,OAAO,YAAY4J,MAAMvD,GAAS,OAE7DqD,QAAQ/C,IAAIoC,GAGhB+vB,gBACI,GAAIxlC,KAAKolC,MAAO,CACMplC,KAAKolC,MAAfQ,MAEFxkC,QAAQ,EAAGlB,KAAI+iB,UACjBrX,IAAU+7B,cAAcznC,QAOxC4M,OAAOs4B,MAAQzuB,GACAA,U,OChGA1E,qBAjOf,cAA6BpQ,IAAMC,UAC/BlC,YAAY4C,GAAQ,IAAD,EACf0B,MAAM1B,GADS,YAoBnBo2B,wBAA0Bx0B,IAAW,MACzB4f,EAAiB5f,EAAjB4f,aAERhkB,KAAKyC,SAAS,CAAEuhB,kBAvBD,KA0BnB4jB,2BAA6BxjC,IACzBpE,KAAKyC,SAAS,CAAEolC,mBAAoBzjC,EAAOihC,uBA3B5B,KA8BnByC,eAAiBzjC,IAAU,MACfwjC,EAAuB7nC,KAAK+B,MAA5B8lC,mBACHE,YAAqBF,IAE1B7nC,KAAKyC,SAAS,CAAEulC,SAAU3jC,EAAM4jC,iBAlCjB,KAqCnBC,gBAAkB,KACdloC,KAAKyC,SAAS,CAAEulC,SAAU,QAtCX,KAyCnBG,mBAzCmB,qBAyCE,sBAAAz1B,EAAA,qDACjB,EAAKw1B,kBADY,yCAzCF,KA+CnBE,iBAAmB/jC,IACfrE,KAAKkoC,kBAEL9lC,IAAgBkG,aAAa,CACzB,QAAS,yBACToU,MAAM,KApDK,KAwDnB2rB,eAAiBhkC,IACbrE,KAAKkoC,kBAEL9lC,IAAgBkG,aAAa,CACzB,QAAS,uBACToU,MAAM,KA7DK,KAiEnB4rB,eAAiBjkC,IACbrE,KAAKkoC,kBAEL9lC,IAAgBkG,aAAa,CACzB,QAAS,uBACToU,MAAM,KAtEK,KA0EnB6rB,eAAiBlkC,IACbrE,KAAKkoC,kBAELM,eA7Ee,KAgFnBC,YAhFmB,sCAgFL,WAAMpkC,GAAN,eAAAqO,EAAA,wDACV,EAAKw1B,kBAED3pB,EAAOmqB,GAAWtD,MAAQsD,GAAWtD,MAAMH,OAAS,KAH9C,gCAKO7iC,IAAgBC,KAAK,CAC9B,QAAS,oBACT2T,QAASC,IAAUC,UACnBC,OAAO,IARL,OAKNoI,EALM,iBAYLA,EAZK,iDAcV6H,YAAS7H,EAAKre,IAdJ,yCAhFK,2DAiGnByoC,eAjGmB,sCAiGF,WAAMtkC,GAAN,eAAAqO,EAAA,wDACb,EAAKw1B,kBAED3pB,EAAOmqB,GAAWtD,MAAQsD,GAAWtD,MAAMH,OAAS,KAH3C,gCAKI7iC,IAAgBC,KAAK,CAC9B,QAAS,oBACT2T,QAASC,IAAUC,UACnBC,OAAO,IARF,OAKToI,EALS,iBAYRA,EAZQ,iDAcbnc,IAAgBkG,aAAa,CACzB,QAAS,uBACToU,MAAM,EACNxK,OAAQqM,EAAKre,KAjBJ,yCAjGE,2DAsHnB0oC,WAtHmB,sCAsHN,WAAMvkC,GAAN,SAAAqO,EAAA,qDACT,EAAKw1B,kBADI,yCAtHM,2DA2HnBlT,aAAe,KACXh1B,KAAKkoC,kBAELW,YAAW,IA3HX7oC,KAAK+B,MAAQ,CACT8lC,mBAAoB1uB,KAAS2vB,wBAC7Bd,SAAU,KACVhkB,aAAc7K,KAAS6K,cAI/BhhB,oBACImW,KAASnM,GAAG,2BAA4BhN,KAAK4nC,4BAC7CzuB,KAASnM,GAAG,wBAAyBhN,KAAK44B,yBAG9C3rB,uBACIkM,KAAS/L,IAAI,2BAA4BpN,KAAK4nC,4BAC9CzuB,KAAS/L,IAAI,wBAAyBpN,KAAK44B,yBAgH/C31B,SAAU,MAAD,EAC6CjD,KAAKwC,MAA/C6P,EADH,EACGA,EAAG02B,EADN,EACMA,QAAS5Y,EADf,EACeA,MAAO6Y,EADtB,EACsBA,UAAWlsB,EADjC,EACiCA,QADjC,EAEkD9c,KAAK+B,MAApDimC,EAFH,EAEGA,SAAUH,EAFb,EAEaA,mBAAoB7jB,EAFjC,EAEiCA,aAEhCilB,GACDD,GAAajB,YAAqBF,GAC/B,kBAACqB,GAAA,EAAD,CACIhpC,GAAG,YACH8nC,SAAUA,EACVtrB,KAAMuN,QAAQ+d,GACdlrB,QAAS9c,KAAKkoC,gBACdiB,mBAAoB,KACpBC,sBAAoB,EACpBC,qBAAqB,EACrBtiB,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhB,kBAACG,GAAA,EAAD,CAAU7W,QAASvQ,KAAKooC,kBACpB,kBAAC1mB,GAAA,EAAD,KACI,kBAAC4nB,GAAD,OAEJ,kBAACvnB,GAAA,EAAD,CAAcC,QAAS3P,EAAE,iBAE7B,kBAAC+U,GAAA,EAAD,CAAU7W,QAASvQ,KAAKqoC,gBACpB,kBAAC3mB,GAAA,EAAD,KACI,kBAACwgB,GAAD,OAEJ,kBAACngB,GAAA,EAAD,CAAcC,QAAS3P,EAAE,eAE3B2R,GACE,kBAACoD,GAAA,EAAD,CAAU7W,QAASvQ,KAAKg1B,cACpB,kBAACtT,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACK,GAAA,EAAD,CAAcC,QAAS3P,EAAE,aAGjC,kBAAC+U,GAAA,EAAD,CAAU7W,QAASvQ,KAAKsoC,gBACpB,kBAAC5mB,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACK,GAAA,EAAD,CAAcC,QAAS3P,EAAE,eAE7B,kBAAC+U,GAAA,EAAD,CAAU7W,QAASvQ,KAAKuoC,gBACpB,kBAAC7mB,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACK,GAAA,EAAD,CAAcC,QAAS3P,EAAE,eAE7B,kBAAC+U,GAAA,EAAD,CAAU7W,QAASvQ,KAAKyoC,aACpB,kBAAC/mB,GAAA,EAAD,KACI,kBAAC6nB,GAAA,EAAD,OAEJ,kBAACxnB,GAAA,EAAD,CAAcC,QAAS3P,EAAE,YAE7B,kBAAC+U,GAAA,EAAD,CAAU7W,QAASvQ,KAAK2oC,gBACpB,kBAACjnB,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACK,GAAA,EAAD,CAAcC,QAAS3P,EAAE,eAE7B,kBAAC+U,GAAA,EAAD,CAAU7W,QAASvQ,KAAK4oC,YACpB,kBAAClnB,GAAA,EAAD,KACI,kBAAC8nB,GAAD,OAEJ,kBAACznB,GAAA,EAAD,CAAcC,QAAS3P,EAAE,oBAGjC,KAEFo3B,EAAYtZ,EACZ,kBAACrf,EAAA,EAAD,MACA,kBAAC,GAAD,MAEN,OACI,oCACI,kBAACoH,EAAA,EAAD,CACIwxB,YAAW1B,EAAW,cAAgB,KACtC2B,gBAAc,OACdzmC,UAAU,sCACViV,aAAW,OACX5H,QAASy4B,EAAYlsB,EAAU9c,KAAK8nC,gBAClCiB,EACK,kBAACtT,GAAA,EAAD,CAAe/Y,KAAMssB,EAAWtT,SAAU,kBAAC,GAAD,MAAmBzI,KAAM,kBAAC,GAAD,QACnE,oCAAG+b,EAAYS,EAAY,kBAAC,GAAD,QAIrCR,M,OChPjB,MAAMW,WAAoB/nC,IAAMC,UAAW,eAAD,oBACtCuzB,cAAgBhxB,IACZ,GAAsB,KAAlBA,EAAMuW,QACNvW,EAAM6B,sBACH,GAAsB,KAAlB7B,EAAMuW,QAAgB,CAAC,MAAD,EACC5a,KAAKwC,MAA3BkP,EADqB,EACrBA,SAAUoL,EADW,EACXA,QAEZ5N,EAAU7K,EAAMuD,OACtB,IAAKsH,EAAS,OAEd,GAAIA,EAAQwL,UAMR,OALArW,EAAM4B,kBACN5B,EAAMmF,YAAYqgC,2BAElB36B,EAAQwL,UAAY,UAChBhJ,GAAUA,EAASxC,EAAQwL,YAI/BoC,GACAA,EAAQzY,QAET,GAAsB,IAAlBA,EAAMuW,QAAe,CAAC,MACrBkvB,EAAgB9pC,KAAKwC,MAArBsnC,YAEF56B,EAAU7K,EAAMuD,OACtB,IAAKsH,EAAS,OACd,GAAIA,EAAQwL,UAAW,OAEnBovB,IACAzlC,EAAM4B,kBACN6jC,OA/B0B,KAoCtCxU,YAAcjxB,IACV,MAAM6K,EAAU7K,EAAMuD,OACtB,IAAKsH,EAAS,OAFK,MAIXf,EAAce,EAAdf,UACU,SAAdA,GAAsC,oBAAdA,IACxBe,EAAQf,UAAY,OA1CU,KA8CtConB,YAAclxB,IACV,MAAMuX,EAAYvX,EAAMwX,cAAcC,QAAQ,cAC1CF,IACAvX,EAAM6B,iBACNW,SAASkN,YAAY,cAAc,EAAO6H,KAlDZ,KAsDtCmuB,YAAc1lC,IAAU,MACZqN,EAAa1R,KAAKwC,MAAlBkP,SAEFxC,EAAU7K,EAAMuD,OACjBsH,GAEDwC,GACAA,EAASxC,EAAQwL,YAIzBzX,SAAU,MAAD,EAC4CjD,KAAKwC,MAA9CwnC,EADH,EACGA,SAAU33B,EADb,EACaA,EAAG5B,EADhB,EACgBA,QAASw5B,EADzB,EACyBA,KAAMC,EAD/B,EAC+BA,SAEpC,OACI,yBAAKhnC,UAAU,gBACX,yBACIhD,GAAG,kBACH+c,IAAK+sB,EACL7sB,YAAa8sB,GAAQ53B,EAAE,UACvBc,iBAAe,EACf+J,gCAA8B,EAC9B5Y,UAAWtE,KAAKq1B,cAChBjY,QAASpd,KAAKs1B,YACdjY,QAASrd,KAAKu1B,YACd4U,QAASnqC,KAAK+pC,YACdt5B,QAASA,IAEZy5B,GAAY,kBAAC,GAAD,CAAYhnC,UAAU,wBAgBnD0mC,GAAYxrB,aAAe,CACvB8rB,UAAU,GAGCj4B,qBAAkB23B,I,OCqClBQ,OAzIf,cAA4BvoC,IAAMC,UAC9BlC,YAAY4C,GACR0B,MAAM1B,GADS,KAiEnBolC,2BAA6BxjC,IACzBpE,KAAKyC,SAAS,CAAEolC,mBAAoBzjC,EAAOihC,uBAlE5B,KAqEnBrQ,aAAe,KAAO,MAAD,EACgBh1B,KAAKwC,MAA9B0yB,EADS,EACTA,SAAUE,EADD,EACCA,WACVyS,EAAuB7nC,KAAK+B,MAA5B8lC,mBACHE,YAAqBF,IAE1B3S,GAAUE,IA1EK,KA6EnBiV,uBAAyB,KAAO,MACpBC,EAAuBtqC,KAAKwC,MAA5B8nC,mBAEFp7B,EAAUlP,KAAKi1B,eAAejc,QACpC,IAAK9J,EAAS,OAJa,MAMnBf,EAAce,EAAdf,UACU,SAAdA,GAAsC,oBAAdA,IACxBe,EAAQf,UAAY,MAIxBm8B,EAFsBp7B,EAAdwL,YAvFO,KA4FnBsc,kBAAoB,KAChBh3B,KAAKg1B,gBA7FU,KAgGnB3oB,YAAc,KACVrM,KAAKg1B,gBA9FLh1B,KAAKi1B,eAAiBpzB,IAAMya,YAE5Btc,KAAK+B,MAAQ,CACT8lC,mBAAoB1uB,KAAS2vB,wBAC7BpsB,MAAM,GAId6tB,aAAa7uB,GAAQ,MACT4uB,EAAuBtqC,KAAKwC,MAA5B8nC,mBAEFE,EAAcxqC,KAAKi1B,eAAejc,QACxC,GAAIwxB,EAAa,CAEb,GADAA,EAAY9vB,UAAYgB,EACpB8uB,EAAY/G,WAAW/uB,OAAS,EAAG,CACnC,MAAMkvB,EAAQ/8B,SAASg9B,cACvBD,EAAME,SAAS0G,EAAY/G,WAAW,GAAI+G,EAAY/G,WAAW,GAAG/uB,QACpEkvB,EAAMG,UAAS,GAEf,MAAMC,EAAYl3B,OAAOm3B,eACzBD,EAAUE,kBACVF,EAAUG,SAASP,GAEvB4G,EAAYlhC,QACZghC,EAAmB5uB,IAI3B9Y,mBAAmBC,EAAWC,EAAWC,GAAW,MACxCqyB,EAAep1B,KAAKwC,MAApB4yB,WAER,GAAIA,IAAevyB,EAAUuyB,WACzB,GAAIA,EACAp1B,KAAK2jC,iBACF,CACH,MAAM6G,EAAcxqC,KAAKi1B,eAAejc,QACpCwxB,IACAA,EAAY9vB,UAAY,OAMxCipB,aACI,MAAM6G,EAAcxqC,KAAKi1B,eAAejc,QACpCwxB,GACAA,EAAYlhC,QAIpBtG,oBACQhD,KAAKwC,MAAM2tB,OACXnwB,KAAK2jC,aAGTxqB,KAASnM,GAAG,2BAA4BhN,KAAK4nC,4BAGjD36B,uBACIkM,KAAS/L,IAAI,2BAA4BpN,KAAK4nC,4BAsClD3kC,SAAU,MAAD,EACkCjD,KAAKwC,MAApC4yB,EADH,EACGA,WAAY2T,EADf,EACeA,QAAS5Y,EADxB,EACwBA,MAE7B,IAAI3X,EAAU,KACViyB,GAAW,EAcf,OAbIrV,GACAqV,GAAW,EACXjyB,EACI,kBAAC,GAAD,CACIwxB,SAAUhqC,KAAKi1B,eACfvjB,SAAU1R,KAAKqqC,uBACfvtB,QAAS9c,KAAKg3B,qBAItBxe,EAAU,kBAAC,GAAD,CAAawxB,SAAUhqC,KAAKi1B,eAAgBxkB,QAASzQ,KAAKqM,cAIpE,yBAAKnJ,UAAU,iBACX,kBAAC,GAAD,CAAgB6lC,QAASA,EAASC,UAAWyB,EAAUta,MAAOA,EAAOrT,QAAS9c,KAAKg3B,oBAClFxe,K,eCgIFvG,qBArPf,cAAsBpQ,IAAMC,UACxBlC,YAAY4C,GACR0B,MAAM1B,GADS,KA4CnBogB,YAAc,IACH,mBAAoB9V,OA7CZ,KAsEnB49B,6BAA+BtmC,IACtBpE,KAAK4iB,eAAe5iB,KAAK6iB,cAAa,IAvE5B,KA0EnB8nB,0BAA4BvmC,IAExB,GADoBpE,KAAK+B,MAAjB2jB,QACK,OAFqB,MAIjBklB,EAAkBlC,GAA3BhjB,QACHklB,GAEL5qC,KAAKyC,SAAS,CACVijB,QAASklB,GACV,KACM5qC,KAAK4iB,eAAe5iB,KAAK6iB,cAAa,MApFhC,KAwFnB3b,eAAiB,KACblH,KAAK6iB,cAAa,IAzFH,KA4FnB+V,wBAA0Bx0B,IAAW,MACzB4f,EAAiB7K,KAAjB6K,aACRhkB,KAAKyC,SAAS,CACVuhB,gBACD,KACMhkB,KAAK4iB,eAAe5iB,KAAK6iB,cAAa,MAjGhC,KAqGnBA,aAAe,CAACkB,GAAa,KAAU,MAAD,EACU/jB,KAAK+B,MAAzC67B,EAD0B,EAC1BA,SAAUlY,EADgB,EAChBA,QAEZzB,GAH4B,EACPD,aAEZhkB,KAAKkkB,WAAWlL,SAG/B,IAAImL,EAAO,KACP5c,EAAO,EACX,GAA0B,iBAAtBq2B,EAAS,SAA6B,CACtC,MAAMiN,EAAO7qC,KAAKqkB,UAAUxY,IAAI,gBAC5Bg/B,IAEAtjC,GADA4c,EAAO0mB,EAAKvmB,YACAC,iBAEb,GAA0B,mBAAtBqZ,EAAS,SAChB,IAAK,IAAI5oB,EAAI,EAAGA,EAAI0Q,EAAQhR,OAAQM,IAAK,CACrC,MAAMuG,EAASvb,KAAKqkB,UAAUxY,IAAI,qBAAuB6Z,EAAQ1Q,GAAG9U,IACpE,GAAIwlB,EAAQ1Q,GAAG9U,KAAO09B,EAASkN,eAAgB,CAE3CvjC,GADA4c,EAAO5I,EAAO+I,YACFC,WACZ,OAIZ,IAAKJ,EAAM,OAEX,MAAMW,EAAkB9kB,KAAK+kB,mBAAmB/L,QAChD,GAAI8L,EAAiB,CACjB,MAAME,EAAkBjB,EAAa,gDAAkD,KACvFe,EAAgBxd,MAAM2d,QAAtB,gBAAyC1d,EAzB7B,EAyBZ,sBAAqE4c,EAAKe,YAAc,EAAxF,eAA0GF,GAG9G,GAAIb,GAAQJ,EAAW,CAAC,MACZoB,EAAanlB,KAAbmlB,SAEJA,GACAA,EAAS5jB,OAGbvB,KAAKmlB,SAAW,IAAIxlB,KAAS,IAAK,CAC9B,CACI0B,KAAM4iB,EAAOmB,WACbxkB,GAAIuF,YAAMoB,EAAO0c,EAAOoB,YAAc,EAAIlB,EAAKkB,YAAc,EAAG,EAAGpB,EAAOiB,YAAcjB,EAAOoB,aAC/F/jB,KAAMiG,GAAS0c,EAAOmB,WAAa7d,KAI3CyD,WAAW,KACFhL,KAAKmlB,UAEVnlB,KAAKmlB,SAASplB,SACf,KAxJQ,KA+JnBgrC,oBAAsB3mC,IAAW,MACrBw5B,EAAa59B,KAAK+B,MAAlB67B,SACAlY,EAAYslB,KAAZtlB,QAER1lB,KAAKyC,SAAS,CACVijB,WACD,KAC2B,mBAAtBkY,EAAS,WAA+F,IAA9DlY,EAAQ0Q,UAAUz1B,GAAKA,EAAET,KAAO09B,EAASkN,gBACnF9qC,KAAKirC,kBAEAjrC,KAAK4iB,eAAe5iB,KAAK6iB,kBAzKvB,KA8KnBqoB,uBAAyB9mC,IAAW,MACxBw5B,EAAaoN,KAAbpN,SAER59B,KAAKyC,SAAS,CACVm7B,YACD,KACM59B,KAAK4iB,eAAe5iB,KAAK6iB,kBApLnB,KAwLnBooB,gBAAkB5mC,IACVA,GAA0B,IAAjBA,EAAMmd,QAEnB2pB,aAAa,CAAE,QAAS,kBA3LT,KA8LnB7lB,kBAAoB,CAACjhB,EAAOnE,KACpBmE,GAA0B,IAAjBA,EAAMmd,QAEnB2pB,aAAa,CAAE,QAAS,iBAAkBL,eAAgB5qC,KAjM3C,KAoMnBkrC,YAAc/mC,IACLA,EAAMgnC,SAIXhnC,EAAM4jC,cAAc7iB,YAAc/gB,EAAMgnC,OACxChnC,EAAM4B,oBAvMNjG,KAAKqkB,UAAY,IAAIvP,IACrB9U,KAAKkkB,WAAariB,IAAMya,YACxBtc,KAAK+kB,mBAAqBljB,IAAMya,YALjB,MAOP0H,EAAiB7K,KAAjB6K,aACA0B,EAAsBslB,KAAtBtlB,QAASkY,EAAaoN,KAAbpN,SAEjB59B,KAAK+B,MAAQ,CACTiiB,eACA0B,UACAkY,YAGJ59B,KAAKkH,eAAiBqe,YAASvlB,KAAKkH,eAAgB,KAGxDlE,oBACIhD,KAAKwlB,gBACLrM,KAASnM,GAAG,0BAA2BhN,KAAK2qC,2BAC5CxxB,KAASnM,GAAG,wBAAyBhN,KAAK44B,yBAC1CoS,KAAYh+B,GAAG,uBAAwBhN,KAAKkrC,wBAC5CF,KAAYh+B,GAAG,oBAAqBhN,KAAK+qC,qBACzCO,KAAkBt+B,GAAG,6BAA8BhN,KAAK0qC,8BAExD1qC,KAAK6iB,eAGTjgB,mBAAmBC,EAAWC,EAAWC,GACrC/C,KAAKylB,kBACLzlB,KAAKwlB,gBAGTvY,uBACIjN,KAAKylB,kBACLtM,KAAS/L,IAAI,0BAA2BpN,KAAK2qC,2BAC7CxxB,KAAS/L,IAAI,wBAAyBpN,KAAK44B,yBAC3CoS,KAAY59B,IAAI,uBAAwBpN,KAAKkrC,wBAC7CF,KAAY59B,IAAI,oBAAqBpN,KAAK+qC,qBAC1CO,KAAkBl+B,IAAI,6BAA8BpN,KAAK0qC,8BAO7DllB,gBACI,IAAKxlB,KAAK4iB,cAAe,OACzB,MAAM8C,EAAU1lB,KAAKkkB,WAAWlL,QAChC,IAAK0M,EAAS,OAEd,MAAMC,EAAW,IAAIC,eAAe5lB,KAAKkH,gBACzCye,EAASE,QAAQH,GAEjB1lB,KAAK8lB,eAAiB,CAAEH,WAAUD,WAGtCD,kBACI,IAAKzlB,KAAK4iB,cAAe,OACzB,IAAK5iB,KAAK8lB,eAAgB,OAFZ,QAIgB9lB,KAAK8lB,eAA3BH,EAJM,EAINA,SAAUD,EAJJ,EAIIA,QACbC,GACAD,GAELC,EAASI,UAAUL,GA0IvBziB,SAAU,MACEoP,EAAMrS,KAAKwC,MAAX6P,EADH,EAEuCrS,KAAK+B,MAAzC2jB,EAFH,EAEGA,QAASkY,EAFZ,EAEYA,SAAU5Z,EAFtB,EAEsBA,aAE3B,OAAK0B,GACAA,EAAQhR,QAEb1U,KAAKqkB,UAAY,IAAIvP,IAEjB,yBAAK5R,UAAU,QACX,yBAAKA,UAAU,uBACf,yBAAK+Z,IAAKjd,KAAKkkB,WAAYhhB,UAAU,UAAUqoC,QAASvrC,KAAKorC,aACzD,yBACInuB,IAAKgJ,GAAKjmB,KAAKqkB,UAAU7J,IAAI,eAAgByL,GAC7C/iB,UAAWkN,IAAW,SAAU,CAAE,gBAAuC,iBAAtBwtB,EAAS,WAC5DvtB,YAAarQ,KAAKirC,gBAClB9sB,MAAO6F,EAAe3R,EAAE,kBAAoB,MAC5C,8BAAO2R,EAAe0I,YAAera,EAAE,mBAAqBA,EAAE,oBAEjEqT,EAAQrP,IAAI1V,GACT,yBACI4D,IAAK5D,EAAET,GACP+c,IAAKgJ,GAAKjmB,KAAKqkB,UAAU7J,IAAI,qBAAuB7Z,EAAET,GAAI+lB,GAC1D/iB,UAAWkN,IAAW,SAAU,CAAE,gBAAiBwtB,EAASkN,iBAAmBnqC,EAAET,KACjFmQ,YAAaQ,GAAK7Q,KAAKslB,kBAAkBzU,EAAGlQ,EAAET,IAC9Cie,MAAO6F,EAAerjB,EAAEwd,MAAQ,MAChC,8BAAO6F,EAAe0I,YAAe/rB,EAAEwd,OAASxd,EAAEwd,SAE1D,yBAAKlB,IAAKjd,KAAK+kB,mBAAoB7hB,UAAU,wBAxBpC,QC1M7B,MAAMsoC,WAAuB3pC,IAAMC,UAC/B8b,sBAAsBC,EAAWC,EAAWoK,GAAc,MAAD,EACTloB,KAAKwC,MAAzC0P,EAD6C,EAC7CA,OAAQ0rB,EADqC,EACrCA,SAAUt2B,EAD2B,EAC3BA,MAAOe,EADoB,EACpBA,OACjC,OAAIwV,EAAU3L,SAAWA,IAKrB2L,EAAU+f,WAAaA,IAKvB/f,EAAUxV,SAAWA,GAKrBwV,EAAUvW,MAAMG,MAAQH,EAAMG,MAStCxE,SAAU,MAAD,EACuCjD,KAAKwC,MAAzC0P,EADH,EACGA,OAAQ0rB,EADX,EACWA,SAAUv1B,EADrB,EACqBA,OAAQf,EAD7B,EAC6BA,MAElC,OACI,yBAAKpE,UAAU,mBAAmBoE,MAAOA,GACrC,kBAAC,GAAD,CAAQ4K,OAAQA,EAAQ0rB,SAAUA,EAAUv1B,OAAQA,MAMpE,MAAMojC,WAAoB5pC,IAAMC,UAC5BlC,YAAY4C,GAAQ,IAAD,EACf0B,MAAM1B,GADS,YAsGnB0oC,uBAAyB9mC,IAAW,MACxBw5B,EAAax5B,EAAbw5B,SAEJ8N,YAAe1rC,KAAK+B,MAAM67B,SAAUA,GACpC59B,KAAK2rC,cAEL3rC,KAAKyC,SAAS,CACVm7B,WACApP,OAAQ,CACJC,SAAS,EACTC,WAAW,IAEhB,KACC1uB,KAAK4rC,oBAnHE,KAwHnBlsB,mBAAqBtb,MAxHF,KAkInBynC,wBAA0BznC,IAAW,MACzBi4B,EAAuBj4B,EAAvBi4B,WAAYnqB,EAAW9N,EAAX8N,OAEhBmqB,EACAr8B,KAAK8rC,YAAYtxB,IAAItI,EAAQA,GAE7BlS,KAAK8rC,YAAYvxB,OAAOrI,GAG5BlS,KAAKya,eA3IU,KA8InBmtB,2BAA6BxjC,IAAW,MACPyjC,EAAuBzjC,EAA5CihC,oBAERrlC,KAAKyC,SAAS,CAAEolC,sBAAsB,IAAM7nC,KAAK4rC,mBAjJlC,KAoJnBluB,uBAAyBtZ,IACrBpE,KAAK8uB,YAAW,IArJD,KAwJnB8c,eAxJmB,qBAwJF,4BAAAl5B,EAAA,wDACLm1B,EAAuB,EAAK9lC,MAA5B8lC,mBACHE,YAAqBF,GAFb,iEAIPj8B,IAAUmgC,OAAO,IAAM,EAAKjd,YAAW,IAJhC,yCAxJE,KA+JnBkd,UAAY,KAAO,MAAD,EACgBhsC,KAAKwC,MAA3BypC,EADM,EACNA,YAAaztB,EADP,EACOA,KACbof,EAAa59B,KAAK+B,MAAlB67B,SACK,iBAATpf,GACsB,iBAAtBof,EAAS,UAETqO,GAAaA,KArKF,KAwKnBC,qBAAuB9nC,IAAW,MACtBw5B,EAAa59B,KAAK+B,MAAlB67B,SACAtqB,EAAalP,EAAbkP,SAEHo4B,YAAe9N,EAAUtqB,EAASma,OAIvCztB,KAAKmsC,kBAAkB/nC,IAhLR,KAmLnB+nC,kBAAoB/nC,IAAW,MAAD,EACUpE,KAAK+B,MAAjCwU,EADkB,EAClBA,MAAOqnB,EADW,EACXA,SAAUpP,EADC,EACDA,OACzB,IAAKjY,EAAO,OAFc,MAIlBkY,EAAYD,EAAZC,QACR,GAAIA,IAAYlY,EAAM7B,OAAQ,OALJ,MAOlBuC,EAAY7S,EAAZ6S,QAEFsH,EAAOR,KAAUlS,IAAIoL,GAC3B,IAAKsH,EACD,OAGJ,IAAK6tB,YAAYn1B,EAAS2mB,GACtB,OAGJ,MAAMyO,EAAQC,YAAar1B,EAAS2mB,GAC9B2O,EAAeh2B,EAAM6f,UAAUz1B,GAAKA,IAAMsW,GAChD,IAAsB,IAAlBs1B,GAAiC,MAAVF,EACvB,OAGJ,MAAM51B,EAAU,GAChB,IAAK,IAAIzB,EAAI,EAAGA,EAAIuB,EAAM7B,OAAQM,IAAK,CACnC,MAAMuJ,EAAOR,KAAUlS,IAAI0K,EAAMvB,IAC3Bw3B,EAAYF,YAAa/1B,EAAMvB,GAAI4oB,GACrCrf,GAAsB,MAAdiuB,GACR/1B,EAAQX,KAAKyI,EAAKre,IAI1B,MAAMusC,EAAa,GACL,MAAVJ,EAEIp1B,IAAYkC,KAAS0oB,aAAgBtjB,EAAKge,eAC1Cn6B,IAAgBsqC,UAAU,GAC1B9R,cAA4B,KAGV,IAAlB2R,IACI9d,GACA3b,QAAQC,MAAR,oBAA2B3O,EAAO,UAAY,CAAElE,GAAI+W,EAASkH,MAAOJ,KAAUlS,IAAIoL,GAASkH,MAAOI,KAAMR,KAAUlS,IAAIoL,KACtHnK,OAAO6/B,GAAGnyB,IAAIvD,EAASA,IAGvBw1B,EAAW32B,KAAKmB,IAK5BjX,KAAK4sC,aAAan2B,EAASg2B,EAAY,KACnCzsC,KAAKwxB,iBAAiBib,GACtBzsC,KAAKgsC,eAzOM,KAyQnBnd,aAAe,KAAM,MAET7V,EAAYhZ,KAAK0tB,QAAjB1U,QACR,IAAKA,EAAS,OAEd,MAAMyU,EAAOzU,EAAQmqB,aAAanqB,QAC7ByU,IAGDA,EAAKD,WAAaqf,KAClB7sC,KAAK8sC,aACErf,EAAKD,UAAYC,EAAKK,cAAgBL,EAAKqF,aAAerF,EAAKK,cAEtE9tB,KAAK8uB,eAtRM,KAwYnBsU,WAAa,EAAGzf,QAAOrc,SAASjE,KAAY,MAChCu6B,EAAa59B,KAAK+B,MAAlB67B,SACFj9B,EAAI0C,EAAOsgB,GAEjB,OAAO,kBAAC,GAAD,CAAgBpf,IAAK5D,EAAGuR,OAAQvR,EAAGi9B,SAAUA,EAAUv1B,OAAQrI,KAAK8rC,YAAY72B,IAAItU,GAAI2G,MAAOA,KAzYtGwF,OAAO6/B,GAAK,IAAI73B,IAChB9U,KAAK8rC,YAAc,IAAIh3B,IAEvB9U,KAAK0tB,QAAU7rB,IAAMya,YANN,MAQPurB,EAAuB1uB,KAAvB0uB,mBAER7nC,KAAK+B,MAAQ,CACT8lC,qBACAtxB,MAAO,KACPw2B,iBAAiB,EACjBnP,SAAyB,iBAAfp7B,EAAMgc,KAA0B,CAAE,QAAS,gBAAmB,CAAE,QAAS,mBACnFgQ,OAAQ,CACJC,SAAS,EACTC,WAAW,IAKvB9Q,sBAAsBC,EAAWC,GAAY,MAAD,EAC8B9d,KAAKwC,MAAnEywB,EADgC,EAChCA,MAAOvW,EADyB,EACzBA,KAAMswB,EADmB,EACnBA,YAAaC,EADM,EACNA,aAAc3f,EADR,EACQA,MAAO4f,EADf,EACeA,WADf,EAEZltC,KAAK+B,MAAzBwU,EAFgC,EAEhCA,MAFgC,EAEzBqnB,SAEf,OAAI/f,EAAUoV,QAAUA,IAIpBpV,EAAUnB,OAASA,IAInBmB,EAAUyP,QAAUA,IAIpBzP,EAAUqvB,aAAeA,IAIzBrvB,EAAUmvB,cAAgBA,IAI1BnvB,EAAUovB,eAAiBA,GAI3BnvB,EAAUvH,QAAUA,OAW5Byc,wBAAwBnwB,EAAWC,GAAY,MAC1B2qB,EAASztB,KAAK0tB,QAAvB1U,QACR,OAAKyU,EAEE,CAAED,UAAWC,EAAKD,WAFP,CAAEA,UAAW,GAKnC5qB,mBAAmBC,EAAWC,EAAWC,IAIzCC,oBACIhD,KAAK4rC,iBAELzyB,KAASnM,GAAG,2BAA4BhN,KAAK4nC,4BAE7C7pB,KAAU/Q,GAAG,mCAAoChN,KAAK0d,wBACtDK,KAAU/Q,GAAG,wBAAyBhN,KAAK6rC,yBAC3C9tB,KAAU/Q,GAAG,yBAA0BhN,KAAKmsC,mBAC5CpuB,KAAU/Q,GAAG,wBAAyBhN,KAAKmsC,mBAC3CpuB,KAAU/Q,GAAG,qBAAsBhN,KAAKksC,sBAExClB,KAAYh+B,GAAG,uBAAwBhN,KAAKkrC,wBAE5CrrB,KAAgB7S,GAAG,kBAAmBhN,KAAK0f,oBAG/CzS,uBACIkM,KAAS/L,IAAI,2BAA4BpN,KAAK4nC,4BAE9C7pB,KAAU3Q,IAAI,mCAAoCpN,KAAK0d,wBACvDK,KAAU3Q,IAAI,wBAAyBpN,KAAK6rC,yBAC5C9tB,KAAU3Q,IAAI,yBAA0BpN,KAAKmsC,mBAC7CpuB,KAAU3Q,IAAI,wBAAyBpN,KAAKmsC,mBAC5CpuB,KAAU3Q,IAAI,qBAAsBpN,KAAKksC,sBAEzClB,KAAY59B,IAAI,uBAAwBpN,KAAKkrC,wBAE7CrrB,KAAgBzS,IAAI,kBAAmBpN,KAAK0f,oBA0IhDktB,aAAan2B,EAASg2B,EAAa,GAAIlW,GAAW,MACtCqH,EAAa59B,KAAK+B,MAAlB67B,SAEFuP,EAAiB12B,EAAQ6E,OAAOmxB,GAAY3Y,KAAK,CAACphB,EAAG06B,IAChDC,YAAaf,YAAac,EAAGxP,GAAW0O,YAAa55B,EAAGkrB,KAG9D6N,GAAY6B,iBAAiBttC,KAAK+B,MAAMwU,MAAO42B,GAMpDntC,KAAKyC,SAAS,CAAE8T,MAAO42B,GAAkB5W,GALjCA,GAAUA,IAQtB,wBAAwBgX,EAAYd,GAChC,GAAIc,EAAW74B,SAAW+3B,EAAW/3B,OAAQ,CACzC,IAAK,IAAIM,EAAI,EAAGA,EAAIu4B,EAAW74B,OAAQM,IACnC,GAAIu4B,EAAWv4B,KAAOy3B,EAAWz3B,GAAI,OAAO,EAGhD,OAAO,EAGX,OAAO,EAoBX83B,cAIMhe,WAAWlpB,GAAU,EAAOiQ,EAAQ23B,KAAmB,IAAD,yIAChDhvB,EAAS,EAAKhc,MAAdgc,KADgD,EAEpB,EAAKzc,MAAjCwU,EAFgD,EAEhDA,MAAOqnB,EAFyC,EAEzCA,WAAUpP,EAF+B,EAE/BA,QAGdC,QAL6C,qDAUpDD,EAAOE,UAV6C,wDAepD+e,EAAc,sBACdC,EAAe,EACfC,EAAa,MACZ/nC,GAAW2Q,GAASA,EAAM7B,OAAS,IACpCi5B,EAAa5vB,KAAUlS,IAAI0K,EAAMA,EAAM7B,OAAS,OAE5C+4B,EAAcnB,YAAaqB,EAAWztC,GAAI09B,GAC1C8P,EAAeC,EAAWztC,IAIrB,iBAATse,GAAyB1L,QAAQ86B,IAAI,sBAAuBpvB,EAAMivB,EAAaC,EAAcC,GACjGnf,EAAOC,SAAU,EA3BuC,UA4BnCrsB,IAAgBC,KAAK,CACtC,QAAS,WACTi+B,UAAW1C,EACXhoB,eAAgB83B,EAChB/3B,aAAc83B,EACd53B,MAAO23B,MACR9d,QAAQ,KACPlB,EAAOC,SAAU,EACb7oB,GACAxD,IAAgBkG,aAAa,CAAE,QAAS,2BAA4BmlB,KAAMmQ,MArC1B,WA4BlDr7B,EA5BkD,OAwC3C,iBAATic,GAAyB1L,QAAQ86B,IAAI,qBAAsBhoC,EAAS4Y,EAAMjc,GAE1EisB,IAAW,EAAKzsB,MAAMysB,OA1C8B,mDA+CpDjsB,EAAOmU,SAAShC,OAAS,GAAKnS,EAAOmU,SAAS,KAAOg3B,GACrDnrC,EAAOmU,SAASm3B,QAGpBrf,EAAOE,WAAansB,EAAOmU,SAAShC,OAEhC9O,EACA,EAAKkoC,aAAavrC,EAAOmU,SAAU,KAC/B,EAAK8a,iBAAiBjvB,EAAOmU,UAC7B,EAAKs1B,YAEDzpC,EAAOmU,SAAShC,OAAS84B,KACzB,EAAK1e,YAAW,EAAO0e,IAAmBjrC,EAAOmU,SAAShC,QAG9D,MAAM+Y,EAAO,EAAKC,QAAQ1U,QAAQmqB,aAAanqB,QAC1CyU,IACLA,EAAKD,UAAY,KAIrB,EAAKugB,YAAYxrC,EAAOmU,SAAU,KAE9B,EAAK8a,iBAAiBjvB,EAAOmU,UAEzBnU,EAAOmU,SAAShC,QAAUnS,EAAOmU,SAAShC,OAASmB,GACnD,EAAKiZ,YAAW,EAAOjZ,EAAQtT,EAAOmU,SAAShC,UAzEH,4CA+E5D8c,iBAAiB/a,GACb,MAAME,EAAQ/K,IAAUgL,WACxBC,YAAiBF,EAAOF,GAG5Bs3B,YAAYt3B,EAAS8f,GACjB,GAAuB,IAAnB9f,EAAQ/B,OAER,YADI6hB,GAAUA,KAFS,MAQrByX,GAFYhuC,KAAK+B,MAAfwU,OAEmB,IAAI+E,OAAO7E,GACtCzW,KAAKyC,SAAS,CAAE8T,MAAOy3B,GAAYzX,GAGvCuX,aAAav3B,EAAOggB,GAChBv2B,KAAKyC,SAAS,CAAE8T,SAASggB,GAG7BoV,cAGIne,GAFaxtB,KAAK0tB,QAAQ1U,QAAQmqB,aAAanqB,SAcnD/V,SAAU,MAAD,EACmDjD,KAAKwC,MAArDka,EADH,EACGA,KAAMwwB,EADT,EACSA,WADT,KACqBF,YADrB,EACkCC,aACXjtC,KAAK+B,OAAzBwU,EAFH,EAEGA,MAAOqnB,EAFV,EAEUA,SAGf,IAAKlhB,EAAM,OAAO,KAElB1c,KAAKqD,OAAS,GACd,IAAI4qC,EAAU,KACd,GAAI13B,EAAO,CACP,IAAI23B,EAAe,EACnB33B,EAAMnV,QAAQT,IACNo9B,YAAap9B,EAAGi9B,KAChBsQ,EAAevtC,KAGvBX,KAAKqD,OAASkT,OACX,GAAI22B,EAAY,CACnB,IAAIgB,EAAe,EACnBhB,EAAW9rC,QAAQT,IACXo9B,YAAap9B,EAAGi9B,KAChBsQ,EAAevtC,KAGvBX,KAAKqD,OAAS6pC,EAAW72B,IAAI1V,GAAKA,EAAET,QAUV,iBAAtB09B,EAAS,WACTqQ,EAAUE,MAAM9sC,KAAK8sC,MAAM,KAAK93B,IAAI,CAAC1V,EAAGgjB,IAAU,kBAAC,GAAD,CAAmBpf,IAAKof,EAAOA,MAAOA,MAIhG7W,OAAOshC,OAAS73B,EAChBzJ,OAAOuhC,GAAK,IAAIv5B,KAAKyB,GAAS,IAAIF,IAAIrB,GAAK,CAACA,EAAGA,KAC/C,MAAMs5B,EAAM,GAUZ,OATAxhC,OAAO6/B,GAAGvrC,QAAQ,CAACmJ,EAAOhG,KACjBuI,OAAOuhC,GAAGp5B,IAAI1Q,IACf+pC,EAAIx4B,KAAKvR,KAGjBuO,QAAQ86B,IAAI,eAAgBr3B,GAAS,IAAI7B,OAAQ5H,OAAOuhC,GAAGv0B,KAAMhN,OAAO6/B,GAAG7yB,KAAMw0B,EAAI55B,QAKjF,kBAAC,GAAD,CACIuI,IAAKjd,KAAK0tB,QACVxqB,UAAU,eACVG,OAAQrD,KAAKqD,OACbirB,UAAW,GACXlB,cAAe,GACfgW,WAAYziC,GAAKX,KAAKojC,WAAWziC,EAAGX,KAAKqD,QACzCixB,SAAUt0B,KAAK6uB,gBAchB4c,UCveAx5B,qBAxCf,cAAsBpQ,IAAMC,UAAW,eAAD,oBAClCyD,YAAc,KAAO,MACTgpC,EAAiBvuC,KAAKwC,MAAtB+rC,aACR,IAAKA,EAAc,OAFH,MAIC9gB,EAAS8gB,EAAlBv1B,QACHyU,GAELA,EAAKke,eAGT1oC,SAAU,MAAD,EACmDjD,KAAKwC,MAArD6P,EADH,EACGA,EAAGk8B,EADN,EACMA,aAAcjhB,EADpB,EACoBA,MAAO4f,EAD3B,EAC2BA,WAAYpwB,EADvC,EACuCA,QAE5C,OACI,oCACI,yBAAK5Z,UAAU,iBACX,kBAACgV,EAAA,EAAD,CAAYhV,UAAU,sCAAsCqN,QAASuM,GACjE,kBAAC,GAAD,OAEJ,yBAAK5Z,UAAU,oCAAoCqN,QAASvQ,KAAKuF,aAC7D,0BAAMrC,UAAU,yBAAyBmP,EAAE,oBAGnD,yBAAKnP,UAAU,mBACX,kBAAC,GAAD,CACIsb,KAAK,kBACLvB,IAAKsxB,EACLrB,WAAYA,EACZxwB,MAAM,EACN4Q,MAAOA,S,OCvB/B,MAAMkhB,WAAgB3sC,IAAM4sC,cAAe,eAAD,iCACtC1sC,MAAQ,CACJ6lB,aAAa,EACbngB,IAAK,EACLF,KAAM,GAJ4B,KAOtCo4B,kBAPsC,sCAOlB,WAAMt7B,GAAN,iBAAAqO,EAAA,qDACZrO,IACAA,EAAM6B,iBACN7B,EAAM4B,mBAEc,EAAKlE,MAArB6lB,YAGJ,EAAKnlB,SAAS,CAAEmlB,aAAa,KAEvBrgB,EAAOlD,EAAM4F,QACbxC,EAAMpD,EAAM6F,QAElB,EAAKzH,SAAS,CACVmlB,aAAa,EACbrgB,OACAE,SAhBQ,yCAPkB,2DA4BtCogB,uBAAyBxjB,IACjBA,GACAA,EAAM4B,kBAGVjG,KAAKyC,SAAS,CAAEmlB,aAAa,KAjCK,KAoCtCrB,aAAeliB,IACXrE,KAAK6nB,0BAIL6mB,EAFqB1uC,KAAKwC,MAAlBksC,aAKZzrC,SAAU,MAAD,EAC8CjD,KAAKwC,MAAhD0P,EADH,EACGA,OAAQE,EADX,EACWA,SAAU4L,EADrB,EACqBA,kBAAmB3L,EADxC,EACwCA,EADxC,EAE8BrS,KAAK+B,MAAhC6lB,EAFH,EAEGA,YAAangB,EAFhB,EAEgBA,IAAKF,EAFrB,EAEqBA,KAEpB+K,EAAaC,YAAkBL,EAAQ8L,EAAmB3L,GAEhE,OACI,oCACI,kBAACkP,GAAA,EAAD,CAAUC,QAAM,EAACte,UAAU,WAAWqN,QAAS6B,EAAUsW,cAAe1oB,KAAK2/B,mBACzE,kBAACntB,EAAA,EAAD,CAAU6uB,QAAM,EAACnvB,OAAQA,EAAQ8L,kBAAmBA,EAAmBgkB,YAAU,IACjF,yBAAK9+B,UAAU,kBAAkBoP,IAErC,kBAACuU,GAAA,EAAD,CACInK,KAAMkL,EACN9K,QAAS9c,KAAK6nB,uBACdf,gBAAgB,iBAChBL,eAAgB,CAAEhf,MAAKF,QACvBwf,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QAEhB5W,YAAaQ,GAAKA,EAAE5K,mBACpB,kBAACkhB,GAAA,EAAD,CAAU5W,QAASM,GAAKA,EAAE5K,mBACtB,kBAACmhB,GAAA,EAAD,CAAU7W,QAASvQ,KAAKumB,cACpB,kBAAC7E,GAAA,EAAD,KACI,kBAAC4F,GAAD,OAEJ,kBAACvF,GAAA,EAAD,CAAcC,QAAS3P,EAAE,iBAgBrDm8B,GAAQpwB,aAAe,CACnBJ,mBAAmB,GAGR/L,qBAAkBu8B,I,OCLlBv8B,qBA3Ff,cAAgCpQ,IAAM4sC,cAAe,eAAD,iCAChD1sC,MAAQ,CACJ6lB,aAAa,EACbngB,IAAK,EACLF,KAAM,GAJsC,KAOhDo4B,kBAPgD,sCAO5B,WAAMt7B,GAAN,iBAAAqO,EAAA,qDACZrO,IACAA,EAAM6B,iBACN7B,EAAM4B,mBAEc,EAAKlE,MAArB6lB,YAGJ,EAAKnlB,SAAS,CAAEmlB,aAAa,KAEvBrgB,EAAOlD,EAAM4F,QACbxC,EAAMpD,EAAM6F,QAElB,EAAKzH,SAAS,CACVmlB,aAAa,EACbrgB,OACAE,SAhBQ,yCAP4B,2DA4BhDogB,uBAAyBxjB,IACjBA,GACAA,EAAM4B,kBAGVjG,KAAKyC,SAAS,CAAEmlB,aAAa,KAjCe,KAoChDrB,aAAeliB,IACXrE,KAAK6nB,0BAIL6mB,EAFqB1uC,KAAKwC,MAAlBksC,aAKZzrC,SAAU,MAAD,EAC0BjD,KAAKwC,MAA5B6P,EADH,EACGA,EAAGH,EADN,EACMA,OAAQ3B,EADd,EACcA,QADd,EAE8BvQ,KAAK+B,MAAhC6lB,EAFH,EAEGA,YAAangB,EAFhB,EAEgBA,IAAKF,EAFrB,EAEqBA,KAE1B,OACI,oCACI,kBAACga,GAAA,EAAD,CACIC,QAAM,EACNte,UAAU,sBACVqN,QAASA,EACTmY,cAAe1oB,KAAK2/B,mBACpB,kBAAC,GAAD,CAAMztB,OAAQA,KAElB,kBAAC2U,GAAA,EAAD,CACInK,KAAMkL,EACN9K,QAAS9c,KAAK6nB,uBACdf,gBAAgB,iBAChBL,eAAgB,CAAEhf,MAAKF,QACvBwf,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QAEhB5W,YAAaQ,GAAKA,EAAE5K,mBACpB,kBAACkhB,GAAA,EAAD,CAAU5W,QAASM,GAAKA,EAAE5K,mBACtB,kBAACmhB,GAAA,EAAD,CAAU7W,QAASvQ,KAAKumB,cACpB,kBAAC7E,GAAA,EAAD,KACI,kBAAC4F,GAAD,OAEJ,kBAACvF,GAAA,EAAD,CAAcC,QAAS3P,EAAE,mB,OCftCs8B,OAjEf,cAA8B9sC,IAAMC,UAChClC,YAAY4C,GACR0B,MAAM1B,GADS,KA+BnBs2B,qBAAuB10B,IAAW,MACtB20B,EAA+B30B,EAA/B20B,WAAY2G,EAAmBt7B,EAAnBs7B,eAEpB1/B,KAAKyC,SAAS,CACVs2B,WAAYA,EACZ2G,eAAgBA,KAjCpB1/B,KAAK+B,MAAQ,CACTg3B,WAAY5f,KAAS0oB,YACrBnC,eAAgB,MAIxB9hB,sBAAsBC,EAAWC,GAAY,MACjC5L,EAAWlS,KAAKwC,MAAhB0P,OAER,OAAI4L,EAAUib,aAAe7mB,GAIzB4L,EAAU4hB,iBAAmBxtB,EAOrClP,oBACImW,KAASnM,GAAG,qBAAsBhN,KAAK84B,sBAG3C7rB,uBACIkM,KAAS/L,IAAI,qBAAsBpN,KAAK84B,sBAY5C71B,SAAU,MAAD,EACuBjD,KAAKwC,MAAzB0P,EADH,EACGA,OAAQ3B,EADX,EACWA,QACIq+B,EAAmB5uC,KAAK+B,MAApCg3B,WAEFnH,EAAW5a,YAAgB9E,GAEjC,OACI,kBAACqP,GAAA,EAAD,CACIC,QAAM,EACNte,UAAWkN,IAAW,oBAAqB,CAAE,gBAAiB8B,IAAW08B,IACzEr+B,QAASA,GACT,yBAAKrN,UAAU,6BACX,kBAAC,GAAD,CAAMgP,OAAQA,EAAQ8M,SAAU4S,EAAW,IAAMA,EAAW,W,6OCkDjE3f,qBAlGf,cAA2BpQ,IAAMC,UAC7BlC,YAAY4C,GACR0B,MAAM1B,GADS,KA+BnBs2B,qBAAuB10B,IACnBpE,KAAKyC,S,wVAAL,IACO2B,KA9BPpE,KAAK+B,MAAQ,CACTg3B,WAAY5f,KAAS0oB,YACrBgN,cAAe11B,KAAS21B,gBAIhClxB,sBAAsBC,EAAWC,GAAY,MAAD,EACV9d,KAAKwC,MAA3B0P,EADgC,EAChCA,OAAQiU,EADwB,EACxBA,UAEhB,OAAIrI,EAAUib,aAAe7mB,GAAU4L,EAAU+wB,gBAAkB1oB,GAI/DrI,EAAU4hB,iBAAmBxtB,GAAU4L,EAAUixB,oBAAsB5oB,EAO/EnjB,oBACImW,KAASnM,GAAG,qBAAsBhN,KAAK84B,sBAG3C7rB,uBACIkM,KAAS/L,IAAI,qBAAsBpN,KAAK84B,sBAS5C71B,SAAU,MAAD,EACiDjD,KAAKwC,MAAnD0P,EADH,EACGA,OAAQiU,EADX,EACWA,UAAW6oB,EADtB,EACsBA,WAAYz+B,EADlC,EACkCA,QAAS8B,EAD3C,EAC2CA,EAC1Cu8B,EAAiB5uC,KAAK+B,MAAMg3B,WAC5BkW,EAAoBjvC,KAAK+B,MAAM8sC,cAC/Bn3B,EAAUY,IAAazM,IAAIqG,EAAQiU,GAEjCwG,EAAWjV,EAAXiV,OAEF3D,EAAOkmB,YAAex3B,GACtBslB,EAAamS,YAAqBz3B,EAASrF,GAC3C+8B,EAAiBC,YAAyB33B,EAASrF,GACnDmG,EAAU82B,aAAW53B,EAASrF,IAAM,OACpCF,EAAWD,IAAW08B,GAAkBzoB,IAAc8oB,EAEtDM,EACF5iB,EAAO3W,SAAWg5B,EACd,kBAACQ,GAAA,EAAD,CAAUpe,OAAQzE,EAAO3W,QAASqrB,QAAM,IAExC,kBAAC7uB,EAAA,EAAD,CAAUN,OAAQA,EAAQmvB,QAAM,IAGxC,OACI,kBAAC9f,GAAA,EAAD,CAAUC,QAAM,EAACte,UAAWkN,IAAW,gBAAiB,CAAE,gBAAiB+B,IAAa5B,QAASA,GAC7F,yBAAKrN,UAAU,kBACVqsC,EACD,yBAAKrsC,UAAU,wBACX,yBAAKA,UAAU,kBACV8rC,GAAcI,EACX,yBAAKlsC,UAAU,gBAAgBksC,GAE/B,kBAAC,GAAD,CAAal9B,OAAQA,IAEzB,yBAAKhP,UAAU,eAAe8lB,IAElC,yBAAK9lB,UAAU,mBACX,yBAAKA,UAAU,kBAEP,qCACM8rC,GAAchS,GACZ,0BAAM95B,UAAU,yBAAyB85B,EAAzC,MAEHxkB,W,OCzE1Bi3B,OAff,UAAuB,QAAEC,EAAF,UAAWC,EAAX,QAAsBp/B,EAAtB,SAA+Bq/B,IAClD,OACI,yBAAK1sC,UAAU,kBACX,yBAAKA,UAAWkN,IAAW,uBAAwB,CAAE,iCAAkCu/B,KAAeC,GACrG3lB,QAAQylB,IAAY,uBAAGn/B,QAASA,GAAUm/B,K,+jBCosBxCz9B,qBAnrBf,cAAqBpQ,IAAMC,UACvBlC,YAAY4C,GAAQ,IAAD,EACf0B,MAAM1B,GADS,YAoBnB6yB,cAAgBhxB,IACZ,KAAIuY,IAAaizB,OAAOn7B,OAAS,KAI7BrQ,EAAMyrC,YAIV,OAAQzrC,EAAME,KACV,IAAK,SACDF,EAAM6B,iBACN7B,EAAM4B,kBACN5B,EAAMuD,OAAOyD,OAEbrL,KAAK+E,gBAnCE,KA4DnBgrC,oBAAsBrI,IAClB,MAAMsI,EAAM,GACN35B,EAAM,IAAIvB,IAEZ,IAAK,IAAIE,EAAI,EAAGA,EAAI0yB,EAAQhzB,OAAQM,IAAK,CACzC,IAAIzS,EAASmlC,EAAQ1yB,IAAM0yB,EAAQ1yB,GAAG0B,SACtC,GAAInU,EACA,IAAK,IAAI0tC,EAAI,EAAGA,EAAI1tC,EAAOmS,OAAQu7B,IAC1B55B,EAAIpB,IAAI1S,EAAO0tC,MAChB55B,EAAImE,IAAIjY,EAAO0tC,GAAI1tC,EAAO0tC,IAC1BD,EAAIl6B,KAAKvT,EAAO0tC,KAUhC,OAJAD,EAAIlc,KAAK,CAACphB,EAAG06B,IACFC,YAAaf,YAAac,GAAId,YAAa55B,KAG/Cs9B,GAhFQ,KAmFnBh1B,WAnFmB,sCAmFN,WAAM3N,GAAN,6EAAAqF,EAAA,wDACT,EAAKw9B,UAAY,IAAIhnB,KACrB,EAAK7b,KAAOA,EACN6iC,EAAY,EAAKA,UACnBv5B,EAAQ,KAIJzE,EAAW,EAAK1P,MAAhB0P,OACAsE,EAAkB,EAAKzU,MAAvByU,cAEHtE,EAXI,wBAYCuD,EAAW,GACX06B,EAAe/tC,IAAgBC,KAAK,CACtC,QAAS,cACTqZ,MAAOrO,EACPwI,MAAO,MAEXJ,EAASK,KAAKq6B,IAERh1B,EAAYhG,EAAc9H,KACf8N,IAAc9N,IACrB+iC,EAAoBhuC,IAAgBC,KAAK,CAC3C,QAAS,cACTqZ,MAAOP,EACPtF,MAAO,MAEXJ,EAASK,KAAKs6B,KAGZh1B,EAAe5G,EAAiBnH,KAClB+N,IAAiB/N,IAC3BgjC,EAAuBjuC,IAAgBC,KAAK,CAC9C,QAAS,cACTqZ,MAAON,EACPvF,MAAO,MAEXJ,EAASK,KAAKu6B,IArCb,UAwCiBj6B,QAAQ/C,IAAIoC,EAASY,IAAI1V,GAAKA,EAAE2V,MAAMzF,GAAK,QAxC5D,WAwCC62B,EAxCD,OAyCC4I,EAAQ,EAAKP,oBAAoBrI,GAEnCwI,IAAc,EAAKA,UA3ClB,sDA+CD15B,IACQnE,EAAM,EAAK7P,MAAX6P,EAEF2I,EAAa3N,EAAKonB,gBAClB8b,EAAuB,CAAC,iBAAkBl+B,EAAE,iBAAiBoiB,gBAG1ClH,KAAK6F,GAAMA,EAAGod,SAASx1B,KAC3CG,GAAao1B,EAAqBhjB,KAAK6F,GAAMA,EAAGod,SAASr1B,EAAUsZ,kBAEpE6b,EAAMG,OAAO,EAAG,EAAGj6B,EAActW,KAIzC,EAAKuC,SAAS,CACVgF,IAAK,KACLipC,cAAe,KACfJ,MAAOA,IAGX35B,EAAQ/K,IAAUgL,WAClBC,YAAiBF,EAAO25B,MAGxBK,GADIA,EAActjC,EAAK0N,QACG4P,WAAW,KAAOgmB,EAAYC,OAAO,GAAKD,GACpDj8B,QAAUm8B,MAxErB,wBAyEKC,EAAiB,GAEjBC,EAAgB3uC,IAAgBC,KAAK,CACvC,QAAS,oBACTqZ,MAAOi1B,IAEXG,EAAeh7B,KAAKi7B,GAEhB51B,IAEA61B,GADIA,EAAmB71B,EAAUJ,QACG4P,WAAW,KAAOqmB,EAAiBJ,OAAO,GAAKI,GAC9Dt8B,QAAUm8B,MAAuBG,IAAqBL,IACjEM,EAAqB7uC,IAAgBC,KAAK,CAC5C,QAAS,oBACTqZ,MAAOs1B,IAEXF,EAAeh7B,KAAKm7B,IAzF3B,UA6F2B76B,QAAQ/C,IAAIy9B,EAAez6B,IAAI1V,GAAKA,EAAE2V,MAAMzF,GAAK,QA7F5E,WA6FKqgC,EA7FL,OA8FKC,EAAS,EAAKpB,oBAAoBmB,GAEpChB,IAAc,EAAKA,UAhGtB,mDAoGD,EAAKztC,SAAS,CACV0uC,WAGJx6B,EAAQ/K,IAAUgL,WAClBC,YAAiBF,EAAOw6B,GAzGvB,wBA2GD,EAAK1uC,SAAS,CACV0uC,OAAQ,OA5GX,WAiHL9hB,EAAW,IACXnd,EAlHK,kCAmHY9P,IAAgBC,KAAK,CAClC,QAAS,qBACT4U,QAAS/E,EACTwJ,MAAOrO,EACPmiB,eAAgB,EAChBC,gBAAiB,EACjBxD,OAAQ,EACRpW,MAAO,GACP0F,OAAQ,OA3HP,QAmHL8T,EAnHK,gDA8HYjtB,IAAgBC,KAAK,CAClC,QAAS,iBACTi+B,UAAW,CAAE,QAAS,gBACtB5kB,MAAOrO,EACP+jC,YAAa,EACbx7B,eAAgB,EAChBy7B,kBAAmB,EACnBx7B,MAAO,KArIN,QA8HLwZ,EA9HK,kBAyIT/W,IAAayX,SAASV,EAASA,UAE3BiiB,EAAc,KACbp/B,EA5II,4CA8I6B9P,IAAgBC,KAAK,CAC/C,QAAS,qBACT4gB,IAAK5V,IAhJR,QA8IKkkC,EA9IL,OAoJDj5B,IAAayX,SAAS,CAACwhB,EAAgB75B,UAEvC45B,EAAcC,EAtJb,mDAwJDz+B,QAAQ86B,IAAI,mBAAqBvgC,EAAO,yBAAxC,MAxJC,WA8JL6iC,IAAc,EAAKA,UA9Jd,mDA2KT,IAPA,EAAKztC,SAAS,CACV4sB,WACAiiB,gBAGE/6B,EAAQ,IAAIzB,IACZ6e,EAAQ,IAAI7e,IACTE,EAAI,EAAGA,EAAIqa,EAASA,SAAS3a,OAAQM,IAC1CuB,EAAMiE,IAAI6U,EAASA,SAASra,GAAGiC,QAASoY,EAASA,SAASra,GAAGiC,SACzDoY,EAASA,SAASra,GAAG2X,OAAO3W,SAC5B2d,EAAMnZ,IAAI6U,EAASA,SAASra,GAAG2X,OAAO3W,QAASqZ,EAASA,SAASra,GAAG2X,OAAO3W,SAI/Es7B,IACQr6B,GADM,EACeq6B,GAArBr6B,QAASS,EADJ,EACIA,QAEjBnB,EAAMiE,IAAIvD,EAASA,GACfS,IACQiV,EAAWjV,EAAXiV,SACMA,EAAO3W,SACjB2d,EAAMnZ,IAAImS,EAAO3W,QAAS2W,EAAO3W,UAK7CW,EAAQ/K,IAAUgL,WAClBC,YAAiBF,EAAO,IAAIJ,EAAMi7B,SAClC7gB,YAAiBha,EAAO,IAAIgd,EAAM6d,SAhMzB,yDAnFM,2DAsRnBj8B,YAtRmB,qBAsRL,4CAAA7C,EAAA,yDACS,EAAKlQ,MAAhB0P,OADE,uBAGN,EAAKzP,SAAS,CACVgF,IAAK,KACLipC,cAAe,KACfJ,MAAO,KACPa,OAAQ,KACR9hB,SAAU,KACViiB,YAAa,OATX,iCAeJG,EAAarvC,IAAgBC,KAAK,CACpC,QAAS,cACTqvC,SAAU,CAAE,QAAS,wBACrB77B,MAAO,KACRS,MAAM,KACE,CAAE,QAAS,QAASI,SAAU,MAGnCi7B,EAAuBvvC,IAAgBC,KAAK,CAC9C,QAAS,cACTqZ,MAAO,GACP7F,MAAO,MACRS,MAAM,KACE,CAAE,QAAS,QAASI,SAAU,MAGnCX,EAAuB3T,IAAgBC,KAAK,CAC9C,QAAS,oBACT2T,QAASC,IAAUC,UACnBC,OAAO,IACRG,MAAMvD,OAnCC,SAqCwCqD,QAAQ/C,IAAI,CAC1Do+B,EACAE,EACA57B,IAxCM,mCAqCHtO,EArCG,KAqCEipC,EArCF,KAqCiBl6B,EArCjB,KA2CV,EAAK/T,SAAS,CACVgF,MACAipC,gBACAl6B,gBACA85B,MAAO,KACPa,OAAQ,KACR9hB,SAAU,KACViiB,YAAa,OAGX36B,EAAQ/K,IAAUgL,WACxBC,YAAiBF,EAAOlP,EAAIiP,UAC5BG,YAAiBF,EAAO+5B,EAAch6B,UAvD5B,0CAtRK,KAgVnBk7B,yBAA2BvtC,IACvBA,EAAM4B,kBAEN7D,IAAgBC,KAAK,CACjB,QAAS,4BAGbrC,KAAKyC,SAAS,CAAEiuC,cAAe,QAvVhB,KA0VnBmB,oBAAsB,CAAC3/B,EAAQiU,EAAW2rB,EAAaC,KAAc,MACzDC,EAAoBhyC,KAAKwC,MAAzBwvC,gBAEJF,GACA1vC,IAAgBC,KAAK,CACjB,QAAS,uBACT4U,QAAS/E,IAIjB8/B,EAAgB9/B,EAAQiU,EAAW4rB,IApWpB,KAuWnBljB,aAAe,KACX,MAAMpB,EAAOztB,KAAK0tB,QAAQ1U,QAEtByU,EAAKD,UAAYC,EAAKK,cAAgBL,EAAKqF,aAAeC,MAC1D/yB,KAAKiyC,kBA3WM,KA+WnBC,UAAY7iB,IACR,MAAM3a,EAAS2a,EAAWA,EAASA,SAAS3a,OAAS,EAMrD,MAAO,CACH08B,YALe18B,EAAS,EAAI2a,EAASA,SAAS3a,EAAS,GAAGsU,KAAO,EAMjEpT,eALiBlB,EAAS,EAAI2a,EAASA,SAAS3a,EAAS,GAAGuC,QAAU,EAMtEo6B,kBALoB38B,EAAS,EAAI2a,EAASA,SAAS3a,EAAS,GAAGxU,GAAK,IApXzD,KA6XnBiyC,eAAiB,CAAC9iB,EAAU9sB,IACnBA,GACAA,EAAO8sB,SAAS3a,OAEhB2a,GACAA,EAASA,SAAS3a,OAEhB,CACHkb,YAAartB,EAAOqtB,YACpBP,SAAUA,EAASA,SAAS/T,OAAO/Y,EAAO8sB,WALxB9sB,EAHF8sB,EA9XL,KA0YnB4iB,eA1YmB,qBA0YF,4CAAAv/B,EAAA,yDACT,EAAK+b,QADI,oDAGLvc,EAAW,EAAK1P,MAAhB0P,OAEFg+B,EAAY,EAAKA,UAEf7gB,EAAa,EAAKttB,MAAlBstB,SAEFpD,EAAS,EAAKimB,UAAU7iB,GAE9B,EAAKZ,SAAU,EACXlsB,EAAS,IACT2P,EAbS,kCAcM9P,IAAgBC,KAAK,CAChC,QAAS,qBACT4U,QAAS/E,EACTwJ,MAAO,EAAKrO,KACZmiB,eAAgB,EAChBC,gBAAiBxD,EAAOolB,kBACxBx7B,MAAO,GACP0F,OAAQ,OArBH,QAcThZ,EAdS,gDAwBMH,IAAgBC,KAAhB,IACX,QAAS,iBACTi+B,UAAW,CAAE,QAAS,gBACtB5kB,MAAO,EAAKrO,MACT4e,EAJQ,CAKXpW,MAAO,MA7BF,QAwBTtT,EAxBS,kBAgCb,EAAKksB,SAAU,EAEf2jB,aAAwB7vC,EAAQ8sB,EAAWA,EAASA,SAAW,IAC/D/W,IAAayX,SAASxtB,EAAO8sB,UAEzB6gB,IAAc,EAAKA,UArCV,mDA+Cb,IANA,EAAKztC,SAAS,CACV4sB,SAAU,EAAK8iB,eAAe9iB,EAAU9sB,KAGtCgU,EAAQ,IAAIzB,IACZ6e,EAAQ,IAAI7e,IACTE,EAAI,EAAGA,EAAIzS,EAAO8sB,SAAS3a,OAAQM,IACxCuB,EAAMiE,IAAIjY,EAAO8sB,SAASra,GAAGiC,QAAS1U,EAAO8sB,SAASra,GAAGiC,SACrD1U,EAAO8sB,SAASra,GAAG2X,OAAO3W,SAC1B2d,EAAMnZ,IAAIjY,EAAO8sB,SAASra,GAAG2X,OAAO3W,QAASzT,EAAO8sB,SAASra,GAAG2X,OAAO3W,SAIzEW,EAAQ/K,IAAUgL,WACxBC,YAAiBF,EAAO,IAAIJ,EAAMi7B,SAClC7gB,YAAiBha,EAAO,IAAIgd,EAAM6d,SAxDrB,0CA1YE,KAqcnBa,qBAAuBhuC,IACnBA,EAAM4B,mBAtcS,KAycnBlB,YAAc,MAGV+X,EAFoB9c,KAAKwC,MAAjBsa,YA1cO,KA+cnBw1B,8BA/cmB,sCA+ca,WAAMpgC,GAAN,eAAAQ,EAAA,wDACvBR,EADuB,iEAGtB9P,IAAgBC,KAAK,CACvB,QAAS,0BACT4U,QAAS/E,IALe,UAQpBw+B,EAAkB,EAAK3uC,MAAvB2uC,cARoB,iDAW5B,EAAKjuC,SAAS,CACViuC,cAAc,MAAMA,EAAP,CAAsBh6B,SAAUg6B,EAAch6B,SAAS6E,OAAO5a,GAAKA,IAAMuR,OAZ9D,yCA/cb,2DA+dnBqgC,oBA/dmB,sCA+dG,WAAMrgC,GAAN,eAAAQ,EAAA,wDACbR,EADa,iEAGZ9P,IAAgBC,KAAK,CACvB,QAAS,gBACT4U,QAAS/E,EACTw/B,SAAU,CACN,QAAS,0BAPC,UAWVjqC,EAAQ,EAAK1F,MAAb0F,IAXU,iDAclB,EAAKhF,SAAS,CACVgF,IAAI,MAAMA,EAAP,CAAYiP,SAAUjP,EAAIiP,SAAS6E,OAAO5a,GAAKA,IAAMuR,OAf1C,yCA/dH,sDAGflS,KAAKwM,gBAAkB,IAAIG,IAAgB3M,KAAKq1B,eAChDr1B,KAAK0tB,QAAU7rB,IAAMya,YACrBtc,KAAK+B,MAAQ,GAGjBiB,oBAAqB,MACTqK,EAASrN,KAAKwC,MAAd6K,KAERrN,KAAKwyC,oBAAoBnlC,GAEzBf,IAAgBC,IAAIvM,KAAKwM,iBAG7BS,uBACIX,IAAgBI,OAAO1M,KAAKwM,iBAuBhC5J,mBAAmBC,EAAWC,EAAWC,GAAW,MAAD,EACtB/C,KAAKwC,MAAtB0P,EADuC,EACvCA,OAAQ7E,EAD+B,EAC/BA,KAEZxK,EAAUwK,OAASA,EACnBrN,KAAKwyC,oBAAoBnlC,GAClBxK,EAAUqP,SAAWA,GAC5BlS,KAAKwyC,oBAAoBnlC,GAIjCmlC,oBAAoBnlC,GAChB,MAAMsjC,EAActjC,EAAOA,EAAK0N,OAAS,GAEpC41B,EAGD3wC,KAAKgb,WAAW21B,GAFhB3wC,KAAKuV,cA4bbtS,SAAU,MAAD,EACiBjD,KAAKwC,MAAnB0P,EADH,EACGA,OAAQG,EADX,EACWA,EADX,EAEgErS,KAAK+B,MAAlE0F,EAFH,EAEGA,IAAKipC,EAFR,EAEQA,cAAeJ,EAFvB,EAEuBA,MAAOa,EAF9B,EAE8BA,OAAQ9hB,EAFtC,EAEsCA,SAAUiiB,EAFhD,EAEgDA,YAE/C/yB,EAAOR,KAAUlS,IAAIqG,GAErBugC,EACFhrC,GAAOA,EAAIiP,SACLjP,EAAIiP,SAASL,IAAI1V,GACb,kBAAC,GAAD,CACI4D,IAAK5D,EACLuR,OAAQvR,EACRyR,SAAU,IAAMpS,KAAK6xC,oBAAoBlxC,EAAG,MAAM,GAAO,GACzD+tC,SAAU,IAAM1uC,KAAKuyC,oBAAoB5xC,MAGjD,GAEJ+xC,EACFhC,GAAiBA,EAAch6B,SACzBg6B,EAAch6B,SAASL,IAAI1V,GACvB,kBAAC,GAAD,CACI4D,IAAK5D,EACLuR,OAAQvR,EACR4P,QAAS,IAAMvQ,KAAK6xC,oBAAoBlxC,EAAG,MAAM,GAAM,GACvD+tC,SAAU,IAAM1uC,KAAKsyC,8BAA8B3xC,MAG3D,GAEJgyC,EAAarC,EACbA,EAAMj6B,IAAI1V,GACN,kBAAC,GAAD,CACI4D,IAAK5D,EACLuR,OAAQvR,EACR4P,QAAS,IAAMvQ,KAAK6xC,oBAAoBlxC,EAAG,MAAM,GAAM,MAG/D,GAEAiyC,EAAiB,IAAI99B,IACrB+9B,EAAc1B,EACdA,EAAO96B,IAAI1V,IACPiyC,EAAep4B,IAAI7Z,EAAGA,GAGlB,kBAAC,GAAD,CACI4D,IAAK5D,EACLuR,OAAQvR,EACR4P,QAAS,IAAMvQ,KAAK6xC,oBAAoBlxC,EAAG,MAAM,GAAM,OAInE,GAEAmyC,EACFxB,GAAeA,EAAYr6B,UAAYq6B,EAAY55B,UAAYk7B,EAAe39B,IAAIq8B,EAAYr6B,SAC1F,kBAAC,GAAD,CACI1S,IAAK+sC,EAAYr6B,QACjB/E,OAAQo/B,EAAYr6B,QACpB1G,QAAS,IAAMvQ,KAAK6xC,oBAAoBP,EAAYr6B,QAAS,MAAM,GAAM,KAE7E,KAEF87B,EAAoB,IAAIj+B,IACxBk+B,EACF3jB,GAAYA,EAASA,SACfA,EAASA,SAAShZ,IAAI1V,IAClB,MAAM4D,EAAG,UAAM5D,EAAEsW,QAAR,YAAmBtW,EAAET,IAG9B,OAFA6yC,EAAkBv4B,IAAIjW,EAAKA,GAGvB,kBAAC,GAAD,CACIA,IAAKA,EACL2N,OAAQvR,EAAEsW,QACVkP,UAAWxlB,EAAET,GACb8uC,WAAY/kB,QAAQ/X,GACpB3B,QAAS,IAAMvQ,KAAK6xC,oBAAoBlxC,EAAEsW,QAAStW,EAAET,IAAI,GAAO,OAI5E,GAEJ+yC,EACF3B,GACAA,EAAY55B,UACXq7B,EAAkB99B,IAAlB,UAAyBq8B,EAAY55B,QAAQT,QAA7C,YAAwDq6B,EAAY55B,QAAQxX,KACzE,kBAAC,GAAD,CACIqE,IAAG,UAAK+sC,EAAY55B,QAAQT,QAAzB,YAAoCq6B,EAAY55B,QAAQxX,IAC3DgS,OAAQo/B,EAAY55B,QAAQT,QAC5BkP,UAAWmrB,EAAY55B,QAAQxX,GAC/B8uC,YAAY,EACZz+B,QAAS,IACLvQ,KAAK6xC,oBAAoBP,EAAY55B,QAAQT,QAASq6B,EAAY55B,QAAQxX,IAAI,GAAO,KAG7F,KAER,IAAIgzC,EAAQ7jB,EAAWA,EAASO,YAAc,EAE1C0hB,GACAA,EAAY55B,UACXq7B,EAAkB99B,IAAlB,UAAyBq8B,EAAY55B,QAAQT,QAA7C,YAAwDq6B,EAAY55B,QAAQxX,MAE7EgzC,IAGJ,IAAIC,EAAkB9gC,EAAE,cAKxB,OAJI6gC,IACAC,EAA4B,IAAVD,EAAc,kBAAd,gBAA2CA,EAA3C,cAIlB,yBAAKj2B,IAAKjd,KAAK0tB,QAASxqB,UAAU,SAASoxB,SAAUt0B,KAAK6uB,cACrDtQ,GACG,oCACI,yBAAKrb,UAAU,wBACX,kBAAC,GAAD,KAAgBmP,EAAE,qBAClB,yBAAKnP,UAAU,uBACX,yBAAKA,UAAU,uBACX,kBAAC,GAAD,CAAMgP,OAAQA,EAAQ+N,YAAY,KAEtC,kBAAC/H,EAAA,EAAD,CACIhV,UAAU,sBACViV,aAAW,SACX9H,YAAarQ,KAAK+E,aAClB,kBAAC+L,EAAA,EAAD,SAIZ,yBAAK5N,UAAU,kCAGtBuvC,EAAS/9B,OAAS,GACf,oCACI,yBAAKxR,UAAU,wBACX,kBAAC,GAAD,KAAgBmP,EAAE,cAClB,yBAAKnP,UAAU,wBAAwBoxB,SAAUt0B,KAAKqyC,sBAClD,yBAAKnvC,UAAU,iCACduvC,EACD,yBAAKvvC,UAAU,mCAGvB,yBAAKA,UAAU,kCAGtBwvC,EAAmBh+B,OAAS,GACzB,yBAAKxR,UAAU,wBACX,kBAAC,GAAD,CAAewsC,QAASr9B,EAAE,eAAgB9B,QAASvQ,KAAK4xC,0BACnDv/B,EAAE,WAENqgC,GAGRC,EAAWj+B,OAAS,GACjB,oCACI,yBAAKxR,UAAU,wBACX,kBAAC,GAAD,KAAgBmP,EAAE,qBACjBsgC,GAEL,yBAAKzvC,UAAU,kCAGtB2vC,EAAYn+B,OAAS,GAClB,oCACI,yBAAKxR,UAAU,wBACX,kBAAC,GAAD,KAAgBmP,EAAE,iBACjBygC,EACAD,GAEL,yBAAK3vC,UAAU,mCAGrBmsB,GAAaiiB,GAAeA,EAAY55B,UACtC,yBAAKxU,UAAU,wBACX,kBAAC,GAAD,KAAgBiwC,GACfF,EACAD,O,iBC5nBVI,OA3Df,cAA0BvxC,IAAMC,UAC5BlC,YAAY4C,GACR0B,MAAM1B,GADS,KAMnB6yB,cAAgBhxB,IACZ,KAAIuY,IAAaizB,OAAOn7B,OAAS,KAI7BrQ,EAAMyrC,YAIV,OAAQzrC,EAAME,KACV,IAAK,SAAL,MACYuY,EAAY9c,KAAKwC,MAAjBsa,QACJA,IACAzY,EAAM6B,iBACN7B,EAAM4B,kBACN5B,EAAMuD,OAAOyD,OAEbyR,OApBZ9c,KAAKwM,gBAAkB,IAAIG,IAAgB3M,KAAKq1B,eA0BpDzyB,mBAAmBC,EAAWC,EAAWC,GAAW,MACxC2Z,EAAS1c,KAAKwC,MAAdka,KAEJ7Z,EAAU6Z,OAASA,IACfA,EACApQ,IAAgBC,IAAIvM,KAAKwM,iBAEzBF,IAAgBI,OAAO1M,KAAKwM,kBAKxCvJ,SAAU,MAAD,EACwCjD,KAAKwC,MAA1CotC,EADH,EACGA,SAAUlzB,EADb,EACaA,KAAMqsB,EADnB,EACmBA,QAASjsB,EAD5B,EAC4BA,QAEjC,OACI,kBAACu2B,GAAA,EAAD,CAAOC,UAAU,QAAQC,GAAI72B,EAAMqsB,QAASA,EAASyK,cAAY,EAACC,eAAa,GAC3E,yBAAKvwC,UAAU,gBAAgB4Z,EAAUjb,IAAM6xC,aAAa9D,EAAU,CAAE9yB,YAAa8yB,MCpDtFpsC,gBACX,0BAAMC,EAAE,yrCACR,UCFWD,gBACX,0BAAMC,EAAE,kiBACR,QCFWD,gBACX,0BAAMC,EAAE,ssFACR,UCFWD,gBACX,0BAAMC,EAAE,sbACR,Q,oBCuGWwO,qBA9Ff,cAAiCpQ,IAAMC,UAAW,eAAD,oBAC7CC,MAAQ,CACJimC,SAAU,KACVtrB,MAAM,GAHmC,KAM7CorB,eAAiBzjC,IACbrE,KAAKyC,SAAS,CAAEulC,SAAU3jC,EAAM4jC,iBAPS,KAU7CC,gBAAkB,KACdloC,KAAKyC,SAAS,CAAEulC,SAAU,QAXe,KAc7C2L,aAAe,KACX3zC,KAAKkoC,kBAELloC,KAAKyC,SAAS,CAAEia,MAAM,KAjBmB,KAoB7Ck3B,WAAa,KACT5zC,KAAK+E,cACL3C,IAAgByxC,UAtByB,KAyB7C9uC,YAAc,KACV/E,KAAKyC,SAAS,CAAEia,MAAM,KAG1BzZ,SAAU,MACEoP,EAAMrS,KAAKwC,MAAX6P,EADH,EAEsBrS,KAAK+B,MAAxBimC,EAFH,EAEGA,SAAUtrB,EAFb,EAEaA,KAElB,OACI,oCACI,kBAACxE,EAAA,EAAD,CACIwxB,YAAW1B,EAAW,cAAgB,KACtC2B,gBAAc,OACdzmC,UAAU,sBACViV,aAAW,OACX5H,QAASvQ,KAAK8nC,gBACd,kBAACgM,GAAD,OAEJ,kBAAC5K,GAAA,EAAD,CACIhpC,GAAG,YACH8nC,SAAUA,EACVtrB,KAAMuN,QAAQ+d,GACdlrB,QAAS9c,KAAKkoC,gBACdiB,mBAAoB,KACpBC,sBAAoB,EACpBC,qBAAqB,EACrBtiB,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,UAEhB,kBAACG,GAAA,EAAD,CAAU7W,QAASvQ,KAAK2zC,cACpB,kBAACjyB,GAAA,EAAD,KACI,kBAACqyB,GAAD,OAEJ,kBAAChyB,GAAA,EAAD,CAAcC,QAAS3P,EAAE,cAGjC,kBAAC,IAAD,CACIsK,QAASC,IACTC,mBAAoB,EACpBH,KAAMA,EACNI,QAAS9c,KAAK+E,YACdgY,kBAAgB,qBAChB,kBAAC,IAAD,CAAa7c,GAAG,qBAAqBmS,EAAE,YACvC,kBAAC,KAAD,KACI,kBAAC2hC,GAAA,EAAD,CAAmB1sC,MAAO,CAAEkM,WAAY,aACnCnB,EAAE,sBAGX,kBAACiL,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQhN,QAASvQ,KAAK+E,YAAaqT,MAAM,WACpC/F,EAAE,WAEP,kBAACkL,EAAA,EAAD,CAAQhN,QAASvQ,KAAK4zC,WAAYx7B,MAAM,WACnC/F,EAAE,aC9FhB7O,gBACX,0BAAMC,EAAE,8yBACR,QCFWD,gBACX,0BAAMC,EAAE,q7DACR,Y,iBC8HWwO,qBA5Gf,cAAmBpQ,IAAMC,UAAW,eAAD,oBAE/BqwB,iBAAmB,KAAO,MACdjgB,EAAWlS,KAAKwC,MAAhB0P,OAEFqM,EAAOR,KAAUlS,IAAIqG,GACtBqM,GACAA,EAAK9F,OAEV2Z,YAA6B,CAAElgB,YAGnCjP,SAAU,MAAD,EAYDjD,KAAKwC,MAVL0P,EAFC,EAEDA,OACAie,EAHC,EAGDA,MACA9d,EAJC,EAIDA,EACAyK,EALC,EAKDA,QACAm3B,EANC,EAMDA,cACAC,EAPC,EAODA,UACAC,EARC,EAQDA,gBACAC,EATC,EASDA,kBACAC,EAVC,EAUDA,WACAC,EAXC,EAWDA,UAEE/1B,EAAOR,KAAUlS,IAAIqG,GAC3B,IAAKqM,EAAM,OAAO,KAdb,MAgBG9F,EAAU8F,EAAV9F,MAER,OACI,oCACI,yBAAKvV,UAAU,iBACX,kBAACgV,EAAA,EAAD,CAAYhV,UAAU,qBAAqBqN,QAASuM,GAC9CqT,EAAQ,kBAACrf,EAAA,EAAD,MAAe,kBAAC,GAAD,OAE7B,yBAAK5N,UAAU,qCACX,0BAAMA,UAAU,yBAAyBmP,EAAE,cAE/C,kBAAC,GAAD,OAEJ,yBAAKnP,UAAU,8CACX,yBAAKA,UAAU,qBACX,kBAAC,GAAD,CACIgP,OAAQA,EACRgO,KAAK,EACLD,YAAY,EACZjC,mBAAmB,EACnBgC,aAAcvH,EAAQzY,KAAKmyB,iBAAmB,QAGtD,kBAAC5Q,GAAA,EAAD,CAAUre,UAAU,qBAAqBse,QAAM,EAACjR,QAAS0jC,GACrD,kBAACvyB,GAAA,EAAD,KACI,kBAAC6yB,GAAD,OAEJ,kBAACxyB,GAAA,EAAD,CAAcC,QAAS3P,EAAE,kBAE7B,kBAACkP,GAAA,EAAD,CAAUre,UAAU,qBAAqBse,QAAM,EAACjR,QAAS2jC,GACrD,kBAACxyB,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACK,GAAA,EAAD,CAAcC,QAAS3P,EAAE,sBAE7B,kBAACkP,GAAA,EAAD,CAAUre,UAAU,qBAAqBse,QAAM,EAACjR,QAAS4jC,GACrD,kBAACzyB,GAAA,EAAD,KACI,kBAAC0gB,GAAD,OAEJ,kBAACrgB,GAAA,EAAD,CAAcC,QAAS3P,EAAE,oBAE7B,kBAACkP,GAAA,EAAD,CAAUre,UAAU,qBAAqBse,QAAM,EAACjR,QAAS6jC,GACrD,kBAAC1yB,GAAA,EAAD,KACI,kBAAC8yB,GAAD,OAEJ,kBAACzyB,GAAA,EAAD,CAAcC,QAAS3P,EAAE,sBAE7B,kBAACkP,GAAA,EAAD,CAAU/D,WAAW,EAAOta,UAAU,qBAAqBse,QAAM,EAACjR,QAAS+jC,GACvE,kBAAC5yB,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACK,GAAA,EAAD,CAAcC,QAAS3P,EAAE,cAE7B,kBAACkP,GAAA,EAAD,CAAU/D,WAAW,EAAOta,UAAU,qBAAqBse,QAAM,EAACjR,QAAS8jC,GACvE,kBAAC3yB,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACK,GAAA,EAAD,CAAcC,QAAS3P,EAAE,eAE7B,yBAAKnP,UAAU,wBACVuxC,GAAYC,c,8BC5GtBlxC,gBACX,0BAAMC,EAAE,u+DACR,Y,wBC+IWwO,qBArIf,cAA2BpQ,IAAMC,UAC7BlC,YAAY4C,GAAQ,IAAD,EACf0B,MAAM1B,GADS,YAcnBmyC,aAAe,KACX30C,KAAKyC,SAAS,CACVia,MAAM,KAhBK,KAoBnBk3B,WAAa,KACT,MAAMgB,EAAU50C,KAAK60C,WAAW77B,QAC3B47B,IAELA,EAAQE,mBAAmBC,OAAOjO,IAC9B,MAAMkO,EAAUjqB,IAAIkqB,gBAAgBnO,GAEpC9mC,KAAKyC,SAAS,CACVqkC,OACAkO,YALkC,MAQ9BE,EAAal1C,KAAKwC,MAAlB0yC,SACHA,GAELA,EAASpO,EAAMkO,IAChB,cAEHh1C,KAAK20C,iBAtCU,KAyCnBQ,aAAe,KACXn1C,KAAKo1C,eAAep8B,QAAQq8B,SA1Cb,KA6CnBC,qBA7CmB,qBA6CI,0CAAA5iC,EAAA,wDAEE,KADbkzB,EAAU,EAAKwP,eAAep8B,QAA9B4sB,OACElxB,OAFS,oDAIE,IAAjBkxB,EAAMlxB,OAJS,sBAKWy5B,MAAM9sC,KAAKukC,GALtB,kBAKPj6B,EALO,gBAMVA,EANU,iEAQe4pC,YAAc5pC,GAR7B,mCAQRsF,EARQ,KAQD8I,EARC,KAUf,EAAKtX,SAAS,CACVia,MAAM,EACN/Q,OACA6pC,QAASzqB,IAAIkqB,gBAAgBtpC,GAC7BsF,QACA8I,WAfW,QAmBnB,EAAKq7B,eAAep8B,QAAQzO,MAAQ,GAnBjB,0CA1CnBvK,KAAKo1C,eAAiBvzC,IAAMya,YAC5Btc,KAAK60C,WAAahzC,IAAMya,YAJT,MAMPm5B,EAAez1C,KAAKwC,MAApBizC,WAERz1C,KAAK+B,MAAQ,CACTizC,QAASS,EACT/4B,MAAM,GAyDdzZ,SAAU,MACEoP,EAAMrS,KAAKwC,MAAX6P,EADH,EAE6CrS,KAAK+B,MAA/C2a,EAFH,EAEGA,KAAMzL,EAFT,EAESA,MAAO8I,EAFhB,EAEgBA,OAAQy7B,EAFxB,EAEwBA,QAASR,EAFjC,EAEiCA,QAFjC,EAI0CU,YAAW,CAAEzkC,QAAO8I,UAAU,KAAK,GAAnE47B,EAJV,EAIG1kC,MAAyB2kC,EAJ5B,EAIoB77B,OAEzB,OACI,oCACI,yBAAK7W,UAAU,kBACT8xC,EACE,yBAAK9xC,UAAU,8BAA8BonB,IAAI,GAAG9B,IAAKwsB,EAASzkC,QAASvQ,KAAKm1C,eAEhF,yBAAKjyC,UAAU,oDAAoDqN,QAASvQ,KAAKm1C,cAC7E,kBAACU,GAAD,CAAc3yC,UAAU,0BAIpC,2BACI+Z,IAAKjd,KAAKo1C,eACVlyC,UAAU,yBACVsb,KAAK,OACLs3B,UAAU,EACVC,OAAO,UACPrkC,SAAU1R,KAAKs1C,uBAEjB54B,GACE,kBAAC,IAAD,CACIG,mBAAoB,EACpBH,MAAM,EACNI,QAAS9c,KAAK20C,aACd53B,kBAAgB,gBAChB,yBAAK7Z,UAAU,iBACX,kBAACgV,EAAA,EAAD,CAAYhV,UAAU,qBAAqBqN,QAASvQ,KAAK20C,cACrD,kBAAC7jC,EAAA,EAAD,OAEJ,yBAAK5N,UAAU,qCACX,0BAAMA,UAAU,yBAAyBmP,EAAE,uBAGnD,kBAAC,KAAD,KACI,kBAAC,KAAD,CACI4K,IAAKjd,KAAK60C,WACVrsB,IAAKgtB,EACLluC,MAAO,CAAEyS,OAAQ67B,EAAW3kC,MAAO0kC,EAAUK,OAAQ,eAErDC,YAAa,EACbC,SAAU,EACVC,QAAQ,KAEhB,yBAAKjzC,UAAU,8BAA8BqN,QAASvQ,KAAK4zC,YACvD,kBAACwC,GAAA,EAAD,Y,OCiHbhhC,OANCC,YACZic,cACArf,cACAsf,cAGWnc,CArOf,cAA0BvT,IAAMC,UAC5BlC,YAAY4C,GAAQ,IAAD,EACf0B,MAAM1B,GADS,YAwEnB6zC,qBAxEmB,qBAwEI,oCAAA3jC,EAAA,wDACXR,EAAW,EAAK1P,MAAhB0P,OACA0f,EAAa,EAAK7vB,MAAlB6vB,UACJ0kB,EAAc,EAAKC,YAAYv9B,QAAQzO,OAC3BogB,WAAW,MAAQ2rB,EAAY5hC,OAAS,IACpD4hC,EAAcA,EAAY1F,OAAO,IAEjChf,IAAa0kB,GAA+B,KAAhBA,EAPb,gBAQf,EAAK7zC,SAAS,CACV+zC,cAAe,OATJ,wCAeMp0C,IAAgBC,KAAK,CACtC,QAAS,oBACT4U,QAAS/E,EACT0f,SAAU0kB,IAlBC,QAeT/zC,EAfS,QAuBXk0C,EAAe,EAAKF,YAAYv9B,QAAQzO,OAC3BogB,WAAW,MAAQ8rB,EAAa/hC,OAAS,IACtD+hC,EAAeA,EAAa7F,OAAO,IAEnC6F,IAAiBH,GACjB,EAAK7zC,SAAS,CACV+zC,cAAej0C,IA7BR,0CAxEJ,KA2GnBm0C,kBA3GmB,sCA2GC,WAAMruB,GAAN,iBAAA3V,EAAA,4DACRR,EAAW,EAAK1P,MAAhB0P,OADQ,SAGV9P,IAAgBC,KAAK,CACvB,QAAS,kBACToW,MAAO,CAAE,QAAS,gBAAiBk+B,KAAM,oBAAqBtuB,UALlD,OAQV1R,EAAQ/K,IAAUgL,WACxBggC,YAAgBjgC,EAAOzE,GAAQ,GATf,yCA3GD,sDAGflS,KAAK62C,aAAeh1C,IAAMya,YAC1Btc,KAAK82C,YAAcj1C,IAAMya,YACzBtc,KAAK+2C,OAASl1C,IAAMya,YACpBtc,KAAKu2C,YAAc10C,IAAMya,YAEzB,MAAMuX,EAAO5d,IAAUpK,IAAIoK,IAAUC,WAC/B8gC,EAAe/gC,IAAU2I,YAAY3I,IAAUC,WAErDlW,KAAK+B,MAAQ,CACTk1C,UAAWpjB,EAAOA,EAAKqjB,WAAa,GACpCC,SAAUtjB,EAAOA,EAAKujB,UAAY,GAClC7jB,IAAKyjB,EAAeA,EAAazjB,IAAM,GACvC3B,SAAUiC,EAAOA,EAAKjC,SAAW,GACjC4kB,cAAe,MAIvBvpC,uBACIjN,KAAKq3C,UACLr3C,KAAKs3C,SACLt3C,KAAKu3C,cAGTA,cAAe,MAAD,EAC0Bv3C,KAAK+B,MAAjC6vB,EADE,EACFA,SAAU4kB,EADR,EACQA,cAClB,IAAIF,EAAct2C,KAAKu2C,YAAYv9B,QAAQzO,MACvC+rC,EAAY3rB,WAAW,MAAQ2rB,EAAY5hC,OAAS,IACpD4hC,EAAcA,EAAY1F,OAAO,IAGjChf,IAAa0kB,GACZE,GAC0B,8BAA3BA,EAAc,UAElBp0C,IAAgBC,KAAK,CACjB,QAAS,cACTuvB,SAAU0kB,IAIlBe,UAAW,MAAD,EAC0Br3C,KAAK+B,MAA7Bk1C,EADF,EACEA,UAAWE,EADb,EACaA,SACbK,EAAex3C,KAAK62C,aAAa79B,QAAQzO,MACzCktC,EAAcz3C,KAAK82C,YAAY99B,QAAQzO,MAEzCitC,IAAiBP,GAAaQ,IAAgBN,GAIlD/0C,IAAgBC,KAAK,CACjB,QAAS,UACT60C,WAAYM,EACZJ,UAAWK,IAInBH,SAAU,MACE/jB,EAAQvzB,KAAK+B,MAAbwxB,IACFmkB,EAAS13C,KAAK+2C,OAAO/9B,QAAQzO,MAC/BmtC,IAAWnkB,GAIfnxB,IAAgBC,KAAK,CACjB,QAAS,SACTkxB,IAAKmkB,IAmDbz0C,SAAU,IAAD,EACwBjD,KAAKwC,MAA5B0P,EADD,EACCA,OAAQG,EADT,EACSA,EAAGyK,EADZ,EACYA,QADZ,QAEyD9c,KAAK+B,MAA3Dk1C,EAFH,EAEGA,UAAWE,EAFd,EAEcA,SAAU5jB,EAFxB,EAEwBA,IAAK3B,EAF7B,EAE6BA,SAAU4kB,EAFvC,EAEuCA,cAE5C,IAAImB,GAAW,EACXC,EAAgBvlC,EAAE,YACtB,GAAImkC,EACA,OAAQA,EAAc,UAClB,IAAK,4BACDmB,GAAW,EACXC,EAAgB,wBAChB,MAEJ,IAAK,4CACL,IAAK,iDACL,IAAK,yCACDD,GAAW,EACXC,EAAgB,mBAChB,MAEJ,IAAK,0CACDD,GAAW,EACXC,EAAgB,4BAM5B,MAAMr5B,EAAOR,KAAUlS,IAAIqG,GAC3B,IAAKqM,EAAM,OAAO,KA7Bb,MA+BG9F,EAAU8F,EAAV9F,MAEF+P,EAAMD,YAAO9P,EAAQA,EAAM4tB,MAAQ,MACnC/sB,EAAW,GACXjM,EAAOwqC,aAAwBxlC,EAAE,gBAAiBiH,GAClDw+B,EAAgBrrB,aAAiB,CAAE,QAAS,gBAAiBpf,OAAMiM,aAEzE,OACI,oCACI,yBAAKpW,UAAU,iBACX,kBAACgV,EAAA,EAAD,CAAYhV,UAAU,qBAAqBqN,QAASuM,GAChD,kBAAC,GAAD,OAEJ,yBAAK5Z,UAAU,qCACX,0BAAMA,UAAU,yBAAyBmP,EAAE,kBAGnD,yBAAKnP,UAAU,wBACX,kBAAC,GAAD,CAAcuyC,WAAYjtB,EAAK0sB,SAAUl1C,KAAK02C,oBAC9C,yBAAKxzC,UAAU,qBACX,kBAAC60C,GAAA,EAAD,CACI/N,SAAUhqC,KAAK62C,aACf3zC,UAAU,qBACVgf,QAAQ,WACRkW,WAAS,EACTE,MAAOjmB,EAAE,aACT2lC,aAAcf,IAElB,kBAACc,GAAA,EAAD,CACI/N,SAAUhqC,KAAK82C,YACf5zC,UAAU,qBACVgf,QAAQ,WACRkW,WAAS,EACTE,MAAOjmB,EAAE,YACT2lC,aAAcb,IAElB,kBAACY,GAAA,EAAD,CACI/N,SAAUhqC,KAAK+2C,OACf7zC,UAAU,qBACVgf,QAAQ,WACRkW,WAAS,EACTE,MAAOjmB,EAAE,OACT2lC,aAAczkB,IAElB,yBAAKrwB,UAAU,qBAAqBmP,EAAE,cAE1C,yBAAKnP,UAAU,iCACf,yBAAKA,UAAU,yBACX,kBAAC60C,GAAA,EAAD,CACI/N,SAAUhqC,KAAKu2C,YACfxjC,MAAO4kC,EACPz0C,UAAU,qBACVgf,QAAQ,WACRkW,WAAS,EACTE,MAAOsf,EACPI,aAAcpmB,EACdlgB,SAAU1R,KAAKq2C,uBAEnB,yBAAKnzC,UAAU,qBACV40C,SChOdt0C,gBACX,0BAAM25B,KAAK,eAAeC,SAAS,UAAU35B,EAAE,0nBAC/C,OCFWD,gBACX,0BAAM45B,SAAS,UAAU35B,EAAE,qgCAC3B,cCFWD,gBACX,0BAAM45B,SAAS,UAAU35B,EAAE,otDAC3B,eCFWD,gBACX,0BAAM45B,SAAS,UAAU35B,EAAE,wmEAC3B,YCFWD,gBACX,0BAAM45B,SAAS,UAAU35B,EAAE,0zCAC3B,cCFWD,gBACX,0BAAM45B,SAAS,UAAU35B,EAAE,q0CAC3B,aCFWD,gBACX,0BAAM45B,SAAS,UAAU35B,EAAE,kgEAC3B,Q,qBCDWD,gBACX,0BAAMC,EAAE,+bACR,Q,iBCiHWwO,qBAvGf,cAAyBpQ,IAAMC,UAAW,eAAD,oBAErCC,MAAQ,CACJ6lB,aAAa,EACbrgB,KAAM,EACNE,IAAK,EACLoa,SAAS,GANwB,KASrC8F,sBAAwBtjB,IACCrE,KAAKwC,MAAlBksC,WAGJrqC,IACAA,EAAM6B,iBACN7B,EAAM4B,mBAGVjG,KAAKyC,SAAS,CACVmlB,aAAa,EACbrgB,KAAMlD,EAAM4F,QACZxC,IAAKpD,EAAM6F,YArBkB,KAyBrC2d,uBAAyB,KACrB7nB,KAAKyC,SAAS,CACVmlB,aAAa,EACbrgB,KAAM,EACNE,IAAK,KA7BwB,KAiCrC8e,aAAe,KACXvmB,KAAK6nB,yBADY,QAGY7nB,KAAKwC,MAA1B0P,EAHS,EAGTA,OAAQw8B,EAHC,EAGDA,SAEhBA,GAAYA,EAASx8B,IAGzBjP,SAAU,MAAD,EACyCjD,KAAKwC,MAA3C0P,EADH,EACGA,OAAQG,EADX,EACWA,EAAGmM,EADd,EACcA,KAAMqD,EADpB,EACoBA,QAAStR,EAD7B,EAC6BA,QAD7B,EAE8BvQ,KAAK+B,MAAhC6lB,EAFH,EAEGA,YAAargB,EAFhB,EAEgBA,KAAME,EAFtB,EAEsBA,IAErB0W,EAAQlC,YAAa/J,GAAQ,EAAMG,GAEzC,OACI,oCACI,kBAACkP,GAAA,EAAD,CAAUre,UAAU,sBAAsB+0C,UAAMC,EAAW12B,QAAM,EAACjR,QAASA,EAASmY,cAAe1oB,KAAK2nB,uBACpG,yBAAKzkB,UAAU,oBACX,kBAACsP,EAAA,EAAD,CAAUN,OAAQA,EAAQm0B,OAAO,EAAMroB,mBAAmB,KAE9D,yBAAK9a,UAAU,uBACX,yBAAKA,UAAU,qBACVib,GAEHK,GACE,yBAAKtb,UAAU,wBACVi1C,YAAYjmC,EAAQG,UAInB6lC,IAAZr2B,GACE,kBAACu2B,GAAA,EAAD,CAAOl1C,UAAU,uBAAuBkV,MAAM,UAAUyJ,QAASA,KAGzE,kBAACgF,GAAA,EAAD,CACInK,KAAMkL,EACN9K,QAAS9c,KAAK6nB,uBACdf,gBAAgB,iBAChBL,eAAgB,CAAEhf,MAAKF,QACvBwf,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QAEhB5W,YAAaQ,GAAKA,EAAE5K,mBACpB,kBAACkhB,GAAA,EAAD,CAAU5W,QAASM,GAAKA,EAAE5K,mBACtB,kBAACmhB,GAAA,EAAD,CAAU7W,QAASvQ,KAAKumB,cACpB,kBAAC7E,GAAA,EAAD,KACI,kBAAC4F,GAAD,OAEJ,kBAACvF,GAAA,EAAD,CAAcC,QAAS3P,EAAE,mB,OCQtCJ,qBA9Ff,cAAyBpQ,IAAMC,UAAW,eAAD,oBAErCC,MAAQ,CACJ6lB,aAAa,EACbrgB,KAAM,EACNE,IAAK,GAL4B,KAQrCkgB,sBAAwBtjB,IACCrE,KAAKwC,MAAlBksC,WAGJrqC,IACAA,EAAM6B,iBACN7B,EAAM4B,mBAGVjG,KAAKyC,SAAS,CACVmlB,aAAa,EACbrgB,KAAMlD,EAAM4F,QACZxC,IAAKpD,EAAM6F,YApBkB,KAwBrC2d,uBAAyB,KACrB7nB,KAAKyC,SAAS,CACVmlB,aAAa,EACbrgB,KAAM,EACNE,IAAK,KA5BwB,KAgCrC8e,aAAe,KACXvmB,KAAK6nB,yBADY,MAGT6mB,EAAa1uC,KAAKwC,MAAlBksC,SAERA,GAAYA,KAGhBzrC,SAAU,MAAD,EACkDjD,KAAKwC,MAApD6P,EADH,EACGA,EAAGnP,EADN,EACMA,UAAW+pB,EADjB,EACiBA,KAAM5f,EADvB,EACuBA,KAAMwU,EAD7B,EAC6BA,QAAStR,EADtC,EACsCA,QADtC,EAE8BvQ,KAAK+B,MAAhC6lB,EAFH,EAEGA,YAAargB,EAFhB,EAEgBA,KAAME,EAFtB,EAEsBA,IAE3B,OACI,oCACI,kBAAC8Z,GAAA,EAAD,CAAUre,UAAWkN,IAAWlN,EAAW,sBAAuB,oBAAqB+0C,UAAMC,EAAW12B,QAAM,EAACnR,YAAaE,EAASmY,cAAe1oB,KAAK2nB,uBACrJ,yBAAKzkB,UAAU,oBACV+pB,GAEL,yBAAK/pB,UAAU,uBACVmK,QAES6qC,IAAZr2B,GACE,kBAACu2B,GAAA,EAAD,CAAOl1C,UAAU,uBAAuBkV,MAAM,UAAUyJ,QAASA,KAGzE,kBAACgF,GAAA,EAAD,CACInK,KAAMkL,EACN9K,QAAS9c,KAAK6nB,uBACdf,gBAAgB,iBAChBL,eAAgB,CAAEhf,MAAKF,QACvBwf,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QAEhB5W,YAAaQ,GAAKA,EAAE5K,mBACpB,kBAACkhB,GAAA,EAAD,CAAU5W,QAASM,GAAKA,EAAE5K,mBACtB,kBAACmhB,GAAA,EAAD,CAAU7W,QAASvQ,KAAKumB,cACpB,kBAAC7E,GAAA,EAAD,KACI,kBAAC4F,GAAD,OAEJ,kBAACvF,GAAA,EAAD,CAAcC,QAAS3P,EAAE,mB,OCpCtCgmC,OAjDf,cAAmBx2C,IAAMC,UACrBlC,YAAY4C,GACR0B,MAAM1B,GAENxC,KAAKs4C,OAASz2C,IAAMya,YAGxB41B,YAAa,MAAD,EAMJlyC,KAAKs4C,OAAOt/B,QAEhB,MAAO,CAAEzR,KARD,EAEJgd,WAMW9c,IARP,EAGJkmB,UAKgB1c,MARZ,EAIJoU,YAIuBtL,OARnB,EAKJ+T,cAMRyqB,gBAAgBlrC,GACZ,MAAMmrC,EAAMx4C,KAAKs4C,OAAOt/B,QACnBw/B,IAELA,EAAIlxC,MAAM2d,QAAU5X,GAGxBpK,SAAU,MAAD,EACqCjD,KAAKwC,MAAvCyqB,EADH,EACGA,KAAM5f,EADT,EACSA,KAAM8E,EADf,EACeA,SAAU5B,EADzB,EACyBA,QAE9B,OACI,yBAAK0M,IAAKjd,KAAKs4C,OAAQp1C,UAAWkN,IAAW,OAAQ,CAAE,gBAAiB+B,IAAa5B,QAASA,GAC1F,yBAAKrN,UAAU,aACV+pB,GAEL,yBAAK/pB,UAAU,eACX,kBAAC4N,EAAA,EAAD,CAAW5N,UAAU,sBAEzB,yBAAKA,UAAU,aAAamK,M,OCY7BorC,OA9Cf,cAAuB52C,IAAMC,UACzBlC,YAAY4C,GACR0B,MAAM1B,GAENxC,KAAKs4C,OAASz2C,IAAMya,YAGxB41B,YAAa,MAAD,EAMJlyC,KAAKs4C,OAAOt/B,QAEhB,MAAO,CAAEzR,KARD,EAEJgd,WAMW9c,IARP,EAGJkmB,UAKgB1c,MARZ,EAIJoU,YAIuBtL,OARnB,EAKJ+T,cAMRyqB,gBAAgBlrC,GACZ,MAAMmrC,EAAMx4C,KAAKs4C,OAAOt/B,QACnBw/B,IAELA,EAAIlxC,MAAM2d,QAAU5X,GAGxBpK,SAAU,MAAD,EACiCjD,KAAKwC,MAAnC0P,EADH,EACGA,OAAQC,EADX,EACWA,SAAU5B,EADrB,EACqBA,QAE1B,OACI,yBAAK0M,IAAKjd,KAAKs4C,OAAQp1C,UAAWkN,IAAW,OAAQ,CAAE,gBAAiB+B,IAAa5B,QAASA,GAC1F,kBAACiC,EAAA,EAAD,CAAUN,OAAQA,EAAQm0B,OAAO,IACjC,yBAAKnjC,UAAU,eACX,kBAAC4N,EAAA,EAAD,CAAW5N,UAAU,sBAEzB,yBAAKA,UAAU,aAAaqP,YAAkBL,O,OCwZ/CD,qBA1af,cAA8BpQ,IAAMC,UAEhClC,YAAY4C,GAAQ,IAAD,EACf0B,MAAM1B,GADS,YAcnBk2C,iBAAmB,CAACxmC,EAAQymC,KAAY,MAC5BC,EAAS54C,KAAKwC,MAAdo2C,KAER,GAAID,EAAQ,CACR,MAAMlkC,EAAQzU,KAAKi1B,eAAejc,QAClCvE,EAAMnL,QACNmL,EAAMiG,UAAY,GAClB1a,KAAKg1B,aAAa,IAGtBh1B,KAAKsK,aAAsB,YAATsuC,EAAqB,oBAAsB,oBAAqB1mC,IAxBnE,KA0LnB2mC,gBAAkB,KAAO,MAAD,EACK74C,KAAKwC,MAAtB+Y,EADY,EACZA,OAAQq9B,EADI,EACJA,KACRE,EAAgB94C,KAAK+B,MAArB+2C,YACR,GAAKv9B,EAEL,GAAIu9B,EACA,OAAQA,GACJ,IAAK,mBACL,IAAK,uBACL,IAAK,eACL,IAAK,iBACL,IAAK,mBACL,IAAK,gBACL,IAAK,eACL,IAAK,mBACD94C,KAAKsK,aAAawuC,GAElB94C,KAAKyC,SAAS,CACVq2C,YAAa,OAEjB,MAEJ,QACI94C,KAAK04C,iBAAiBI,GAEtB94C,KAAKyC,SAAS,CACVq2C,YAAa,YAS7B,GADyB,YAATF,EACH,CAAC,MAENG,EAMAx9B,EANAw9B,iBACAC,EAKAz9B,EALAy9B,qBACAC,EAIA19B,EAJA09B,aACAC,EAGA39B,EAHA29B,eACAC,EAEA59B,EAFA49B,iBACAC,EACA79B,EADA69B,kBAGJ,GAAIA,EAAkB1kC,OAAS,EAAG,CAC9B,MAAM2kC,EAAWD,EAAkBA,EAAkB1kC,OAAS,GAC9D,IAAK2kC,EAAU,OAEfr5C,KAAKyC,SAAS,CACVq2C,YAAaO,SAEVJ,EACPj5C,KAAKyC,SAAS,CACVq2C,YAAa,iBAEVK,EACPn5C,KAAKyC,SAAS,CACVq2C,YAAa,qBAEVI,EACPl5C,KAAKyC,SAAS,CACVq2C,YAAa,mBAEVE,EACPh5C,KAAKyC,SAAS,CACVq2C,YAAa,yBAEVC,GACP/4C,KAAKyC,SAAS,CACVq2C,YAAa,yBAGlB,CAAC,MAEAQ,EAIA/9B,EAJA+9B,cACAC,EAGAh+B,EAHAg+B,aACAC,EAEAj+B,EAFAi+B,iBACAC,EACAl+B,EADAk+B,kBAGJ,GAAIA,EAAkB/kC,OAAS,EAAG,CAC9B,MAAM2kC,EAAWI,EAAkBA,EAAkB/kC,OAAS,GAC9D,IAAK2kC,EAAU,OAEfr5C,KAAKyC,SAAS,CACVq2C,YAAaO,SAEVG,EACPx5C,KAAKyC,SAAS,CACVq2C,YAAa,qBAEVS,EACPv5C,KAAKyC,SAAS,CACVq2C,YAAa,iBAEVQ,GACPt5C,KAAKyC,SAAS,CACVq2C,YAAa,oBA5RV,KAkSnBxuC,aAAe,CAACkU,EAAMjU,MAGlBmH,EAFqB1R,KAAKwC,MAAlBkP,UAEC8M,EAAMjU,GAEfvK,KAAKyC,SAAS,CACVq2C,YAAa,QAxSF,KA4SnB9jB,aA5SmB,sCA4SJ,WAAM3nB,GAAN,yBAAAqF,EAAA,wDACLgJ,EAAQrO,EAAK0N,OADR,uBAGP,EAAKtY,SAAS,CACVq0B,YAAa,KACbgiB,YAAa,OALV,iCAULrjC,EAAW,IACRK,KACL1T,IAAgBC,KAAK,CACjB,QAAS,cACTqZ,QACA7F,MAAO,OAfJ,SAkBiBO,QAAQ/C,IAAIoC,GAlB7B,mCAkBJqhB,EAlBI,KAoBLngB,EAAQ/K,IAAUgL,WACxBC,YAAiBF,EAAOmgB,EAAYpgB,UAEpC,EAAKjU,SAAS,CAAEq0B,cAAagiB,YAAa,OAvB/B,0CA5SI,sDAGf94C,KAAKi1B,eAAiBpzB,IAAMya,YAC5Btc,KAAK05C,aAAe73C,IAAMya,YAC1Btc,KAAK25C,SAAW,IAAI7kC,IAEpB9U,KAAK+B,MAAQ,CACT+2C,YAAa,KACbhiB,YAAa,KACb/jB,OAAO,GAiBfigB,wBAAwBnwB,EAAWC,GAAY,MAAD,EACjB9C,KAAKwC,MAAtB+Y,EADkC,EAClCA,OAAQq9B,EAD0B,EAC1BA,KACCgB,EAAe/2C,EAAxB0Y,OAER,GAAI1Y,EAAU0Y,SAAWA,EACrB,OAAO,KAGX,MAAMs+B,EAAmB,YAATjB,EACVkB,EAAYD,EAAUh3C,EAAU0Y,OAAO69B,kBAAoBv2C,EAAU0Y,OAAOk+B,kBAC5EnsB,EAAQusB,EAAUt+B,EAAO69B,kBAAoB79B,EAAOk+B,kBAEpDM,EACFD,EAAUplC,OAAS4Y,EAAM5Y,QACtBklC,EAAWb,mBAAqBx9B,EAAOw9B,kBACvCa,EAAWZ,uBAAyBz9B,EAAOy9B,sBAC3CY,EAAWV,iBAAmB39B,EAAO29B,gBACrCU,EAAWT,mBAAqB59B,EAAO49B,kBACvCS,EAAWX,eAAiB19B,EAAO09B,cACnCW,EAAWL,eAAiBh+B,EAAOg+B,cACnCK,EAAWN,gBAAkB/9B,EAAO+9B,eACpCM,EAAWJ,mBAAqBj+B,EAAOi+B,iBAExCQ,EAAYh6C,KAAK05C,aAAa1gC,QAC9BihC,EAAaD,EAAUlnB,aACvBonB,EAAmBF,EAAUlsB,aAE7BqsB,EAAcH,EAAU1yC,MAAM2d,QAC9BiK,EAAgB8qB,EAAUxsB,UAC5BusB,IACAC,EAAU1yC,MAAM2d,QAAU,MAG9B,MAAMm1B,EAAU,IAAItlC,IAjCsB,2BAkC1C,YAAgB9U,KAAK25C,SAASnI,OAA9B,+CAAsC,CAAC,IAA9BjtC,EAA6B,QAClC,MAAM6uB,EAAKpzB,KAAK25C,SAAS9tC,IAAItH,GAC7B,GAAI6uB,EAAI,CACJ,MAAMnH,EAASmH,EAAG8e,YAClBkI,EAAQ5/B,IAAIjW,EAAK0nB,KAtCiB,kFA0C1C,MAAO,CAAEqB,MAAO8sB,EAASC,MAAO,CAAEN,aAAYE,aAAYC,mBAAkBhrB,gBAAeirB,gBAG/Fv3C,mBAAmBC,EAAWC,EAAWC,GACjCF,EAAU0Y,SAAWvb,KAAKwC,MAAM+Y,QAIpCvb,KAAKs6C,aAAav3C,EAASs3C,OAI/BC,aAAav3C,GACT,IAAKA,EAAU,OADI,MAGXg3C,EAAyEh3C,EAAzEg3C,WAAYE,EAA6Dl3C,EAA7Dk3C,WAAYC,EAAiDn3C,EAAjDm3C,iBAAkBhrB,EAA+BnsB,EAA/BmsB,cAAeirB,EAAgBp3C,EAAhBo3C,YAE3DH,EAAYh6C,KAAK05C,aAAa1gC,QAE9BuhC,EAAgBP,EAAUlnB,aAI1B0nB,GAHsBR,EAAUlsB,aAGpBysB,EAAgBN,GADjBM,EAAgBN,EAKzBA,EAFU,KAGVD,EAAU1yC,MAAM2d,QAAhB,sBAAyClkB,KAAKC,IAAIi5C,EAHxC,KAGV,OACA95C,sBAAsB,KAClB65C,EAAU1yC,MAAM2d,QAAhB,sBAAyClkB,KAAKC,IAAIu5C,EAL5C,KAKN,OACAvvC,WAAW,KACPhL,KAAKi1B,eAAejc,QAAQyhC,eAAe,CAAE7nB,SAAU,UACxD,SAGPonB,EAAU1yC,MAAM2d,QAAhB,sBAXU,IAWV,OACAjlB,KAAKi1B,eAAejc,QAAQyhC,eAAe,CAAE7nB,SAAU,YAEpD4nB,EACHD,EAfU,KAgBVP,EAAU1yC,MAAM2d,QAAhB,sBAAyClkB,KAAKC,IAAIk5C,EAhBxC,KAgBV,OACA/5C,sBAAsB,KAClB65C,EAAU1yC,MAAM2d,QAAhB,sBAAyClkB,KAAKC,IAAIu5C,EAlB5C,KAkBN,WAGJP,EAAU1yC,MAAM2d,QAAhB,sBArBU,IAqBV,OACA+0B,EAAUxsB,UAAY0B,GAGtB6qB,GACAC,EAAU1yC,MAAM2d,QAAUk1B,EAC1BH,EAAUxsB,UAAY0B,GAEtBlvB,KAAKi1B,eAAejc,QAAQyhC,eAAe,CAAE7nB,SAAU,WAKnE8nB,aAAaC,GACT,IAAKA,EAAa,OAElB,MAAMC,EAAkB,IAAI9lC,IAHN,2BAItB,YAAgB9U,KAAK25C,SAASnI,OAA9B,+CAAsC,CAAC,IAA9BjtC,EAA6B,QAClC,MAAM6uB,EAAKpzB,KAAK25C,SAAS9tC,IAAItH,GAC7B,GAAI6uB,EAAI,CACJ,MAAMynB,EAAgBznB,EAAG8e,YACnB4I,EAAaH,EAAY1lC,IAAI1Q,GAAOo2C,EAAY9uC,IAAItH,GAAO,KACjE,GAAIu2C,EAAY,CACRA,EAAWvzC,KAAOszC,EAActzC,MAChCqzC,EAAgBpgC,IAAI4Y,EAAI,CAAE0nB,aAAYD,kBAG1C,MAAMvc,EAAS,+BAA2Bwc,EAAWvzC,KAAOszC,EAActzC,KAA3D,eAAsEuzC,EAAWrzC,IAAMozC,EAAcpzC,IAArG,OACf2rB,EAAGmlB,gBAAgBja,MAfT,kFAoBtBn+B,sBAAsB,KAAO,IAAD,uBACxB,YAAgBH,KAAK25C,SAASnI,OAA9B,+CAAsC,CAAC,IAA9BjtC,EAA6B,QAClC,MAAM6uB,EAAKpzB,KAAK25C,SAAS9tC,IAAItH,GAC7B,GAAI6uB,EAAI,CACJ,IAAIrP,EAAU,mCACd,GAAI62B,EAAgB3lC,IAAIme,GAAK,CAAC,MAAD,EACawnB,EAAgB/uC,IAAIunB,GAAlD0nB,EADiB,EACjBA,WAAYD,EADK,EACLA,cACpB92B,EAAa,+BAAwB+2B,EAAWvzC,KAAOszC,EAActzC,KAAOuzC,EAAW7pC,MAA1E,eAAsF6pC,EAAWrzC,IAAMozC,EAAcpzC,IAArH,QACP,mCAGV2rB,EAAGmlB,gBAAgBx0B,KAXH,kFAenB62B,EAAgB9gC,MAErB9O,WAAW,KAAO,IAAD,uBACb,YAAe4vC,EAAgBpJ,OAA/B,+CAAuC,CAAC,IAA/Bpe,EAA8B,cAC3BynB,EAAkBD,EAAgB/uC,IAAIunB,GAAtCynB,cACF92B,EAAa,+BAAwB82B,EAAc5pC,MAAtC,WACb,iCAENmiB,EAAGmlB,gBAAgBx0B,IANV,kFASb5jB,sBAAsB,KAAO,IAAD,uBACxB,YAAey6C,EAAgBpJ,OAA/B,+CAAuC,CAAC,IAA/Bpe,EAA8B,QACnC,MAAMrP,EAAa,mCAEnBqP,EAAGmlB,gBAAgBx0B,IAJC,sFAQ7B,OAgJX9gB,SAAU,MAAD,EACkEjD,KAAKwC,MAApE6P,EADH,EACGA,EAAGkJ,EADN,EACMA,OAAQhF,EADd,EACcA,MAAOV,EADrB,EACqBA,MAAO+iC,EAD5B,EAC4BA,KAAM97B,EADlC,EACkCA,QAAmBwX,GADrD,EAC2C5iB,SAD3C,EACqD4iB,UADrD,EAEgCt0B,KAAK+B,MAAlC+2C,EAFH,EAEGA,YAAahiB,EAFhB,EAEgBA,YAGjBiiB,EAMAx9B,EANAw9B,iBACAC,EAKAz9B,EALAy9B,qBACAC,EAIA19B,EAJA09B,aACAC,EAGA39B,EAHA29B,eACAC,EAEA59B,EAFA49B,iBACAC,EACA79B,EADA69B,kBAIAE,EAIA/9B,EAJA+9B,cACAC,EAGAh+B,EAHAg+B,aACAC,EAEAj+B,EAFAi+B,iBACAC,EACAl+B,EADAk+B,kBAGEI,EAAmB,YAATjB,EACVtrB,EAAQusB,EAAUT,EAAoBK,EAE5C,OACI,oCACI,yBAAKv2C,UAAU,iBACX,kBAACgV,EAAA,EAAD,CAAYhV,UAAU,qBAAqBqN,QAASuM,GAChD,kBAAC,GAAD,OAEJ,yBAAK5Z,UAAU,qCACX,0BAAMA,UAAU,yBAA8CmP,EAAZ,YAATumC,EAAuB,gBAAqB,oBAG7F,yBAAK37B,IAAKjd,KAAK05C,aAAcx2C,UAAU,uBACjC22C,GACE,oCACKd,GAAoB,kBAAC,GAAD,CAAMxoC,QAAS,IAAMvQ,KAAKsK,aAAa,oBAAqB2S,IAAKmW,IAAQpzB,KAAK25C,SAASn/B,IAAI,mBAAoB4Y,IAAQjhB,SAA0B,qBAAhB2mC,EAAoC7rB,KAAM,kBAAC,GAAD,CAAckS,QAAQ,cAAe9xB,KAAMgF,EAAE,oBAC5O2mC,GAAwB,kBAAC,GAAD,CAAMzoC,QAAS,IAAMvQ,KAAKsK,aAAa,wBAAyB2S,IAAKmW,IAAQpzB,KAAK25C,SAASn/B,IAAI,uBAAwB4Y,IAAQjhB,SAA0B,yBAAhB2mC,EAAwC7rB,KAAM,kBAAC8tB,GAAD,MAAqB1tC,KAAMgF,EAAE,uBAC5O6mC,GAAkB,kBAAC,GAAD,CAAM3oC,QAAS,IAAMvQ,KAAKsK,aAAa,kBAAmB2S,IAAKmW,IAAQpzB,KAAK25C,SAASn/B,IAAI,iBAAkB4Y,IAAQjhB,SAA0B,mBAAhB2mC,EAAkC7rB,KAAM,kBAAC,GAAD,CAAYkS,QAAQ,cAAe9xB,KAAMgF,EAAE,kBAClO8mC,GAAoB,kBAAC,GAAD,CAAM5oC,QAAS,IAAMvQ,KAAKsK,aAAa,oBAAqB2S,IAAKmW,IAAQpzB,KAAK25C,SAASn/B,IAAI,mBAAoB4Y,IAAQjhB,SAA0B,qBAAhB2mC,EAAoC7rB,KAAM,kBAAC,GAAD,CAAckS,QAAQ,cAAe9xB,KAAMgF,EAAE,oBAC5O4mC,GAAgB,kBAAC,GAAD,CAAM1oC,QAAS,IAAMvQ,KAAKsK,aAAa,gBAAiB2S,IAAKmW,IAAQpzB,KAAK25C,SAASn/B,IAAI,eAAgB4Y,IAAQjhB,SAA0B,iBAAhB2mC,EAAgC7rB,KAAM,kBAAC+tB,GAAD,MAAc3tC,KAAMgF,EAAE,kBAG3MwnC,GACC,oCACKP,GAAiB,kBAAC,GAAD,CAAM/oC,QAAS,IAAMvQ,KAAKsK,aAAa,iBAAkB2S,IAAKmW,IAAQpzB,KAAK25C,SAASn/B,IAAI,gBAAiB4Y,IAAQjhB,SAA0B,kBAAhB2mC,EAAiC7rB,KAAM,kBAAC,GAAD,CAAYkS,QAAQ,cAAe9xB,KAAMgF,EAAE,iBAC9NknC,GAAgB,kBAAC,GAAD,CAAMhpC,QAAS,IAAMvQ,KAAKsK,aAAa,gBAAiB2S,IAAKmW,IAAQpzB,KAAK25C,SAASn/B,IAAI,eAAgB4Y,IAAQjhB,SAA0B,iBAAhB2mC,EAAgC7rB,KAAM,kBAAC,GAAD,CAAckS,QAAQ,cAAe9xB,KAAMgF,EAAE,gBAC5NmnC,GAAoB,kBAAC,GAAD,CAAMjpC,QAAS,IAAMvQ,KAAKsK,aAAa,oBAAqB2S,IAAKmW,IAAQpzB,KAAK25C,SAASn/B,IAAI,mBAAoB4Y,IAAQjhB,SAA0B,qBAAhB2mC,EAAoC7rB,KAAM,kBAAC+tB,GAAD,MAAc3tC,KAAMgF,EAAE,qBAG7Nib,EAAMjX,IAAI1V,GAAK,kBAAC,GAAD,CAAUwR,SAAU2mC,IAAgBn4C,EAAGsc,IAAKmW,IAAQpzB,KAAK25C,SAASn/B,IAAI7Z,EAAGyyB,IAAQ7uB,IAAK5D,EAAGuR,OAAQvR,EAAG4P,QAAS,IAAMvQ,KAAK04C,iBAAiB/3C,MACzJ,kBAAC,GAAD,CAAaqpC,SAAUhqC,KAAKi1B,eAAgBgV,KAAM53B,EAAE,UAAWyK,QAAS9c,KAAKi7C,kBAAmBvpC,SAAU1R,KAAKg1B,aAAc8U,YAAa9pC,KAAK64C,mBAEnJ,yBAAK31C,UAAU,2BAA2BoE,MAAO,CAAE4zC,OAAQ,KAC3D,yBAAKj+B,IAAKjd,KAAKm7C,UAAWj4C,UAAU,uBAAuBoE,MAAO,CAAE8zC,WAAY,EAAG9nC,SAAU,WAAYyG,OAAQ,QAAUua,SAAUA,GACjI,kBAAC,GAAD,KAAgBjiB,EAAE,oBACjBwnC,GACG,oCACI,kBAAC,GAAD,CAAYtpC,QAAS,IAAMvQ,KAAKsK,aAAa,oBAAqBuX,QAASk3B,EAAkB9rB,KAAM,kBAAC,GAAD,CAAc/pB,UAAU,0BAA0Bi8B,QAAQ,cAAe9xB,KAAMgF,EAAE,oBACpL,kBAAC,GAAD,CAAY9B,QAAS,IAAMvQ,KAAKsK,aAAa,wBAAyBuX,QAASm3B,EAAsB/rB,KAAM,kBAAC8tB,GAAD,CAAiB73C,UAAU,4BAA6BmK,KAAMgF,EAAE,uBAC3K,kBAAC,GAAD,CAAY9B,QAAS,IAAMvQ,KAAKsK,aAAa,kBAAmBuX,QAASq3B,EAAgBjsB,KAAM,kBAAC,GAAD,CAAY/pB,UAAU,0BAA0Bi8B,QAAQ,cAAe9xB,KAAMgF,EAAE,kBAC9K,kBAAC,GAAD,CAAY9B,QAAS,IAAMvQ,KAAKsK,aAAa,oBAAqBuX,QAASs3B,EAAkBlsB,KAAM,kBAAC,GAAD,CAAc/pB,UAAU,0BAA0Bi8B,QAAQ,cAAe9xB,KAAMgF,EAAE,oBACpL,kBAAC,GAAD,CAAY9B,QAAS,IAAMvQ,KAAKsK,aAAa,gBAAiBuX,QAASo3B,EAAchsB,KAAM,kBAAC+tB,GAAD,CAAU93C,UAAU,4BAA6BmK,KAAMgF,EAAE,kBAG1JwnC,GACE,oCACI,kBAAC,GAAD,CAAYtpC,QAAS,IAAMvQ,KAAKsK,aAAa,iBAAkBuX,QAASy3B,EAAersB,KAAM,kBAACoV,GAAD,CAAWn/B,UAAU,4BAA6BmK,KAAMgF,EAAE,iBACvJ,kBAAC,GAAD,CAAY9B,QAAS,IAAMvQ,KAAKsK,aAAa,gBAAiBuX,QAAS03B,EAActsB,KAAM,kBAAC,GAAD,CAAU/pB,UAAU,4BAA6BmK,KAAMgF,EAAE,gBACpJ,kBAAC,GAAD,CAAY9B,QAAS,IAAMvQ,KAAKsK,aAAa,oBAAqBuX,QAAS23B,EAAkBvsB,KAAM,kBAAC,GAAD,CAAc/pB,UAAU,4BAA6BmK,KAAMgF,EAAE,qBAGtKkE,GAASA,EAAM7B,OAAS,GACtB,oCACI,yBAAKxR,UAAU,+BAA+BoE,MAAO,CAAE0uC,OAAQ,cAC/D,kBAAC,GAAD,KAAgB3jC,EAAE,iBACfkE,GAAS,IAAI6X,MAAM,EAAGvY,GAAOQ,IAAI1V,GAAK,kBAAC,GAAD,CAAY6d,MAAM,EAAMjO,QAAS,IAAMvQ,KAAK04C,iBAAiB/3C,GAAI4D,IAAK5D,EAAGuR,OAAQvR,EAAGkhB,QAAkB,YAAT+2B,EAAqBQ,EAAkB5I,SAAS7vC,GAAK84C,EAAkBjJ,SAAS7vC,OAG5Nm2B,GACE,yBAAK5zB,UAAU,4BACT4zB,EAAYpgB,SAASL,IAAI1V,GAAK,kBAAC,GAAD,CAAY6d,MAAM,EAAMjO,QAAS,IAAMvQ,KAAK04C,iBAAiB/3C,GAAG,GAAO4D,IAAK5D,EAAGuR,OAAQvR,EAAGkhB,QAAkB,YAAT+2B,EAAqBQ,EAAkB5I,SAAS7vC,GAAK84C,EAAkBjJ,SAAS7vC,Y,+jBCnZ/O,MAAM06C,GAAUx5C,IAAMy5C,KAAK,IAAM,+BA0iBlBlmC,OALCC,YACZpD,cACAqD,IAGWF,CAxiBf,cAA2BvT,IAAMC,UAE7BlC,YAAY4C,GAAQ,IAAD,EACf0B,MAAM1B,GADS,YAsCnB+4C,kBAtCmB,qBAsCC,oCAAA7oC,EAAA,yDACM,EAAK3Q,MAAnBy5C,UADQ,iEAKNC,EAAW,CAAEC,MAAM,wBALb,SAOUtlC,QAAQ/C,IAAIooC,GAPtB,cAON/T,EAPM,iBASStxB,QAAQ/C,IAAIq0B,EAAQrxB,IAAI1V,GAAKA,EAAE0M,SATxC,oCASLgb,EATK,KAWZ,EAAK5lB,SAAS,CAAE4lB,SAXJ,kDAaZvV,QAAQC,MAAR,MAbY,wDAtCD,KAuDnB6gC,WAAa,KAAO,MACR+H,EAAW37C,KAAKwC,MAAhBm5C,OACAC,EAAe57C,KAAK+B,MAApB65C,WAEFz9B,EAAQne,KAAK67C,SAAS7iC,QAAQzO,MAAMwQ,OAC1C,IAAKoD,EAKD,OAJAne,KAAK67C,SAAS7iC,QAAQ1P,aACtBtJ,KAAKyC,SAAS,CACVsQ,OAAO,IAIX/S,KAAKyC,SAAS,CACVsQ,OAAO,IAIf6oC,EAAWz9B,MAAQA,ECxGpB,SAAuB5C,GAC1B,IAAKA,EAAQ,OAAO,EADc,MAI9Bw9B,EAOAx9B,EAPAw9B,iBACAC,EAMAz9B,EANAy9B,qBACAC,EAKA19B,EALA09B,aACAC,EAIA39B,EAJA29B,eACAC,EAGA59B,EAHA49B,iBACAC,EAEA79B,EAFA69B,kBAIJ,QAFI79B,EADA4C,QAKG46B,GAAoBC,GAAwBC,GAAgBC,GAAkBC,GAAoBC,EAAkB1kC,OAAS,GD2F3HonC,CAAcF,GAKnBD,GAAUA,EAAOC,GAJb57C,KAAKyX,sBAAsB,qDA3EhB,KAkFnBskC,qBAAuB,KACnB,MAAMC,EAASh8C,KAAKi8C,UAAUjjC,QACzBgjC,GACAA,EAAOE,UAEZF,EAAO/zC,QAvFQ,KA0FnBk0C,4BAA8B,KAAO,MACzB9pC,EAAMrS,KAAKwC,MAAX6P,EACAupC,EAAe57C,KAAK+B,MAApB65C,WACR,IAAKA,EAAY,OAEjB,MAAMQ,EAAa,MAAQR,EAAR,CAAoB7C,kBAAkB,IAEzD/4C,KAAKyC,SAAS,CACVm5C,WAAYQ,IAGFp8C,KAAK67C,SAAS7iC,QAAQzO,QACtB8H,EAAE,mBACZrS,KAAKyC,SAAS,CACV0b,MAAO,MAxGA,KA6GnBk+B,+BAAiC,KAAO,MAC5BhqC,EAAMrS,KAAKwC,MAAX6P,EACAupC,EAAe57C,KAAK+B,MAApB65C,WACR,IAAKA,EAAY,OAEjB,MAAMQ,EAAa,MAAQR,EAAR,CAAoB5C,sBAAsB,IAE7Dh5C,KAAKyC,SAAS,CACVm5C,WAAYQ,IAGFp8C,KAAK67C,SAAS7iC,QAAQzO,QACtB8H,EAAE,sBACZrS,KAAKyC,SAAS,CACV0b,MAAO,MA3HA,KAgInBm+B,0BAA4B,KAAO,MACvBjqC,EAAMrS,KAAKwC,MAAX6P,EACAupC,EAAe57C,KAAK+B,MAApB65C,WACR,IAAKA,EAAY,OAEjB,MAAMQ,EAAa,MAAQR,EAAR,CAAoB1C,gBAAgB,IAEvDl5C,KAAKyC,SAAS,CACVm5C,WAAYQ,IAGFp8C,KAAK67C,SAAS7iC,QAAQzO,QACtB8H,EAAE,iBACZrS,KAAKyC,SAAS,CACV0b,MAAO,MA9IA,KAmJnBo+B,4BAA8B,KAAO,MACzBlqC,EAAMrS,KAAKwC,MAAX6P,EACAupC,EAAe57C,KAAK+B,MAApB65C,WACR,IAAKA,EAAY,OAEjB,MAAMQ,EAAa,MAAQR,EAAR,CAAoBzC,kBAAkB,IAEzDn5C,KAAKyC,SAAS,CACVm5C,WAAYQ,IAGFp8C,KAAK67C,SAAS7iC,QAAQzO,QACtB8H,EAAE,mBACZrS,KAAKyC,SAAS,CACV0b,MAAO,MAjKA,KAsKnBq+B,wBAA0B,KAAO,MACrBnqC,EAAMrS,KAAKwC,MAAX6P,EACAupC,EAAe57C,KAAK+B,MAApB65C,WACR,IAAKA,EAAY,OAEjB,MAAMQ,EAAa,MAAQR,EAAR,CAAoB3C,cAAc,IAErDj5C,KAAKyC,SAAS,CACVm5C,WAAYQ,IAGFp8C,KAAK67C,SAAS7iC,QAAQzO,QACtB8H,EAAE,eACZrS,KAAKyC,SAAS,CACV0b,MAAO,MApLA,KAyLnBs+B,yBAA2BvqC,IAAW,MAC1B0pC,EAAe57C,KAAK+B,MAApB65C,WACR,IAAKA,EAAY,OAEjB,MAAMQ,EAAa,MAAQR,EAAR,CAAoBxC,kBAAmBwC,EAAWxC,kBAAkB79B,OAAO5a,GAAKA,IAAMuR,KAEzGlS,KAAKyC,SAAS,CACVm5C,WAAYQ,KAhMD,KAoMnBM,yBAA2B,KAAO,MACtBd,EAAe57C,KAAK+B,MAApB65C,WACR,IAAKA,EAAY,OAEjB,MAAMQ,EAAa,MAAQR,EAAR,CAAoBtC,eAAe,IAEtDt5C,KAAKyC,SAAS,CACVm5C,WAAYQ,KA3MD,KA+MnBO,wBAA0B,KAAO,MACrBf,EAAe57C,KAAK+B,MAApB65C,WACR,IAAKA,EAAY,OAEjB,MAAMQ,EAAa,MAAQR,EAAR,CAAoBrC,cAAc,IAErDv5C,KAAKyC,SAAS,CACVm5C,WAAYQ,KAtND,KA0NnBQ,4BAA8B,KAAO,MACzBhB,EAAe57C,KAAK+B,MAApB65C,WACR,IAAKA,EAAY,OAEjB,MAAMQ,EAAa,MAAQR,EAAR,CAAoBpC,kBAAkB,IAEzDx5C,KAAKyC,SAAS,CACVm5C,WAAYQ,KAjOD,KAqOnBS,yBAA2B3qC,IAAW,MAC1B0pC,EAAe57C,KAAK+B,MAApB65C,WACR,IAAKA,EAAY,OAEjB,MAAMQ,EAAa,MAAQR,EAAR,CAAoBnC,kBAAmBmC,EAAWnC,kBAAkBl+B,OAAO5a,GAAKA,IAAMuR,KAEzGlS,KAAKyC,SAAS,CACVm5C,WAAYQ,KA5OD,KAgPnBU,sBAhPmB,sCAgPK,WAAMlE,GAAN,eAAAlmC,EAAA,qEACCtQ,IAAgBC,KAAK,CACtC,QAAS,WACTi+B,UAAW,CAAE,QAAS,gBACtB3qB,aAAc,sBACdC,eAAgB,EAChBC,MAAO,MANS,OACdtT,EADc,OASpB,EAAKE,SAAS,CACVs6C,iBAAiB,EACjBnE,OACAriC,MAAOhU,EAAOmU,SACdb,MAAO23B,MAbS,yCAhPL,2DAqTnBwP,uBAAyB,KAErBh9C,KAAKi9C,wBAELj9C,KAAKyC,SAAS,CACVs6C,iBAAiB,EACjBnE,KAAM,QA3TK,KA+TnBtuC,aAAe,CAACkU,EAAMjU,KAAW,MACrBqxC,EAAe57C,KAAK+B,MAApB65C,WACR,IAAKA,EAAY,OAEjB,IAAIQ,EAAgB,KACpB,OAAQ59B,GACJ,IAAK,mBACD49B,EAAa,MAAQR,EAAR,CAAoB7C,kBAAmB6C,EAAW7C,mBAC/D,MAEJ,IAAK,uBACDqD,EAAa,MAAQR,EAAR,CAAoB5C,sBAAuB4C,EAAW5C,uBACnE,MAEJ,IAAK,eACDoD,EAAa,MAAQR,EAAR,CAAoB3C,cAAe2C,EAAW3C,eAC3D,MAEJ,IAAK,iBACDmD,EAAa,MAAQR,EAAR,CAAoB1C,gBAAiB0C,EAAW1C,iBAC7D,MAEJ,IAAK,mBACDkD,EAAa,MAAQR,EAAR,CAAoBzC,kBAAmByC,EAAWzC,mBAC/D,MAEJ,IAAK,oBAAqB,CACtB,IAAI+D,EAAUC,EACVvB,EAAWxC,kBAAkB5I,SAASjmC,IACtC2yC,EAAWtB,EAAWxC,kBAAkB79B,OAAO5a,GAAKA,IAAM4J,GAC1D4yC,EAAWvB,EAAWnC,oBAEtByD,EAAW,IAAKtB,EAAWxC,kBAAmB7uC,GAC9C4yC,EAAWvB,EAAWnC,kBAAkBl+B,OAAO5a,GAAKA,IAAM4J,IAG9D6xC,EAAa,MACNR,EADM,CAETxC,kBAAmB8D,EACnBzD,kBAAmB0D,IAEvB,MAEJ,IAAK,gBACDf,EAAa,MAAQR,EAAR,CAAoBtC,eAAgBsC,EAAWtC,gBAC5D,MAEJ,IAAK,eACD8C,EAAa,MAAQR,EAAR,CAAoBrC,cAAeqC,EAAWrC,eAC3D,MAEJ,IAAK,mBACD6C,EAAa,MAAQR,EAAR,CAAoBpC,kBAAmBoC,EAAWpC,mBAC/D,MAEJ,IAAK,oBAAqB,CACtB,IAAI0D,EAAUC,EACVvB,EAAWnC,kBAAkBjJ,SAASjmC,IACtC4yC,EAAWvB,EAAWnC,kBAAkBl+B,OAAO5a,GAAKA,IAAM4J,GAC1D2yC,EAAWtB,EAAWxC,oBAEtB+D,EAAW,IAAKvB,EAAWnC,kBAAmBlvC,GAC9C2yC,EAAWtB,EAAWxC,kBAAkB79B,OAAO5a,GAAKA,IAAM4J,IAG9D6xC,EAAa,MACNR,EADM,CAETxC,kBAAmB8D,EACnBzD,kBAAmB0D,IAGvB,OAKHf,GAELp8C,KAAKyC,SAAS,CACVm5C,WAAYQ,KA9YD,KAkZnBgB,kBAAoB,KAChB,MAAMj/B,EAAQne,KAAK67C,SAAS7iC,QAAQzO,MAAMqmC,OAAO,EAAGyM,KAEpDr9C,KAAKyC,SAAS,CACV0b,WAtZW,KA0ZnB0Q,aAAexqB,IACX,MAAM4f,EAAS5f,EAAMuD,OACjBqc,EAAOuJ,UAAYvJ,EAAO6J,cAAgB7J,EAAO6O,cACjD9yB,KAAKyC,SAAS,CACVoT,MAAO7V,KAAK+B,MAAM8T,MAAQ23B,OA9ZnB,KAmanB/1B,sBAAwBC,IAAY,MAAD,EACY1X,KAAKwC,MAAxCmV,EADuB,EACvBA,gBAAiBC,EADM,EACNA,cAEnBC,EAAWF,EAAgBD,EAAS,CACtCI,iBAAkBC,IAClBC,kBAAkB,EAClBC,OAAQ,CACJ,kBAACC,EAAA,EAAD,CACI3T,IAAI,QACJ4T,aAAW,QACXC,MAAM,UACNlV,UAAU,4BACVqN,QAAS,IAAMqH,EAAcC,IAC7B,kBAAC/G,EAAA,EAAD,WA7aZ9Q,KAAK67C,SAAWh6C,IAAMya,YACtBtc,KAAKi8C,UAAYp6C,IAAMya,YAEvBtc,KAAK+B,MAAQ,CACTu7C,cAAe,EACfj1B,KAAM,KACN00B,iBAAiB,EACjBnE,KAAM,KACNz6B,MAAO,GACPpL,OAAO,EACPwqC,OAAO,EACPhnC,MAAO,GACPV,MAAO,GAIf,gCAAgCrT,EAAOT,GAAQ,MACnCwZ,EAAqB/Y,EAArB+Y,OAAQiiC,EAAah7C,EAAbg7C,SACRF,EAAiBv7C,EAAjBu7C,aAER,OAAI/hC,GAAU+hC,IAAiBE,EACpB,CACHF,aAAcE,EACd5B,WAAW,MAAKrgC,GAChB4C,MAAO5C,EAAO4C,OAIf,KAGXnb,oBACIhD,KAAKu7C,oBA8NT0B,wBAAyB,MACb5qC,EAAMrS,KAAKwC,MAAX6P,EACAupC,EAAe57C,KAAK+B,MAApB65C,WAGR,IADc57C,KAAK67C,SAAS7iC,QAAQzO,MACxB,CAAC,MAELwuC,EAMA6C,EANA7C,iBACAC,EAKA4C,EALA5C,qBACAC,EAIA2C,EAJA3C,aACAC,EAGA0C,EAHA1C,eACAC,EAEAyC,EAFAzC,iBACAC,EACAwC,EADAxC,kBAQAwC,EAJAtC,cAIAsC,EAHArC,aAGAqC,EAFApC,iBAEAoC,EADAnC,kBAGCL,EAAkB1kC,UACfqkC,GAAqBC,GAAyBC,GAAiBC,GAAmBC,EAI1EJ,IAAoBC,GAAyBC,GAAiBC,GAAmBC,GAIlFJ,IAAoBC,GAAyBC,GAAiBC,GAAmBC,EAIhFJ,GAAqBC,IAAwBC,GAAiBC,GAAmBC,EAIjFJ,GAAqBC,GAAyBC,IAAgBC,GAAmBC,EAIjFJ,GAAqBC,GAAyBC,GAAiBC,IAAkBC,GACzFn5C,KAAKyC,SAAS,CACV0b,MAAO9L,EAAE,oBALbrS,KAAKyC,SAAS,CACV0b,MAAO9L,EAAE,kBALbrS,KAAKyC,SAAS,CACV0b,MAAO9L,EAAE,gBALbrS,KAAKyC,SAAS,CACV0b,MAAO9L,EAAE,eALbrS,KAAKyC,SAAS,CACV0b,MAAO9L,EAAE,uBALbrS,KAAKyC,SAAS,CACV0b,MAAO9L,EAAE,sBA4J7BpP,SAAU,MAAD,EAC8BjD,KAAKwC,MAAhC6P,EADH,EACGA,EAAGkJ,EADN,EACMA,OAAQrb,EADd,EACcA,GAAI4c,EADlB,EACkBA,QACvB,IAAKvB,EAAQ,OAAO,KAFf,QAIkFvb,KAAK+B,MAApF65C,EAJH,EAIGA,WAAYvzB,EAJf,EAIeA,KAAM00B,EAJrB,EAIqBA,gBAAiBnE,EAJtC,EAIsCA,KAAMriC,EAJ5C,EAI4CA,MAAOV,EAJnD,EAImDA,MAAOsI,EAJ1D,EAI0DA,MAAOpL,EAJjE,EAIiEA,MAGlEgmC,GAPC,EAIwEwE,MASzE3B,EANA7C,kBACAC,EAKA4C,EALA5C,qBACAC,EAIA2C,EAJA3C,aACAC,EAGA0C,EAHA1C,eACAC,EAEAyC,EAFAzC,iBACAC,EACAwC,EADAxC,kBAIAE,EAIAsC,EAJAtC,cACAC,EAGAqC,EAHArC,aACAC,EAEAoC,EAFApC,iBACAC,EACAmC,EADAnC,kBAGJ,OACI,oCACI,yBAAKv2C,UAAU,iBACX,kBAACgV,EAAA,EAAD,CAAYhV,UAAU,qBAAqBqN,QAASuM,GAChD,kBAAC,GAAD,OAEJ,yBAAK5Z,UAAU,qCACX,0BAAMA,UAAU,yBAAmCmP,EAAVnS,GAAM,EAAM,aAAkB,qBAE3E,kBAACgY,EAAA,EAAD,CAAYhV,UAAU,sBAAsBkV,MAAM,UAAU7H,QAASvQ,KAAK4zC,YACtE,kBAAC6J,GAAD,QAGR,yBAAKv6C,UAAU,wBACX,yBAAKA,UAAU,4BACTmlB,GACE,kBAAC,IAAMq1B,SAAP,CAAgBC,SAAU,MACtB,kBAACtC,GAAD,CACIp+B,IAAKjd,KAAKi8C,UACVn8C,QAAS,CACLmR,MAAO,GACP8I,OAAQ,GACR6jC,UAAU,EACVC,MAAM,EACNh1C,OAAQ,eACRi1C,WAAYz1B,GAEhB9X,QAASvQ,KAAK+7C,yBAO9B,yBAAK74C,UAAU,uBACX,kBAAC60C,GAAA,EAAD,CACI/N,SAAUhqC,KAAK67C,SACf34C,UAAU,qBACVgf,QAAQ,WACRkW,WAAS,EACTE,MAAOjmB,EAAE,kBACT9H,MAAO4T,EACPpL,MAAOA,EACPrB,SAAU1R,KAAKo9C,qBAGvB,yBAAKl6C,UAAU,wBACX,kBAAC,GAAD,KAAgBmP,EAAE,kBAClB,kBAAC,GAAD,CAAYnP,UAAU,0BAA0B+pB,KAAM,kBAAC8wB,GAAD,MAAY1wC,KAAMgF,EAAE,kBAAmB9B,QAAS,IAAMvQ,KAAK88C,sBAAsB,aACtI/D,GAAoB,kBAAC,GAAD,CAAYrK,SAAU1uC,KAAKm8C,4BAA6BlvB,KAAM,kBAAC,GAAD,CAAc/pB,UAAU,0BAA0Bi8B,QAAQ,cAAe9xB,KAAMgF,EAAE,oBACnK2mC,GAAwB,kBAAC,GAAD,CAAYtK,SAAU1uC,KAAKq8C,+BAAgCpvB,KAAM,kBAAC8tB,GAAD,CAAiB73C,UAAU,4BAA6BmK,KAAMgF,EAAE,uBACzJ6mC,GAAkB,kBAAC,GAAD,CAAYxK,SAAU1uC,KAAKs8C,0BAA2BrvB,KAAM,kBAAC,GAAD,CAAY/pB,UAAU,0BAA0Bi8B,QAAQ,cAAe9xB,KAAMgF,EAAE,kBAC7J8mC,GAAoB,kBAAC,GAAD,CAAYzK,SAAU1uC,KAAKu8C,4BAA6BtvB,KAAM,kBAAC,GAAD,CAAc/pB,UAAU,0BAA0Bi8B,QAAQ,cAAe9xB,KAAMgF,EAAE,oBACnK4mC,GAAgB,kBAAC,GAAD,CAAYvK,SAAU1uC,KAAKw8C,wBAAyBvvB,KAAM,kBAAC+tB,GAAD,CAAU93C,UAAU,4BAA6BmK,KAAMgF,EAAE,gBAClI+mC,EAAkB/iC,IAAI1V,GACpB,kBAAC,GAAD,CAAY4D,IAAK5D,EAAGuR,OAAQvR,EAAG+tC,SAAU1uC,KAAKy8C,6BAGtD,yBAAKv5C,UAAU,wBACX,kBAAC,GAAD,KAAgBmP,EAAE,kBAClB,kBAAC,GAAD,CAAYnP,UAAU,6BAA6B+pB,KAAM,kBAAC,KAAD,MAAe5f,KAAMgF,EAAE,qBAAsB9B,QAAS,IAAMvQ,KAAK88C,sBAAsB,aAC/IxD,GAAiB,kBAAC,GAAD,CAAY5K,SAAU1uC,KAAK08C,yBAA0BzvB,KAAM,kBAACoV,GAAD,CAAWn/B,UAAU,4BAA6BmK,KAAMgF,EAAE,iBACtIknC,GAAgB,kBAAC,GAAD,CAAY7K,SAAU1uC,KAAK28C,wBAAyB1vB,KAAM,kBAAC,GAAD,CAAU/pB,UAAU,4BAA6BmK,KAAMgF,EAAE,gBACnImnC,GAAoB,kBAAC,GAAD,CAAY9K,SAAU1uC,KAAK48C,4BAA6B3vB,KAAM,kBAAC,GAAD,CAAc/pB,UAAU,4BAA6BmK,KAAMgF,EAAE,oBAC9IonC,EAAkBpjC,IAAI1V,GACpB,kBAAC,GAAD,CAAY4D,IAAK5D,EAAGuR,OAAQvR,EAAG+tC,SAAU1uC,KAAK68C,8BAI1D,kBAAC,GAAD,CAAangC,KAAMqgC,EAAiBjgC,QAAS9c,KAAKg9C,wBAC9C,kBAAC,GAAD,CAAiBzhC,OAAQqgC,EAAYhD,KAAMA,EAAMriC,MAAOA,EAAOV,MAAOA,EAAOnE,SAAU1R,KAAKsK,aAAcgqB,SAAUt0B,KAAK6uB,oB,OEvZ9H5c,qBAxIf,cAAqBpQ,IAAMC,UAAW,eAAD,oBAEjCC,MAAQ,CACJs/B,QAAQ,EACRzZ,aAAa,EACbrgB,KAAM,EACNE,IAAK,GANwB,KASjC8e,aAAe,KACXvmB,KAAK6nB,yBACL7nB,KAAKg+C,oBAXwB,KAcjCA,iBAAmB,KACfh+C,KAAKyC,SAAS,CACV4+B,QAAQ,KAhBiB,KAoBjC4c,kBAAoB,KAChBj+C,KAAKyC,SAAS,CACV4+B,QAAQ,KAtBiB,KA0BjC6c,mBAAqB,KACjBl+C,KAAKi+C,qBA3BwB,KA8BjCE,oBAAsB,KAAO,MACjB59B,EAASvgB,KAAKwC,MAAd+d,KACHA,IAELvgB,KAAKi+C,oBAEL77C,IAAgBC,KAAK,CACjB,QAAS,mBACTyoC,eAAgBvqB,EAAKrgB,OAtCI,KA0CjCynB,sBAAwBtjB,IAChBA,IACAA,EAAM6B,iBACN7B,EAAM4B,mBAGVjG,KAAKyC,SAAS,CACVmlB,aAAa,EACbrgB,KAAMlD,EAAM4F,QACZxC,IAAKpD,EAAM6F,WAnDc,KAuDjC2d,uBAAyB,KACrB7nB,KAAKyC,SAAS,CACVmlB,aAAa,EACbrgB,KAAM,EACNE,IAAK,KAIbxE,SAAU,MAAD,EAC8BjD,KAAKwC,MAAhC6P,EADH,EACGA,EAAGkO,EADN,EACMA,KAAM69B,EADZ,EACYA,OAAQ7nC,EADpB,EACoBA,MACzB,IAAKgK,EAAM,OAAO,KAFb,QAIsCvgB,KAAK+B,MAAxCs/B,EAJH,EAIGA,OAAQzZ,EAJX,EAIWA,YAAangB,EAJxB,EAIwBA,IAAKF,EAJ7B,EAI6BA,KAE1B4W,EAAUoC,EAAVpC,MACFa,EDvEP,SAA2B3M,EAAGmrC,EAAUjnC,GAC3C,IAAKA,EAAO,MAAO,IAEnB,IAAI28B,EAAQ,EACZ,IAAK,IAAIl+B,EAAI,EAAGA,EAAIuB,EAAMG,SAAShC,OAAQM,IAC0D,MAA7Fs3B,YAAa/1B,EAAMG,SAAS1B,GAAI,CAAE,QAAS,iBAAkB81B,eAAgB0S,KAC7EtK,IAIR,OAAKA,EAIY,IAAVA,EAAc,SAAd,UAA4BA,EAA5B,UAHI7gC,EAAE,iBC4DQgsC,CAAkBhsC,EAAGkO,EAAKrgB,GAAIqW,GAE/C,OACI,oCACI,kBAACgL,GAAA,EAAD,CAAUre,UAAU,sBAAsB+0C,UAAMC,EAAW12B,QAAM,EAACjR,QAAS6tC,EAAQ11B,cAAe1oB,KAAK2nB,uBACnG,kBAAC5F,GAAA,EAAD,CACI7e,UAAU,2BACV8e,QAAS7D,EACTiE,UAAWpD,KAGnB,kBAAC6H,GAAA,EAAD,CACInK,KAAMkL,EACN9K,QAAS9c,KAAK6nB,uBACdf,gBAAgB,iBAChBL,eAAgB,CAAEhf,MAAKF,QACvBwf,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QAEhB5W,YAAaQ,GAAKA,EAAE5K,mBACpB,kBAACkhB,GAAA,EAAD,CAAU5W,QAASM,GAAKA,EAAE5K,mBACtB,kBAACmhB,GAAA,EAAD,CAAU7W,QAASvQ,KAAKumB,cACpB,kBAAC7E,GAAA,EAAD,KACI,kBAAC4F,GAAD,OAEJ,kBAACvF,GAAA,EAAD,CAAcC,QAAS3P,EAAE,eAIrC,kBAAC,IAAD,CACIsK,QAASC,IACTC,mBAAoB,EACpBH,KAAM2kB,EACNvkB,QAAS9c,KAAK20C,aACd53B,kBAAgB,uBAChB,kBAAC,IAAD,CAAa7c,GAAG,uBAAuBmS,EAAE,YACzC,kBAAC,KAAD,KACI,kBAAC2hC,GAAA,EAAD,KACK3hC,EAAE,uBAGX,kBAACiL,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQhN,QAASvQ,KAAKk+C,mBAAoB9lC,MAAM,WAC3C/F,EAAE,WAEP,kBAACkL,EAAA,EAAD,CAAQhN,QAASvQ,KAAKm+C,oBAAqB/lC,MAAM,WAC5C/F,EAAE,a,OC1FhBJ,qBA3Cf,cAAgCpQ,IAAMC,UAAW,eAAD,oBAE5Cw8C,UAAY,KAAO,MACCC,EAAsBv+C,KAAKwC,MAAnC+Y,OACR,IAAKgjC,EAAmB,OAFV,MAINhjC,EAAWgjC,EAAXhjC,OAERnZ,IAAgBC,KAAK,CACjB,QAAS,mBACTkZ,YAIRtY,SAAU,MAAD,EACoCjD,KAAKwC,MAAtC6P,EADH,EACGA,EAAWksC,EADd,EACMhjC,OACX,IAAKgjC,EAAmB,OAAO,KAF1B,MAIGhjC,EAAwBgjC,EAAxBhjC,OAAQ6P,EAAgBmzB,EAAhBnzB,YAEhB,OACI,kBAAC7J,GAAA,EAAD,CACIre,UAAU,sBACV+0C,UAAMC,EACN12B,QAAM,GACN,kBAACO,GAAA,EAAD,CACI7e,UAAU,0BACV8e,QAASzG,EAAO4C,MAChBiE,UAAWgJ,IAEf,kBAAC7N,EAAA,EAAD,CAAQra,UAAU,yBAAyBgf,QAAQ,YAAYs8B,kBAAgB,EAACpmC,MAAM,UAAU7H,QAASvQ,KAAKs+C,WACzGjsC,EAAE,Y,OCpBvB,MAAMgpC,GAAUx5C,IAAMy5C,KAAK,IAAM,+BAoRlBlmC,OALCC,YACZpD,cACAqD,IAGWF,CAlRf,cAAsBvT,IAAMC,UAExBlC,YAAY4C,GAAQ,IAAD,EACf0B,MAAM1B,GADS,YA2BnBuoC,oBAAsB3mC,IAClB4G,WAAW,KACPhL,KAAKy+C,YACN,MA9BY,KAoEnBlD,kBApEmB,qBAoEC,oCAAA7oC,EAAA,yDACM,EAAK3Q,MAAnBy5C,UADQ,iEAKNC,EAAW,CACbC,MAAM,uBACNA,MAAM,wBAPE,SAUUtlC,QAAQ/C,IAAIooC,GAVtB,cAUN/T,EAVM,iBAYStxB,QAAQ/C,IAAIq0B,EAAQrxB,IAAI1V,GAAKA,EAAE0M,SAZxC,oCAYLgb,EAZK,KAcZ,EAAK5lB,SAAS,CAAE4lB,SAdJ,kDAgBZvV,QAAQC,MAAR,MAhBY,wDApED,KAwFnB2rC,mBAAqB,KAAO,MAChBrsC,EAAMrS,KAAKwC,MAAX6P,EAER,GADoB24B,KAAZtlB,QACIhR,QAAUiqC,IAElB,YADA3+C,KAAKyX,sBAAsBpF,EAAE,sBAqBjCrS,KAAKyC,SAAS,CACVm8C,YAAY,EACZpB,UAAW,EACXjiC,OApBW,CACX,QAAS,YACT4C,MAAO,GACP0gC,UAAW,GACXC,gBAAiB,GACjB1F,kBAAmB,GACnBK,kBAAmB,GACnBH,eAAe,EACfC,cAAc,EACdC,kBAAkB,EAClBT,kBAAkB,EAClBC,sBAAsB,EACtBC,cAAc,EACdC,gBAAgB,EAChBC,kBAAkB,MA9GP,KAwHnB4F,kBAAoB,KAChB/+C,KAAKyC,SAAS,CACVm8C,YAAY,EACZpB,UAAW,EACXjiC,OAAQ,QA5HG,KAgInByjC,iBAhImB,sCAgIA,WAAMz+B,GAAN,eAAA7N,EAAA,qEACMtQ,IAAgBC,KAAK,CACtC,QAAS,gBACTyoC,eAAgBvqB,EAAKrgB,KAHV,UACTqb,EADS,wDAQf,EAAK9Y,SAAS,CACVm8C,YAAY,EACZpB,SAAUj9B,EAAKrgB,GACfqb,WAXW,yCAhIA,2DA+InBq4B,WAAar4B,IAAW,MACZiiC,EAAax9C,KAAK+B,MAAlBy7C,SAERx9C,KAAK++C,oBACAxjC,KAEa,IAAdiiC,EACAp7C,IAAgBC,KAAK,CACjB,QAAS,iBACTyoC,eAAgB0S,EAChBjiC,WAGJnZ,IAAgBC,KAAK,CACjB,QAAS,mBACTkZ,aA9JO,KAmKnBwgC,qBAAuB,KACnB,MAAMC,EAASh8C,KAAKi8C,UAAUjjC,QACzBgjC,GACAA,EAAOE,UAEZF,EAAO/zC,QAxKQ,KA2KnBwP,sBAAwBC,IAAY,MAAD,EACY1X,KAAKwC,MAAxCmV,EADuB,EACvBA,gBAAiBC,EADM,EACNA,cAEnBC,EAAWF,EAAgBD,EAAS,CACtCI,iBAAkBC,IAClBC,kBAAkB,EAClBC,OAAQ,CACJ,kBAACC,EAAA,EAAD,CACI3T,IAAI,QACJ4T,aAAW,QACXC,MAAM,UACNlV,UAAU,4BACVqN,QAAS,IAAMqH,EAAcC,IAC7B,kBAAC/G,EAAA,EAAD,WArLZ9Q,KAAKi8C,UAAYp6C,IAAMya,YAEvBtc,KAAK+B,MAAQ,CACT68C,YAAY,EACZpB,UAAW,EACXjiC,OAAQ,KACRqgC,WAAY,KACZqD,mBAAoB,KACpB1oC,MAAO,KACP2oC,WAAY,IAAIpqC,KAIxB9R,oBACIhD,KAAKu7C,oBACLv7C,KAAKy+C,WAELzT,KAAYh+B,GAAG,oBAAqBhN,KAAK+qC,qBAG7C99B,uBACI+9B,KAAY59B,IAAI,oBAAqBpN,KAAK+qC,qBASxC0T,WAAY,IAAD,kJACOr8C,IAAgBC,KAAK,CACrC,QAAS,WACTi+B,UAAW,CAAE,QAAS,gBACtB1qB,eAAgB,EAChBD,aAAc,sBACdE,MAAO,MANE,OAWb,IAVMU,EADO,OASI4oC,EAAenU,KAAxBtlB,QACFjQ,EAAW,GACRT,EAAI,EAAGmqC,GAAcnqC,EAAImqC,EAAWzqC,OAAQM,IACjDS,EAASK,KAAK1T,IAAgBC,KAAK,CAC/B,QAAS,gBACTyoC,eAAgBqU,EAAWnqC,GAAG9U,KAC/BoW,MAAMzF,GAAK,OAfL,gBAiBSuF,QAAQ/C,IAAIoC,GAjBrB,OAoBb,IAHMiQ,EAjBO,OAmBPw5B,EAAa,IAAIpqC,IACdE,EAAI,EAAGmqC,GAAcnqC,EAAImqC,EAAWzqC,OAAQM,IACjDkqC,EAAW1kC,IAAI2kC,EAAWnqC,GAAG9U,GAAIwlB,EAAQ1Q,IArBhC,iBAwBoB5S,IAAgBC,KAAK,CAClD,QAAS,8BAzBA,QAwBP48C,EAxBO,OA4Bb,EAAKx8C,SAAS,CACV8T,QACA2oC,aACAD,uBA/BS,4CA6JjBh8C,SAAU,MAAD,EACkBjD,KAAKwC,MAApB6P,EADH,EACGA,EAAGyK,EADN,EACMA,QADN,EAEiF9c,KAAK+B,MAAnFk9C,EAFH,EAEGA,mBAAoBL,EAFvB,EAEuBA,WAAYrjC,EAFnC,EAEmCA,OAAQiiC,EAF3C,EAE2CA,SAAUn1B,EAFrD,EAEqDA,KAAM9R,EAF3D,EAE2DA,MAAO2oC,EAFlE,EAEkEA,WAC/Dx5B,EAAYslB,KAAZtlB,QAEF05B,EAAa15B,GAAWA,EAAQhR,OAAS,EACzC2qC,EAAwBJ,GACvBA,EAAmBK,aAAa5qC,OAAS,KACvCgR,GAAWA,EAAQhR,OAASiqC,KAErC,OACI,oCACI,yBAAKz7C,UAAU,iBACX,kBAACgV,EAAA,EAAD,CAAYhV,UAAU,qBAAqBqN,QAASuM,GAChD,kBAAC,GAAD,OAEJ,yBAAK5Z,UAAU,qCACX,0BAAMA,UAAU,yBAAyBmP,EAAE,2BAGnD,yBAAKnP,UAAU,wBACX,yBAAKA,UAAU,uCACX,yBAAKA,UAAU,4BACTmlB,GACE,kBAAC,IAAMq1B,SAAP,CAAgBC,SAAU,MACtB,kBAAC,GAAD,CACI1gC,IAAKjd,KAAKi8C,UACVn8C,QAAS,CACLmR,MAAO,GACP8I,OAAQ,GACR6jC,UAAU,EACVC,MAAM,EACNh1C,OAAQ,UACRi1C,WAAYz1B,GAEhB9X,QAASvQ,KAAK+7C,yBAM9B,yBAAK74C,UAAU,uBAAuBmP,EAAE,wBACxC,kBAACkL,EAAA,EAAD,CAAQra,UAAU,wBAAwBkV,MAAM,UAAU8J,QAAQ,YAAYs8B,kBAAgB,EAACe,UAAW,kBAACxB,GAAD,MAAYxtC,QAASvQ,KAAK0+C,oBAC/HrsC,EAAE,qBAGT+sC,GACE,oCACI,yBAAKl8C,UAAU,iCACf,yBAAKA,UAAU,wBACX,kBAAC,GAAD,KAAgBmP,EAAE,aAChBqT,GAAW,IAAIrP,IAAI1V,GAAM,kBAAC,GAAD,CAAQ4D,IAAK5D,EAAET,GAAIqgB,KAAM5f,EAAG4a,OAAQ2jC,EAAWrzC,IAAIlL,EAAET,IAAKqW,MAAOA,EAAO6nC,OAAQ,IAAMp+C,KAAKg/C,iBAAiBr+C,QAIjJ0+C,GACE,oCACI,yBAAKn8C,UAAU,iCACf,yBAAKA,UAAU,wBACX,kBAAC,GAAD,KAAgBmP,EAAE,sBACjB4sC,EAAmBK,aAAajpC,IAAI1V,GAAM,kBAAC,GAAD,CAAmB4D,IAAK5D,EAAE4a,OAAO4C,MAAO5C,OAAQ5a,QAK3G,kBAAC,GAAD,CAAa+b,KAAMkiC,EAAY9hC,QAAS9c,KAAK++C,mBACzC,kBAAC,GAAD,CAAcxjC,OAAQA,EAAQrb,GAAIs9C,EAAU7B,OAAQ37C,KAAK4zC,kBCtR9DpwC,gBACX,0BAAMC,EAAE,uhCACR,Y,kBCkFW+7C,OA/Ef,cAAwB39C,IAAMC,UAAW,eAAD,oBACpCC,MAAQ,CACJ09C,QAAQ,GAFwB,KAapCC,oCAAsCt7C,IAAW,MACrCu7C,EAAc3/C,KAAKwC,MAAnBm9C,UACR,IAAKA,EAAW,OAF4B,MAIpC94C,EAAa84C,EAAb94C,SACR,IAAKA,EAAU,OAL6B,MAOpCmT,EAAcnT,EAAdmT,UACR,IAAKA,EAAW,OAR4B,MAUpCrO,EAASqO,EAATrO,KACR,IAAKA,EAAM,OAXiC,MAapC9C,EAAWzE,EAAXyE,OAEJ8C,EAAKzL,KAAO2I,GAIhB7I,KAAKya,eAhC2B,KAmCpCmlC,WAAa,KACT5/C,KAAKyC,SAAS,CAAEg9C,QAAQ,KApCQ,KAuCpCl6C,YAAc,KAAO,MAAD,EACevF,KAAKwC,MAA5Bm9C,EADQ,EACRA,UAAWpvC,EADH,EACGA,QAEfA,GACAA,EAAQovC,IAtChB38C,oBACI4I,IAAUoB,GAAG,oCAAqChN,KAAK0/C,qCAG3DzyC,uBACIrB,IAAUwB,IAAI,oCAAqCpN,KAAK0/C,qCAqC5Dz8C,SAAU,MAAD,EAC6BjD,KAAKwC,MAA/Bm9C,EADH,EACGA,UAAW/d,EADd,EACcA,WAGX/6B,GAFY7G,KAAK+B,MAAjB09C,OAEaE,EAAb94C,UACAohB,EAA6BphB,EAA7BohB,cAAejO,EAAcnT,EAAdmT,UAEjBoO,EAAUH,EAAgB,2BAA6BA,EAAcI,KAAO,KAC5EC,EAAWC,YAAOvO,EAAYA,EAAUrO,KAAO,MAE/C6c,EAAMF,GAAYF,EAExB,OACI,yBAAKllB,UAAU,eAAeqN,QAASvQ,KAAKuF,aACxC,yBAAKrC,UAAU,uBAAuBoE,MAAO,CAAEqhB,gBAAgB,OAAD,OAASL,GAAYF,EAArB,KAAiCQ,eAAgB,QAASi3B,mBAAoB,QACvIr3B,IAAQF,GACL,yBAAKplB,UAAU,4BAA4BoE,MAAO,CAAEqhB,gBAAgB,OAAD,OAASH,EAAT,SAGzEoZ,GAAc,oCAAE,yBAAK1+B,UAAU,uBAAsB,yBAAKA,UAAU,8BACpE2D,GAAYA,EAASA,UAAY,kBAACi5C,GAAA,EAAD,CAAcn0C,KAAM9E,EAASA,SAAUk5C,cAAc,O,OCMzF9tC,qBApEf,cAA6BpQ,IAAMC,UAAW,eAAD,oBACzCC,MAAQ,CACJi+C,WAAYjiC,KAAU4hC,UAAY5hC,KAAU4hC,UAAUz/C,IAAM,GAFvB,KAiBzCqF,YAAco6C,IACV3/C,KAAKyC,SAAS,CACVu9C,WAAYL,EAAUz/C,KAFH,MAKf2G,EAAa84C,EAAb94C,SACR,IAAKA,EAAU,OAEuBA,EAA9BmT,UARe,MAQMrO,EAAS9E,EAAnBA,SACnB,GAAK8E,EAAL,CAGA,IADY4c,YAAO5c,GACT,CACN,MAAMgL,EAAQ/K,IAAUgL,WACxBqpC,YAAsBtpC,EAAOgpC,GAAW,GAG5Cv9C,IAAgBkG,aAAa,CACzB,QAAS,6BACTq3C,gBA/BR38C,oBACIhD,KAAKuV,cAGTA,cAAe,MACH2qC,EAAgBlgD,KAAKwC,MAArB09C,YACR,IAAKA,EAAa,OAElB,MAAMvpC,EAAQ/K,IAAUgL,WACxBupC,YAAuBxpC,EAAOupC,EAAYA,aA0B9Cj9C,SAAU,MAAD,EAC+BjD,KAAKwC,MAAjC6P,EADH,EACGA,EAAG6tC,EADN,EACMA,YAAapjC,EADnB,EACmBA,QAChBkjC,EAAehgD,KAAK+B,MAApBi+C,WAEFI,EAAaF,EAAYA,YAAY3kC,OAAO5a,GAAyB,4BAApBA,EAAE6d,KAAK,UAE9D,OACI,oCACI,yBAAKtb,UAAU,iBACX,kBAACgV,EAAA,EAAD,CAAYhV,UAAU,qBAAqBqN,QAASuM,GAChD,kBAAC,GAAD,OAEJ,yBAAK5Z,UAAU,qCACX,0BAAMA,UAAU,yBAAyBmP,EAAE,qBAGnD,yBAAKnP,UAAU,6DACTk9C,EAAW/pC,IAAI1V,GAAM,kBAAC,GAAD,CAAW4D,IAAK5D,EAAET,GAAIy/C,UAAWh/C,EAAGihC,WAAYjhC,EAAET,KAAO8/C,EAAYzvC,QAASvQ,KAAKuF,oB,kMC8K/G6P,OAPCC,YACZic,cACA+uB,KACApuC,cACAsf,cAGWnc,CA1Nf,cAA0BvT,IAAMC,UAC5BlC,YAAY4C,GACR0B,MAAM1B,GADS,KAUnB8H,aAAejG,IACXrE,KAAKyC,SAAS,CAAE+b,KAAMna,EAAMuD,OAAO2C,QAEnCg3B,KAAiB+e,KAAK,4BAA6B,CAC/C9hC,KAAMna,EAAMuD,OAAO2C,MACnByX,QAAShiB,KAAKugD,SAASvgD,KAAK+B,MAAMqW,UAfvB,KAmBnBooC,mBAAqBn8C,IACjBrE,KAAKyC,SAAS,CAAE2V,MAAO/T,EAAMuD,OAAO2C,QAEpCg3B,KAAiB+e,KAAK,4BAA6B,CAC/C9hC,KAAMxe,KAAK+B,MAAMyc,KACjBwD,QAAShiB,KAAKugD,SAASl8C,EAAMuD,OAAO2C,UAxBzB,KA4BnBk2C,eAAiBl2C,IACb,OAAQA,GACJ,KAAKm2C,KAAI,KACL,MAAO,MACX,KAAKC,KAAO,KACR,MAAO,SACX,KAAKC,KAAM,KACP,MAAO,QACX,KAAKC,KAAM,KACP,MAAO,QACX,IAAK,UACD,MAAO,OACX,KAAKC,KAAO,KACR,MAAO,SACX,KAAKC,KAAW,KACZ,MAAO,aAGf,OAAO,MA9CQ,KAiDnBR,SAAWh2C,IACP,OAAQA,GACJ,IAAK,MACD,OAAOm2C,KACX,IAAK,SACD,OAAOC,KACX,IAAK,QACD,OAAOC,KACX,IAAK,QACD,OAAOC,KACX,IAAK,OACD,MAAO,CAAEhW,KAAM,WACnB,IAAK,SACD,OAAOiW,KACX,IAAK,aACD,OAAOC,KAGf,OAAO,MAnEQ,KAsEnBh8C,YAAc,KACV/E,KAAKyC,SAAS,CAAEia,MAAM,KAvEP,KA0EnBA,KAAO,KACH1c,KAAKyC,SAAS,CAAEia,MAAM,KAxEtB1c,KAAK+B,MAAQ,CACT2a,MAAM,EACN8B,KAAMxe,KAAKwC,MAAMywB,MAAM+tB,QAAQxiC,KAC/BpG,MAAOpY,KAAKygD,eAAezgD,KAAKwC,MAAMywB,MAAM+tB,QAAQh/B,QAAQ6oB,OAwEpE5nC,SAAU,MACEoP,EAAMrS,KAAKwC,MAAX6P,EADH,EAEyBrS,KAAK+B,MAA3Byc,EAFH,EAEGA,KAAMpG,EAFT,EAESA,MAAOsE,EAFhB,EAEgBA,KAErB,OACI,kBAAC,IAAD,CACIC,QAASC,IACTC,mBAAoB,EACpBH,KAAMA,EACNI,QAAS9c,KAAK+E,YACdgY,kBAAgB,qBAChBC,mBAAiB,4BACjB,kBAAC,IAAD,CAAa9c,GAAG,sBAAsBmS,EAAE,eACxC,kBAAC,KAAD,KACI,kBAAC4uC,GAAA,EAAD,CAAaC,UAAU,WAAWh+C,UAAU,qBACxC,kBAACi+C,GAAA,EAAD,CAAWC,SAAO,EAACF,UAAU,UACxB7uC,EAAE,UAEP,kBAACgvC,GAAA,EAAD,CACIlpC,aAAW,QACXw+B,KAAK,SACLzzC,UAAU,qBACVqH,MAAOiU,EACP9M,SAAU1R,KAAKsK,cACf,kBAACg3C,GAAA,EAAD,CAAkB/2C,MAAM,QAAQg3C,QAAS,kBAACnJ,GAAA,EAAD,CAAOhgC,MAAM,YAAckgB,MAAM,UAC1E,kBAACgpB,GAAA,EAAD,CAAkB/2C,MAAM,OAAOg3C,QAAS,kBAACnJ,GAAA,EAAD,CAAOhgC,MAAM,YAAckgB,MAAM,WAGjF,kBAAC2oB,GAAA,EAAD,CAAaC,UAAU,WAAWh+C,UAAU,qBACxC,kBAACi+C,GAAA,EAAD,CAAWC,SAAO,EAACF,UAAU,UACxB7uC,EAAE,WAEP,kBAACgvC,GAAA,EAAD,CACIlpC,aAAW,SACXw+B,KAAK,UACLzzC,UAAU,qBACVqH,MAAO6N,EACP1G,SAAU1R,KAAKwgD,oBACf,kBAACc,GAAA,EAAD,CACI/2C,MAAM,MACNg3C,QACI,kBAACnJ,GAAA,EAAD,CACIhgC,MAAM,UACN/G,QAAS,CACL9F,KAAM,sBAIlB+sB,MAAM,QAEV,kBAACgpB,GAAA,EAAD,CACI/2C,MAAM,SACNg3C,QACI,kBAACnJ,GAAA,EAAD,CACIhgC,MAAM,UACN/G,QAAS,CACL9F,KAAM,yBAIlB+sB,MAAM,WAEV,kBAACgpB,GAAA,EAAD,CACI/2C,MAAM,QACNg3C,QACI,kBAACnJ,GAAA,EAAD,CACIhgC,MAAM,UACN/G,QAAS,CACL9F,KAAM,wBAIlB+sB,MAAM,UAEV,kBAACgpB,GAAA,EAAD,CACI/2C,MAAM,QACNg3C,QACI,kBAACnJ,GAAA,EAAD,CACIhgC,MAAM,UACN/G,QAAS,CACL9F,KAAM,wBAIlB+sB,MAAM,UAEV,kBAACgpB,GAAA,EAAD,CACI/2C,MAAM,OACNg3C,QACI,kBAACnJ,GAAA,EAAD,CACIhgC,MAAM,UACN/G,QAAS,CACL9F,KAAM,uBAIlB+sB,MAAM,SAEV,kBAACgpB,GAAA,EAAD,CACI/2C,MAAM,SACNg3C,QACI,kBAACnJ,GAAA,EAAD,CACIhgC,MAAM,UACN/G,QAAS,CACL9F,KAAM,yBAIlB+sB,MAAM,WAEV,kBAACgpB,GAAA,EAAD,CACI/2C,MAAM,aACNg3C,QACI,kBAACnJ,GAAA,EAAD,CACIhgC,MAAM,UACN/G,QAAS,CACL9F,KAAM,8BAIlB+sB,MAAM,uB,OCrHvBljB,OANCC,YACZic,cACArf,cACAsf,cAGWnc,CA1Ff,cAAsBvT,IAAMC,UACxBlC,YAAY4C,GACR0B,MAAM1B,GADS,KAWnBg/C,iBAAmB,KACfxhD,KAAKyhD,eAAezoC,QAAQ0D,QAZb,KAmBnBnH,YAAc,KACVnT,IAAgBC,KAAK,CACjB,QAAS,iBACTq/C,gBAAgB,IACjBp/C,KAAK49C,GAAelgD,KAAKyC,SAAS,CAAEy9C,kBAvBxB,KA0BnByB,mBAAqB,KACZ3hD,KAAK+B,MAAMm+C,aAEhBlgD,KAAKyC,SAAS,CACVk/C,oBAAoB,KA9BT,KAkCnBC,oBAAsB,KAClB5hD,KAAKyC,SAAS,CACVk/C,oBAAoB,KAjCxB3hD,KAAK+B,MAAQ,CACTm+C,YAAa,KACbyB,oBAAoB,GAGxB3hD,KAAKyhD,eAAiB5/C,IAAMya,YAOhCtZ,oBACIhD,KAAKuV,cAwBTtS,SAAU,MAAD,EACkBjD,KAAKwC,MAApB6P,EADH,EACGA,EAAGyK,EADN,EACMA,QADN,EAEuC9c,KAAK+B,MAAzCm+C,EAFH,EAEGA,YAAayB,EAFhB,EAEgBA,mBAErB,OACI,oCACI,yBAAKz+C,UAAU,iBACX,kBAACgV,EAAA,EAAD,CAAYhV,UAAU,qBAAqBqN,QAASuM,GAChD,kBAAC,GAAD,OAEJ,yBAAK5Z,UAAU,qCACX,0BAAMA,UAAU,yBAAyBmP,EAAE,sBAGnD,yBAAKnP,UAAU,wBACX,yBAAKA,UAAU,wBAOX,kBAACqe,GAAA,EAAD,CAAU/D,WAAW,EAAOta,UAAU,qBAAqBse,QAAM,EAACjR,QAASvQ,KAAKwhD,kBAC5E,kBAAC9/B,GAAA,EAAD,KACI,kBAACmgC,GAAD,OAEJ,kBAAC9/B,GAAA,EAAD,CAAcC,QAAS3P,EAAE,mBAIrC,kBAAC,GAAD,CAAaqK,KAAMilC,EAAoB7kC,QAAS9c,KAAK4hD,qBACjD,kBAAC,GAAD,CAAgB1B,YAAaA,KAEjC,kBAAC,GAAD,CAAajjC,IAAKjd,KAAKyhD,qB,OCjBxBrsC,OANCC,YACZic,cACArf,cACAsf,cAGWnc,CA9Df,cAAuBvT,IAAMC,UACzBlC,YAAY4C,GACR0B,MAAM1B,GADS,KAWnB8H,aAAe8e,IACXppB,KAAKyC,SAAS,CAAE2mB,aAEhBhnB,IAAgBkG,aAAa,CAAE,QAAS,6BAA8B8gB,cAdvD,MAGPL,EAASvmB,EAATumB,KACFK,EAAWL,EAAOA,EAAKK,SAAW,KAExCppB,KAAK+B,MAAQ,CACTqnB,SAAUA,GAAY,MAU9BnmB,SAAU,MAAD,EACkBjD,KAAKwC,MAApB6P,EADH,EACGA,EAAGyK,EADN,EACMA,QACHsM,EAAappB,KAAK+B,MAAlBqnB,SAGF04B,GAFOxW,KAAkB/qB,MAAQ,CAAEwhC,eAAgB,KAElCA,eAAe1rC,IAAI1V,GACtC,yBAAK4D,IAAK5D,EAAET,GAAIgD,UAAU,gBAAgBqN,QAAS,IAAMvQ,KAAKsK,aAAa3J,EAAET,KACzE,kBAACk4C,GAAA,EAAD,CACIhgC,MAAM,UACNlV,UAAU,wBACV2e,QAASuH,IAAazoB,EAAET,GACxByQ,UAAW,EACXqxC,WAAY,CAAE,kBAAmB,aAErC,kBAACjgC,GAAA,EAAD,CAAc7hB,GAAG,UAAU8hB,QAASrhB,EAAEg2C,KAAMv0B,UAAWzhB,EAAEshD,gBAIjE,OACI,oCACI,yBAAK/+C,UAAU,iBACX,kBAACgV,EAAA,EAAD,CAAYhV,UAAU,qBAAqBqN,QAASuM,GAChD,kBAAC,GAAD,OAEJ,yBAAK5Z,UAAU,qCACX,0BAAMA,UAAU,yBAAyBmP,EAAE,eAGnD,yBAAKnP,UAAU,wBAAwB4+C,O,+jBCsNxC1sC,OANCC,YACZic,cACArf,cACAsf,cAGWnc,CAlQf,cAA4BvT,IAAMC,UAC9BlC,YAAY4C,GACR0B,MAAM1B,GADS,KAuDnB0/C,cAAgBC,IACZ,MAAMC,EAAWpiD,KAAK+B,MAAMogD,GAC5B,IAAKC,EAAU,OAFS,MAKlBC,EAAW,MAAQD,EAAR,CAAkBE,SAAuB,IADrCF,EAAbE,SACsD,QAAqB,IAEnFtiD,KAAKyC,SAAS,CAAE,CAAC0/C,GAAWE,KA9Db,KAiEnBE,kBAAoBJ,IAChB,MAAMC,EAAWpiD,KAAK+B,MAAMogD,GAC5B,IAAKC,EAAU,OAFa,MAKtBC,EAAW,MAAQD,EAAR,CAAkBI,cADVJ,EAAjBI,eAGRxiD,KAAKyC,SAAS,CAAE,CAAC0/C,GAAWE,KAxEb,KA2EnBI,oBAAsB,KAClBziD,KAAKyC,SAAS,CAAEigD,eAAgB1iD,KAAK+B,MAAM2gD,iBAzE3C,MAAMC,EAAsB/tC,IAAY/I,IAAI,4CAE5C7L,KAAK+B,MAAQ,CACT6gD,qBAAsBthC,KAAkB8gC,SAASv2C,IAAI,yCACrDg3C,mBAAoBvhC,KAAkB8gC,SAASv2C,IAAI,uCACnDi3C,qBAAsBxhC,KAAkB8gC,SAASv2C,IAAI,yCACrD62C,eAAgBC,IAAwBA,EAAoBp4C,OAIpE0C,uBAAwB,MAAD,EACuEjN,KAAK+B,MAAvF6gD,EADW,EACXA,qBAAsBC,EADX,EACWA,mBAAoBC,EAD/B,EAC+BA,qBAAsBJ,EADrD,EACqDA,cACxE1iD,KAAK+iD,6BAA6B,wCAAyCH,GAC3E5iD,KAAK+iD,6BAA6B,sCAAuCF,GACzE7iD,KAAK+iD,6BAA6B,wCAAyCD,GAC3E9iD,KAAKgjD,uBAAuBN,GAGhCM,yBAA0B,MACdN,EAAkB1iD,KAAK+B,MAAvB2gD,cAEFC,EAAsB/tC,IAAY/I,IAAI,8CAClB82C,IAAwBA,EAAoBp4C,SAC7Cm4C,GAEzBtgD,IAAgBC,KAAK,CACjB,QAAS,YACTs0C,KAAM,2CACNpsC,MAAO,CACH,QAAS,qBACTA,OAAQm4C,KAKpBK,6BAA6BhiC,EAAOqhC,GAChC,IAAKrhC,EAAO,OACZ,IAAKqhC,EAAU,OACf,MAAMa,EAAc3hC,KAAkB8gC,SAASv2C,IAAIkV,GACnD,IAAKkiC,EAAa,OAJwB,MAMlCX,EAA2BF,EAA3BE,SAAUE,EAAiBJ,EAAjBI,aACAU,EAA6CD,EAAvDX,SAAoCa,EAAmBF,EAAjCT,aAC1BF,IAAaY,GAAcV,IAAiBW,GAEhD/gD,IAAgBC,KAAK,CACjB,QAAS,+BACT0e,MAAO,CAAE,QAASA,GAClBqiC,sBAAuBhB,IA4B/BiB,UAAUjB,GACN,IAAKA,EAAU,OAAO,EAItB,OAAoB,IAFCA,EAAbE,SAKZgB,YAAYlB,GACR,IAAKA,EAAU,OAAO,EAItB,OAFyBA,EAAjBI,aAKZv/C,SAAU,MAAD,EACkBjD,KAAKwC,MAApB6P,EADH,EACGA,EAAGyK,EADN,EACMA,QADN,EAEqF9c,KAAK+B,MAAvF6gD,EAFH,EAEGA,qBAAsBC,EAFzB,EAEyBA,mBAAoBC,EAF7C,EAE6CA,qBAAsBJ,EAFnE,EAEmEA,cAExE,OACI,oCACI,yBAAKx/C,UAAU,iBACX,kBAACgV,EAAA,EAAD,CAAYhV,UAAU,qBAAqBqN,QAASuM,GAChD,kBAAC,GAAD,OAEJ,yBAAK5Z,UAAU,qCACX,0BAAMA,UAAU,yBAAyBmP,EAAE,oBAGnD,yBAAKnP,UAAU,wBACX,yBAAKA,UAAU,wBACX,kBAAC,GAAD,KAAgBmP,EAAE,8BAClB,yBAAKnP,UAAU,gBAAgBqN,QAAS,IAAMvQ,KAAKkiD,cAAc,yBAC7D,kBAACvgC,GAAA,EAAD,CACIvJ,MAAM,UACNlV,UAAU,wBACV2e,QAAS7hB,KAAKqjD,UAAUT,GACxBjyC,UAAW,EACXqxC,WAAY,CAAE,kBAAmB,aAErC,kBAACjgC,GAAA,EAAD,CACI7hB,GAAG,UACH8hB,QAAS3P,EAAE,gCACX+P,UACIpiB,KAAKqjD,UAAUT,GACTvwC,EAAE,wBACFA,EAAE,4BAIpB,yBAAKnP,UAAU,gBAAgBqN,QAAS,IAAMvQ,KAAKuiD,kBAAkB,yBACjE,kBAAC5gC,GAAA,EAAD,CACIvJ,MAAM,UACNlV,UAAU,wBACV2e,QAAS7hB,KAAKsjD,YAAYV,GAC1BjyC,UAAW,EACXqxC,WAAY,CAAE,kBAAmB,aAErC,kBAACjgC,GAAA,EAAD,CACI7hB,GAAG,UACH8hB,QAAS3P,EAAE,kBACX+P,UACIpiB,KAAKsjD,YAAYV,GAAwBvwC,EAAE,kBAAoBA,EAAE,uBAKjF,yBAAKnP,UAAU,iCACf,yBAAKA,UAAU,wBACX,kBAAC,GAAD,KAAgBmP,EAAE,wBAClB,yBAAKnP,UAAU,gBAAgBqN,QAAS,IAAMvQ,KAAKkiD,cAAc,uBAC7D,kBAACvgC,GAAA,EAAD,CACIvJ,MAAM,UACNlV,UAAU,wBACV2e,QAAS7hB,KAAKqjD,UAAUR,GACxBlyC,UAAW,EACXqxC,WAAY,CAAE,kBAAmB,aAErC,kBAACjgC,GAAA,EAAD,CACI7hB,GAAG,UACH8hB,QAAS3P,EAAE,0BACX+P,UACIpiB,KAAKqjD,UAAUR,GACTxwC,EAAE,wBACFA,EAAE,4BAIpB,yBAAKnP,UAAU,gBAAgBqN,QAAS,IAAMvQ,KAAKuiD,kBAAkB,uBACjE,kBAAC5gC,GAAA,EAAD,CACIvJ,MAAM,UACNlV,UAAU,wBACV2e,QAAS7hB,KAAKsjD,YAAYT,GAC1BlyC,UAAW,EACXqxC,WAAY,CAAE,kBAAmB,aAErC,kBAACjgC,GAAA,EAAD,CACI7hB,GAAG,UACH8hB,QAAS3P,EAAE,kBACX+P,UACIpiB,KAAKsjD,YAAYT,GAAsBxwC,EAAE,kBAAoBA,EAAE,uBAK/E,yBAAKnP,UAAU,iCACf,yBAAKA,UAAU,wBACX,kBAAC,GAAD,KAAgBmP,EAAE,0BAClB,yBAAKnP,UAAU,gBAAgBqN,QAAS,IAAMvQ,KAAKkiD,cAAc,yBAC7D,kBAACvgC,GAAA,EAAD,CACIvJ,MAAM,UACNlV,UAAU,wBACV2e,QAAS7hB,KAAKqjD,UAAUP,GACxBnyC,UAAW,EACXqxC,WAAY,CAAE,kBAAmB,aAErC,kBAACjgC,GAAA,EAAD,CACI7hB,GAAG,UACH8hB,QAAS3P,EAAE,4BACX+P,UACIpiB,KAAKqjD,UAAUP,GACTzwC,EAAE,wBACFA,EAAE,4BAIpB,yBAAKnP,UAAU,gBAAgBqN,QAAS,IAAMvQ,KAAKuiD,kBAAkB,yBACjE,kBAAC5gC,GAAA,EAAD,CACIvJ,MAAM,UACNlV,UAAU,wBACV2e,QAAS7hB,KAAKsjD,YAAYR,GAC1BnyC,UAAW,EACXqxC,WAAY,CAAE,kBAAmB,aAErC,kBAACjgC,GAAA,EAAD,CACI7hB,GAAG,UACH8hB,QAAS3P,EAAE,kBACX+P,UACIpiB,KAAKsjD,YAAYR,GAAwBzwC,EAAE,kBAAoBA,EAAE,uBAKjF,yBAAKnP,UAAU,iCACf,yBAAKA,UAAU,wBACX,kBAAC,GAAD,KAAgBmP,EAAE,uBAClB,yBAAKnP,UAAU,gBAAgBqN,QAASvQ,KAAKyiD,qBACzC,kBAAC9gC,GAAA,EAAD,CACIvJ,MAAM,UACNlV,UAAU,wBACV2e,QAAS6gC,EACT/xC,UAAW,EACXqxC,WAAY,CAAE,kBAAmB,aAErC,kBAACjgC,GAAA,EAAD,CACI7hB,GAAG,UACH8hB,QAAS3P,EAAE,iBACX+P,UAA2B/P,EAAhBqwC,EAAkB,uBAA4B,kCC1P1El/C,gBACX,uBAAG86B,UAAU,kCAAkClB,SAAS,WACpD,0BAAM35B,EAAE,ygBAEZ,Q,OC8HWwO,qBAvHf,cAAsBpQ,IAAMC,UAAW,eAAD,oBAClCC,MAAQ,CACJ6lB,aAAa,EACbrgB,KAAM,EACNE,IAAK,GAJyB,KAOlCk4B,kBAAoBt7B,IACZA,IACAA,EAAM6B,iBACN7B,EAAM4B,mBAHe,MAMjBs9C,EAAYvjD,KAAKwC,MAAjB+gD,QACR,GAAKA,IACDA,EAAQC,WAIZ,GAFwBxjD,KAAK+B,MAArB6lB,YAGJ5nB,KAAKyC,SAAS,CAAEmlB,aAAa,QAC1B,CACH,MAAMrgB,EAAOlD,EAAM4F,QACbxC,EAAMpD,EAAM6F,QAElBlK,KAAKyC,SAAS,CACVmlB,aAAa,EACbrgB,OACAE,UA5BsB,KAiClCogB,uBAAyBxjB,IACrBrE,KAAKyC,SAAS,CACVmlB,aAAa,EACbrgB,KAAM,EACNE,IAAK,KArCqB,KAyClCg8C,gBAAkBp/C,IACdrE,KAAK6nB,uBAAuBxjB,GADL,QAGUrE,KAAKwC,OAEtCkhD,EALuB,EAGfA,aAHe,EAGFH,UAKzBtgD,SAAU,MAAD,EACkBjD,KAAKwC,MAApB+gD,EADH,EACGA,QAASlxC,EADZ,EACYA,EACjB,IAAKkxC,EAAS,OAAO,KAFhB,QAI8BvjD,KAAK+B,MAAhCwF,EAJH,EAIGA,KAAME,EAJT,EAISA,IAAKmgB,EAJd,EAIcA,YAEf47B,EAUAD,EAVAC,WACAG,EASAJ,EATAI,iBACAC,EAQAL,EARAK,oBACAC,EAOAN,EAPAM,aACAC,EAMAP,EANAO,SACAC,EAKAR,EALAQ,eACAC,EAIAT,EAJAS,GACAC,EAGAV,EAHAU,OACAC,EAEAX,EAFAW,QACAC,EACAZ,EADAY,iBAEEC,GAAYZ,EAElB,OACI,oCACI,kBAACjiC,GAAA,EAAD,CAAUre,UAAU,qBAAqBse,QAAM,EAACkH,cAAe1oB,KAAK2/B,mBAChE,yBAAKz8B,UAAU,WACX,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,eAAf,UAAiCygD,EAAjC,YAAqDC,IACpDQ,GACG,yBAAKlhD,UAAU,gBAAgBgsC,YAAe,CAAElmB,KAAMm7B,MAG9D,yBAAKjhD,UAAU,qBAAf,UAAuC2gD,EAAvC,aAAwDC,EAAxD,YAAoEC,IACpE,yBAAK7gD,UAAU,qBAAf,UACQ8gD,EADR,OAEKC,GAAM,UAAOA,EAAP,MACNC,GAAO,UAAOA,MAI3B,kBAACr9B,GAAA,EAAD,CACInK,KAAMkL,EACN9K,QAAS9c,KAAK6nB,uBACdf,gBAAgB,iBAChBL,eAAgB,CAAEhf,MAAKF,QACvBwf,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QAEhB5W,YAAaQ,GAAKA,EAAE5K,mBACpB,kBAACkhB,GAAA,EAAD,CAAU5W,QAASM,GAAKA,EAAE5K,mBACtB,kBAACmhB,GAAA,EAAD,CAAU7W,QAASvQ,KAAKyjD,iBACpB,kBAAC/hC,GAAA,EAAD,KACI,kBAAC2iC,GAAD,OAEJ,kBAACtiC,GAAA,EAAD,CAAcC,QAAS3P,EAAE,sB,OC4EtC+C,OANCC,YACZic,cACArf,cACAsf,cAGWnc,CAhLf,cAA6BvT,IAAMC,UAAW,eAAD,iCACzCC,MAAQ,CACJ2a,MAAM,EACN4nC,SAAS,EACTf,QAAS,MAJ4B,KAOzCE,gBAAkBF,IACdvjD,KAAKyC,SAAS,CACVia,MAAM,EACN6mC,aAViC,KAczCgB,wBAA0B,KACtBvkD,KAAKyC,SAAS,CACV6hD,SAAS,KAhBwB,KAoBzCE,wBAA0B,KACtBxkD,KAAKyC,SAAS,CACVia,MAAM,EACN6mC,QAAS,QAvBwB,KA2BzCkB,uBA3ByC,qBA2BhB,gCAAA/xC,EAAA,0DACG,EAAKlQ,MAArBkiD,EADa,EACbA,SADa,EACHryC,EACVkxC,EAAY,EAAKxhD,MAAjBwhD,QAFa,wDAKrB,EAAK9gD,SAAS,CACVia,MAAM,EACN6mC,QAAS,OAPQ,SAUfnhD,IAAgBC,KAAK,CACvB,QAAS,mBACTsiD,WAAYpB,EAAQrjD,KAZH,OAerBwkD,EAASA,SAAWA,EAASA,SAASnpC,OAAO5a,GAAKA,EAAET,KAAOqjD,EAAQrjD,IACnE,EAAKua,cAhBgB,yCA3BgB,KA8CzCmqC,2BAA6B,KACzB5kD,KAAKyC,SAAS,CACV6hD,SAAS,KAhDwB,KAoDzCO,0BApDyC,qBAoDb,4BAAAnyC,EAAA,4DAChBgyC,EAAa,EAAKliD,MAAlBkiD,SAER,EAAKjiD,SAAS,CACV6hD,SAAS,IAJW,SAOlBliD,IAAgBC,KAAK,CACvB,QAAS,8BARW,OAWxBqiD,EAASA,SAAWA,EAASA,SAASnpC,OAAO5a,IAAMA,EAAE6iD,YACrD,EAAK/oC,cAZmB,yCAe5BxX,SAAU,MAAD,EAC4BjD,KAAKwC,MAA9B6P,EADH,EACGA,EAAGqyC,EADN,EACMA,SAAU5nC,EADhB,EACgBA,QADhB,EAEqB9c,KAAK+B,MAAvB2a,EAFH,EAEGA,KAAM4nC,EAFT,EAESA,QAERtrC,EAAU0rC,EAASA,SAAS3lC,KAAKpe,GAAKA,EAAE6iD,YACxCsB,EAAQJ,EAASA,SAASnpC,OAAO5a,IAAMA,EAAE6iD,YAE/C,OACI,oCACI,yBAAKtgD,UAAU,iBACX,kBAACgV,EAAA,EAAD,CAAYhV,UAAU,qBAAqBqN,QAASuM,GAChD,kBAAC,GAAD,OAEJ,yBAAK5Z,UAAU,qCACX,0BAAMA,UAAU,yBAAyBmP,EAAE,oBAGnD,yBAAKnP,UAAU,wBACV+mB,QAAQjR,IACL,yBAAK9V,UAAU,wBACX,kBAAC,GAAD,KAAgBmP,EAAE,mBAClB,kBAAC,GAAD,CAASkxC,QAASvqC,EAAS0qC,YAAa1jD,KAAKyjD,kBAC5CqB,EAAMpwC,OAAS,GACZ,kBAAC6M,GAAA,EAAD,CACIre,UAAU,qBACVse,QAAM,EACNM,eAAa,EACbvR,QAASvQ,KAAKukD,yBACd,kBAAC7iC,GAAA,EAAD,KACI,kBAAC2iC,GAAD,CAAUjsC,MAAM,eAEpB,kBAAC2J,GAAA,EAAD,CACIgjC,uBAAwB,CAAE3sC,MAAO,aACjC4J,QAAS3P,EAAE,4BAM9ByyC,EAAMpwC,OAAS,GACZ,oCACI,yBAAKxR,UAAU,iCACf,yBAAKA,UAAU,wBACX,kBAAC,GAAD,KAAgBmP,EAAE,kBACjByyC,EAAMzuC,IAAI1V,GACP,kBAAC,GAAD,CAAS4D,IAAK5D,EAAET,GAAIqjD,QAAS5iD,EAAG+iD,YAAa1jD,KAAKyjD,sBAMtE,kBAAC,IAAD,CACI9mC,QAASC,IACTC,mBAAoB,EACpBH,KAAMA,EACNI,QAAS9c,KAAKwkD,wBACdznC,kBAAgB,qBAChB,kBAAC,IAAD,CAAa7c,GAAG,qBAAqBmS,EAAE,YACvC,kBAAC,KAAD,KACI,kBAAC2hC,GAAA,EAAD,CAAmB1sC,MAAO,CAAEkM,WAAY,aACnCnB,EAAE,0BAGX,kBAACiL,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQhN,QAASvQ,KAAKwkD,wBAAyBpsC,MAAM,WAChD/F,EAAE,WAEP,kBAACkL,EAAA,EAAD,CAAQhN,QAASvQ,KAAKykD,uBAAwBrsC,MAAM,WAC/C/F,EAAE,SAIf,kBAAC,IAAD,CACIsK,QAASC,IACTC,mBAAoB,EACpBH,KAAM4nC,EACNxnC,QAAS9c,KAAK4kD,2BACd7nC,kBAAgB,qBAChB,kBAAC,IAAD,CAAa7c,GAAG,qBAAqBmS,EAAE,YACvC,kBAAC,KAAD,KACI,kBAAC2hC,GAAA,EAAD,CAAmB1sC,MAAO,CAAEkM,WAAY,aACnCnB,EAAE,wBAGX,kBAACiL,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQhN,QAASvQ,KAAK4kD,2BAA4BxsC,MAAM,WACnD/F,EAAE,WAEP,kBAACkL,EAAA,EAAD,CAAQhN,QAASvQ,KAAK6kD,0BAA2BzsC,MAAM,WAClD/F,EAAE,aC5KhB7O,gBACX,0BAAMC,EAAE,81BACR,W,OCiBJ,MAAMuhD,GAAcnjD,IAAMojD,KAAK,EAAG7zB,SAAQ7gB,UAAS20C,gBAAiB,MAAD,EACzBrjD,IAAMsjD,UAAS,GADU,mBACxDv9B,EADwD,KAC3Cw9B,EAD2C,OAEzCvjD,IAAMsjD,SAAS,GAF0B,mBAExD19C,EAFwD,KAEnD49C,EAFmD,OAGvCxjD,IAAMsjD,SAAS,GAHwB,mBAGxD59C,EAHwD,KAGlD+9C,EAHkD,KAIvDjzC,EAAMkzC,cAANlzC,EAmBFwV,EAAyB,KAC3Bu9B,GAAe,GACfE,EAAQ,GACRD,EAAO,IAYX,OACI,oCACI,kBAAC9jC,GAAA,EAAD,CAAUre,UAAU,qBAAqBse,QAAM,EAACjR,QAXpC,KAChBA,EAAQ6gB,IAUkE1I,cAlCpDrkB,IAMtB,GALIA,IACAA,EAAM6B,iBACN7B,EAAM4B,mBAGN2hB,EACAw9B,GAAe,OACZ,CAAC,MACIn7C,EAAqB5F,EAArB4F,QAASC,EAAY7F,EAAZ6F,QAEjBk7C,GAAe,GACfE,EAAQr7C,GACRo7C,EAAOn7C,MAsBH,kBAACinB,GAAA,EAAD,CAAMC,OAAQA,KAElB,kBAACvK,GAAA,EAAD,CACInK,KAAMkL,EACN9K,QAAS+K,EACTf,gBAAgB,iBAChBL,eAAgB,CAAEhf,MAAKF,QACvBwf,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QAEhB5W,YAAaQ,GAAKA,EAAE5K,mBACpB,kBAACkhB,GAAA,EAAD,CAAU5W,QAASM,GAAKA,EAAE5K,mBACtB,kBAACmhB,GAAA,EAAD,CAAU7W,QAzBJ,KAClBsX,IACAq9B,EAAU9zB,KAwBM,kBAAC1P,GAAA,EAAD,KACI,kBAAC8jC,GAAD,OAEJ,kBAACzjC,GAAA,EAAD,CAAcC,QAAS3P,EAAE,mBAqElCJ,qBAvDf,cAA2BpQ,IAAMC,UAAW,eAAD,oBAevC2jD,kBAfuC,sCAenB,WAAMr0B,GAAN,SAAA1e,EAAA,qDAChBgzC,aAAc,CAAE,QAAS,oBAAqB1vC,QAASob,IADvC,yCAfmB,sDAEvCpuB,oBACIhD,KAAKuV,cAGTA,cAAe,MACHoe,EAAU3zB,KAAKwC,MAAfmxB,MAEFhd,EAAQ/K,IAAUgL,WAExB+Z,YAAiBha,EAAOgd,EAAMgyB,QAAQpqC,OAAO5a,GAAoB,sBAAfA,EAAE,UAAkC0V,IAAI1V,GAAKA,EAAEqV,UACjGa,YAAiBF,EAAOgd,EAAMgyB,QAAQpqC,OAAO5a,GAAoB,sBAAfA,EAAE,UAAkC0V,IAAI1V,GAAKA,EAAEsW,UAOrGhU,SAAU,MAAD,EACyBjD,KAAKwC,MAA3Bsa,EADH,EACGA,QAAS6W,EADZ,EACYA,MAAOthB,EADnB,EACmBA,EAExB,OACI,oCACI,yBAAKnP,UAAU,iBACX,kBAACgV,EAAA,EAAD,CAAYhV,UAAU,qBAAqBqN,QAASuM,GAChD,kBAAC,GAAD,OAEJ,yBAAK5Z,UAAU,qCACX,0BAAMA,UAAU,yBAAyBmP,EAAE,mBAGnD,yBAAKnP,UAAU,wBACX,yBAAKA,UAAU,wBACTywB,EAAMgyB,QAAQjxC,OAAS,EACrB,oCACI,kBAAC,GAAD,CAAei7B,WAAS,GAAEt9B,EAAE,qBAExBshB,EAAMgyB,QAAQpqC,OAAO5a,GAAoB,sBAAfA,EAAE,UAAkC0V,IAAI1V,GAAK,kBAACqkD,GAAD,CAAazgD,IAAK5D,EAAEqV,QAASob,OAAQzwB,EAAEqV,QAASzF,QAAS6f,IAAU80B,UAAWllD,KAAKylD,sBAIlK,kBAAC,GAAD,KAAgBpzC,EAAE,oBCzI/B7O,gBACX,uBAAG86B,UAAU,iCAAiClB,SAAS,WACnD,0BAAM35B,EAAE,q3BAEZ,UCJWD,gBACX,uBAAG86B,UAAU,kCAAkClB,SAAS,WACpD,0BAAM35B,EAAE,2mCAEZ,gB,+jBC8NW2R,OANCC,YACZic,cACArf,cACAsf,cAGWnc,CAjNf,cAA8BvT,IAAMC,UAAW,eAAD,oBAC1CC,MAAQ,CACJ2iD,SAAU,KACV/wB,MAAO,KACPiyB,kBAAkB,EAClBC,oBAAoB,GALkB,KAkB1CzmC,qBAAuBhb,IAAW,MACtB4R,EAA4B5R,EAA5B4R,QAAS8vC,EAAmB1hD,EAAnB0hD,eACTnyB,EAAU3zB,KAAK+B,MAAf4xB,MACR,IAAKA,EAAO,OAHiB,MAKrB/D,EAAyB+D,EAAzB/D,YAAa+1B,EAAYhyB,EAAZgyB,QACbI,EAAeD,EAAfC,WAEJA,MADqE,IAAnDJ,EAAQvvB,UAAUz1B,GAAKA,EAAEqV,UAAYA,MAGvD+vC,EACA/lD,KAAKyC,SAAS,CACVkxB,MAAM,MACCA,EADF,CAED/D,YAAaA,EAAc,EAC3B+1B,QAAS,CAAC,CAAE,QAAS,oBAAqB3vC,cAAc2vC,OAIhE3lD,KAAKyC,SAAS,CACVkxB,MAAM,MACCA,EADF,CAED/D,YAAaA,EAAc,EAC3B+1B,QAASA,EAAQpqC,OAAO5a,GAAKA,EAAEqV,UAAYA,SAzCjB,KA2D1C6vC,mBAAqB,KACZ7lD,KAAK+B,MAAM2iD,UAEhB1kD,KAAKyC,SAAS,CACVojD,oBAAoB,KA/Dc,KAmE1CG,oBAAsB,KAClBhmD,KAAKyC,SAAS,CACVojD,oBAAoB,KArEc,KAyE1CD,iBAAmB,KACV5lD,KAAK+B,MAAM4xB,OAEhB3zB,KAAKyC,SAAS,CACVmjD,kBAAkB,KA7EgB,KAiF1CK,kBAAoB,KAChBjmD,KAAKyC,SAAS,CACVmjD,kBAAkB,KA3E1B5iD,oBACIhD,KAAKuV,cAELU,IAAUjJ,GAAG,qBAAsBhN,KAAKof,sBAG5CnS,uBACIgJ,IAAU7I,IAAI,qBAAsBpN,KAAKof,sBAgCvC7J,cAAe,IAAD,gHAChBnT,IAAgBC,KAAK,CACjB,QAAS,sBACVC,KAAKoiD,GAAY,EAAKjiD,SAAS,CAAEiiD,cAEpCtiD,IAAgBC,KAAK,CACjB,QAAS,2BACT4pB,OAAQ,EACRpW,MAAO,MACRvT,KAAKqxB,GAAS,EAAKlxB,SAAS,CAAEkxB,WATjB,2CAwCpB1wB,SAAU,MAAD,EACkBjD,KAAKwC,MAApB6P,EADH,EACGA,EAAGyK,EADN,EACMA,QADN,EAE6D9c,KAAK+B,MAA/D6jD,EAFH,EAEGA,iBAAkBjyB,EAFrB,EAEqBA,MAAOkyB,EAF5B,EAE4BA,mBAAoBnB,EAFhD,EAEgDA,SAE/CwB,EACFxB,GAAYA,EAASA,SAAShwC,OAAS,EACJ,IAA7BgwC,EAASA,SAAShwC,OACd,YADJ,UAEOgwC,EAASA,SAAShwC,OAFzB,aAGA,YAEJyxC,EACFxyB,GAASA,EAAM/D,YAAc,EACD,IAAtB+D,EAAM/D,YACF,SADJ,UAEO+D,EAAM/D,YAFb,UAGA,WAEV,OACI,oCACI,yBAAK1sB,UAAU,iBACX,kBAACgV,EAAA,EAAD,CAAYhV,UAAU,qBAAqBqN,QAASuM,GAChD,kBAAC,GAAD,OAEJ,yBAAK5Z,UAAU,qCACX,0BAAMA,UAAU,yBAAyBmP,EAAE,sBAGnD,yBAAKnP,UAAU,wBACX,yBAAKA,UAAU,wBACX,kBAACqe,GAAA,EAAD,CACIre,UAAU,sBACV+0C,UAAMC,EACN12B,QAAM,EACNjR,QAASvQ,KAAK4lD,kBACd,kBAAClkC,GAAA,EAAD,CAAcxe,UAAU,2BACpB,kBAACkjD,GAAD,OAEJ,kBAACrkC,GAAA,EAAD,CACI7hB,GAAG,UACHgD,UAAU,0BACV8e,QAAS3P,EAAE,gBACX+P,UAAW+jC,KAGnB,kBAAC5kC,GAAA,EAAD,CACIre,UAAU,sBACV+0C,UAAMC,EACN12B,QAAM,EACNjR,QAASvQ,KAAK6lD,oBACd,kBAACnkC,GAAA,EAAD,CAAcxe,UAAU,2BACpB,kBAACmjD,GAAD,OAEJ,kBAACtkC,GAAA,EAAD,CACI7hB,GAAG,UACHgD,UAAU,0BACV8e,QAAS3P,EAAE,iBACX+P,UAAW8jC,OA4C3B,kBAAC,GAAD,CAAaxpC,KAAMkpC,EAAkB9oC,QAAS9c,KAAKimD,mBAC/C,kBAAC,GAAD,CAActyB,MAAOA,KAEzB,kBAAC,GAAD,CAAajX,KAAMmpC,EAAoB/oC,QAAS9c,KAAKgmD,qBACjD,kBAAC,GAAD,CAAgBtB,SAAUA,S,OCZ/BtvC,OANCC,YACZic,cACArf,cACAsf,cAGWnc,CApLf,cAAuBvT,IAAMC,UACzBlC,YAAY4C,GACR0B,MAAM1B,GADS,KAuBnB8jD,kBAAoBliD,IAAW,MACnB8N,EAAWlS,KAAKwC,MAAhB0P,OACA+E,EAAmB7S,EAAnB6S,QAASwB,EAAUrU,EAAVqU,MAEjB,GAAIxB,IAAY/E,EAAQ,OACxB,IAAKuG,EAAO,OAEZ,MAAM9B,EAAQ/K,IAAUC,MACxB+qC,YAAgBjgC,EAAOzE,GAAQ,IA/BhB,KAiDnBq0C,gBAAkB,KACdvmD,KAAKyC,SAAS,CACV8jD,iBAAiB,KAnDN,KAuDnBC,iBAAmB,KACfxmD,KAAKyC,SAAS,CACV8jD,iBAAiB,KAzDN,KA6DnBE,YAAc,KACVzmD,KAAKyC,SAAS,CACVgkD,aAAa,KA/DF,KAmEnBC,aAAe,KACX1mD,KAAKyC,SAAS,CACVgkD,aAAa,KArEF,KAyEnBE,kBAAoB,KAChB3mD,KAAKyC,SAAS,CACVkkD,mBAAmB,KA3ER,KA+EnBC,mBAAqB,KACjB5mD,KAAKyC,SAAS,CACVkkD,mBAAmB,KAjFR,KAqFnBE,oBAAsB,KAClB7mD,KAAKyC,SAAS,CACVokD,qBAAqB,KAvFV,KA2FnBC,qBAAuB,KACnB9mD,KAAKyC,SAAS,CACVokD,qBAAqB,KA7FV,KAiGnBE,aAAe,KACX/mD,KAAKyC,SAAS,CACVskD,cAAc,KAnGH,KAuGnBC,cAAgB,KACZhnD,KAAKyC,SAAS,CACVskD,cAAc,KAzGH,KA6GnBE,YAAc,KACVjnD,KAAKyC,SAAS,CACVwkD,aAAa,KA/GF,KAmHnBC,aAAe,KACXlnD,KAAKyC,SAAS,CACVwkD,aAAa,KArHF,KAyHnBE,oBAAsB,KAClB/kD,IAAgBkG,aAAa,CACzB,QAAS,uBACToU,MAAM,KAzHV1c,KAAK+B,MAAQ,CACTwkD,iBAAiB,EACjBE,aAAa,EACbE,mBAAmB,EACnBE,qBAAqB,EACrBE,cAAc,EACdE,aAAa,GAIrBjkD,oBACIhD,KAAKuV,cAELwI,KAAU/Q,GAAG,kBAAmBhN,KAAKsmD,mBAGzCr5C,uBACI8Q,KAAU3Q,IAAI,kBAAmBpN,KAAKsmD,mBAcpC/wC,cAAe,IAAD,iIACRrD,EAAW,EAAK1P,MAAhB0P,OAEFyE,EAAQ/K,IAAUgL,WAExBggC,YAAgBjgC,EAAOzE,GAAQ,GALf,SAOK9P,IAAgBC,KAAK,CACtC,QAAS,kBACT2T,QAASC,IAAUC,YATP,OAOV3T,EAPU,OAYhB0T,IAAUmxC,YAAYnxC,IAAUC,UAAW3T,GAZ3B,2CA8FpBU,SAAU,MAAD,EACqBjD,KAAKwC,MAAvB0P,EADH,EACGA,OAAQie,EADX,EACWA,MADX,EAEuGnwB,KAAK+B,MAAzGwkD,EAFH,EAEGA,gBAAiBE,EAFpB,EAEoBA,YAAaE,EAFjC,EAEiCA,kBAAmBE,EAFpD,EAEoDA,oBAAqBE,EAFzE,EAEyEA,aAAcE,EAFvF,EAEuFA,YAE5F,OACI,oCACI,kBAAC,GAAD,CACI/0C,OAAQA,EACRie,MAAOA,EACPrT,QAAS9c,KAAKmnD,oBACdlT,cAAej0C,KAAKumD,gBACpBrS,UAAWl0C,KAAKymD,YAChBtS,gBAAiBn0C,KAAK2mD,kBACtBvS,kBAAmBp0C,KAAK6mD,oBACxBxS,WAAYr0C,KAAK+mD,aACjBzS,UAAWt0C,KAAKinD,cAEpB,kBAAC,GAAD,CAAavqC,KAAM6pC,EAAiBzpC,QAAS9c,KAAKwmD,kBAC9C,kBAAC,GAAD,CAAat0C,OAAQA,KAEzB,kBAAC,GAAD,CAAawK,KAAM+pC,EAAa3pC,QAAS9c,KAAK0mD,cAC1C,kBAAC,GAAD,CAASx0C,OAAQA,KAErB,kBAAC,GAAD,CAAawK,KAAMiqC,EAAmB7pC,QAAS9c,KAAK4mD,oBAChD,kBAAC,GAAD,CAAe10C,OAAQA,KAE3B,kBAAC,GAAD,CAAawK,KAAMmqC,EAAqB/pC,QAAS9c,KAAK8mD,sBAClD,kBAAC,GAAD,OAEJ,kBAAC,GAAD,CAAapqC,KAAMuqC,EAAanqC,QAAS9c,KAAKknD,cAC1C,kBAAC,GAAD,OAEJ,kBAAC,GAAD,CAAaxqC,KAAMqqC,EAAcjqC,QAAS9c,KAAKgnD,eAC3C,kBAAC,GAAD,W,OCnKpB,MAAMK,WAAqBxlD,IAAMC,UAC7B8b,sBAAsBC,EAAWC,EAAWoK,GAAc,MAAD,EAC3BloB,KAAKwC,MAAvB4uB,EAD6C,EAC7CA,OAAQ9pB,EADqC,EACrCA,MAChB,OAAIuW,EAAUuT,SAAWA,GAIrBvT,EAAUvW,MAAMG,MAAQH,EAAMG,IAOtCxE,SAAU,MAAD,EAC8BjD,KAAKwC,MAAhC4uB,EADH,EACGA,OAAQ7gB,EADX,EACWA,QAASjJ,EADpB,EACoBA,MAEzB,OACI,kBAACia,GAAA,EAAD,CAAUre,UAAU,iBAAiBqN,QAAS,IAAMA,EAAQ6gB,GAAS5P,QAAM,EAACla,MAAOA,GAC/E,kBAAC6pB,GAAA,EAAD,CAAMC,OAAQA,MA4Kfk2B,OAtKf,cAAuBzlD,IAAMC,UACzBlC,YAAY4C,GAAQ,IAAD,EACf0B,MAAM1B,GADS,YAyBnBqsB,aAAexqB,IACXrE,KAAKunD,uBACLvnD,KAAKwnD,wBA3BU,KAsCnBC,qBAAuB,KAAO,MAAD,EACMznD,KAAK+B,MAA5BurB,EADiB,EACjBA,MAAOwJ,EADU,EACVA,YAET4wB,EAAe5wB,GAAexJ,EAE5BtU,GAAY0uC,IAAiB5wB,EAAc92B,KAAK02B,cAAgB12B,KAAK0tB,SAArE1U,QACR,IAAKA,EAAS,OAEd,MAAM+U,EAAY/U,EAAQkqB,mBAC1B,GAAInV,EAAUjU,KAAO,EAAG,CACpB,MAAM6tC,EAAU,GAChB,IAAI55B,EAAUyjB,QAAQpwC,QAAQmD,IAC1BojD,EAAQ7xC,KAAK4xC,EAAa5hB,SAASvhC,MAGvC,MAAMoS,EAAQ/K,IAAUgL,WACxB+Z,YAAiBha,EAAOgxC,KAtDb,KA4EnBr1B,eAAiBlB,IACbhB,YAASgB,GAAQ,GACjBpxB,KAAK+E,eA9EU,KAiFnBq+B,WAAa,EAAGzf,QAAOrc,SAASgmB,KAC5B,MAAM8D,EAAS9D,EAAMwY,SAASniB,GAE9B,OAAO,kBAAC,GAAD,CAAcpf,IAAK6sB,EAAQA,OAAQA,EAAQ7gB,QAAS,IAAMvQ,KAAKsyB,eAAelB,GAAS9pB,MAAOA,KApFtF,KAuFnB0tB,aAvFmB,sCAuFJ,WAAM3nB,GAAN,mBAAAqF,EAAA,wDACLgJ,EAAQrO,EAAK0N,OADR,uBAGP,EAAKtY,SAAS,CACVq0B,YAAa,OAJV,0CASe10B,IAAgBC,KAAK,CAC3C,QAAS,iBACTqZ,QACA7F,MAAO,MAZA,QASLihB,EATK,QAcCgP,SAAWhP,EAAYgP,SAAShS,KAAK,CAACnzB,EAAGozB,IACjD6zB,aAAgBjnD,GAAGknD,cAAcD,aAAgB7zB,KAG/Cpd,EAAQ/K,IAAUgL,WACxB+Z,YAAiBha,EAAOmgB,EAAYgP,SAAS1X,MAAM,EAAG,KAEtD,EAAK3rB,SAAS,CAAEq0B,gBArBL,0CAvFI,2DA+GnB/xB,YAAc,KACV3C,IAAgBkG,aAAa,CACzB,QAAS,uBACToU,MAAM,KA/GV1c,KAAKi1B,eAAiBpzB,IAAMya,YAC5Btc,KAAK0tB,QAAU7rB,IAAMya,YACrBtc,KAAK02B,cAAgB70B,IAAMya,YAE3Btc,KAAK+B,MAAQ,CACTurB,MAAO,KACPwJ,YAAa,MAGjB92B,KAAKunD,qBAAuBnmC,YAASphB,KAAKunD,qBAAsB,KAAK,GACrEvnD,KAAKwnD,qBAAuBjiC,YAASvlB,KAAKwnD,qBAAsB,KAAK,GAGzExkD,oBAAqB,MACTgW,EAAYhZ,KAAKi1B,eAAjBjc,QACJA,GACAhO,WAAW,IAAMgO,EAAQ1P,QAAS,IAGtCtJ,KAAKuV,cAQTgyC,uBACIvnD,KAAKynD,uBAGTD,uBACIxnD,KAAKynD,uBAuBHlyC,cAAe,IAAD,2HACZ4vB,EAAWuD,GAAWvD,SADV,gCAGK/iC,IAAgBC,KAAK,CAClC,QAAS,gBAJD,QAGZ8iC,EAHY,QAMHW,SAAWX,EAASW,SAAShS,KAAK,CAACnzB,EAAGozB,IAAM6zB,aAAgBjnD,GAAGknD,cAAcD,aAAgB7zB,KACtG2U,GAAWvD,SAAWA,EAPV,OAUVxuB,EAAQ/K,IAAUgL,WACxB+Z,YAAiBha,EAAOwuB,EAASW,SAAS1X,MAAM,EAAG,KAEnD,EAAK3rB,SAAS,CACV6qB,MAAO6X,IAdK,4CA4DpBliC,SAAU,MACEktB,EAAUnwB,KAAKwC,MAAf2tB,MADH,EAE0BnwB,KAAK+B,MAA5BurB,EAFH,EAEGA,MAAOwJ,EAFV,EAEUA,YAETxvB,EAAQ6oB,EAAQ,CAAE4E,UAAW,KAAQ,KAE3C,OACI,oCACI,yBAAK7xB,UAAU,iBACX,kBAACgV,EAAA,EAAD,CAAYhV,UAAU,qBAAqBqN,QAASvQ,KAAK+E,aACnDorB,EAAQ,kBAACrf,EAAA,EAAD,MAAe,kBAAC,GAAD,OAE7B,kBAAC,GAAD,CAAak5B,SAAUhqC,KAAKi1B,eAAgBvjB,SAAU1R,KAAKg1B,gBAE/D,yBAAK9xB,UAAU,mBAAmBoE,MAAOA,GACpCgmB,GACG,kBAAC,GAAD,CACIrQ,IAAKjd,KAAK0tB,QACVxqB,UAAU,gBACVG,OAAQiqB,EAAMwY,SACdxX,UAAW,GACXlB,cAAe,GACfgW,WAAYziC,GAAKX,KAAKojC,WAAWziC,EAAG2sB,GACpCgH,SAAUt0B,KAAK6uB,eAGtBiI,GACG,kBAAC,GAAD,CACI7Z,IAAKjd,KAAK02B,cACVxzB,UAAU,qCACVG,OAAQyzB,EAAYgP,SACpBxX,UAAW,GACXlB,cAAe,GACfgW,WAAYziC,GAAKX,KAAKojC,WAAWziC,EAAGm2B,GACpCxC,SAAUt0B,KAAK6uB,mB,gBCpI5B5c,qBAzDf,cAA0BpQ,IAAMC,UAC5BlC,YAAY4C,GACR0B,MAAM1B,GADS,KAqBnBo2B,wBAA0Bx0B,IAAW,MACzB4f,EAAiB5f,EAAjB4f,aAERhkB,KAAKyC,SAAS,CAAEuhB,kBAxBD,KA2BnB8jC,kCAAoC,KAChC9nD,KAAKyC,SAAS,CAAEslD,qBAAqB,KA5BtB,KA+BnBC,aAAe,KACPhoD,KAAK8E,UAET9E,KAAK8E,SAAU,EACfkG,WAAW,KACP8B,OAAOm7C,SAASC,UACjB,OArCY,MAGPlkC,EAAiB7K,KAAjB6K,aAERhkB,KAAK+B,MAAQ,CACTgmD,qBAAqB,EACrB/jC,gBAIRhhB,oBACImW,KAASnM,GAAG,kCAAmChN,KAAK8nD,mCACpD3uC,KAASnM,GAAG,wBAAyBhN,KAAK44B,yBAG9C3rB,uBACIkM,KAAS/L,IAAI,kCAAmCpN,KAAK8nD,mCACrD3uC,KAAS/L,IAAI,wBAAyBpN,KAAK44B,yBAsB/C31B,SAAU,MAAD,EACyCjD,KAAK+B,MAA3CgmD,EADH,EACGA,oBAAqB/jC,EADxB,EACwBA,aACrB3R,EAAMrS,KAAKwC,MAAX6P,EAER,OAAK01C,EAKD,kBAACxqC,EAAA,EAAD,CAAQra,UAAU,gBAAgBgf,QAAQ,YAAY9J,MAAM,UAAU7H,QAASvQ,KAAKgoD,cAC/EhkC,EAAe,kBAACmkC,GAAA,EAAD,MAAkB91C,EAAE,WALjC,Q,cCyGJJ,qBAhJf,cAAyBpQ,IAAMC,UAC3BlC,YAAY4C,GAAQ,IAAD,EACf0B,MAAM1B,GADS,YAcnBuC,YAAc,KACV3C,IAAgBkG,aAAa,CACzB,QAAS,yBACToU,MAAM,KAjBK,KAqBnBk3B,WArBmB,qBAqBN,wCAAAlhC,EAAA,wDACDK,EAAU,EAAKhR,MAAfgR,MADC,EAEkC,EAAKhR,MAAxCqmD,EAFC,EAEDA,aAAcC,EAFb,EAEaA,iBAEhBlqC,EAAQ,EAAK09B,SAAS7iC,QAAQzO,MAAMwQ,OAJjC,uBAML,EAAKtY,SAAS,CACVsQ,OAAO,IAPN,iCAYLA,GACA,EAAKtQ,SAAS,CACVsQ,OAAO,IAIf,EAAKhO,cAECqmB,EAAc,EAAKk9B,eAAetvC,QAAQzO,MApBvC,UAsBUnI,IAAgBC,KAAK,CACpC,QAAS,0BACT8b,QACAiN,cACAm9B,YAAY,EACZN,SAAU,OA3BL,QAsBH1pC,EAtBG,OA8BL8pC,EACAjmD,IAAgBC,KAAK,CACjB,QAAS,eACT4U,QAASsH,EAAKre,GACduY,MAAO,CAAE,QAAS,cAAevY,GAAImoD,EAAiBnoD,MAEnDkoD,GACPhmD,IAAgBC,KAAK,CACjB,QAAS,eACT4U,QAASsH,EAAKre,GACduY,MAAO,CAAE,QAAS,gBAAiBk+B,KAAM,YAAatuB,KAAM+/B,KAIpEhiC,YAAS7H,EAAKre,IA5CL,0CArBM,KAoEnBw2C,kBApEmB,sCAoEC,WAAO5P,EAAMkO,GAAb,eAAAtiC,EAAA,4DAChB,EAAKjQ,SAAS,CACV2lD,aAActhB,EACd0hB,gBAAiBxT,IAHL,SAMK5yC,IAAgBC,KAAK,CACtC,QAAS,aACTsJ,KAAM,CACF,QAAS,gBACTgrC,KAAM,YACNtuB,KAAMye,GAEV2hB,UAAW,CAAE,QAAS,iBACtBC,SAAUC,OAdE,OAMVpmD,EANU,OAiBhB,EAAKE,SAAS,CACV4lD,iBAAkB9lD,IAlBN,yCApED,wDAGfvC,KAAK67C,SAAWh6C,IAAMya,YACtBtc,KAAKsoD,eAAiBzmD,IAAMya,YAE5Btc,KAAK+B,MAAQ,CACTgR,OAAO,EACPq1C,aAAc,KACdI,gBAAiB,KACjBH,iBAAkB,MAgF1BplD,SAAU,MAAD,EACgBjD,KAAKwC,MAAlB2tB,EADH,EACGA,MAAO9d,EADV,EACUA,EACPU,EAAU/S,KAAK+B,MAAfgR,MAER,OACI,oCACI,yBAAK7P,UAAU,iBACX,kBAACgV,EAAA,EAAD,CAAYhV,UAAU,qBAAqBqN,QAASvQ,KAAK+E,aACnDorB,EAAQ,kBAACrf,EAAA,EAAD,MAAe,kBAAC,GAAD,OAE7B,yBAAK5N,UAAU,qCACX,0BAAMA,UAAU,yBAAyBmP,EAAE,iBAGnD,yBAAKnP,UAAU,wBACX,yBAAKA,UAAU,oBACX,kBAAC,GAAD,CAAcgyC,SAAUl1C,KAAK02C,oBAC7B,yBAAKxzC,UAAU,kBACX,kBAAC60C,GAAA,EAAD,CACI/N,SAAUhqC,KAAK67C,SACf9oC,MAAOA,EACP7P,UAAU,iBACVgf,QAAQ,WACRkW,WAAS,EACTE,MAAOjmB,EAAE,oBACT2lC,aAAc,KAElB,kBAACD,GAAA,EAAD,CACI/N,SAAUhqC,KAAKsoD,eACfplD,UAAU,iBACVgf,QAAQ,WACRkW,WAAS,EACTE,MAAOjmB,EAAE,kCACT2lC,aAAc,KAElB,yBAAK90C,UAAU,qBAAqBmP,EAAE,uBAKlD,yBAAKnP,UAAU,yBAAyBqN,QAASvQ,KAAK4zC,YAClD,kBAAC,GAAD,W,OC5FLgV,OA9Cf,cAAuB/mD,IAAMC,UACzBlC,YAAY4C,GACR0B,MAAM1B,GAENxC,KAAKs4C,OAASz2C,IAAMya,YAGxB41B,YAAa,MAAD,EAMJlyC,KAAKs4C,OAAOt/B,QAEhB,MAAO,CAAEzR,KARD,EAEJgd,WAMW9c,IARP,EAGJkmB,UAKgB1c,MARZ,EAIJoU,YAIuBtL,OARnB,EAKJ+T,cAMRyqB,gBAAgBlrC,GACZ,MAAMmrC,EAAMx4C,KAAKs4C,OAAOt/B,QACnBw/B,IAELA,EAAIlxC,MAAM2d,QAAU5X,GAGxBpK,SAAU,MAAD,EACiCjD,KAAKwC,MAAnC4uB,EADH,EACGA,OAAQjf,EADX,EACWA,SAAU5B,EADrB,EACqBA,QAE1B,OACI,yBAAK0M,IAAKjd,KAAKs4C,OAAQp1C,UAAWkN,IAAW,OAAQ,CAAE,gBAAiB+B,IAAa5B,QAASA,GAC1F,kBAACi/B,GAAA,EAAD,CAAUpe,OAAQA,EAAQiV,OAAO,IACjC,yBAAKnjC,UAAU,eACX,kBAAC4N,EAAA,EAAD,CAAW5N,UAAU,sBAEzB,yBAAKA,UAAU,aAAa2lD,aAAiBz3B,OCpB7D,MAAMi2B,WAAqBxlD,IAAMC,UAC7B8b,sBAAsBC,EAAWC,EAAWoK,GAAc,MAAD,EACjBloB,KAAKwC,MAAjC4uB,EAD6C,EAC7CA,OAAQjf,EADqC,EACrCA,SAAU7K,EAD2B,EAC3BA,MAC1B,OAAIuW,EAAUuT,SAAWA,IAIrBvT,EAAU1L,WAAaA,GAIvB0L,EAAUvW,MAAMG,MAAQH,EAAMG,KAOtCxE,SAAU,MAAD,EACwCjD,KAAKwC,MAA1C4uB,EADH,EACGA,OAAQjf,EADX,EACWA,SAAU5B,EADrB,EACqBA,QAASjJ,EAD9B,EAC8BA,MAEnC,OACI,kBAACia,GAAA,EAAD,CAAUre,UAAU,iBAAiBqN,QAAS,IAAMA,EAAQ6gB,GAAS5P,QAAM,EAACla,MAAOA,GAC/E,kBAACqa,GAAA,EAAD,CAAUze,UAAU,0BAA0B2e,QAAS1P,EAAUiG,MAAM,YACvE,kBAAC+Y,GAAA,EAAD,CAAMC,OAAQA,MA2Zfhc,OANCC,YACZic,cACArf,cACAsf,cAGWnc,CArZf,cAA8BvT,IAAMC,UAChClC,YAAY4C,GAAQ,IAAD,EACf0B,MAAM1B,GADS,YAqCnBqsB,aAAexqB,IACXrE,KAAKunD,uBACLvnD,KAAKwnD,wBAvCU,KAkDnBC,qBAAuB,KAAO,MAAD,EACMznD,KAAK+B,MAA5BurB,EADiB,EACjBA,MAAOwJ,EADU,EACVA,YAET4wB,EAAe5wB,GAAexJ,EAE5BtU,GAAY0uC,IAAiB5wB,EAAc92B,KAAK02B,cAAgB12B,KAAK0tB,SAArE1U,QACR,IAAKA,EAAS,OAEd,MAAM+U,EAAY/U,EAAQkqB,mBAC1B,GAAInV,EAAUjU,KAAO,EAAG,CACpB,MAAM6tC,EAAU,GAChB,IAAI55B,EAAUyjB,QAAQpwC,QAAQmD,IAC1BojD,EAAQ7xC,KAAK4xC,EAAa5hB,SAASvhC,MAGvC,MAAMoS,EAAQ/K,IAAUgL,WACxB+Z,YAAiBha,EAAOgxC,KAlEb,KAwFnBr1B,eAAiBlB,IAAW,MAAD,EACgBpxB,KAAK+B,MAApC+mD,EADe,EACfA,cAAehQ,EADA,EACAA,YACfziC,EAAeyyC,EAAfzyC,IAAK0yC,EAAUD,EAAVC,MAEPC,EAAS,IAAIl0C,IAAIuB,GACvB,IAAI4yC,EACAC,EAAiB,KACjBnP,GAAa,EACb1jC,EAAIpB,IAAImc,IACR43B,EAAOzuC,OAAO6W,GACd63B,EAAWF,EAAMxtC,OAAO5a,GAAKA,IAAMywB,GACnC83B,EAAiBpQ,IAAgB1nB,EAAS,KAAO0nB,EACjDiB,GAAa,IAEbiP,EAAOxuC,IAAI4W,EAAQA,GACnB63B,EAAWF,EAAMztC,OAAO,CAAC8V,IACzB83B,EAAiB,MAGrB,MAAMz0C,EAAQzU,KAAKi1B,eAAejc,QAClCvE,EAAMnL,QACDywC,IACDtlC,EAAMiG,UAAY,GAClB1a,KAAKg1B,aAAa,KAGtB,MAAMglB,EAAYh6C,KAAK05C,aAAa1gC,QAC9BihC,EAAaD,EAAUlnB,aACvBonB,EAAmBF,EAAUlsB,aAE7BssB,EAAU,IAAItlC,IA9BG,2BA+BvB,YAAgB9U,KAAK25C,SAASnI,OAA9B,+CAAsC,CAAC,IAA9BjtC,EAA6B,QAClC,MAAM6uB,EAAKpzB,KAAK25C,SAAS9tC,IAAItH,GAC7B,GAAI6uB,EAAI,CACJ,MAAMnH,EAASmH,EAAG8e,YAClBkI,EAAQ5/B,IAAIjW,EAAK0nB,KAnCF,kFAuCvB,MAAMkuB,EAAcH,EAAU1yC,MAAM2d,QAC9BiK,EAAgB8qB,EAAUxsB,UAC5BusB,IACAC,EAAU1yC,MAAM2d,QAAU,MAG9BjlB,KAAKyC,SAAS,CACVq2C,YAAaoQ,EACbJ,cAAe,CACXC,MAAOE,EACP5yC,IAAK2yC,IAEV,KACChpD,KAAKs6C,aAAaP,EAAYE,EAAYC,EAAkBhrB,EAAeirB,GAC3En6C,KAAK06C,aAAaN,MA7IP,KAoPnBhX,WAAa,EAAGzf,QAAOrc,SAASgmB,EAAO67B,KACnC,MAAM/3B,EAAS9D,EAAM3J,GACfie,EAAaunB,EAAiBl0C,IAAImc,GAExC,OAAO,kBAAC,GAAD,CAAc7sB,IAAK6sB,EAAQA,OAAQA,EAAQjf,SAAUyvB,EAAYrxB,QAAS,IAAMvQ,KAAKsyB,eAAelB,GAAS9pB,MAAOA,KAxP5G,KA2PnB0tB,aA3PmB,sCA2PJ,WAAM3nB,GAAN,6BAAAqF,EAAA,wDACLgJ,EAAQrO,EAAK0N,OADR,uBAGP,EAAKtY,SAAS,CACVq0B,YAAa,KACbsyB,YAAa,KACbtQ,YAAa,OANV,iCAWLrjC,EAAW,IACRK,KACL1T,IAAgBC,KAAK,CACjB,QAAS,iBACTqZ,QACA7F,MAAO,MAGfJ,EAASK,KACL1T,IAAgBC,KAAK,CACjB,QAAS,oBACTqZ,WAtBG,SAyB8BtF,QAAQ/C,IAAIoC,GAzB1C,mCAyBJqhB,EAzBI,KAyBSuyB,EAzBT,KA2BXvyB,EAAYgP,SAAWhP,EAAYgP,SAAShS,KAAK,CAACnzB,EAAGozB,IACjD6zB,aAAgBjnD,GAAGknD,cAAcD,aAAgB7zB,KAG/Cq1B,EAAc,CAAE,QAAS,QAAStjB,SAAU,IAClDujB,EAAY3yC,SAAS8pB,OAAO,CAACuoB,EAAO72C,KAChC,MAAMqM,EAAOR,KAAUlS,IAAIqG,GAI3B,OAHIqM,GAA+B,oBAAvBA,EAAKC,KAAK,UAClBuqC,EAAMjzC,KAAKyI,EAAKC,KAAKxI,SAElB+yC,GACRK,EAAYtjB,UAETnvB,EAAQ/K,IAAUgL,WACxB+Z,YAAiBha,EAAOmgB,EAAYgP,UACpCnV,YAAiBha,EAAOyyC,EAAYtjB,UAEpC,EAAKrjC,SAAS,CAAEq0B,cAAasyB,cAAatQ,YAAa,OA5C5C,0CA3PI,2DA0SnB/zC,YAAc,KACV3C,IAAgBkG,aAAa,CACzB,QAAS,uBACToU,MAAM,KA7SK,KAiTnBu+B,kBAAoB52C,IAAU,MAAD,EACcrE,KAAK+B,MAApC+mD,EADiB,EACjBA,cAAehQ,EADE,EACFA,YAClBgQ,GAEWA,EAARzyC,IACCpB,IAAI6jC,KAEbz0C,EAAM4B,kBACN5B,EAAMmF,YAAYqgC,2BAElB7pC,KAAKyC,SAAS,CACVq2C,YAAa,SA5TF,KAgUnBD,gBAAkB,KAAO,MAAD,EACmB74C,KAAK+B,MAApC+mD,EADY,EACZA,cAAehQ,EADH,EACGA,YACvB,IAAKgQ,EAAe,OAFA,MAIZC,EAAeD,EAAfC,MAAO1yC,EAAQyyC,EAARzyC,IACf,IAAK0yC,EAAO,OACZ,IAAKA,EAAMr0C,OAAQ,OAEnB,GAAI2B,EAAIpB,IAAI6jC,GAER,YADA94C,KAAKsyB,eAAewmB,GAIxB,MAAMO,EAAW0P,EAAMA,EAAMr0C,OAAS,GACjC2kC,GAELr5C,KAAKyC,SAAS,CACVq2C,YAAaO,KA9UjBr5C,KAAK67C,SAAWh6C,IAAMya,YACtBtc,KAAKi1B,eAAiBpzB,IAAMya,YAC5Btc,KAAK0tB,QAAU7rB,IAAMya,YACrBtc,KAAK02B,cAAgB70B,IAAMya,YAC3Btc,KAAK05C,aAAe73C,IAAMya,YAC1Btc,KAAK25C,SAAW,IAAI7kC,IAEpB9U,KAAK+B,MAAQ,CACTurB,MAAO,KACPwJ,YAAa,KACbgyB,cAAe,CACXC,MAAO,GACP1yC,IAAK,IAAIvB,KAEbgkC,YAAa,MAGjB94C,KAAKunD,qBAAuBnmC,YAASphB,KAAKunD,qBAAsB,KAAK,GACrEvnD,KAAKwnD,qBAAuBjiC,YAASvlB,KAAKwnD,qBAAsB,KAAK,GAGzE8B,aACI,OAAOtpD,KAAK+B,MAAM+mD,cAAcC,MAGpC/lD,oBAAqB,MACTgW,EAAYhZ,KAAKi1B,eAAjBjc,QACJA,GACAhO,WAAW,IAAMgO,EAAQ1P,QAAS,IAGtCtJ,KAAKuV,cAQTgyC,uBACIvnD,KAAKynD,uBAGTD,uBACIxnD,KAAKynD,uBAuBHlyC,cAAe,IAAD,2HACZ4vB,EAAWuD,GAAWvD,SADV,gCAGK/iC,IAAgBC,KAAK,CAClC,QAAS,gBAJD,QAGZ8iC,EAHY,QAMHW,SAAWX,EAASW,SAAShS,KAAK,CAACnzB,EAAGozB,IAAM6zB,aAAgBjnD,GAAGknD,cAAcD,aAAgB7zB,KACtG2U,GAAWvD,SAAWA,EAPV,OAUVxuB,EAAQ/K,IAAUgL,WACxB+Z,YAAiBha,EAAOwuB,EAASW,SAAS1X,MAAM,EAAG,KAEnD,EAAK3rB,SAAS,CACV6qB,MAAO6X,IAdK,4CA2EpBmV,aAAaP,EAAYE,EAAYC,EAAkBhrB,EAAeirB,GAClE,MAAMH,EAAYh6C,KAAK05C,aAAa1gC,QAE9BuhC,EAAgBP,EAAUlnB,aAI1B0nB,GAHsBR,EAAUlsB,aAGpBysB,EAAgBN,GADjBM,EAAgBN,EAKzBA,EAFU,KAGVD,EAAU1yC,MAAM2d,QAAhB,sBAAyClkB,KAAKC,IAAIi5C,EAHxC,KAGV,OACA95C,sBAAsB,KAClB65C,EAAU1yC,MAAM2d,QAAhB,sBAAyClkB,KAAKC,IAAIu5C,EAL5C,KAKN,OACAvvC,WAAW,KACPhL,KAAKi1B,eAAejc,QAAQyhC,eAAe,CAAE7nB,SAAU,UACxD,SAGPonB,EAAU1yC,MAAM2d,QAAhB,sBAXU,IAWV,OACAjlB,KAAKi1B,eAAejc,QAAQyhC,eAAe,CAAE7nB,SAAU,YAEpD4nB,EACHD,EAfU,KAgBVP,EAAU1yC,MAAM2d,QAAhB,sBAAyClkB,KAAKC,IAAIk5C,EAhBxC,KAgBV,OACA/5C,sBAAsB,KAClB65C,EAAU1yC,MAAM2d,QAAhB,sBAAyClkB,KAAKC,IAAIu5C,EAlB5C,KAkBN,WAGJP,EAAU1yC,MAAM2d,QAAhB,sBArBU,IAqBV,OACA+0B,EAAUxsB,UAAY0B,GAGtB6qB,GACAC,EAAU1yC,MAAM2d,QAAUk1B,EAC1BH,EAAUxsB,UAAY0B,GAEtBlvB,KAAKi1B,eAAejc,QAAQyhC,eAAe,CAAE7nB,SAAU,WAKnE8nB,aAAaC,GACT,MAAMC,EAAkB,IAAI9lC,IADN,2BAEtB,YAAgB9U,KAAK25C,SAASnI,OAA9B,+CAAsC,CAAC,IAA9BjtC,EAA6B,QAClC,MAAM6uB,EAAKpzB,KAAK25C,SAAS9tC,IAAItH,GAC7B,GAAI6uB,EAAI,CACJ,MAAMynB,EAAgBznB,EAAG8e,YACnB4I,EAAaH,EAAY1lC,IAAI1Q,GAAOo2C,EAAY9uC,IAAItH,GAAO,KACjE,GAAIu2C,EAAY,CACRA,EAAWvzC,KAAOszC,EAActzC,MAChCqzC,EAAgBpgC,IAAI4Y,EAAI,CAAE0nB,aAAYD,kBAG1C,MAAMvc,EAAS,+BAA2Bwc,EAAWvzC,KAAOszC,EAActzC,KAA3D,eAAsEuzC,EAAWrzC,IAAMozC,EAAcpzC,IAArG,OACf2rB,EAAGmlB,gBAAgBja,MAbT,kFAkBtBn+B,sBAAsB,KAAO,IAAD,uBACxB,YAAgBH,KAAK25C,SAASnI,OAA9B,+CAAsC,CAAC,IAA9BjtC,EAA6B,QAClC,MAAM6uB,EAAKpzB,KAAK25C,SAAS9tC,IAAItH,GAC7B,GAAI6uB,EAAI,CACJ,IAAIrP,EAAU,mCACd,GAAI62B,EAAgB3lC,IAAIme,GAAK,CAAC,MAAD,EACawnB,EAAgB/uC,IAAIunB,GAAlD0nB,EADiB,EACjBA,WAAYD,EADK,EACLA,cACpB92B,EAAa,+BAAwB+2B,EAAWvzC,KAAOszC,EAActzC,KAAOuzC,EAAW7pC,MAA1E,eAAsF6pC,EAAWrzC,IAAMozC,EAAcpzC,IAArH,QACA,mCAGjB2rB,EAAGmlB,gBAAgBx0B,KAXH,kFAenB62B,EAAgB9gC,MAErB9O,WAAW,KAAO,IAAD,uBACb,YAAe4vC,EAAgBpJ,OAA/B,+CAAuC,CAAC,IAA/Bpe,EAA8B,cAC3BynB,EAAkBD,EAAgB/uC,IAAIunB,GAAtCynB,cACF92B,EAAa,+BAAwB82B,EAAc5pC,MAAtC,WACA,iCAEnBmiB,EAAGmlB,gBAAgBx0B,IANV,kFASb5jB,sBAAsB,KAAO,IAAD,uBACxB,YAAey6C,EAAgBpJ,OAA/B,+CAAuC,CAAC,IAA/Bpe,EAA8B,QACnC,MAAMrP,EAAa,mCAEnBqP,EAAGmlB,gBAAgBx0B,IAJC,sFAQ7B,OAqGX9gB,SAAU,MAAD,EACgBjD,KAAKwC,MAAlB2tB,EADH,EACGA,MAAO9d,EADV,EACUA,EADV,EAEmErS,KAAK+B,MAArEurB,EAFH,EAEGA,MAAOwJ,EAFV,EAEUA,YAAasyB,EAFvB,EAEuBA,YAAaN,EAFpC,EAEoCA,cAAehQ,EAFnD,EAEmDA,YAElDxxC,EAAQ6oB,EAAQ,CAAE4E,UAAW,KAAQ,KAI3C,OAFA/0B,KAAK25C,SAAS9U,QAGV,oCACI,yBAAK3hC,UAAU,iBACX,kBAACgV,EAAA,EAAD,CAAYhV,UAAU,qBAAqBqN,QAASvQ,KAAK+E,aACnDorB,EAAQ,kBAACrf,EAAA,EAAD,MAAe,kBAAC,GAAD,OAE7B,yBAAK5N,UAAU,qCACX,0BAAMA,UAAU,yBAAyBmP,EAAE,sBAGnD,yBAAK4K,IAAKjd,KAAK05C,aAAcx2C,UAAU,uBAClC4lD,EAAcC,MAAM1yC,IAAI1V,GAAK,kBAAC,GAAD,CAAUwR,SAAU2mC,IAAgBn4C,EAAGsc,IAAKmW,IAAQpzB,KAAK25C,SAASn/B,IAAI7Z,EAAGyyB,IAAQ7uB,IAAK5D,EAAGywB,OAAQzwB,EAAG4P,QAAS,IAAMvQ,KAAKsyB,eAAe3xB,MACrK,kBAAC,GAAD,CAAaqpC,SAAUhqC,KAAKi1B,eAAgBgV,KAAM53B,EAAE,iBAAkByK,QAAS9c,KAAKi7C,kBAAmBvpC,SAAU1R,KAAKg1B,aAAc8U,YAAa9pC,KAAK64C,mBAE1J,yBAAK31C,UAAU,oBACf,yBAAKA,UAAU,mBAAmBoE,MAAOA,GACpCgmB,GACG,kBAAC,GAAD,CACIrQ,IAAKjd,KAAK0tB,QACVxqB,UAAU,gBACVG,OAAQiqB,EAAMwY,SACdxX,UAAW,GACXlB,cAAe,GACfgW,WAAYziC,GAAKX,KAAKojC,WAAWziC,EAAG2sB,EAAMwY,SAAUgjB,EAAczyC,KAClEie,SAAUt0B,KAAK6uB,eAGtBiI,GAAesyB,GACZ,kBAAC,GAAD,CACInsC,IAAKjd,KAAK02B,cACVxzB,UAAU,qCACVG,OAAQyzB,EAAYgP,SAASxqB,OAAO8tC,EAAYtjB,UAChDxX,UAAW,GACXlB,cAAe,GACfgW,WAAYziC,GAAKX,KAAKojC,WAAWziC,EAAGm2B,EAAYgP,SAASxqB,OAAO8tC,EAAYtjB,UAAWgjB,EAAczyC,KACrGie,SAAUt0B,KAAK6uB,oB,OCta3C,MAAMw4B,WAAqBxlD,IAAMC,UAC7B8b,sBAAsBC,EAAWC,EAAWoK,GAAc,MAC9CkJ,EAAWpxB,KAAKwC,MAAhB4uB,OACR,OAAIvT,EAAUuT,SAAWA,EAO7BnuB,SAAU,MAAD,EACqBjD,KAAKwC,MAAvB4uB,EADH,EACGA,OAAQ9pB,EADX,EACWA,MAEhB,OACI,kBAACia,GAAA,EAAD,CAAUre,UAAU,iBAAiBse,QAAM,EAACla,MAAOA,GAC/C,kBAAC6pB,GAAA,EAAD,CAAMC,OAAQA,MA0Gfhc,OANCC,YACZic,cACArf,cACAsf,cAGWnc,CApGf,cAA6BvT,IAAMC,UAE/BlC,YAAY4C,GACR0B,MAAM1B,GADS,KAqCnBuC,YAAc,KAAO,MACT+X,EAAY9c,KAAKwC,MAAjBsa,QACHA,GAELA,KAtCA9c,KAAK67C,SAAWh6C,IAAMya,YAEtBtc,KAAK+B,MAAQ,CACTgR,OAAO,GAIf/P,oBAAqB,MACT2kD,EAAY3nD,KAAKwC,MAAjBmlD,QAEFhxC,EAAQ/K,IAAUgL,WACxB+Z,YAAiBha,EAAOgxC,GAG5B4B,WAAY,MACAx2C,EAAU/S,KAAK+B,MAAfgR,MAEFoL,EAAQne,KAAK67C,SAAS7iC,QAAQzO,MAAMwQ,OAC1C,OAAKoD,GAODpL,GACA/S,KAAKyC,SAAS,CACVsQ,OAAO,IAIRoL,IAZHne,KAAKyC,SAAS,CACVsQ,OAAO,IAEJoL,GAmBflb,SAAU,MAAD,EACkDjD,KAAKwC,MAApD6P,EADH,EACGA,EAAGs1C,EADN,EACMA,QAASa,EADf,EACeA,gBAAiBgB,EADhC,EACgCA,cAC7Bz2C,EAAU/S,KAAK+B,MAAfgR,MAEFua,EAAQq6B,EAAQtxC,IAAI+a,GAAW,kBAAC,GAAD,CAAc7sB,IAAK6sB,EAAQA,OAAQA,KAElEq4B,EAAkC,IAAnB9B,EAAQjzC,OAAR,UAA0BizC,EAAQjzC,OAAlC,sBAAwDizC,EAAQjzC,OAAhE,WAErB,OACI,oCACI,yBAAKxR,UAAU,iBACX,kBAACgV,EAAA,EAAD,CAAYhV,UAAU,qBAAqBqN,QAASvQ,KAAK+E,aACrD,kBAAC,GAAD,OAEJ,yBAAK7B,UAAU,qCACX,0BAAMA,UAAU,yBAAyBmP,EAAE,eAGnD,yBAAKnP,UAAU,wBACX,yBAAKA,UAAU,oBACX,kBAAC,GAAD,CAAcuyC,WAAY+S,EAAiBtT,SAAUsU,IACrD,yBAAKtmD,UAAU,kBACX,kBAAC60C,GAAA,EAAD,CACI/N,SAAUhqC,KAAK67C,SACf9oC,MAAOA,EACP7P,UAAU,iBACVgf,QAAQ,WACRkW,WAAS,EACTE,MAAOjmB,EAAE,aACT2lC,aAAc,MAGtB,kBAAC,GAAD,KAAgByR,GACfn8B,QCkCVrb,qBAzIf,cAAuBpQ,IAAMC,UACzBlC,YAAY4C,GAAQ,IAAD,EACf0B,MAAM1B,GADS,YAenBoxC,WAfmB,qBAeN,sCAAAlhC,EAAA,wDACc,EAAK3Q,MAApB2nD,WADC,oBAGC/B,EAAU,EAAKgC,mBAAmB3wC,QAAQswC,cACnC50C,OAJR,iDAML,EAAKjS,SAAS,CACVinD,YAAY,EACZ/B,YARC,4BAW+C,EAAK5lD,MAAjD4lD,EAXH,EAWGA,QAASS,EAXZ,EAWYA,aAAcC,EAX1B,EAW0BA,iBAEzBlqC,EAAQ,EAAKyrC,kBAAkB5wC,QAAQuwC,WAbxC,0DAkBL,EAAKxkD,cAlBA,UAoBc3C,IAAgBC,KAAK,CACpC,QAAS,0BACT8b,QACAoqC,YAAY,EACZn9B,YAAa,GACb68B,SAAU,OAzBT,QAoBC1pC,EApBD,OA4BD8pC,EACAjmD,IAAgBC,KAAK,CACjB,QAAS,eACT4U,QAASsH,EAAKre,GACduY,MAAO,CAAE,QAAS,cAAevY,GAAImoD,EAAiBnoD,MAEnDkoD,GACPhmD,IAAgBC,KAAK,CACjB,QAAS,eACT4U,QAASsH,EAAKre,GACduY,MAAO,CAAE,QAAS,gBAAiBk+B,KAAM,YAAatuB,KAAM+/B,KAIhET,EAAQjzC,OAAS,GACjBtS,IAAgBC,KAAK,CACjB,QAAS,iBACT4U,QAASsH,EAAKre,GACd4lC,SAAU6hB,IAIlBvhC,YAAS7H,EAAKre,IAlDT,0CAfM,KAqEnB6E,YAAc,KACV3C,IAAgBkG,aAAa,CACzB,QAAS,uBACToU,MAAM,KAxEK,KA4EnBmtC,kBAAoB,KAChB7pD,KAAKyC,SAAS,CACVinD,YAAY,EACZ/B,QAAS,MA/EE,KAmFnBjR,kBAnFmB,sCAmFC,WAAO5P,EAAMkO,GAAb,eAAAtiC,EAAA,4DAChB,EAAKjQ,SAAS,CACV2lD,aAActhB,EACd0hB,gBAAiBxT,IAHL,SAMK5yC,IAAgBC,KAAK,CACtC,QAAS,aACTsJ,KAAM,CACF,QAAS,gBACTgrC,KAAM,YACNtuB,KAAMye,GAEV2hB,UAAW,CAAE,QAAS,iBACtBC,SAAUC,OAdE,OAMVpmD,EANU,OAiBhB,EAAKE,SAAS,CACV4lD,iBAAkB9lD,IAlBN,yCAnFD,wDAGfvC,KAAK2pD,mBAAqB9nD,IAAMya,YAChCtc,KAAK4pD,kBAAoB/nD,IAAMya,YAE/Btc,KAAK+B,MAAQ,CACT2nD,YAAY,EACZ/B,QAAS,GACTS,aAAc,KACdI,gBAAiB,KACjBH,iBAAkB,MA8F1BplD,SAAU,MACEktB,EAAUnwB,KAAKwC,MAAf2tB,MADH,EAE4CnwB,KAAK+B,MAA9C2nD,EAFH,EAEGA,WAAY/B,EAFf,EAEeA,QAASa,EAFxB,EAEwBA,gBAE7B,OACI,oCACI,kBAAC,GAAD,CAAiBvrC,IAAKjd,KAAK2pD,mBAAoBx5B,MAAOA,EAAOrT,QAAS9c,KAAK+E,cAE3E,kBAAC,GAAD,CAAa2X,KAAMgtC,GACf,kBAAC,GAAD,CACIzsC,IAAKjd,KAAK4pD,kBACVpB,gBAAiBA,EACjBb,QAASA,EACT6B,cAAexpD,KAAK02C,kBACpB55B,QAAS9c,KAAK6pD,qBAItB,yBAAK3mD,UAAU,yBAAyBqN,QAASvQ,KAAK4zC,YAClD,kBAAC,GAAD,WC8FLkW,OA1Nf,cAA4BjoD,IAAMC,UAC9BlC,YAAY4C,GAAQ,IAAD,EACf0B,MAAM1B,GADS,YA4DnBunD,yBAA2B3lD,IAEvB,IADyB+U,KAAjB6K,aACW,OAFc,MAIzB9R,EAAkB9N,EAAlB8N,OAAQwJ,EAAUtX,EAAVsX,MAJiB,EAKgB1b,KAAK+B,MAA9CqzB,EALyB,EAKzBA,WAAY40B,EALa,EAKbA,aAAchvC,EALD,EAKCA,WAE9Boa,GAAcljB,IAAW83C,GAAgBtuC,IAAUV,IAIvDhb,KAAK0b,MAAQA,EACb1b,KAAKyC,SACD,CACI2yB,YAAY,EACZ40B,aAAc93C,EACd8I,WAAY,SA5EL,KAiFnBivC,kBAAoB,KAChB,IAAKjqD,KAAK0b,MAAO,OAEjB,MAAMwuC,EAASlqD,KAAKmqD,UAAUnxC,QAC1BkxC,GACAA,EAAO3f,aAAavqC,KAAK0b,OAG7B1b,KAAK0b,MAAQ,MAzFE,KA4FnB0uC,uBAAyBhmD,IAErB,IADyB+U,KAAjB6K,aACW,OAFY,MAIvBtH,EAAiBtY,EAAjBsY,KAAMxK,EAAW9N,EAAX8N,OAEdlS,KAAKyC,SAAS,CAAE4nD,aAAc3tC,EAAM4tC,SAAUp4C,KAlG/B,KAqGnBq4C,uBArGmB,sCAqGM,WAAMnmD,GAAN,eAAAsO,EAAA,wDACIyG,KAAjB6K,aADa,iDAIbtH,EAAStY,EAATsY,KAER,EAAKja,SAAS,CAAE+nD,aAAc9tC,IANT,yCArGN,2DA8GnB+tC,uBA9GmB,sCA8GM,WAAMrmD,GAAN,eAAAsO,EAAA,wDACIyG,KAAjB6K,aADa,iDAIbtH,EAAStY,EAATsY,KAER,EAAKja,SAAS,CAAEioD,aAAchuC,IANT,yCA9GN,2DAuHnBiuC,yBAvHmB,sCAuHQ,WAAMvmD,GAAN,eAAAsO,EAAA,wDACEyG,KAAjB6K,aADe,iDAIftH,EAAStY,EAATsY,KAER,EAAKja,SAAS,CAAEmoD,eAAgBluC,IANT,yCAvHR,2DAgInB3X,YAAc,KACV/E,KAAKyC,SAAS,CACV4nD,cAAc,EACdG,cAAc,EACdE,cAAc,EACdE,gBAAgB,EAChBx1B,YAAY,KAtID,KA0InBJ,aAAe61B,IACX7qD,KAAKyC,SAAS,CACV2yB,WAAYy1B,EACZb,aAAc,EACdhvC,WAAY,QA9ID,KAkJnBqvB,uBAAyBh9B,IACrBrN,KAAKyC,SAAS,CACVuY,WAAY3N,EACZqO,MAAO,QArJI,KAyJnBm2B,oBAAsB,CAAC3/B,EAAQiU,EAAWiP,KACtChP,YAASlU,EAAQiU,GAEjBnmB,KAAKg3B,qBA5JU,KA+JnBA,kBAAoB,KAChBh3B,KAAKyC,SAAS,CACV2yB,YAAY,EACZ40B,aAAc,EACdhvC,WAAY,QAhKhBhb,KAAKmqD,UAAYtoD,IAAMya,YAEvBtc,KAAK+B,MAAQ,CACTqzB,YAAY,EACZi1B,cAAc,EACdG,cAAc,EACdE,cAAc,EACdE,gBAAgB,GAIxBhtC,sBAAsBC,EAAWC,EAAWoK,GAAc,MAAD,EACwCloB,KAAK+B,MAA1FqzB,EAD6C,EAC7CA,WAAYpa,EADiC,EACjCA,WAAYqvC,EADqB,EACrBA,aAAcG,EADO,EACPA,aAAcE,EADP,EACOA,aAAcE,EADrB,EACqBA,eAE1E,OAAI9sC,EAAUsX,aAAeA,IAIzBtX,EAAU9C,aAAeA,IAIzB8C,EAAUusC,eAAiBA,IAI3BvsC,EAAU0sC,eAAiBA,IAI3B1sC,EAAU4sC,eAAiBA,GAI3B5sC,EAAU8sC,iBAAmBA,MAOrC5nD,oBACImW,KAASnM,GAAG,yBAA0BhN,KAAK+pD,0BAC3ChsC,KAAU/Q,GAAG,uBAAwBhN,KAAKoqD,wBAC1CrsC,KAAU/Q,GAAG,uBAAwBhN,KAAKuqD,wBAC1CxsC,KAAU/Q,GAAG,uBAAwBhN,KAAKyqD,wBAC1C1sC,KAAU/Q,GAAG,yBAA0BhN,KAAK2qD,0BAGhD19C,uBACIkM,KAAS/L,IAAI,yBAA0BpN,KAAK+pD,0BAC5ChsC,KAAU3Q,IAAI,uBAAwBpN,KAAKoqD,wBAC3CrsC,KAAU3Q,IAAI,uBAAwBpN,KAAKuqD,wBAC3CxsC,KAAU3Q,IAAI,uBAAwBpN,KAAKyqD,wBAC3C1sC,KAAU3Q,IAAI,yBAA0BpN,KAAK2qD,0BA8GjD1nD,SAAU,MAAD,EACgHjD,KAAK+B,MAAlHuoD,EADH,EACGA,SAAUN,EADb,EACaA,aAAchvC,EAD3B,EAC2BA,WAAYoa,EADvC,EACuCA,WAAYo1B,EADnD,EACmDA,aAAcH,EADjE,EACiEA,aAAcK,EAD/E,EAC+EA,aAAcE,EAD7F,EAC6FA,eAClG,OAAKx1B,GAAeo1B,GAAiBH,GAAiBK,GAAiBE,EAKnE,kBAAC,IAAD,CACIluC,MAAI,EACJG,mBAAoB,EACpBC,QAAS9c,KAAK+E,YACdsM,QAAS,CACL9F,KAAM,wBACNiC,UAAW,6BACXs9C,MAAO,0BAEXC,QAAS/qD,KAAKiqD,mBAEbI,GAAgB,kBAAC,GAAD,CAAUn4C,OAAQo4C,EAAUn6B,OAAK,IACjDq6B,GAAgB,kBAAC,GAAD,CAAUr6B,OAAK,IAC/Bu6B,GAAgB,kBAAC,GAAD,CAAUv6B,OAAK,IAC/By6B,GAAkB,kBAAC,GAAD,CAAYz6B,OAAK,IACnCiF,GACG,oCACI,kBAAC,GAAD,CACInY,IAAKjd,KAAKmqD,UACV/0B,YAAY,EACZ2T,SAAS,EACTx4B,QAASvQ,KAAKkyB,kBACdgD,SAAUl1B,KAAKg1B,aACfsV,mBAAoBtqC,KAAKqqC,uBACzBla,OAAK,IAET,yBAAKjtB,UAAU,kBACX,kBAAC,GAAD,CACIgP,OAAQ83C,EACR38C,KAAM2N,EACNg3B,gBAAiBhyC,KAAK6xC,oBACtB/0B,QAAS9c,KAAKg3B,uBAnC3B,OCrLZ,SAASg0B,KACZ,MAAMC,EAAUltC,KAAU6f,SAAS/xB,IAAI,mBACjC0K,EAAQ,GACR20C,EAAa,GACnB,GAAID,EAAS,CAAC,IAAD,uBACT,YAAqBA,EAAQzZ,OAA7B,+CAAqC,CAAC,MAA3Bt/B,EAA0B,QAC3BqM,EAAOR,KAAUlS,IAAIqG,GAC3B,GAAIqM,EAAM,CACN,MAAM8tB,EAAQC,YAAap6B,EAAQ,CAAE,QAAS,oBAChC,MAAVm6B,GAAe91B,EAAMT,KAAKyI,GAC9B2sC,EAAWp1C,KAAK,CAAEu2B,QAAOnsC,GAAIgS,EAAQiM,MAAOI,EAAKJ,UANhD,mFAab,OAFqB5H,EAAMud,KAAK,CAACphB,EAAG06B,IAAMC,YAAaf,YAAac,EAAG,CAAE,QAAS,oBAAsBd,YAAa55B,EAAG,CAAE,QAAS,sBAE/G2D,IAAI1V,GAAKA,EAAEwd,OAAOxb,KAAK,M,qBCQ/C,MAAMwoD,GAAiB,CACnBC,MAAOvrD,YAASwrD,eAChBC,KAAMzrD,YAAS0rD,eA4eJC,OAzef,cAAsB1pD,YAClBlC,YAAY4C,GAAQ,IAAD,EACf0B,MAAM1B,GADS,YAsInBuoC,oBAAsB3mC,IAClBpE,KAAKyrD,mBAvIU,KA0InB7yB,wBAA0Bx0B,IAGtB,IAFyBA,EAAjB4f,aAEW,OAHa,QAKiDhkB,KAAK+B,MAA9EsoD,EALwB,EAKxBA,aAAcG,EALU,EAKVA,aAAcp1B,EALJ,EAKIA,WAAYs1B,EALhB,EAKgBA,aAAcE,EAL9B,EAK8BA,gBAC1DP,GAAgBG,GAAgBp1B,GAAcs1B,GAAgBE,IAC9D5qD,KAAKyC,SAAS,CACN+nD,cAAc,EACdH,cAAc,EACdj1B,YAAY,EACZs1B,cAAc,EACdE,gBAAgB,EAChB7hB,QAAS,GACV,KACC/oC,KAAKyC,SAAS,CACVsmC,QAASoiB,QA1JV,KA2MnBhf,kBAAoB/nC,IAAW,MACNsnD,EAAoB1rD,KAAK+B,MAAtCirC,YAES2e,EAAgB3rD,KAAK4rD,cAA9B5yC,QACR,GAAI2yC,GAAeA,EAAYl9B,QAC3B,OALsB,MAQTo9B,EAAmB7rD,KAAK8rD,eAAjC9yC,QACR,GAAI6yC,GAAkBA,EAAep9B,QACjC,OAGJ,MAAMs9B,EAAchuC,KAAU6f,SAAS/xB,IAAI,mBACrCmhC,EAAc+e,GAAeA,EAAYjyC,KAAO,EAEtD9Z,KAAKyC,SAAS,CAAEuqC,cAAaC,aAAc+d,MAAqB,KAC5D,IAAKU,GAAmB1e,EAAa,CAAC,MAC1Bh0B,EAAYhZ,KAAK4rD,cAAjB5yC,QACR,GAAIA,EAAQ0U,QAAS,CAAC,MACDs+B,EAAgBhzC,EAAQ0U,QAAjC1U,QACJgzC,GAAeA,EAAYx+B,UAAY,IACvCxU,EAAQwU,WAAa,QAMjCk+B,IAAoB1e,GACpB5qC,IAAgBkG,aAAa,CACzB,QAAS,8BAzOF,KA8OnBiiD,uBA9OmB,sCA8OM,WAAMnmD,GAAN,eAAAsO,EAAA,yDACIyG,KAAjB6K,aADa,iDAIbtH,EAAStY,EAATsY,KAER,EAAKja,SAAS,CAAE+nD,aAAc9tC,IANT,yCA9ON,2DAuPnB0tC,uBAAyBhmD,IAErB,GADyB+U,KAAjB6K,aACU,OAFa,MAIvBtH,EAAiBtY,EAAjBsY,KAAMxK,EAAW9N,EAAX8N,OAEdlS,KAAKyC,SAAS,CAAE4nD,aAAc3tC,EAAM4tC,SAAUp4C,KA7P/B,KAgQnBu4C,uBAhQmB,sCAgQM,WAAMrmD,GAAN,eAAAsO,EAAA,yDACIyG,KAAjB6K,aADa,iDAIbtH,EAAStY,EAATsY,KAER,EAAKja,SAAS,CAAEioD,aAAchuC,IANT,yCAhQN,2DAyQnBiuC,yBAzQmB,sCAyQQ,WAAMvmD,GAAN,eAAAsO,EAAA,yDACEyG,KAAjB6K,aADe,iDAIftH,EAAStY,EAATsY,KAER,EAAKja,SAAS,CAAEmoD,eAAgBluC,IANT,yCAzQR,2DAkRnBuvC,sBAAwB7nD,IAAW,MACvBsY,EAAStY,EAATsY,KAER1c,KAAKyC,SAAS,CAAE+lC,YAAa9rB,KArRd,KAwRnBwvC,0BAA4B9nD,IACxBpE,KAAKya,eAzRU,KA4RnBsvC,yBAA2B3lD,IAEvB,GADyB+U,KAAjB6K,aACU,OAFe,MAIzB9R,EAAkB9N,EAAlB8N,OAAQwJ,EAAUtX,EAAVsX,MAJiB,EAKgB1b,KAAK+B,MAA9CqzB,EALyB,EAKzBA,WAAY40B,EALa,EAKbA,aAAchvC,EALD,EAKCA,WAElC,GAAIoa,GAAcljB,IAAW83C,GAAgBtuC,IAAUV,EACnD,OAGJ,MAAMkvC,EAASlqD,KAAKmsD,iBAAiBnzC,QACrChZ,KAAKyC,SACD,CACI2yB,YAAY,EACZ40B,aAAc93C,EACd8I,WAAY,KACZwtB,aAAa,EACbgiB,cAAc,EACdH,cAAc,EACdK,cAAc,EACdE,gBAAgB,GAEpB,KACQV,GACAA,EAAO3f,aAAa7uB,MArTjB,KA2TnBwW,kBAAoB,KACQlyB,KAAK+B,MAArBymC,YAEJpmC,IAAgBkG,aAAa,CACzB,QAAS,6BAGbtI,KAAK4rD,cAAc5yC,QAAQ2yB,eAlUhB,KAsUnB3W,aAAe61B,IACX7qD,KAAKyC,SAAS,CACV2yB,WAAYy1B,EACZb,aAAc,EACdhvC,WAAY,QA1UD,KA8UnB62B,oBAAsB,CAAC3/B,EAAQiU,EAAWiP,KACtChP,YAASlU,EAAQiU,GAEjB,MAAM6jC,EAAe50B,EAAap1B,KAAK+B,MAAMioD,aAAe,EACtDhvC,EAAaoa,EAAap1B,KAAK+B,MAAMiZ,WAAa,KAExDhb,KAAKyC,SAAS,CACV2yB,aACA40B,eACAhvC,gBAvVW,KA2VnBgc,kBAAoB,KAChBh3B,KAAKyC,SAAS,CACV2yB,YAAY,EACZ40B,aAAc,EACdhvC,WAAY,QA/VD,KAmWnBqvB,uBAAyBh9B,IACrBrN,KAAKyC,SAAS,CACVuY,WAAY3N,EACZqO,MAAO,QAtWI,KA0WnB+vC,gBAAkB,KACdzrD,KAAKgsC,aA3WU,KAmXnBogB,mBAAqB,KACjBpsD,KAAKyC,SAAS,CAAE+lC,aAAa,KApXd,KAuXnB6jB,oBAAsB,KAClBrsD,KAAKyC,SAAS,CAAE+nD,cAAc,KAxXf,KA2XnBrD,oBAAsB,KAClBnnD,KAAKyC,SAAS,CAAE4nD,cAAc,KA5Xf,KA+XnBiC,oBAAsB,KAClBtsD,KAAKyC,SAAS,CAAEioD,cAAc,KAhYf,KAmYnB6B,sBAAwB,KACpBvsD,KAAKyC,SAAS,CAAEmoD,gBAAgB,KAjYhC5qD,KAAK4rD,cAAgB/pD,IAAMya,YAC3Btc,KAAK8rD,eAAiBjqD,IAAMya,YAC5Btc,KAAKmsD,iBAAmBtqD,IAAMya,YAE9Btc,KAAK+B,MAAQ,CACTqjC,MAAO,KAEP4H,aAAa,EACbC,aAAc,KAEduf,UAAW,GACXC,aAAc,GAEd1jB,QAASoiB,GACT/1B,YAAY,EACZoT,aAAa,EACbgiB,cAAc,EACdH,cAAc,EACdK,cAAc,EACdE,gBAAgB,EAEhBZ,aAAc,EACdhvC,WAAY,KACZU,MAAO,MAIfkC,sBAAsBC,EAAWC,GAAY,MAAD,EAepC9d,KAAK+B,MAbLqjC,EAFoC,EAEpCA,MACA4H,EAHoC,EAGpCA,YACAC,EAJoC,EAIpCA,aACAuf,EALoC,EAKpCA,UACAC,EANoC,EAMpCA,aACAr3B,EAPoC,EAOpCA,WACAoT,EARoC,EAQpCA,YACA6hB,EAToC,EASpCA,aACAG,EAVoC,EAUpCA,aACAE,EAXoC,EAWpCA,aACAE,EAZoC,EAYpCA,eACAZ,EAboC,EAapCA,aACAhvC,EAdoC,EAcpCA,WAGJ,OAAI8C,EAAUsnB,QAAUA,IAIpBtnB,EAAUkvB,cAAgBA,IAI1BlvB,EAAUmvB,eAAiBA,IAI3BnvB,EAAU2uC,eAAiBA,IAI3B3uC,EAAU0uC,YAAcA,IAIxB1uC,EAAUsX,aAAeA,IAIzBtX,EAAU0qB,cAAgBA,IAI1B1qB,EAAUusC,eAAiBA,IAI3BvsC,EAAU0sC,eAAiBA,IAI3B1sC,EAAU4sC,eAAiBA,IAI3B5sC,EAAU8sC,iBAAmBA,IAI7B9sC,EAAUksC,eAAiBA,GAI3BlsC,EAAU9C,aAAeA,aAOjChY,oBACIhD,KAAK0sD,YAELvzC,KAASnM,GAAG,yBAA0BhN,KAAK+pD,0BAC3C5wC,KAASnM,GAAG,0BAA2BhN,KAAKksD,2BAC5C/yC,KAASnM,GAAG,wBAAyBhN,KAAK44B,yBAC1C7a,KAAU/Q,GAAG,yBAA0BhN,KAAKmsC,mBAC5CpuB,KAAU/Q,GAAG,wBAAyBhN,KAAKmsC,mBAC3CpuB,KAAU/Q,GAAG,qBAAsBhN,KAAKmsC,mBACxCpuB,KAAU/Q,GAAG,uBAAwBhN,KAAKoqD,wBAC1CrsC,KAAU/Q,GAAG,sBAAuBhN,KAAKisD,uBACzCluC,KAAU/Q,GAAG,uBAAwBhN,KAAKuqD,wBAC1CxsC,KAAU/Q,GAAG,uBAAwBhN,KAAKyqD,wBAC1C1sC,KAAU/Q,GAAG,yBAA0BhN,KAAK2qD,0BAC5C3f,KAAYh+B,GAAG,oBAAqBhN,KAAK+qC,qBAG7C99B,uBACIkM,KAAS/L,IAAI,yBAA0BpN,KAAK+pD,0BAC5C5wC,KAAS/L,IAAI,0BAA2BpN,KAAKksD,2BAC7C/yC,KAAS/L,IAAI,wBAAyBpN,KAAK44B,yBAC3C7a,KAAU3Q,IAAI,yBAA0BpN,KAAKmsC,mBAC7CpuB,KAAU3Q,IAAI,wBAAyBpN,KAAKmsC,mBAC5CpuB,KAAU3Q,IAAI,qBAAsBpN,KAAKmsC,mBACzCpuB,KAAU3Q,IAAI,uBAAwBpN,KAAKoqD,wBAC3CrsC,KAAU3Q,IAAI,sBAAuBpN,KAAKisD,uBAC1CluC,KAAU3Q,IAAI,uBAAwBpN,KAAKuqD,wBAC3CxsC,KAAU3Q,IAAI,uBAAwBpN,KAAKyqD,wBAC3C1sC,KAAU3Q,IAAI,yBAA0BpN,KAAK2qD,0BAC7C3f,KAAY59B,IAAI,oBAAqBpN,KAAK+qC,qBA6BxC2hB,YAAa,IAAD,0IACOhkB,GAAWtE,OADlB,gDAC6B,GAD7B,OACRgB,EADQ,KAGN7uB,EAAwB6uB,EAAxB7uB,MAAOyvB,EAAiBZ,EAAjBY,aAEfgF,KAAYtlB,QAAUslB,KAAYtlB,SAAWgjB,GAAWhjB,QACxD,EAAKjjB,SAAS,CACV2iC,QAEA4H,YAAahH,GAAgBA,EAAatxB,OAAS,EACnDu4B,aAAc+d,OAGlB,EAAKx5B,kBAAkBjb,GAAS,IAAIF,IAAI1V,GAAKA,EAAET,KAE/CkC,IAAgBkG,aAAa,CACzB,QAAS,4BAhBC,4CAoBZ0jC,YAAa,OAAD,yHACRv2B,EAAW,IACRK,KAAK1T,IAAgBC,KAAK,CAC/B,QAAS,WACTi+B,UAAW,CAAE,QAAS,gBACtB3qB,aAAc,sBACdC,eAAgB,EAChBC,MAAO23B,OAEX/3B,EAASK,KAAK1T,IAAgBC,KAAK,CAC/B,QAAS,WACTi+B,UAAW,CAAE,QAAS,mBACtB3qB,aAAc,sBACdC,eAAgB,EAChBC,MAAO23B,OAdG,SAgB0Bp3B,QAAQ/C,IAAIoC,GAhBtC,mCAgBPk3C,EAhBO,KAgBI3mB,EAhBJ,KAkBNtgB,EAAYslB,KAAZtlB,QAERgjB,GAAWjE,KAAK/e,EAASinC,EAAUj2C,SAAUsvB,EAAatvB,UApB5C,4CA0LlB8a,iBAAiB/a,GACb,MAAME,EAAQ/K,IAAUgL,WACxBC,YAAiBF,EAAOF,GAuB5BxT,SAAU,MAAD,EAiBDjD,KAAK+B,MAfLqjC,EAFC,EAEDA,MACA4H,EAHC,EAGDA,YACAC,EAJC,EAIDA,aACAuf,EALC,EAKDA,UACAC,EANC,EAMDA,aACAnC,EAPC,EAODA,SACAD,EARC,EAQDA,aACAG,EATC,EASDA,aACAhiB,EAVC,EAUDA,YACApT,EAXC,EAWDA,WACAs1B,EAZC,EAYDA,aACAE,EAbC,EAaDA,eACA7hB,EAdC,EAcDA,QACAihB,EAfC,EAeDA,aACAhvC,EAhBC,EAgBDA,WAGE4xC,EAAiBxnB,EAAQA,EAAM7uB,OAAS,GAAK,KAC7Cs2C,EAAoBznB,EAAQA,EAAMY,cAAgB,GAAK,KAE7D,OACI,oCACI,yBAAK9iC,UAAU,WACX,yBAAKA,UAAU,gBACX,kBAAC,GAAD,CACI+Z,IAAKjd,KAAKmsD,iBACV/2B,WAAYA,EACZ2T,QAAqB,IAAZA,EACTx4B,QAASvQ,KAAKkyB,kBACdgD,SAAUl1B,KAAKg1B,aACfsV,mBAAoBtqC,KAAKqqC,yBAE7B,yBAAKnnC,UAAU,mBACX,yBAAKA,UAAU,4BACX,kBAAC,GAAD,MAEA,kBAAC,GAAD,CACIsb,KAAK,eACLvB,IAAKjd,KAAK4rD,cACV1e,WAAY0f,EACZt/B,MAAOk/B,EACPxf,YAAaA,EACbC,aAAcA,EACdvwB,MAAM,EACNuvB,YAAajsC,KAAKyrD,mBAG1B,kBAACqB,GAAA,EAAD,CACI18C,WAAW,SACX24B,QAASA,EACTwK,GAAIne,EACJoe,cAAc,EACdC,eAAe,GACf,kBAAC,GAAD,CACIvhC,OAAQ83C,EACR38C,KAAM2N,EACNg3B,gBAAiBhyC,KAAK6xC,oBACtB/0B,QAAS9c,KAAKg3B,sBAI1B,kBAAC,GAAD,OAGJ,kBAAC,GAAD,CAAata,KAAM8rB,EAAaO,QAASA,EAASjsB,QAAS9c,KAAKosD,oBAC5D,kBAAC,GAAD,CACI7d,aAAcvuC,KAAK8rD,eACnBx+B,MAAOm/B,EACPvf,WAAY2f,KAIpB,kBAAC,GAAD,CAAanwC,KAAM8tC,EAAczhB,QAASA,EAASjsB,QAAS9c,KAAKqsD,qBAC7D,kBAAC,GAAD,OAGJ,kBAAC,GAAD,CAAa3vC,KAAM2tC,EAActhB,QAASA,EAASjsB,QAAS9c,KAAKmnD,qBAC7D,kBAAC,GAAD,CAAUj1C,OAAQo4C,KAGtB,kBAAC,GAAD,CAAa5tC,KAAMguC,EAAc3hB,QAASA,EAASjsB,QAAS9c,KAAKssD,qBAC7D,kBAAC,GAAD,OAGJ,kBAAC,GAAD,CAAa5vC,KAAMkuC,EAAgB7hB,QAASA,EAASjsB,QAAS9c,KAAKusD,uBAC/D,kBAAC,GAAD,OAGJ,kBAAC,GAAD,UC5bLQ,OA/Df,cAA6BlrD,IAAMC,UAAW,eAAD,oBACzCC,MAAQ,CACJmQ,OAAQqvB,KAAiB7F,cAFY,KAqBzCsxB,iCAAmC5oD,IAC3Bm9B,KAAiB0rB,oBACjBjtD,KAAK+E,eAvB4B,KA2BzCmoD,2BAA6B9oD,IAAW,MAC5B8N,EAAW9N,EAAX8N,OAERlS,KAAKyC,SAAS,CAAEyP,YA9BqB,KAiCzCnN,YAAc,KACV3C,IAAgBkG,aAAa,CACzB,QAAS,2BACT4J,OAAQ,KA/BhB0L,sBAAsBC,EAAWC,EAAWoK,GAAc,MAC9ChW,EAAWlS,KAAK+B,MAAhBmQ,OAER,OAAO4L,EAAU5L,SAAWA,EAGhClP,oBACIu+B,KAAiBv0B,GAAG,2BAA4BhN,KAAKktD,4BACrD3rB,KAAiBv0B,GAAG,iCAAkChN,KAAKgtD,kCAG/D//C,uBACIs0B,KAAiBn0B,IAAI,2BAA4BpN,KAAKktD,4BACtD3rB,KAAiBn0B,IAAI,iCAAkCpN,KAAKgtD,kCAsBhE/pD,SAAU,MACEiP,EAAWlS,KAAK+B,MAAhBmQ,OACR,OAAKA,EAGD,kBAAC,IAAD,CACIwK,MAAI,EACJC,QAASC,IACTC,mBAAoB,EACpBC,QAAS9c,KAAK+E,YACdsM,QAAS,CACL9F,KAAM,wBACNiC,UAAW,6BACXs9C,MAAO,2BAEX,kBAAC,GAAD,CAAU5nD,UAAU,2BAA2BgP,OAAQA,EAAQie,OAAK,KAbxD,O,oDChDb3sB,gBACX,0BAAMC,EAAE,6zBACR,QCFWD,gBACX,0BAAMC,EAAE,uuBACR,cCFWD,gBACX,0BAAMC,EAAE,uzCACR,U,4BCqHWwO,qBAzGf,cAA2BpQ,IAAMC,UAAW,eAAD,oBACvCC,MAAQ,CACJimC,SAAU,MAFyB,KAKvCmlB,gBAAkB9oD,IACdrE,KAAKyC,SAAS,CAAEulC,SAAU3jC,EAAM4jC,iBANG,KASvCC,gBAAkB,KACdloC,KAAKyC,SAAS,CAAEulC,SAAU,QAVS,KAavColB,kBAAoB,KAChBptD,KAAKkoC,kBADiB,MAGdmlB,EAAkBrtD,KAAKwC,MAAvB6qD,cACHA,GAELriD,WAAW,IAAMqiD,IAAiBC,MAnBC,KAsBvCC,qBAAuB,KACnBvtD,KAAKkoC,kBADoB,MAGjBslB,EAAqBxtD,KAAKwC,MAA1BgrD,iBACHA,GAELxiD,WAAW,IAAMwiD,IAAoBF,MA5BF,KA+BvCG,iBAAmB,KACfztD,KAAKkoC,kBADgB,MAGbwlB,EAAiB1tD,KAAKwC,MAAtBkrD,aACHA,GAELA,KAGJzqD,SAAU,MAAD,EAC0BjD,KAAKwC,MAAnB6P,GADZ,EACGhB,QADH,EACYgB,GAAGH,EADf,EACeA,OACZ81B,EAAahoC,KAAK+B,MAAlBimC,SAER,OACI,oCACI,kBAAC9vB,EAAA,EAAD,CACIhV,UAAU,uBACViV,aAAW,SACXuE,KAAMuN,QAAQ+d,GACdz3B,QAASvQ,KAAKmtD,iBACd,kBAACQ,GAAD,OAEJ,kBAACzkB,GAAA,EAAD,CACIhpC,GAAG,cACH8nC,SAAUA,EACVtrB,KAAMuN,QAAQ+d,GACdmB,mBAAoB,KACpBC,sBAAoB,EACpBC,qBAAqB,EACrBtiB,aAAc,CACVC,SAAU,MACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,SACVC,WAAY,SAEhB5V,QAAS,CACLy5C,MAAO,uBAEXhuC,QAAS9c,KAAKkoC,iBACd,kBAAC9gB,GAAA,EAAD,CAAU7W,QAASvQ,KAAKotD,kBAAmBt7C,UAAW87C,YAAqB17C,IACvE,kBAACwP,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACK,GAAA,EAAD,CAAcC,QAAS3P,EAAE,kBAE7B,kBAAC+U,GAAA,EAAD,CAAU7W,QAASvQ,KAAKutD,qBAAsBz7C,UAAW87C,YAAqB17C,IAC1E,kBAACwP,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACK,GAAA,EAAD,CAAcC,QAAS3P,EAAE,sBAE3BmO,aAActO,IACZ,kBAACkV,GAAA,EAAD,CAAU7W,QAASvQ,KAAKytD,iBAAkB37C,UAAW+7C,YAAa37C,IAC9D,kBAACwP,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACK,GAAA,EAAD,CAAcC,QAAS3P,EAAE,gB,8BC1G9C,SAASy7C,GAAUC,EAAMC,GAAQ,GACpC,GAAKD,EAAL,CAEA,GAAIC,GAASD,EAAKtqB,YAAcsqB,EAAKtqB,WAAW/uB,OAAS,EAAG,CACxD,MAAMu5C,EAAWF,EAAKtqB,WAAWsqB,EAAKtqB,WAAW/uB,OAAS,GACpDkvB,EAAQ/8B,SAASg9B,cACvBD,EAAME,SAASmqB,EAAUA,EAASv5C,QAClCkvB,EAAMG,UAAS,GAEf,MAAMC,EAAYl3B,OAAOm3B,eACzBD,EAAUE,kBACVF,EAAUG,SAASP,GAEnBmqB,EAAKvgC,UAAYugC,EAAKj7B,aAG1Bi7B,EAAKzkD,SCfT,MAAMkoC,GACS,EADTA,GAEK,GAFLA,GAGI,GAHJA,GAIG,GAJHA,GAKM,GALNA,GAOS,GAPTA,GAQO,GARPA,GASU,GATVA,GAUS,GAGF0c,GAAQ,CACjBC,QAAS,GACTC,aAAc,GACdC,UAAUx9C,GACN,MAA0C,qBAA5B7Q,KAAKmuD,QAAQt9C,EAAE+J,UAEjC0zC,eAAez9C,GACX,MAA+C,qBAAjC7Q,KAAKouD,aAAav9C,EAAE+J,WAI1CszC,GAAMC,QAAQ3c,KAAqB,EACnC0c,GAAMC,QAAQ3c,KAAiB,EAC/B0c,GAAMC,QAAQ3c,KAAgB,EAC9B0c,GAAMC,QAAQ3c,KAAe,EAC7B0c,GAAMC,QAAQ3c,KAAkB,EAEhC0c,GAAME,aAAa5c,KAAmB,EACtC0c,GAAME,aAAa5c,KAAqB,EACxC0c,GAAME,aAAa5c,KAAqB,EACxC0c,GAAME,aAAa5c,KAAsB,E,OC2N1Bp8B,OANCC,YACZic,cACArf,cACAsf,cAGWnc,CA7Of,cAA+BvT,IAAMC,UACjClC,YAAY4C,GACR0B,MAAM1B,GADS,KAUnB+rD,QAAU,IACCvuD,KAAKwuD,cAAcx1C,QAAQ0B,UAXnB,KAcnBpR,MAAQ,CAAC0kD,GAAQ,KAGbF,GAFa9tD,KAAKwuD,cAAcx1C,QAEhBg1C,IAjBD,KAoBnBznC,aAAe,KAAO,MAAD,EACYvmB,KAAKwC,MAA1B+jC,EADS,EACTA,OAAQmI,EADC,EACDA,SACXnI,GACAmI,GAELA,EAASnI,EAAOrmC,KAzBD,KA4BnB6pC,YAAc1lC,IAAU,MACZkiC,EAAWvmC,KAAKwC,MAAhB+jC,OAERliC,EAAM6B,iBAEN,MAAM6nD,EAAO/tD,KAAKwuD,cAAcx1C,QAC1BtE,EAASq5C,EAAKU,QAAQ/5C,OAEtBrH,GADY0gD,EAAKU,QAAQC,UAClB1uD,KAAKuuD,WAElBvuD,KAAKyC,SAAS,CACVksD,aAAcj6C,EAASrH,EAAKqH,SAGhCtS,IAAgBkG,aAAa,CACzB,QAAS,yBACTpI,GAAIqmC,EAAOrmC,GACXmN,UA7CW,KAiDnBgoB,cAAgBhxB,IACZ,MAAM0pD,EAAO/tD,KAAKwuD,cAAcx1C,QAC1B01C,EAAYX,EAAKU,QAAQC,UAEzBh6C,EADY1U,KAAKuuD,UACE75C,OAEzB,IAAIk6C,GAAe,EACnB,MAAM5qB,EAAYl3B,OAAOm3B,eACnBoqB,EAAYH,GAAMG,UAAUhqD,GAC5BiqD,EAAiBJ,GAAMI,eAAejqD,GAM5C,OAJI2/B,IACA4qB,IAAiB5qB,EAAU6qB,YAGvBxqD,EAAME,KACV,IAAK,YAED,IADavE,KAAKuuD,UACP,CAAC,MAAD,EACsBvuD,KAAKwC,MAA1B+jC,EADD,EACCA,OAAQmI,EADT,EACSA,SAMhB,OALIA,GACAA,EAASnI,EAAOrmC,IAAI,GAGxBmE,EAAM6B,kBACC,EAGX,MAEJ,IAAK,QAAS,CAAC,MAAD,EACsBlG,KAAKwC,MAA7B+jC,EADE,EACFA,OAAQuoB,EADN,EACMA,YAMhB,OALIvoB,GAAUuoB,GACVA,EAAYvoB,EAAOrmC,IAGvBmE,EAAM6B,kBACC,EAEX,IAAK,UAAW,CACZ,MAAM89B,EAAYl3B,OAAOm3B,eACzB,IAAKD,EAAW,MAChB,IAAKA,EAAU+qB,YAAa,MAE5B,MAAMzqC,EAAaypC,EAAKtqB,YAAcsqB,EAAKtqB,WAAW/uB,OAAS,EAAIq5C,EAAKtqB,WAAW,GAAK,KAExF,IAAKnf,GAAe0f,EAAUgrB,aAAe1qC,IAAe0f,EAAUirB,aAAe,CAAC,MAAD,EACjDjvD,KAAKwC,MAA7B+jC,EADyE,EACzEA,OAAQ2oB,EADiE,EACjEA,YAMhB,OALIA,GACAA,EAAY3oB,EAAOrmC,IAGvBmE,EAAM6B,kBACC,EAGX,MAEJ,IAAK,YAAa,CACd,MAAM89B,EAAYl3B,OAAOm3B,eACzB,IAAKD,EAAW,MAChB,IAAKA,EAAU+qB,YAAa,MAE5B,MAAMI,EACFpB,EAAKtqB,YAAcsqB,EAAKtqB,WAAW/uB,OAAS,EAAIq5C,EAAKtqB,WAAWsqB,EAAKtqB,WAAW/uB,OAAS,GAAK,KAElG,IAAKy6C,GAAcnrB,EAAUgrB,aAAeG,GAAanrB,EAAUirB,eAAiBE,EAAUz6C,OAAS,CAAC,MAAD,EACnE1U,KAAKwC,MAA7B+jC,EAD2F,EAC3FA,OAAQuoB,EADmF,EACnFA,YAMhB,OALIA,GACAA,EAAYvoB,EAAOrmC,IAGvBmE,EAAM6B,kBACC,EAGX,OAIR,SAAImoD,IAAaC,OAIb55C,GAAUg6C,IAAcE,KACxBvqD,EAAM6B,kBACC,KAvII,KA6InBqvB,YAAclxB,IACVA,EAAM6B,iBAEN,MACMwoD,EADO1uD,KAAKwuD,cAAcx1C,QACTy1C,QAAQC,UAEzB1qB,EAAYl3B,OAAOm3B,eACnBmrB,EAAkBprB,EAAYA,EAAU6qB,WAAa,GAErDn0C,EAAY1a,KAAKuuD,UACvB,GAAI7zC,EAAUhG,OAASsvB,EAAUtvB,QAAUg6C,EAAW,OAEtD,IAAIW,EAAYhrD,EAAMwX,cAAcC,QAAQ,cACvCuzC,IAELA,EAAYA,EAAUzpD,QAAQ,OAAQ,MAAMA,QAAQ,KAAM,KAEtD8U,EAAUhG,OAAS06C,EAAgB16C,OAAS26C,EAAU36C,OAASg6C,IAC/DW,EAAYA,EAAUze,OAAO,EAAG8d,EAAYh0C,EAAUhG,OAAS06C,EAAgB16C,SAEnF7N,SAASkN,YAAY,cAAc,EAAOs7C,KAjK3B,KAoKnB/kD,aAAe,KAAO,MACVi8B,EAAWvmC,KAAKwC,MAAhB+jC,OACHA,GAELnkC,IAAgBkG,aAAa,CACzB,QAAS,+BACTpI,GAAIqmC,EAAOrmC,MAvKfF,KAAKwuD,cAAgB3sD,IAAMya,YAE3Btc,KAAK+B,MAAQ,CACT4sD,aAAcW,MAwKtBrsD,SAAU,MAAD,EACiBjD,KAAKwC,MAAnB6P,EADH,EACGA,EAAGk0B,EADN,EACMA,OACHooB,EAAiB3uD,KAAK+B,MAAtB4sD,aAEAY,EAAchpB,EAAdgpB,UAER,OACI,yBAAKrsD,UAAU,sBACX,yBAAKA,UAAU,8BACX,kBAACk1C,GAAA,EAAD,CACI7zC,IAAK2kB,KAAKzoB,MACV4Q,QAAS,CAAE9F,KAAM,0BACjB6M,MAAM,UACNyJ,QAAS0tC,EACT79C,SAAU1R,KAAKsK,eAEnB,yBACI2S,IAAKjd,KAAKwuD,cACVtrD,UAAU,0BACViQ,iBAAe,EACf+J,gCAA8B,EAC9BC,YAAa9K,EAAE,UACfm9C,cAAaC,KACbC,kBAAiBJ,KACjBnlB,QAASnqC,KAAK+pC,YACdzlC,UAAWtE,KAAKq1B,cAChBhY,QAASrd,KAAKu1B,eAGtB,yBAAKryB,UAAU,oCACX,kBAACgV,EAAA,EAAD,CAAYhV,UAAU,4BAA4BqN,QAASvQ,KAAKumB,cAC5D,kBAACzV,EAAA,EAAD,CAAW6+C,SAAS,YAG5B,yBAAKzsD,UAAU,qCACdyrD,GAAgBc,KAAqBG,MAClC,kBAAC,KAAD,CACIC,MAAM,SACN3sD,UAAU,8BACVkV,MAAOu2C,GAAgB,EAAI,gBAAkB,QAC7CzsC,QAAQ,aACPysC,O,2BCgXVv5C,OAPCC,YACZic,cACArf,cACAqD,IACAic,cAGWnc,CAljBf,cAA+BvT,IAAMC,UACjClC,YAAY4C,GACR0B,MAAM1B,GADS,KAuCnBstD,0BAA4B1rD,IAAW,MAC3B2rD,EAASC,KAATD,KAER/vD,KAAKyC,SAAS,CACVwtD,SAAS,EACTtB,aAAcuB,KACdH,UA7CW,KAiDnBI,+BAAiC/rD,IAAW,MAChC2rD,EAASC,KAATD,KAEFhC,EAAO/tD,KAAKowD,YAAYp3C,QACxBtE,EAASq5C,EAAKU,QAAQ/5C,OACtBgG,EAAYqzC,EAAKrzC,UAEvB1a,KAAKyC,SAAS,CACVksD,aAAcj6C,EAASgG,EAAUhG,OACjCq7C,UA1DW,KA8DnBM,uBAAyBjsD,IAAW,MACxB2rD,EAASC,KAATD,KAER/vD,KAAKyC,SAAS,CAAEstD,UAjED,KAoEnBO,gCAAkClsD,IAAW,MACjC2rD,EAASC,KAATD,KAER/vD,KAAKyC,SAAS,CAAEstD,QAAQ,KACpB/kD,WAAW,KACMhL,KAAKuwD,cAAc1kD,IAAIkkD,EAAKjwD,QAAQ4U,OAAS,GAErDpL,OAAM,QA3EJ,KA0FnB+rB,cAAgBhxB,IACZ,MAAM0pD,EAAO/tD,KAAKowD,YAAYp3C,QACxB01C,EAAYX,EAAKU,QAAQC,UAEzBh6C,EADYq5C,EAAKrzC,UACEhG,OAEzB,IAAIk6C,GAAe,EACnB,MAAM5qB,EAAYl3B,OAAOm3B,eACnBoqB,EAAYH,GAAMG,UAAUhqD,GAC5BiqD,EAAiBJ,GAAMI,eAAejqD,GAM5C,OAJI2/B,IACA4qB,IAAiB5qB,EAAU6qB,YAGvBxqD,EAAME,KACV,IAAK,QACD,IAAKF,EAAMO,SAIP,OAHA5E,KAAKwwD,sBAAsB,GAE3BnsD,EAAM6B,kBACC,EAGX,MAEJ,IAAK,YAAa,CACd,MAAM89B,EAAYl3B,OAAOm3B,eACzB,IAAKD,EAAW,MAChB,IAAKA,EAAU+qB,YAAa,MAE5B,MAAMI,EACFpB,EAAKtqB,YAAcsqB,EAAKtqB,WAAW/uB,OAAS,EAAIq5C,EAAKtqB,WAAWsqB,EAAKtqB,WAAW/uB,OAAS,GAAK,KAElG,IAAKy6C,GAAcnrB,EAAUgrB,aAAeG,GAAanrB,EAAUirB,eAAiBE,EAAUz6C,OAI1F,OAHA1U,KAAKwwD,sBAAsB,GAE3BnsD,EAAM6B,kBACC,EAGX,OAIR,SAAImoD,IAAaC,OAIb55C,GAAUg6C,IAAcE,KACxBvqD,EAAM6B,kBACC,KA7II,KAmJnBqvB,YAAclxB,IACVA,EAAM6B,iBAEN,MAAM6nD,EAAO/tD,KAAKowD,YAAYp3C,QACxB01C,EAAYX,EAAKU,QAAQC,UAEzB1qB,EAAYl3B,OAAOm3B,eACnBmrB,EAAkBprB,EAAYA,EAAU6qB,WAAa,GAErDn0C,EAAYqzC,EAAKrzC,UACvB,GAAIA,EAAUhG,OAASsvB,EAAUtvB,QAAUg6C,EAAW,OAEtD,IAAIW,EAAYhrD,EAAMwX,cAAcC,QAAQ,cACvCuzC,IAED30C,EAAUhG,OAAS06C,EAAgB16C,OAAS26C,EAAU36C,OAASg6C,IAC/DW,EAAYA,EAAUze,OAAO,EAAG8d,EAAYh0C,EAAUhG,OAAS06C,EAAgB16C,SAEnF7N,SAASkN,YAAY,cAAc,EAAOs7C,KArK3B,KAwKnBtlB,YAAc1lC,IACVA,EAAM6B,iBAEN,MAAM6nD,EAAO/tD,KAAKowD,YAAYp3C,QAGxB0B,EAAYqzC,EAAKrzC,UAGL,SAFAqzC,EAAK5/C,YAGnB4/C,EAAKrzC,UAAY,IAOrBtY,IAAgBkG,aAAa,CACzB,QAAS,2BACTmoD,SAAU/1C,KA3LC,KA+LnBg2C,gBAAkB,KAAO,MACbX,EAAS/vD,KAAK+B,MAAdguD,KACR,IAAKA,EAAM,OAGX,GADoBA,EAAZjwD,QACI4U,QAAUi8C,KAAwB,OAE9C,MAAMpqB,EAAS,CACXrmC,GAAIgpB,KAAKzoB,MACT4M,KAAM,IAGVjL,IAAgBkG,aAAa,CACzB,QAAS,4BACTi+B,YA7MW,KAiNnBqqB,mBAAqB,CAAC1wD,EAAI2wD,GAAY,KAC9BA,EACA7wD,KAAK8wD,wBAAwB5wD,GAE7BF,KAAKumB,aAAarmB,IArNP,KAyNnBqmB,aAAermB,IACXkC,IAAgBkG,aAAa,CACzB,QAAS,+BACTpI,QA5NW,KAgOnB4wD,wBAA0B5wD,IAAO,MACrB6vD,EAAS/vD,KAAK+B,MAAdguD,KACR,IAAKA,EAAM,OAFiB,MAIpBjwD,EAAYiwD,EAAZjwD,QAEF6jB,EAAQ7jB,EAAQs2B,UAAUz1B,GAAKA,EAAET,KAAOA,GACxC6wD,EAAYptC,EAAQ,EAC1B,IAAIqtC,GAAe,EACnB,IAAK,IAAIh8C,EAAI2O,EAAO3O,EAAIlV,EAAQ4U,OAAQM,IAAK,CAEzC,GADiBlV,EAAQkV,GAAjB3H,KACE,CACN2jD,GAAe,EACf,OAIJA,GACAhxD,KAAK4wD,mBAAmB1wD,GAG5B,MAAM+wD,EAAWjxD,KAAKuwD,cAAc1kD,IAAIklD,GACxC,GAAKE,EAOLA,EAAS3nD,OAAM,OAPf,CAGIwkD,GAFgB9tD,KAAKowD,YAAYp3C,SAEd,KAzPR,KAgQnBk4C,sBAAwBhxD,IAAO,MACnB6vD,EAAS/vD,KAAK+B,MAAdguD,KACR,IAAKA,EAAM,OAFe,MAOpBgB,EAHchB,EAAZjwD,QAEcs2B,UAAUz1B,GAAKA,EAAET,KAAOA,GACpB,EAEpB+wD,EAAWjxD,KAAKuwD,cAAc1kD,IAAIklD,GACxC,GAAKE,EAOLA,EAAS3nD,OAAM,OAPf,CAGIwkD,GAFgB9tD,KAAKowD,YAAYp3C,SAEd,KA7QR,KAoRnBw3C,sBAAwBtwD,IAAO,MACnB6vD,EAAS/vD,KAAK+B,MAAdguD,KACR,IAAKA,EAAM,OAFe,MAIlBjwD,EAAYiwD,EAAZjwD,QAEF6jB,EAAQ7jB,EAAQs2B,UAAUz1B,GAAKA,EAAET,KAAOA,GACxCixD,EAAYxtC,EAAQ,EAEpBytC,EAAWpxD,KAAKuwD,cAAc1kD,IAAIslD,GACxC,GAAKC,EAULA,EAAS9nD,MAAM8nD,GAAU,OAVzB,CACI,MAAM/jD,EAAOsW,GAAS,GAAKA,EAAQ7jB,EAAQ4U,OAAS5U,EAAQ6jB,GAAOtW,KAAO,GAC1E,GAAIvN,EAAQ4U,SAAWrH,EACnB,OAGJrN,KAAK0wD,oBApSM,KA2SnBW,QAAU,KAAO,MACLtB,EAAS/vD,KAAK+B,MAAdguD,KACR,IAAKA,EAAM,OAFC,MAIJjwD,EAAYiwD,EAAZjwD,QAEFwxD,EAAWX,KAAyB7wD,EAAQ4U,OAElD,OAAI48C,GAAY,EACL,gDAEM,IAAbA,EACO,6BAGL,eAAN,OAAsBX,KAAyB7wD,EAAQ4U,OAAvD,mBA1Te,KA6TnB3P,YAAc,KAAO,MACTgrD,EAAS/vD,KAAK+B,MAAdguD,KAEJwB,aAAYxB,GACZ/vD,KAAKyC,SAAS,CAAEwtD,SAAS,IAEzBjwD,KAAKwxD,0BAnUM,KAuUnB74C,WAAa,KAAO,MACR84C,EAAWzxD,KAAKwC,MAAhBivD,OAEFC,EAAmB1B,KAAU2B,sBAC9BD,IAELD,EAAOC,GAEP1xD,KAAKwxD,2BA/UU,KAkVnBI,wBAA0B,KACtB5xD,KAAKyC,SAAS,CAAEwtD,SAAS,KAnVV,KAsVnBuB,uBAAyB,KACrBxxD,KAAK4xD,0BAELxvD,IAAgBkG,aAAa,CACzB,QAAS,4BA1VE,KA8VnBupD,sBAAwB,KACpBzvD,IAAgBkG,aAAa,CACzB,QAAS,qCAhWE,KAoWnBwpD,iCAAmC,KAC/B1vD,IAAgBkG,aAAa,CACzB,QAAS,gDAtWE,KA0WnBypD,iBAAmB,KACf3vD,IAAgBkG,aAAa,CACzB,QAAS,gCA5WE,KAgXnBmP,sBAAwBC,IAAY,MAAD,EACY1X,KAAKwC,MAAxCmV,EADuB,EACvBA,gBAAiBC,EADM,EACNA,cAEnBC,EAAWF,EAAgBD,EAAS,CACtCI,iBAAkBC,IAClBC,kBAAkB,EAClBC,OAAQ,CACJ,kBAACC,EAAA,EAAD,CACI3T,IAAI,QACJ4T,aAAW,QACXC,MAAM,UACNlV,UAAU,4BACVqN,QAAS,IAAMqH,EAAcC,IAC7B,kBAAC/G,EAAA,EAAD,WA7XG,KAmYnBkhD,gCAAkC3tD,IAAU,MAChCgO,EAAMrS,KAAKwC,MAAX6P,EACA09C,EAAS/vD,KAAK+B,MAAdguD,KACHA,GAEmC,iBAAvBA,EAAKvxC,KAAK,WAEvBna,EAAM4B,kBAENjG,KAAKyX,sBAAsBpF,EAAE,6BAzYjCrS,KAAKowD,YAAcvuD,IAAMya,YACzBtc,KAAKuwD,cAAgB,IAAIz7C,IAEzB9U,KAAK+B,MAAQ,CACTguD,KAAM,KACNE,SAAS,EACTtB,aAAcuB,MAItBltD,oBACIgtD,KAAUhjD,GAAG,+BAAgChN,KAAKqwD,wBAClDL,KAAUhjD,GAAG,kCAAmChN,KAAKqwD,wBACrDL,KAAUhjD,GAAG,6CAA8ChN,KAAKqwD,wBAChEL,KAAUhjD,GAAG,6BAA8BhN,KAAKqwD,wBAChDL,KAAUhjD,GAAG,yBAA0BhN,KAAKqwD,wBAC5CL,KAAUhjD,GAAG,+BAAgChN,KAAKqwD,wBAClDL,KAAUhjD,GAAG,sBAAuBhN,KAAK8vD,2BACzCE,KAAUhjD,GAAG,4BAA6BhN,KAAKswD,iCAC/CN,KAAUhjD,GAAG,yBAA0BhN,KAAKqwD,wBAC5CL,KAAUhjD,GAAG,2BAA4BhN,KAAKmwD,gCAGlDljD,uBACI+iD,KAAU5iD,IAAI,+BAAgCpN,KAAKqwD,wBACnDL,KAAU5iD,IAAI,kCAAmCpN,KAAKqwD,wBACtDL,KAAU5iD,IAAI,6CAA8CpN,KAAKqwD,wBACjEL,KAAU5iD,IAAI,6BAA8BpN,KAAKqwD,wBACjDL,KAAU5iD,IAAI,yBAA0BpN,KAAKqwD,wBAC7CL,KAAU5iD,IAAI,+BAAgCpN,KAAKqwD,wBACnDL,KAAU5iD,IAAI,sBAAuBpN,KAAK8vD,2BAC1CE,KAAU5iD,IAAI,4BAA6BpN,KAAKswD,iCAChDN,KAAU5iD,IAAI,yBAA0BpN,KAAKqwD,wBAC7CL,KAAU5iD,IAAI,2BAA4BpN,KAAKmwD,gCA4CnDvtD,mBAAmBC,EAAWC,EAAWC,GACpB/C,KAAK+B,MAAdguD,OAEKjtD,EAAUitD,MACnB/kD,WAAW,KACP8iD,GAAU9tD,KAAKowD,YAAYp3C,SAAS,IACrC,GA0TX/V,SAAU,MACEoP,EAAMrS,KAAKwC,MAAX6P,EADH,EAEmCrS,KAAK+B,MAArC4sD,EAFH,EAEGA,aAAcsB,EAFjB,EAEiBA,QAASF,EAF1B,EAE0BA,KAC/B,IAAKA,EAAM,OAAO,KAHb,MAKGkC,EAAiBlC,EAAjBkC,aAEFnyD,EAAUiwD,EAAOA,EAAKjwD,QAAU,GAChCoyD,EAAuBnC,EAAKvxC,KAAK2zC,uBACjCC,EAAsD,oBAAvBrC,EAAKvxC,KAAK,SACzC6zC,EAAkC,iBAAvBtC,EAAKvxC,KAAK,SAE3Bxe,KAAKuwD,cAAc1rB,QACnB,MAAMvX,EAAQxtB,EAAQuW,IAAI,CAAC1V,EAAGqU,IAC1B,kBAAC,GAAD,CACIiI,IAAKmW,GAAMpzB,KAAKuwD,cAAc/1C,IAAIxF,EAAGoe,GACrC7uB,IAAK5D,EAAET,GACPqmC,OAAQ5lC,EACR+tC,SAAU1uC,KAAK4wD,mBACf1B,YAAalvD,KAAKkxD,sBAClBpC,YAAa9uD,KAAKwwD,yBAIpB8B,EAAe3B,KAAyB7wD,EAAQ4U,OAAS,EACzDu1B,EAAOjqC,KAAKqxD,UAElB,OACI,oCACI,kBAAC,IAAD,CACInuD,UAAWkN,IAAW,qBAAsB,CAAE,qBAAsBiiD,IACpE31C,MAAI,EACJC,QAASC,IACTC,mBAAoB,EACpBC,QAAS9c,KAAK+E,YACdgY,kBAAgB,gBAChB,kBAAC,IAAD,CAAa7c,GAAG,gBAAgBmS,EAAE,YAClC,kBAAC,KAAD,CAAehB,QAAS,CAAE9F,KAAM,4BAC5B,yBAAKrI,UAAU,qCACX,kBAAC+e,GAAA,EAAD,CAAY7J,MAAM,UAAU8J,QAAQ,YAAY5a,MAAO,CAAEirD,SAAU,IAC9DlgD,EAAE,aAENs8C,GAAgB6D,KAAuBC,MACpC,kBAACxwC,GAAA,EAAD,CAAY7J,MAAOu2C,GAAgB,EAAI,gBAAkB,QAASzsC,QAAQ,aACrEysC,IAIb,yBACI1xC,IAAKjd,KAAKowD,YACVlwD,GAAG,8BACHiT,iBAAe,EACf+J,gCAA8B,EAC9BC,YAAa9K,EAAE,gBACfm9C,cAAagD,KACb9C,kBAAiBQ,KACjB7yC,QAASrd,KAAKu1B,YACdjxB,UAAWtE,KAAKq1B,cAChB8U,QAASnqC,KAAK+pC,cAElB,kBAAC2oB,GAAA,EAAD,CAASxvD,UAAU,YACnB,kBAAC+e,GAAA,EAAD,CAAY7J,MAAM,UAAU8J,QAAQ,aAC/B7P,EAAE,gBAEP,kBAACkiB,GAAA,EAAD,CAAMljB,QAAS,CAAE9F,KAAM,4BAClB+hB,EACAglC,GACG,kBAAC/wC,GAAA,EAAD,CACIpP,UAAU,EACVjP,UAAU,yBACVse,QAAM,EACNjR,QAASvQ,KAAK0wD,iBACd,kBAAC3uC,GAAA,EAAD,CAAc4wC,mBAAiB,EAAC3wC,QAAS3P,EAAE,mBAIvD,kBAAC4P,GAAA,EAAD,KAAagoB,GACb,kBAACyoB,GAAA,EAAD,CAASxvD,UAAU,YACnB,kBAAC+e,GAAA,EAAD,CAAY7J,MAAM,UAAU8J,QAAQ,aAC/B7P,EAAE,aAEP,kBAACugD,GAAA,EAAD,KACI,kBAACtR,GAAA,EAAD,CACIC,QACI,kBAAC5/B,GAAA,EAAD,CACIvJ,MAAM,UACNyJ,QAASowC,EACTvgD,SAAU1R,KAAK6xD,wBAGvBv5B,MAAOjmB,EAAE,mBAEb,yBAAK9B,QAASvQ,KAAKgyD,gCAAiC1qD,MAAO,CAAEurD,WAAY,gBACrE,kBAACvR,GAAA,EAAD,CACIC,QACI,kBAAC5/B,GAAA,EAAD,CACIvJ,MAAM,UACNtG,SAAUsgD,EACVvwC,QAASqwC,EACTxgD,SAAU1R,KAAK8xD,mCAGvBx5B,MAAOjmB,EAAE,mBAGjB,kBAACivC,GAAA,EAAD,CACIC,QACI,kBAAC5/B,GAAA,EAAD,CAAUvJ,MAAM,UAAUyJ,QAASwwC,EAAU3gD,SAAU1R,KAAK+xD,mBAEhEz5B,MAAOjmB,EAAE,eAGjB,kBAAC4P,GAAA,EAAD,KAAa5P,EAAE,cAEnB,kBAACiL,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQnF,MAAM,UAAU7H,QAASvQ,KAAK+E,aACjCsN,EAAE,WAENygD,aAAY/C,IACT,kBAACxyC,EAAA,EAAD,CAAQnF,MAAM,UAAU7H,QAASvQ,KAAK2Y,YACjCtG,EAAE,aAKnB,kBAAC,IAAD,CACInP,UAAU,0BACVwZ,KAAMuzC,EACNtzC,QAASC,IACTC,mBAAoB,EACpBC,QAAS9c,KAAK4xD,wBACd70C,kBAAgB,gBAChB,kBAAC,IAAD,CAAa7c,GAAG,gBAAgBmS,EAAE,yBAClC,kBAAC,KAAD,CAAehB,QAAS,CAAE9F,KAAM,4BAC3B8G,EAAE,wBAEP,kBAACiL,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQnF,MAAM,UAAU7H,QAASvQ,KAAK4xD,yBACjCv/C,EAAE,WAEP,kBAACkL,EAAA,EAAD,CAAQnF,MAAM,UAAU7H,QAASvQ,KAAKwxD,wBACjCn/C,EAAE,a,gBCjVhBJ,qBArOf,cAA4BpQ,IAAMC,UAC9BlC,YAAY4C,GACR0B,MAAM1B,GADS,KAwGnBuwD,kBAAoB1uD,IACE,UAAdA,EAAME,MACNvE,KAAKgzD,YAAYh6C,QAAQ1P,QACzBjF,EAAM6B,iBACN7B,EAAM4B,oBA5GK,KAgHnBgtD,iBAAmB5uD,IACG,UAAdA,EAAME,MACNvE,KAAK4zC,aACLvvC,EAAM6B,iBACN7B,EAAM4B,oBApHK,KAwHnBitD,iBAAmB7uD,IACfrE,KAAKyC,SAAS,CACV4K,KAAMhJ,EAAMuD,OAAO2C,SA1HR,KA8HnB4oD,gBAAkB9uD,IACdrE,KAAKyC,SAAS,CACVwgB,IAAK5e,EAAMuD,OAAO2C,SAhIP,KAoInBqpC,WAAa,KAAO,MAAD,EACqB5zC,KAAKwC,MAAjC4wD,EADO,EACPA,YAAaC,EADN,EACMA,WADN,MAEKrzD,KAAK+B,MAAnBsL,EAFS,EAETA,KAAM4V,EAFG,EAEHA,IAKZ,GAFAA,EAAc,OAARA,EAAeA,EAAMowC,IAD3BhmD,EAAgB,OAATA,EAAgBA,EAAO+lD,KAGhBnwC,EAEV,YADAjjB,KAAKszD,aAAat6C,QAAQ1P,QAI9B,IAAK+D,EAGD,OAFArN,KAAKyC,SAAS,CAAE8wD,WAAW,SAC3BvzD,KAAKszD,aAAat6C,QAAQ1P,QAK9B,KADA2Z,EAAMuwC,aAAYvwC,IAId,OAFAjjB,KAAKyC,SAAS,CAAEgxD,UAAU,SAC1BzzD,KAAKgzD,YAAYh6C,QAAQ1P,SAM7BqyC,EAFmB37C,KAAKwC,MAAhBm5C,QAEDtuC,EAAM4V,IA/JE,KAkKnB0xB,aAAe,MAGX+e,EAFqB1zD,KAAKwC,MAAlBkxD,aAhKR1zD,KAAK2zD,QAAU9xD,IAAMya,YACrBtc,KAAKszD,aAAezxD,IAAMya,YAC1Btc,KAAK4zD,OAAS/xD,IAAMya,YACpBtc,KAAKgzD,YAAcnxD,IAAMya,YAEzBtc,KAAK+B,MAAQ,GAGjBa,mBAAmBC,EAAWC,EAAWC,GAAW,MAAD,EACL/C,KAAKwC,MAAvC4wD,EADuC,EACvCA,YAAaC,EAD0B,EAC1BA,WAAY32C,EADc,EACdA,KAE7BA,GAAQ7Z,EAAU6Z,OAASA,GAC3B1R,WAAW,KACP,MAAMqC,EAAOrN,KAAKszD,aAAat6C,QACzBiK,EAAMjjB,KAAKgzD,YAAYh6C,QAExB3L,GACA4V,IAEAmwC,EAEOC,GAGRhmD,EAAK/D,QACL+D,EAAKyG,UAHLmP,EAAI3Z,QAFJ+D,EAAK/D,UAOV,GAIXtG,qBAqBA4a,sBAAsBC,EAAWC,EAAWoK,GAAc,MAAD,EACOloB,KAAKwC,MAAzD4wD,EAD6C,EAC7CA,YAAaC,EADgC,EAChCA,WAAY1X,EADoB,EACpBA,OAAQ+X,EADY,EACZA,SAAUh3C,EADE,EACFA,KADE,EAErB1c,KAAK+B,MAA7BwxD,EAF6C,EAE7CA,UAAWE,EAFkC,EAElCA,SAEnB,OAAI51C,EAAUu1C,cAAgBA,IAI1Bv1C,EAAUw1C,aAAeA,IAIzBv1C,EAAUy1C,YAAcA,IAIxBz1C,EAAU21C,WAAaA,IAIvB51C,EAAU89B,SAAWA,IAIrB99B,EAAU61C,WAAaA,GAIvB71C,EAAUnB,OAASA,OAO3B,gCAAgCla,EAAOT,GACnC,OAAIA,EAAM8xD,WAAarxD,EAAMka,KAClB,CACHm3C,UAAU,EACVN,WAAW,EACXE,UAAU,EACVpmD,KAAM,KACN4V,IAAK,MAIN,KAmEXhgB,SAAU,MAAD,EACwCjD,KAAKwC,MAA1Cka,EADH,EACGA,KAAM22C,EADT,EACSA,WAAYD,EADrB,EACqBA,YAAa/gD,EADlC,EACkCA,EADlC,EAE2BrS,KAAK+B,MAA7BwxD,EAFH,EAEGA,UAAWE,EAFd,EAEcA,SACnB,OAAK/2C,EAGD,kBAAC,IAAD,CACIC,QAASC,IACTC,mBAAoB,EACpBH,MAAM,EACNI,QAAS9c,KAAK20C,aACd53B,kBAAgB,yBAChB,kBAAC,IAAD,CAAa7c,GAAG,yBAAyBmS,EAAE,eAC3C,kBAAC,KAAD,KACI,yBAAK/K,MAAO,CAAEwsD,QAAS,OAAQC,cAAe,SAAU9iD,MAAO,MAC3D,kBAAC8mC,GAAA,EAAD,CACI96B,IAAKjd,KAAK2zD,QACV3pB,SAAUhqC,KAAKszD,aACfh7B,MAAOjmB,EAAE,QACT2jC,OAAO,SACPge,aAAa,MACbhc,aAAcob,EACdrgD,MAAOwgD,EACP7hD,SAAU1R,KAAKkzD,iBACf5uD,UAAWtE,KAAK+yD,oBAEpB,kBAAChb,GAAA,EAAD,CACI96B,IAAKjd,KAAK4zD,OACV5pB,SAAUhqC,KAAKgzD,YACf16B,MAAOjmB,EAAE,OACT2jC,OAAO,SACPge,aAAa,MACbhc,aAAcqb,EACdtgD,MAAO0gD,EACP/hD,SAAU1R,KAAKmzD,gBACf7uD,UAAWtE,KAAKizD,qBAI5B,kBAAC31C,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQhN,QAASvQ,KAAK20C,aAAcv8B,MAAM,WACrC/F,EAAE,WAEP,kBAACkL,EAAA,EAAD,CAAQhN,QAASvQ,KAAK4zC,WAAYx7B,MAAM,WACnC/F,EAAE,aAzCD,Q,OC3FX4hD,OApFf,cAAwBpyD,IAAMC,UAAW,eAAD,oBAqBpCoyD,mBAAqB9vD,IAAW,MAAD,EACcpE,KAAKwC,MAAtC0P,EADmB,EACnBA,OAAQiU,EADW,EACXA,UAAWnM,EADA,EACAA,UAC3B,IAAKA,EAAW,OAEhB,MAAMrO,EAAOqO,EAAUvB,OAASuB,EAAUrO,KACrCA,GAEDvH,EAAO8N,SAAWA,GAAU9N,EAAO+hB,YAAcA,GAAa/hB,EAAOyE,SAAW8C,EAAKzL,IACrFF,KAAKya,eA5BbzX,oBACI4I,IAAUoB,GAAG,qCAAsChN,KAAKk0D,oBACxDtoD,IAAUoB,GAAG,iCAAkChN,KAAKk0D,oBACpDtoD,IAAUoB,GAAG,oCAAqChN,KAAKk0D,oBACvDtoD,IAAUoB,GAAG,wBAAyBhN,KAAKk0D,oBAC3CtoD,IAAUoB,GAAG,mCAAoChN,KAAKk0D,oBACtDtoD,IAAUoB,GAAG,iCAAkChN,KAAKk0D,oBACpDtoD,IAAUoB,GAAG,qCAAsChN,KAAKk0D,oBAG5DjnD,uBACIrB,IAAUwB,IAAI,qCAAsCpN,KAAKk0D,oBACzDtoD,IAAUwB,IAAI,iCAAkCpN,KAAKk0D,oBACrDtoD,IAAUwB,IAAI,oCAAqCpN,KAAKk0D,oBACxDtoD,IAAUwB,IAAI,wBAAyBpN,KAAKk0D,oBAC5CtoD,IAAUwB,IAAI,mCAAoCpN,KAAKk0D,oBACvDtoD,IAAUwB,IAAI,iCAAkCpN,KAAKk0D,oBACrDtoD,IAAUwB,IAAI,qCAAsCpN,KAAKk0D,oBAe7DjxD,SAAU,MAAD,EAC4DjD,KAAKwC,MAA9D0P,EADH,EACGA,OAAQiU,EADX,EACWA,UAAWnM,EADtB,EACsBA,UAAWiO,EADjC,EACiCA,cAAe1X,EADhD,EACgDA,QACrD,IAAKyJ,EAAW,OAAO,KAEvB,MAAMrO,EAAOqO,EAAUvB,OAASuB,EAAUrO,KAC1C,IAAKA,EAAM,OAAO,KAElB,MAAMyc,EAAUH,EAAgB,2BAA6BA,EAAcI,KAAO,KAC5EG,EAAMD,YAAO5c,GACbie,EAAYnB,aAAmBzO,EAAW6P,KAA2BsqC,MACrErqC,EAAcC,aAAa7X,EAAQiU,GAEzC,OACI,yBAAKjjB,UAAU,aAAaqN,QAASA,GAChC6X,GACG,yBACIllB,UAAWkN,IACP,mBACA,CAAE,yBAA0B0Z,GAC5B,CAAE,sBAAsB,IAE5BO,WAAW,EACX7B,IAAKJ,EACLkC,IAAI,KAGX9B,GACG,yBACItlB,UAAWkN,IACP,mBACA,CAAE,yBAA0B0Z,GAC5B,CAAE,gBAAiBtB,GAAOoB,IAE9BS,WAAW,EACX7B,IAAKA,EACL8B,IAAI,Q,OCcbrY,qBAlFf,cAAoBpQ,IAAMC,UAAW,eAAD,oBAShCsyD,mBAAqB7xD,IAAW,MAAD,EACGvC,KAAKwC,MAA3B0P,EADmB,EACnBA,OAAQiU,EADW,EACXA,UAEZjU,IAAW3P,EAAO0U,SAAWkP,IAAc5jB,EAAOrC,IAClDF,KAAKya,eAbmB,KAiBhClV,YAAclB,IACVA,EAAM4B,mBAlBsB,KAqBhCiqB,WAAa7rB,IACT,GAAqB,IAAjBA,EAAMmd,OAAc,OAExBnd,EAAM4B,kBAHY,QAKqBjG,KAAKwC,MAApC0P,EALU,EAKVA,OAAQiU,EALE,EAKFA,UAAW5V,EALT,EAKSA,QAErBmH,EAAUY,IAAazM,IAAIqG,EAAQiU,GACzC,OAAKzO,EACD28C,aAAiB38C,GAAiB,MAEtC0O,YAASlU,EAAQiU,GAAW,GAC5BmuC,mBACI/jD,GAASA,MALQ,MA5BzBvN,oBACIsV,IAAatL,GAAG,mBAAoBhN,KAAKo0D,oBAG7CnnD,uBACIqL,IAAalL,IAAI,mBAAoBpN,KAAKo0D,oBA+B9CnxD,SAAU,MAAD,EAC4BjD,KAAKwC,MAA9B6P,EADH,EACGA,EAAGH,EADN,EACMA,OAAQiU,EADd,EACcA,UADd,IAEChI,EAAUne,KAAKwC,MAAf2b,MAEN,MAAMzG,EAAUY,IAAazM,IAAIqG,EAAQiU,GAEzChI,EAAQA,GAASorC,aAAS7xC,EAASrF,GACnC,IAAImG,EAAWd,EAAyB43B,aAAW53B,EAASrF,GAAnCA,EAAE,WAC3B,MAAM2H,EAAYu6C,aAAkBriD,EAAQiU,GACtC8B,EAAgBusC,aAAsBtiD,EAAQiU,GAOpD,OALIkuC,aAAiB38C,KACjByG,EAAQ,KACR3F,EAAUnG,EAAE,mBAIZ,yBAAKnP,UAAU,QAAQmN,YAAarQ,KAAKkwB,WAAY3f,QAASvQ,KAAKuF,aAC/D,yBAAKrC,UAAU,iBACX,yBAAKA,UAAU,wBACd8W,GACG,kBAAC,GAAD,CACI9H,OAAQA,EACRiU,UAAWA,EACX8B,cAAeA,EACfjO,UAAWA,IAGnB,yBAAK9W,UAAU,iBACVib,GAAS,yBAAKjb,UAAU,uBAAuBib,GAChD,yBAAKjb,UAAWkN,IAAW,2BAA4BoI,S,OCJhEvG,qBA9Df,cAA6BpQ,IAAMC,UAAW,eAAD,oBASzCugB,uBAAyBje,IAAW,MAAD,EACcpE,KAAKwC,MAA1C0P,EADuB,EACvBA,OAAQiU,EADe,EACfA,UAAWsuC,EADI,EACJA,cACnBx9C,EAAwB7S,EAAxB6S,QAASC,EAAe9S,EAAf8S,WAEbhF,IAAW+E,IACXkP,IAAcjP,GAAcu9C,IAAkBv9C,GAElDlX,KAAKya,gBAhBgC,KAmBzC1V,YAAc,KAAO,MAAD,EACkB/E,KAAKwC,MAA/B0P,EADQ,EACRA,OADQ,EACAuiD,cAGZC,YAAYxiD,EAAQ,GAEpByiD,YAAaziD,EAAQ,IAxB7BlP,oBACIsV,IAAatL,GAAG,uBAAwBhN,KAAKqiB,wBAGjDpV,uBACIqL,IAAalL,IAAI,uBAAwBpN,KAAKqiB,wBAuBlDpf,SAAU,MAAD,EACoDjD,KAAKwC,MAAtD0P,EADH,EACGA,OAAQiU,EADX,EACWA,UAAWsuC,EADtB,EACsBA,cAAepiD,EADrC,EACqCA,EAAG9B,EADxC,EACwCA,QAC7C,OAAK2B,IACAiU,GAAcsuC,GAGf,yBAAKvxD,UAAU,mBACX,yBAAKA,UAAU,+BACX,kBAACgV,EAAA,EAAD,CAAYhV,UAAU,uBAAuBiV,aAAW,QAAQ5H,QAASvQ,KAAK+E,aAC1E,kBAAC+L,EAAA,EAAD,QAGR,yBAAK5N,UAAU,iCACX,kBAAC,GAAD,CACIgP,OAAQA,EACRiU,UAAWsuC,GAAiBtuC,EAC5BhI,MAAOs2C,EAAgBpiD,EAAE,eAAiB,KAC1C9B,QAASA,KAGjB,yBAAKrN,UAAU,kCAlBH,Q,OCoBbkS,OAFCC,YAAQpD,cAETmD,CAjDf,cAA+BvT,IAAMC,UAAW,eAAD,oBAC3C8xC,WAAa,MAETghB,EADsB50D,KAAKwC,MAAnBoyD,cAF+B,KAM3CjgB,aAAe,MAEX+e,EADqB1zD,KAAKwC,MAAlBkxD,aAIZzwD,SAAU,MAAD,EACgBjD,KAAKwC,MAAlBojC,EADH,EACGA,MAAOvzB,EADV,EACUA,EACf,OAAKuzB,EAGD,kBAAC,IAAD,CACIjpB,QAASC,IACTC,mBAAoB,EACpBH,MAAM,EACNI,QAAS9c,KAAK20C,aACd53B,kBAAgB,uBAChB,kBAAC,IAAD,CAAa7c,GAAG,uBAAuBmS,EAAE,YACzC,kBAAC,KAAD,KACI,kBAAC2hC,GAAA,EAAD,KACKpO,EAAMlxB,OAAS,EAAIrC,EAAE,yBAA2BA,EAAE,0BAG3D,kBAACiL,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQhN,QAASvQ,KAAK20C,aAAcv8B,MAAM,WACrC/F,EAAE,WAEP,kBAACkL,EAAA,EAAD,CAAQhN,QAASvQ,KAAK4zC,WAAYx7B,MAAM,WACnC/F,EAAE,SApBA,Q,OC+EZwiD,OApGf,cAA0BhzD,IAAMC,UAAW,eAAD,oBACtCC,MAAQ,GAD8B,KAetC+yD,0BAA4B,KACxB90D,KAAK+0D,MAAQC,YAAY,KACrB,MACMC,EADM,IAAI/rC,KACGlpB,KAAKM,UAGxBN,KAAKyC,SAAS,CACV3B,KAAMm0D,KAEX,IACHj1D,KAAKM,UAAY,IAAI4oB,MAzBa,KA4BtCgsC,yBAA2B,KACnBl1D,KAAK+0D,OACLjqD,aAAa9K,KAAK+0D,OAGtB/0D,KAAKyC,SAAS,CACV3B,KAAM,QAlCwB,KAsCtCq0D,0BAA4B,KACpBn1D,KAAK+0D,OACLjqD,aAAa9K,KAAK+0D,OAGtB/0D,KAAKyC,SAAS,CACV3B,KAAM,QAzCdkC,oBACIsV,IAAatL,GAAG,0BAA2BhN,KAAK80D,2BAChDx8C,IAAatL,GAAG,yBAA0BhN,KAAKk1D,0BAC/C58C,IAAatL,GAAG,0BAA2BhN,KAAKm1D,2BAGpDloD,uBACIqL,IAAalL,IAAI,0BAA2BpN,KAAK80D,2BACjDx8C,IAAalL,IAAI,yBAA0BpN,KAAKk1D,0BAChD58C,IAAalL,IAAI,0BAA2BpN,KAAKm1D,2BAoCrDC,WAAW3zD,GACP,IAAI4zD,EAAQ5zD,EAAEotD,WAOd,OANqB,IAAjBwG,EAAM3gD,OACN2gD,GAAS,IACFA,EAAM3gD,OAAS,IACtB2gD,EAAQA,EAAMzkB,OAAO,EAAG,IAGrBykB,EAGXC,WAAW7zD,GACP,IAAI4zD,EAAQ5zD,EAAEotD,WAKd,OAJqB,IAAjBwG,EAAM3gD,SACN2gD,EAAQ,IAAMA,GAGXA,EAGXE,SAASC,GACL,IAAIC,EAAMD,EAAI,IAEVE,GADJF,GAAKA,EAAIC,GAAM,KACA,GAEXE,GADJH,GAAKA,EAAIE,GAAQ,IACF,GACXE,GAAOJ,EAAIG,GAAQ,GAEnBpzD,EAASozD,EAAO,IAAM31D,KAAKs1D,WAAWI,GAAQ,IAAM11D,KAAKo1D,WAAWK,GAKxE,OAJIG,EAAM,IACNrzD,EAASqzD,EAAM,IAAMrzD,GAGlBA,EAGXU,SAAU,MACEnC,EAASd,KAAK+B,MAAdjB,KACR,OAAKA,EAGD,yBAAKoC,UAAU,gBACVlD,KAAKu1D,SAASz0D,GACf,yBAAKoC,UAAU,uBALL,O,4BCuiBX+O,qBA9mBf,cAA8BpQ,IAAMC,UAChClC,YAAY4C,GAAQ,IAAD,EACf0B,MAAM1B,GADS,YAsDnBqzD,sBAAwB,KAChBhvD,SAASuE,gBAAkBpL,KAAK81D,WAAW98C,SAC3ChZ,KAAK+1D,iBAxDM,KA4DnBC,YAAc,KAAO,MAAD,EAC6Bh2D,KAAKwC,MAA1C0P,EADQ,EACRA,OAAQiU,EADA,EACAA,UAAWzJ,EADX,EACWA,KAAMu5C,EADjB,EACiBA,QACjC,IAAKv5C,EAAM,OAEX,IAAIrP,EAAO,KACPgM,EAAU,KACd,MAAM3B,EAAUY,IAAazM,IAAIqG,EAAQiU,GACzC,GAAIzO,EAAS,CAAC,MACFc,EAAYd,EAAZc,QACJA,IACAnL,EAAOmL,EAAQnL,KACfgM,EAAUb,EAAQa,SAI1B,MAAMnK,EAAUlP,KAAK81D,WAAW98C,QAC3B9J,IAED7B,EACArN,KAAKk2D,iBAAiB7oD,GACfgM,EACPrZ,KAAKk2D,iBAAiB78C,GACf48C,GAAWA,EAAQ58C,QAC1BnK,EAAQf,UAAY8nD,EAAQ58C,QAE5BnK,EAAQwL,UAAY,KAGxBipB,GAAWz0B,KAxFI,KAgHnB0kC,WAAa,KAAO,MAAD,EAC6B5zC,KAAKwC,MAAzC0P,EADO,EACPA,OAAQ+jD,EADD,EACCA,QAASxE,EADV,EACUA,OAAQrT,EADlB,EACkBA,OADlB,EAE2Cp+C,KAAK+B,MAAvD2yD,EAFO,EAEPA,YAAayB,EAFN,EAEMA,SAAUC,EAFhB,EAEgBA,UAAWC,EAF3B,EAE2BA,YAEpCnnD,EAAUlP,KAAK81D,WAAW98C,QAChC,IAAK9J,EAAS,OALC,MAOPf,EAAce,EAAdf,UAERe,EAAQwL,UAAY,KATL,QAWY47C,aAAYnoD,GAEjCkL,EAAU,CACZ,QAAS,gBACThM,KAfW,EAWPA,KAKJiM,SAhBW,EAWDA,UASd,GADkB2Q,QAAQyqC,GACX,CACX,GAAI0B,EAAW,CAAC,MACJ39C,EAAU29C,EAAV39C,MACR,IAAKA,EAAO,OAFD,MAIHC,EAAUD,EAAVC,MACR,IAAKA,EAAO,OAEZ,MAAMoB,EAAOpB,EAAMA,EAAMhE,OAAS,GAE1BzD,EAAkB6I,EAAlB7I,MAAO8I,EAAWD,EAAXC,OAUfqkC,EAAO,KARS,CACZ,QAAS,oBACT3lC,MAAO,CAAE,QAAS,gBAAiBk+B,KAAMwf,EAASxf,KAAMtuB,KAAM8tC,GAC9DllD,QACA8I,SACAV,iBAKJ+kC,EAAO/kC,EAAS,MAGpBk9C,YAAkBrkD,EAAQ,OACvB,CAAC,MACIqQ,EAAgB0zC,EAAhB1zC,MAAO5W,EAASsqD,EAATtqD,KACPqX,EAA2BT,EAA3BS,MAAOvK,EAAoB8J,EAApB9J,MAAO5R,EAAa0b,EAAb1b,SAEtB,IAAI2R,EAAU,KACd,GAAIC,EAAO,CAAC,MACAC,EAAUD,EAAVC,MACR,IAAKA,EAAO,OAEZ,MAAMoB,EAAOpB,EAAMA,EAAMhE,OAAS,GAE1BzD,EAAkB6I,EAAlB7I,MAAO8I,EAAWD,EAAXC,OAEfvB,EAAU69C,EACJ,CACE,QAAS,oBACT59C,MAAO,CAAE,QAAS,gBAAiBk+B,KAAMhrC,EAAKgrC,KAAMtuB,KAAM1c,GAC1DsF,QACA8I,SACAV,WAEF,CACE,QAAS,uBACTxS,SAAU,CAAE,QAAS,gBAAiB8vC,KAAMhrC,EAAKgrC,KAAMtuB,KAAM1c,GAC7DqO,UAAW,KACXX,gBAEL,GAAIxS,EACP2R,EAAU,CACN,QAAS,uBACT3R,SAAU,CAAE,QAAS,gBAAiB8vC,KAAMhrC,EAAKgrC,KAAMtuB,KAAM1c,GAC7DqO,UAAW,KACXX,gBAED,GAAI2J,EAAO,CAAC,MACPnjB,EAA+BmjB,EAA/BnjB,SAAUse,EAAqB6E,EAArB7E,MAAOq4C,EAAcxzC,EAAdwzC,UAEzBh+C,EAAU,CACN,QAAS,oBACTwK,MAAO,CAAE,QAAS,gBAAiB2zB,KAAMhrC,EAAKgrC,KAAMtuB,KAAM1c,GAC1DqO,UAAW,KACXna,WACAse,QACAq4C,YACAn9C,WAGR,IAAKb,EAAS,OAEdi5C,EAAOj5C,EAAS7M,KA/ML,KAmNnBgpC,aAAe,KAAO,MAAD,EACuB30C,KAAKwC,MAArC0P,EADS,EACTA,OAAQiU,EADC,EACDA,UAAWutC,EADV,EACUA,SAErBh8C,EAAUY,IAAazM,IAAIqG,EAAQiU,GACvB8D,QAAQvS,IAGtB6+C,YAAkBrkD,EAAQ,GAG9BwhD,KA7Ne,KAgOnBr+B,cAAgBhxB,IAAU,MACdI,EAAgFJ,EAAhFI,OAAQC,EAAwEL,EAAxEK,QAA6BC,GAA2CN,EAA/DE,IAA+DF,EAA1DuW,QAA0DvW,EAAjDG,KAAiDH,EAA3CM,SAASC,EAAkCP,EAAlCO,SAAU6xD,EAAwBpyD,EAAxBoyD,OAAQjtD,EAAgBnF,EAAhBmF,YAIxE,GADwBA,EAAhBsmC,YAEJzrC,EAAM4B,uBAIV,OAAQuD,EAAYhF,MAChB,IAAK,QACL,IAAK,cAEIC,KAAWC,GAAWC,GAAWC,IAAc6xD,EAO1ChyD,GAAWC,GAAYC,GAAYC,GAAa6xD,IACtDz2D,KAAK4zC,aAELvvC,EAAM6B,iBACN7B,EAAM4B,oBAVNY,SAASkN,YAAY,mBAErB1P,EAAM6B,iBACN7B,EAAM4B,mBASV,MAGJ,IAAK,OACIxB,IAAWC,IAAWC,GAAaC,GAAa6xD,IACjDz2D,KAAK02D,aAELryD,EAAM6B,iBACN7B,EAAM4B,mBAEV,MAGJ,IAAK,OACIxB,IAAWC,IAAWC,GAAaC,GAAa6xD,IACjDz2D,KAAK22D,eAELtyD,EAAM6B,iBACN7B,EAAM4B,mBAEV,MAEJ,IAAK,OAEIxB,IAAWC,IAAWC,GAAaC,GAAa6xD,GAO5ChyD,IAAWC,IAAWC,GAAaC,GAAa6xD,IACrDz2D,KAAK42D,aAELvyD,EAAM6B,iBACN7B,EAAM4B,oBAVNjG,KAAK62D,YAELxyD,EAAM6B,iBACN7B,EAAM4B,mBASV,MAGJ,IAAK,QACGxB,IAAWC,IAAWC,GAAaC,GAAa6xD,IAChDz2D,KAAK82D,cAELzyD,EAAM6B,iBACN7B,EAAM4B,qBAxSH,KA+SnB6wD,YAAc,KACVjwD,SAASkN,YAAY,gBAAgB,EAAO,MAC5ClN,SAASkN,YAAY,UAAU,EAAO,OAjTvB,KAoTnB2iD,WAAa,KACT7vD,SAASkN,YAAY,gBAAgB,EAAO,MAC5ClN,SAASkN,YAAY,UAAU,EAAO,MAEtClN,SAASkN,YAAY,QAAQ,EAAO,OAxTrB,KA2TnB4iD,aAAe,KACX9vD,SAASkN,YAAY,gBAAgB,EAAO,MAC5ClN,SAASkN,YAAY,UAAU,EAAO,MAEtClN,SAASkN,YAAY,UAAU,EAAO,OA/TvB,KAkUnB6iD,WAAa,KACT/vD,SAASkN,YAAY,gBAAgB,EAAO,MAC5ClN,SAASkN,YAAY,UAAU,EAAO,MAEtC,IAAI1G,EAAO,GAJI,MAKP22B,EAAchkC,KAAdgkC,UACJA,IAAcA,EAAU+qB,cACxB1hD,EAAO22B,EAAU6qB,YAGhBxhD,IACLA,EAAI,gBAAYA,EAAZ,WACJxG,SAASkN,YAAY,gBAAgB,EAAO,MAC5ClN,SAASkN,YAAY,cAAc,EAAO1G,KA/U3B,KAkVnB0pD,gBAAkB,KACdlwD,SAASkN,YAAY,gBAAgB,EAAO,MAC5ClN,SAASkN,YAAY,UAAU,EAAO,MAEtClN,SAASkN,YAAY,aAAa,EAAO,OAtV1B,KAyVnBijD,oBAAsB,KAClBnwD,SAASkN,YAAY,gBAAgB,EAAO,MAC5ClN,SAASkN,YAAY,UAAU,EAAO,MAEtClN,SAASkN,YAAY,iBAAiB,EAAO,OA7V9B,KAgWnB8iD,UAAY,KACR72D,KAAKi3D,qBAjWU,KAoWnBA,kBAAoB,KAChB,IAAI7D,EAAc,GACdC,EAAa,GAFK,MAIdrvB,EAAqBhkC,KAArBgkC,UAAWJ,EAAU5jC,KAAV4jC,MACnB,GAAIA,EAAO,CAAC,IACFszB,EAAiCtzB,EAAjCszB,eACN,GAAIA,IADmCtzB,EAAjBuzB,aACe,CAAC,MAC1BC,EAAkBF,EAAlBE,cACJA,GAA4C,MAA3BA,EAAcC,WAC/BjE,EAAcgE,EAAc18C,UAC5B24C,EAAa+D,EAAcE,OAKlClE,IAAepvB,GAAcA,EAAU+qB,cACxCqE,EAAcpvB,EAAU6qB,YAG5B7uD,KAAKyC,SAAS,CACV80D,aAAa,EACblE,aACAD,iBA3XW,KA+XnBoE,mBAAqB,KACjBx3D,KAAKyC,SACD,CACI80D,aAAa,GAEjB,KACIv3D,KAAKy3D,sBArYE,KAianBliC,YAAclxB,IACV,MAAMuX,EAAYvX,EAAMwX,cAAcC,QAAQ,cAC1CF,IACAvX,EAAM6B,iBACNW,SAASkN,YAAY,cAAc,EAAO6H,KAra/B,KAyanBmuB,YAAc,KACV/pC,KAAK03D,kBA1aU,KAubnBC,oBAAsB,KAClB33D,KAAKw3D,sBAxbU,KA2bnBI,kBAAoB,CAACvqD,EAAM4V,KACvBjjB,KAAKw3D,qBACLxsD,WAAW,KAAM,MAEL44B,EAAU5jC,KAAV4jC,MACR,GAAIA,EAAO,CAAC,MACAszB,EAAiCtzB,EAAjCszB,eAAgBC,EAAiBvzB,EAAjBuzB,aACxB,GAAID,GAAkBA,IAAmBC,EAAc,CAAC,MAC5CU,EAAeX,EAAfW,WACR,GAAIA,GAAsC,MAAxBA,EAAWR,SAAkB,CAC3CQ,EAAWP,KAAOr0C,EAClB40C,EAAW15C,MAAQ8E,EACnB40C,EAAWn9C,UAAYrN,EAHoB,MAMnC8hD,EAAc0I,EAAd1I,UACR,GAAIA,EAAW,CACX,MAAMvrB,EAAQ/8B,SAASg9B,cACvBD,EAAME,SAASqrB,EAAWA,EAAU2I,YAAYpjD,QAChDkvB,EAAMm0B,OAAO5I,EAAWA,EAAU2I,YAAYpjD,QAE9C,MAAMsvB,EAAYn9B,SAASo9B,eAC3BD,EAAUE,kBACVF,EAAUG,SAASP,GAEvB,SAMZ,MAAMpsB,EAAI,kBAAcyL,EAAd,kBAA2BA,EAA3B,sDAA4E5V,EAA5E,QACVxG,SAASkN,YAAY,gBAAgB,EAAO,MAC5ClN,SAASkN,YAAY,cAAc,EAAOyD,IAC3C,IA7dY,KAgenBwgD,gBAAkB3zD,IACd,MAAM6K,EAAUlP,KAAKi4D,aAAaj/C,QAC7B9J,GAELA,EAAQmmC,SApeO,KAuenB6iB,wBAvemB,qBAueO,sCAAAxlD,EAAA,wDAChBxD,EAAU,EAAK+oD,aAAaj/C,QADZ,oDAKD,KADb4sB,EAAU12B,EAAV02B,OACElxB,OALY,sDAOEy5B,MAAM9sC,KAAKukC,GAPb,kBAOfj6B,EAPe,gBAQjBA,EARiB,kEAUEwsD,aAAsBxsD,GAVxB,QAUhByqD,EAVgB,OAYtB,EAAK3zD,SAAS,CACV0zD,SAAUxqD,EACVyqD,cAGJlnD,EAAQ3E,MAAQ,GAjBM,0CAveP,KA2fnB6tD,kBAAoB,KAAO,MACf/B,EAAgBr2D,KAAK+B,MAArBs0D,YAERr2D,KAAKyC,SAAS,CACV4zD,aAAcA,KA5flBr2D,KAAK81D,WAAaj0D,IAAMya,YACxBtc,KAAKi4D,aAAep2D,IAAMya,YAE1Btc,KAAK+B,MAAQ,GAKjB,gCAAgCS,EAAOT,GAAQ,MACnC8xD,EAAa9xD,EAAb8xD,SACAn3C,EAAqCla,EAArCka,KAAMxK,EAA+B1P,EAA/B0P,OAAQiU,EAAuB3jB,EAAvB2jB,UAAW8vC,EAAYzzD,EAAZyzD,QAEjC,GAAIpC,IAAan3C,EAAM,CACnB,GAAIA,EAAM,CACN,MAAMg4C,EAAcp8C,IAAazM,IAAIqG,EAAQiU,GAC7C,IAAIkwC,GAAc,EAOlB,OANI3B,GAAgD,iBAAjCA,EAAYl8C,QAAQ,SACnC69C,GAAc,EACPJ,GAAWA,EAAQ1zC,OAAoC,iBAA3B0zC,EAAQ1zC,MAAM,WACjD8zC,GAAc,GAGX,CACHxC,UAAU,EACVwC,cACA3B,cACA0B,UAAW,KACXD,SAAU,MAGd,MAAO,CACHtC,UAAU,EACVwC,aAAa,EACb3B,YAAa,KACb0B,UAAW,KACXD,SAAU,MAKtB,OAAO,KAGXnzD,oBACI6D,SAASkG,iBAAiB,kBAAmB/M,KAAK61D,uBAAuB,GAG7E5oD,uBACIpG,SAASsG,oBAAoB,kBAAmBnN,KAAK61D,uBAAuB,GAwChFK,iBAAiBpe,GAAgB,MACrBzlC,EAAMrS,KAAKwC,MAAX6P,EACFnD,EAAUlP,KAAK81D,WAAW98C,QAEhC,IAAK8+B,EAED,YADA5oC,EAAQwL,UAAY,MALI,MASpBrN,EAAmByqC,EAAnBzqC,KAAMiM,EAAaw+B,EAAbx+B,SACd,IACI,MAAM++C,EAAQC,aAASjrD,EAAMiM,EAAUjH,GACvCnD,EAAQf,UAAY,KACpBkqD,EAAMj3D,QAAQT,IACVuO,EAAQd,YAAYzN,KAE1B,MAAOkQ,GACL3B,EAAQwL,UAAYrN,GA8R5B0oD,gBACI/1D,KAAKgkC,UAAYn9B,SAASo9B,eACrBjkC,KAAKgkC,WACLhkC,KAAKgkC,UAAUu0B,aAEpBv4D,KAAK4jC,MAAQ5jC,KAAKgkC,UAAUw0B,WAAW,IAG3Cf,mBAAoB,MACR7zB,EAAU5jC,KAAV4jC,MAER,IAAKA,EAED,YADAD,KAIJ,MAAMK,EAAYn9B,SAASo9B,eAC3BD,EAAUE,kBACVF,EAAUG,SAASP,GAEnB5jC,KAAK81D,WAAW98C,QAAQ1P,QAe5BouD,iBACI,MAAMxoD,EAAUlP,KAAK81D,WAAW98C,QAChC,IAAK9J,EAAS,OAFD,MAILf,EAAce,EAAdf,UACU,SAAdA,GAAsC,oBAAdA,IACxBe,EAAQf,UAAY,MAgF5BlL,SAAU,MAAD,EAC2CjD,KAAKwC,MAA7C0P,EADH,EACGA,OAAQiU,EADX,EACWA,UAAW8vC,EADtB,EACsBA,QAASv5C,EAD/B,EAC+BA,KAAMrK,EADrC,EACqCA,EADrC,EAEiFrS,KAAK+B,MAAnFqxD,EAFH,EAEGA,YAAaC,EAFhB,EAEgBA,WAAYkE,EAF5B,EAE4BA,YAAa7C,EAFzC,EAEyCA,YAAa0B,EAFtD,EAEsDA,UAAWC,EAFjE,EAEiEA,YACtE,IAAK35C,EAAM,OAAO,KAElB,MAAMhF,EAAUY,IAAazM,IAAIqG,EAAQiU,GACnCsyC,EAAYxuC,QAAQvS,GAC1B,IAAIghD,GAAU,EACVzC,GAAWA,EAAQ1zC,OAAoC,iBAA3B0zC,EAAQ1zC,MAAM,SAC1Cm2C,GAAU,EACHtC,GAAoC,iBAAvBA,EAAU,SAC9BsC,GAAU,EACHhE,GAAgD,iBAAjCA,EAAYl8C,QAAQ,WAC1CkgD,GAAU,GAGd,IAAIn2C,EAAQ,KACRk2C,EACAl2C,EACA6zC,EACM5zC,aAAS,CAAEhK,QAAS49C,IACpB5zC,aAAS9K,EAAS,MACjBu+C,IACP1zC,EAAQC,aAAS,CAAEhK,QAASy9C,EAAQ1zC,SAExC,MAAMo2C,EAAwBtmD,EAAZomD,EAAc,OAAY,QAE5C,OACI,kBAAC,IAAD,CACI97C,QAASC,IACTC,mBAAoB,EACpBH,MAAM,EACNI,QAAS9c,KAAK20C,aACd53B,kBAAgB,0BAChBguC,QAAS/qD,KAAKg2D,aACd,yBAAK9yD,UAAU,6BACX,yBAAKoE,MAAO,CAAE0uC,OAAQ,KAAOzzB,GAC3Bk2C,GACE,oCACI,kBAACvgD,EAAA,EAAD,CACI4J,eAAe,EACf3J,aAAY9F,EAAE,QACdnP,UAAU,gCACV4W,KAAK,QACLvJ,QAASvQ,KAAKg4D,iBACd,kBAAC,KAAD,CAAUrI,SAAS,aAEvB,2BACI1yC,IAAKjd,KAAKi4D,aACV/0D,UAAU,yBACVsb,KAAK,OACLu3B,OAAO,UACPrkC,SAAU1R,KAAKk4D,4BAIxBO,GAAaC,GACZ,kBAACrX,GAAA,EAAD,CAAY92C,MAAO8rD,EAAa3kD,SAAU1R,KAAKo4D,kBAAmB9wD,MAAO,CAAE0uC,OAAQ,gBAC/E,kBAACsL,GAAA,EAAD,CAAkB/2C,OAAO,EAAMg3C,QAAS,kBAACnJ,GAAA,EAAD,CAAOhgC,MAAM,YAAakgB,MAAOjmB,EAAE,iBAC3E,kBAACivC,GAAA,EAAD,CAAkB/2C,OAAO,EAAOg3C,QAAS,kBAACnJ,GAAA,EAAD,CAAOhgC,MAAM,YAAakgB,MAAOjmB,EAAE,kBAIxF,yBACI4K,IAAKjd,KAAK81D,WACV51D,GAAG,4BACHgD,UAAU,oBACViQ,iBAAe,EACf+J,gCAA8B,EAC9BC,YAAa9K,EAAE,WACf/N,UAAWtE,KAAKq1B,cAChBhY,QAASrd,KAAKu1B,YACd4U,QAASnqC,KAAK+pC,cAElB,kBAACzsB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQhN,QAASvQ,KAAK20C,aAAcv8B,MAAM,WACrC/F,EAAE,WAEP,kBAACkL,EAAA,EAAD,CAAQhN,QAASvQ,KAAK4zC,WAAYx7B,MAAM,WACnCugD,IAGT,kBAAC,GAAD,CACIj8C,KAAM66C,EACNnE,YAAaA,EACbC,WAAYA,EACZ1X,OAAQ37C,KAAK43D,kBACblE,SAAU1zD,KAAK23D,0BChlBpBvxB,OA5Bf,MACIxmC,YAAYsS,GACRlS,KAAKkS,OAASA,EACdlS,KAAK44D,WAAa,KAGtBC,UAAU5gD,GACN,GAAKjY,KAAKkS,OAAV,CAEA,GAAIlS,KAAK44D,YAAc54D,KAAK44D,WAAW,WAAa3gD,EAAO,SAAU,CACjE,IAAIxX,EAAM,IAAIyoB,KAEd,GADAzoB,EAAIq4D,WAAWr4D,EAAIs4D,aAAeC,MAC9Bh5D,KAAKi5D,gBAAkBj5D,KAAKi5D,eAAiBx4D,EAC7C,OAIRT,KAAK44D,WAAa3gD,EAClBjY,KAAKi5D,eAAiB,IAAI/vC,KAE1B9mB,IAAgBC,KAAK,CACjB,QAAS,iBACT4U,QAASjX,KAAKkS,OACd+F,OAAQA,O,0BCkBpB,MAAMihD,GAAoBr3D,IAAMy5C,KAAK,IAAM,qDA44D5BrpC,qBA14Df,cAAuBnQ,YACnBlC,YAAY4C,GAAQ,IAAD,EACf0B,MAAM1B,GADS,YAqHnB22D,wBAA0B,KAElBtyD,SAASuE,gBAAkBpL,KAAKo5D,cAAcpgD,SAC9ChZ,KAAK+1D,iBAxHM,KAkKnB55B,2BAA6B/3B,IACNpE,KAAKwC,MAAhB0P,OAEO9N,EAAO8N,QArKP,KAwKnBmnD,uBAAyBj1D,IAAW,MACxBiJ,EAASjJ,EAATiJ,KAER,IAAKA,EAAM,OAEX,MAAM6B,EAAUlP,KAAKo5D,cAAcpgD,QAC9B9J,IAELA,EAAQwL,UAAYrN,EACpBs2B,GAAWz0B,KAjLI,KAoLnBoqD,yBAA2Bl1D,IAAW,MAAD,EACHpE,KAAKwC,MADF,EACzB0P,OADyB,EACjBiU,UACEnmB,KAAK+B,MAAfw7C,MAGJv9C,KAAKyC,SAAS,CAAE86C,OAAO,GAAS,KAC5BvyC,WAAW,KACPhL,KAAKyC,SAAS,CAAE86C,OAAO,KACxB,KAGPv9C,KAAKyC,SAAS,CAAE86C,OAAO,KA/LZ,KAmMnBgc,wBAA0Bn1D,IAAW,MACzBwhC,EAAUxhC,EAAVwhC,MACHA,GAEL5lC,KAAKw5D,gBAAgBrrB,MAAM9sC,KAAKukC,KAvMjB,KA0MnBljB,uBAAyBte,IAAW,MAAD,EACGpE,KAAK+B,MAA/BmQ,EADuB,EACvBA,OAAQuiD,EADe,EACfA,cACRx9C,EAAuC7S,EAAvC6S,QAASmD,EAA8BhW,EAA9BgW,YAAaq/C,EAAiBr1D,EAAjBq1D,aAEzBhF,GACAgF,GACDvnD,IAAW+E,IAC6B,IAAxCmD,EAAY+B,QAAQs4C,IAExBz0D,KAAK20C,gBAnNU,KAsNnB+kB,0BAA4Bt1D,IAAW,MAC3B8N,EAAsB9N,EAAtB8N,OAAQiU,EAAc/hB,EAAd+hB,UAEhB,GAD0BnmB,KAAK+B,MAAvB43D,cACW,OACnB,GAAI35D,KAAK+B,MAAMmQ,SAAWA,EAAQ,OAE7BiU,EAGDnmB,KAAK45D,wBAFL55D,KAAK65D,2BAKT,MAAMC,EAA8B,IAAd3zC,GAAmB4zC,aAAc7nD,EAAQiU,GAC/DnmB,KAAKyC,SACD,CACIgyD,cAAetuC,EACf2zC,iBAEJ,KACS95D,KAAK+B,MAAM+3D,gBACZ95D,KAAKg6D,iBACLh6D,KAAK+pC,cACL/+B,WAAW,KACPhL,KAAK2jC,cACN,OA9OA,KAyRnBs2B,0BAA4B71D,IACJA,EAAZg9C,SAGRphD,KAAKk6D,aA7RU,KAgSnBC,yBAA2B/1D,IAAW,MAC1B6S,EAAY7S,EAAZ6S,QADyB,EAECjX,KAAK+B,MAA/BmQ,EAFyB,EAEzBA,OAFyB,EAEjBynD,eAGZznD,IAAW+E,GAEfjX,KAAKo6D,aAvSU,KA0SnBC,4BAA8Bj2D,IAAW,MAClB+f,EAAS/f,EAApBinB,UACR,IAAKlH,EAAM,OAFyB,MAI5BkH,EAAkDlH,EAAlDkH,UAAWrR,EAAuCmK,EAAvCnK,UAAW/I,EAA4BkT,EAA5BlT,MAAO8I,EAAqBoK,EAArBpK,OAAQla,EAAaskB,EAAbtkB,SAC7C,IAAKwrB,EAAW,OAEhB,MAAMnc,EAAUlP,KAAKo5D,cAAcpgD,QACnC,IAAK9J,EAAS,OAEdA,EAAQwL,UAAY,KAEpB1a,KAAKy3D,mBAEL,MAAMj/C,EAAU,CACZ,QAAS,wBACT6S,UAAW,CACP,QAAS,cACTnrB,GAAImrB,EAAUnrB,IAElB+Q,QACA8I,SACAla,YAGJ,GAAIma,EAAW,CAAC,MACGsgD,EAAkDtgD,EAAzD/I,MAA+BspD,EAA0BvgD,EAAlCD,OAAyBpO,EAASqO,EAATrO,KAExD6M,EAAQwB,UAAY,CAChB,QAAS,iBACTA,UAAW,CACP,QAAS,cACT9Z,GAAIyL,EAAKzL,IAEb+Q,MAAOqpD,EACPvgD,OAAQwgD,GAIhBv6D,KAAKw6D,YAAYhiD,GAAS,EAAOjW,QAjVlB,KAoVnBk4D,0BAA4Br2D,IAAW,MAClB+f,EAAS/f,EAAlBjC,QACR,IAAKgiB,EAAM,OAFuB,MAI1BhiB,EAAsCgiB,EAAtChiB,QAAS6X,EAA6BmK,EAA7BnK,UAAW/I,EAAkBkT,EAAlBlT,MAAO8I,EAAWoK,EAAXpK,OACnC,IAAK5X,EAAS,OAEd,MAAM+M,EAAUlP,KAAKo5D,cAAcpgD,QACnC,IAAK9J,EAAS,OAEdA,EAAQwL,UAAY,KAEpB1a,KAAKy3D,mBAEL,MAAMj/C,EAAU,CACZ,QAAS,sBACTrW,QAAS,CACL,QAAS,cACTjC,GAAIiC,EAAQjC,IAEhB+Q,QACA8I,UAGJ,GAAIC,EAAW,CAAC,MACGsgD,EAAkDtgD,EAAzD/I,MAA+BspD,EAA0BvgD,EAAlCD,OAAyBpO,EAASqO,EAATrO,KAExD6M,EAAQwB,UAAY,CAChB,QAAS,iBACTA,UAAW,CACP,QAAS,cACT9Z,GAAIyL,EAAKzL,IAEb+Q,MAAOqpD,EACPvgD,OAAQwgD,GAIhBv6D,KAAKw6D,YAAYhiD,GAAS,EAAOjW,OAEjCH,IAAgBkG,aAAa,CACzB,QAAS,gCACT2hC,KAAM,QA9XK,KAkYnBywB,oBAAsBt2D,IAAW,MAAD,EACqBpE,KAAK+B,MAAtC8hB,EADY,EACpB3R,OAAuBynD,EADH,EACGA,cACvBznD,EAAsB9N,EAAtB8N,OAAQiU,EAAc/hB,EAAd+hB,UAEZtC,IAAkB3R,IAItBlS,KAAKyC,SAAS,CAAEk4D,iBAAkBx0C,IAE9BA,IAAcwzC,GACd35D,KAAK46D,kBA7YM,KAiZnB9hC,qBAAuB10B,IACApE,KAAK+B,MAAhBmQ,SACO9N,EAAO20B,aAEtB/4B,KAAKk6D,YACLl6D,KAAK66D,eAAiB,KACtB76D,KAAKyC,SACD,CACIyP,OAAQ9N,EAAO20B,WACf4hC,iBAAkBG,YAA6B12D,EAAO20B,YACtD07B,cAAe,EACf8C,aAAa,GAEjB,KACIv3D,KAAKo6D,cAIbp6D,KAAK+6D,uBAnaU,KAsanBC,SAAW,KAAO,MACN9oD,EAAWlS,KAAK+B,MAAhBmQ,OAEFhD,EAAUlP,KAAKo5D,cAAcpgD,QAE3BiiD,EAAsB9hD,KAAtB8hD,kBACR,GAAIA,GAAqBA,EAAkBC,aAEvC,YADAl7D,KAAKk2D,iBAAiB,CAAE,QAAS,gBAAiB7oD,KAAM4tD,EAAkBC,aAAc5hD,SAAU,KAItG,MAAMw+B,EAAgBjb,YAAa3qB,GAC/B4lC,GACA93C,KAAKk2D,iBAAiBpe,GACtB93C,KAAKyC,SAAS,CACVk4D,iBAAkBG,YAA6B5oD,MAGnDhD,EAAQwL,UAAY,MAxbT,KAwenBkgD,cAAgB,KACc56D,KAAK+B,MAAvB43D,eAGR3uD,WAAW,KAGP24B,GAFgB3jC,KAAKo5D,cAAcpgD,UAGpC,MAhfY,KAmfnBmiD,oBAAsBC,IAClB,IAAKA,EAAkB,OADe,MAG9BlpD,EAAyBkpD,EAAzBlpD,OAAQmpD,EAAiBD,EAAjBC,aACXnpD,GAEL9P,IAAgBC,KAAK,CACjB,QAAS,sBACT4U,QAAS/E,EACTopD,cAAeD,KA5fJ,KAggBnBE,gBAAkB,CAACrpD,EAAQyoD,EAAkBxsD,KACzC,MAAMoQ,EAAOR,KAAUlS,IAAIqG,GAC3B,IAAKqM,EAAM,OAF4C,MAI/C+8C,EAAkB/8C,EAAlB+8C,cAJ+C,EAK5BhF,aAAYnoD,GAA/Bd,EAL+C,EAK/CA,KAAMiM,EALyC,EAKzCA,SACR+hD,EACDhuD,GAAQA,EAAKqH,OAAS,GAAM4E,EAAS5E,OAAS,EACzC,CACI,QAAS,eACT6E,oBAAqBohD,EACrBa,mBAAoB,CAChB,QAAS,mBACTnuD,KAAM,CACF,QAAS,gBACTA,OACAiM,YAEJM,0BAA0B,EAC1BC,aAAa,IAGrB,KAEV,OAAI4hD,YAAYH,EAAeD,GACpB,KAGJ,CAAEnpD,SAAQmpD,iBA5hBF,KA+hBnBK,aAAe,CAACC,GAAc,KAAU,MAAD,EACgD37D,KAAK+B,MAAhFmQ,EAD2B,EAC3BA,OAAQuiD,EADmB,EACnBA,cAAiCmH,GADd,EACJjB,iBADI,EACciB,gBAAgBjC,EAD9B,EAC8BA,cAEjE,GAAIA,EAAe,CACf,GAAK,IAAIzwC,KAASywC,EAAiBkC,KAC/B,OAIJ,YADA77D,KAAK87D,mBAEF,GAAIF,EAEP,YADID,GAAa37D,KAAK+7D,gBAI1B,MAAM7sD,EAAUlP,KAAKo5D,cAAcpgD,QACnC,IAAK9J,EAAS,OAhBqB,IAkB7Bf,EAAce,EAAdf,UAKN,GAHAe,EAAQwL,UAAY,KACpB1a,KAAK+pC,eAEA57B,EAAW,OAChB,IAAKA,EAAU4M,OAAQ,OAxBY,QA0BRu7C,aAAYnoD,GAEjC2pC,EAAgB,CAClB,QAAS,gBACTzqC,KA9B+B,EA0B3BA,KAKJiM,SA/B+B,EA0BrBA,UAOR0iD,EAAe,CACjB,QAAS,mBACT3uD,KAAMyqC,EACNl+B,0BAA0B,EAC1BC,aAAa,GAGjB,GAAI46C,EAAe,CACf,MAAMwH,EAAgB3jD,IAAazM,IAAIqG,EAAQuiD,GAC/C,IAAKwH,EAAe,OAFL,MAIPzjD,EAAYyjD,EAAZzjD,QACR,IAAKA,EAAS,OALC,MAOPnL,EAAkBmL,EAAlBnL,KAAMgM,EAAYb,EAAZa,QACVhM,EACArN,KAAKk8D,gBAAgBF,EAAcz5D,OAC5B8W,GACPrZ,KAAKm8D,mBAAmBrkB,GAE5B4c,YAAYxiD,EAAQ,QAEpBlS,KAAKw6D,YAAYwB,GAAc,EAAOz5D,QAtlB3B,KA0lBnBkrD,iBAAmB,KACfrrD,IAAgBkG,aAAa,CACzB,QAAS,yBA5lBE,KAgmBnB8kD,kBAAoB,KACXptD,KAAKo1C,gBAEVp1C,KAAKo1C,eAAep8B,QAAQq8B,SAnmBb,KA0nBnB+mB,0BA1nBmB,qBA0nBS,oCAAA1pD,EAAA,wDAEH,KADbkzB,EAAU,EAAKwP,eAAep8B,QAA9B4sB,OACElxB,OAFc,oDAIH,IAAjBkxB,EAAMlxB,OAJc,sBAKSy5B,MAAM9sC,KAAKukC,GALpB,kBAKZy2B,EALY,gBAMfA,EANe,iEAQE,EAAKC,WAAWD,GAAS,GAR3B,OAQdpG,EARc,OAUpB,EAAKxzD,SAAS,CACVq3D,eAAe,EACf7D,YAZgB,wBAepB9nB,MAAM9sC,KAAKukC,GAAOxkC,QAAlB,sCAA0B,WAAMuK,GAAN,uBAAA+G,EAAA,qEACQ6iC,YAAc5pC,GADtB,mCACfsF,EADe,KACR8I,EADQ,KAGhBvB,EAAU,CACZ,QAAS,oBACTC,MAAO,CAAE,QAAS,gBAAiBk+B,KAAMhrC,EAAKgrC,KAAM78B,KAAMnO,EAAKmO,KAAMuO,KAAM1c,GAC3EsF,QACA8I,UAGJ,EAAKwiD,gBAAgB/jD,EAAS7M,GAVR,yCAA1B,uDAfoB,QA6BxB,EAAKypC,eAAep8B,QAAQzO,MAAQ,GA7BZ,0CA1nBT,KA0pBnBgjD,qBAAuB,KACdvtD,KAAKw8D,mBAEVx8D,KAAKw8D,kBAAkBxjD,QAAQq8B,SA7pBhB,KAgqBnBonB,6BAhqBmB,qBAgqBY,oCAAA/pD,EAAA,wDAEN,KADbkzB,EAAU,EAAK42B,kBAAkBxjD,QAAjC4sB,OACElxB,OAFiB,oDAIN,IAAjBkxB,EAAMlxB,OAJiB,sBAKMy5B,MAAM9sC,KAAKukC,GALjB,kBAKfy2B,EALe,gBAMlBA,EANkB,iEAQD,EAAKC,WAAWD,GAAS,GARxB,OAQjBpG,EARiB,OAUvB,EAAKxzD,SAAS,CACVq3D,eAAe,EACf7D,YAZmB,wBAevB9nB,MAAM9sC,KAAKukC,GAAOxkC,QAAQuK,IACtB,MAAM6M,EAAU,CACZ,QAAS,uBACT3R,SAAU,CAAE,QAAS,gBAAiB8vC,KAAMhrC,EAAKgrC,KAAM78B,KAAMnO,EAAKmO,KAAMuO,KAAM1c,IAGlF,EAAK+wD,mBAAmBlkD,EAAS7M,KArBd,QAyB3B,EAAK6wD,kBAAkBxjD,QAAQzO,MAAQ,GAzBZ,0CAhqBZ,KAkxBnBusD,YAAc,KACVjwD,SAASkN,YAAY,gBAAgB,EAAO,MAC5ClN,SAASkN,YAAY,UAAU,EAAO,OApxBvB,KAuxBnB2iD,WAAa,KACT7vD,SAASkN,YAAY,gBAAgB,EAAO,MAC5ClN,SAASkN,YAAY,UAAU,EAAO,MAEtClN,SAASkN,YAAY,QAAQ,EAAO,OA3xBrB,KA8xBnB4iD,aAAe,KACX9vD,SAASkN,YAAY,gBAAgB,EAAO,MAC5ClN,SAASkN,YAAY,UAAU,EAAO,MAEtClN,SAASkN,YAAY,UAAU,EAAO,OAlyBvB,KAqyBnB6iD,WAAa,KACT/vD,SAASkN,YAAY,gBAAgB,EAAO,MAC5ClN,SAASkN,YAAY,UAAU,EAAO,MAEtC,IAAI1G,EAAO,GAJI,MAKP22B,EAAchkC,KAAdgkC,UACJA,IAAcA,EAAU+qB,cACxB1hD,EAAO22B,EAAU6qB,YAGhBxhD,IACLA,EAAI,gBAAYA,EAAZ,WACJxG,SAASkN,YAAY,gBAAgB,EAAO,MAC5ClN,SAASkN,YAAY,cAAc,EAAO1G,KAlzB3B,KAqzBnB0pD,gBAAkB,KACdlwD,SAASkN,YAAY,gBAAgB,EAAO,MAC5ClN,SAASkN,YAAY,UAAU,EAAO,MAEtClN,SAASkN,YAAY,aAAa,EAAO,OAzzB1B,KA4zBnBijD,oBAAsB,KAClBnwD,SAASkN,YAAY,gBAAgB,EAAO,MAC5ClN,SAASkN,YAAY,UAAU,EAAO,MAEtClN,SAASkN,YAAY,iBAAiB,EAAO,OAh0B9B,KAm0BnB8iD,UAAY,KACR72D,KAAKi3D,qBAp0BU,KAu0BnBtiB,aAAe,KAAO,MAAD,EACmC30C,KAAK+B,MAAjDmQ,EADS,EACTA,OAAQuiD,EADC,EACDA,cAAekG,EADd,EACcA,iBAC/B,OAAIlG,GACAC,YAAYxiD,EAAQ,IACb,KACAyoD,IACPhG,YAAaziD,EAAQ,IACd,IA90BI,KAo1BnBmjB,cAAgBhxB,IAAU,MACdI,EAAoFJ,EAApFI,OAAQC,EAA4EL,EAA5EK,QAAiCC,GAA2CN,EAAnEE,IAAmEF,EAA9DuW,QAA8DvW,EAArDs4D,SAAqDt4D,EAA3CM,SAASC,EAAkCP,EAAlCO,SAAU6xD,EAAwBpyD,EAAxBoyD,OAAQjtD,EAAgBnF,EAAhBmF,YADvD,EAEuBxJ,KAAK+B,MAAzC0yD,EAFa,EAEbA,cAAekG,EAFF,EAEEA,iBAWvB,IADwBnxD,EAAhBsmC,YAKR,OAAQtmC,EAAYhF,MAEhB,IAAK,SACD,GAAIC,GAAUC,IAAYC,IAAYC,EAAU,CAC5C,GAAI6vD,EAAe,OACnB,GAAIkG,EAAkB,OAEtBt2D,EAAM6B,iBAEV,MAEJ,IAAK,QACL,IAAK,cAEIzB,KAAWC,GAAWC,GAAWC,IAAc6xD,EAO1ChyD,GAAWC,GAAYC,GAAYC,GAAa6xD,IACtDz2D,KAAK07D,cAAa,GAElBr3D,EAAM6B,iBACN7B,EAAM4B,oBAVNY,SAASkN,YAAY,mBAErB1P,EAAM6B,iBACN7B,EAAM4B,mBASV,MAGJ,IAAK,SACIxB,GAAWC,GAAYC,GAAYC,IAC/B6xD,GAAUz2D,KAAK20C,iBAChBtwC,EAAM6B,iBACN7B,EAAM4B,mBAGd,MAGJ,IAAK,UACD,IAAKwwD,IAAWhyD,IAAWC,IAAYC,IAAYC,EAAU,CACzD,MAAMsK,EAAUlP,KAAKo5D,cAAcpgD,QACnC,GAAI9J,IAAYA,EAAQwL,UAAW,CAE/B,GAD0B1a,KAAK+B,MAAvB0yD,cACW,OAEnBryD,IAAgBkG,aAAa,CACzB,QAAS,+BAGbjE,EAAM6B,iBACN7B,EAAM4B,mBAGd,MAGJ,IAAK,OACIxB,IAAWC,IAAWC,GAAaC,GAAa6xD,IACjDz2D,KAAK02D,aAELryD,EAAM6B,iBACN7B,EAAM4B,mBAEV,MAGJ,IAAK,OACIxB,IAAWC,IAAWC,GAAaC,GAAa6xD,IACjDz2D,KAAK22D,eAELtyD,EAAM6B,iBACN7B,EAAM4B,mBAEV,MAEJ,IAAK,OAEIxB,IAAWC,IAAWC,GAAaC,GAAa6xD,GAO5ChyD,IAAWC,IAAWC,GAAaC,GAAa6xD,IACrDz2D,KAAK42D,aAELvyD,EAAM6B,iBACN7B,EAAM4B,oBAVNjG,KAAK62D,YAELxyD,EAAM6B,iBACN7B,EAAM4B,mBASV,MAGJ,IAAK,QACGxB,IAAWC,IAAWC,GAAaC,GAAa6xD,IAChDz2D,KAAK82D,cAELzyD,EAAM6B,iBACN7B,EAAM4B,qBAz8BH,KAg9BnBs2D,gBAAkB,CAAC/jD,EAAS7M,KACnB6M,GAELxY,KAAKw6D,YAAYhiD,GAAS,EAAMjW,IAC5B,MAAMq6D,EAAgBtkD,IAAazM,IAAItJ,EAAO0U,QAAS1U,EAAOrC,IACzC,MAAjB08D,GACA58D,KAAK68D,qBAAqBD,EAAejxD,GAG7CC,IAAUkxD,WAAWv6D,EAAOiW,QAAQC,MAAMC,MAAM,GAAGD,MAAMvY,GAAIqC,MAz9BlD,KA69BnBw6D,eAAiBhN,IACb/vD,KAAKw6D,YAAYzK,GAAM,EAAM,SA99Bd,KAi+BnB2M,mBAAqB,CAAClkD,EAAS7M,KACtB6M,GAELxY,KAAKw6D,YAAYhiD,GAAS,EAAMjW,GAAUqJ,IAAUkxD,WAAWv6D,EAAOiW,QAAQ3R,SAASA,SAAS3G,GAAIqC,KAp+BrF,KAu+BnBy6D,gBAAkB,CAACxkD,EAAS7M,KACnB6M,GAELxY,KAAKw6D,YAAYhiD,GAAS,EAAMjW,GAAUqJ,IAAUkxD,WAAWv6D,EAAOiW,QAAQwK,MAAMA,MAAM9iB,GAAIqC,KA1+B/E,KA6+BnB06D,oBAAsB,CAACzkD,EAAS7M,KACvB6M,GAELxY,KAAKw6D,YAAYhiD,GAAS,EAAMjW,GAAUqJ,IAAUkxD,WAAWv6D,EAAOiW,QAAQ6Y,WAAWzE,MAAM1sB,GAAIqC,KAh/BpF,KAogCnBgzB,YApgCmB,sCAogCL,WAAMlxB,GAAN,qBAAAqO,EAAA,0DACQrO,EAAMwX,eAAiBxX,EAAM64D,cAAcrhD,cAArDyR,EADE,EACFA,MADE,oDAIJsY,EAAQ,GACduI,MAAM9sC,KAAKisB,GAAOlsB,QAAQ+iB,IACtB,GAAkC,IAA9BA,EAAKg5C,KAAKhhD,QAAQ,QAAe,CACjC,MAAMxQ,EAAOwY,EAAKi5C,YACdzxD,GACAi6B,EAAM9vB,KAAKnK,QAKnBi6B,EAAMlxB,OAAS,GAdT,uBAeNrQ,EAAM6B,iBAEN,EAAKszD,gBAAgB5zB,GAjBf,+BAqBJhqB,EAAYvX,EAAMwX,cAAcC,QAAQ,eArBpC,wBAuBNzX,EAAM6B,iBACNW,SAASkN,YAAY,cAAc,EAAO6H,GAxBpC,6DApgCK,2DAiiCnByhD,mBAAqB,KAAO,MAChBz3B,EAAU5lC,KAAK+B,MAAf6jC,MACHA,GACAA,EAAMlxB,SAEXkxB,EAAMxkC,QAAQuK,IACV,MAAM6M,EAAU,CACZ,QAAS,uBACT3R,SAAU,CAAE,QAAS,gBAAiB8vC,KAAMhrC,EAAKgrC,KAAMtuB,KAAM1c,IAGjE3L,KAAK08D,mBAAmBlkD,EAAS7M,KAGrC3L,KAAKs9D,sBA/iCU,KAkjCnBA,kBAAoB,KAChBt9D,KAAKyC,SAAS,CAAEmjC,MAAO,QAnjCR,KAsjCnB23B,yBAA2B,KACFv9D,KAAK+B,MAAlBy7D,WAGRx9D,KAAKo6D,YACLp6D,KAAKy9D,4BA3jCU,KA8jCnBA,wBAA0B,KACtBz9D,KAAKyC,SAAS,CAAE+6D,SAAU,QA/jCX,KAkkCnBX,qBAAuB,CAACnlD,EAASovB,KAC7B,IAAKpvB,EAAS,OADwB,MAG9BinB,EAAwCjnB,EAAxCinB,cAAenmB,EAAyBd,EAAzBc,QAASvB,EAAgBS,EAAhBT,QAAS/W,EAAOwX,EAAPxX,GACzC,IAAKy+B,EAAe,OACpB,GAA+B,+BAA3BA,EAAc,SAA2C,OAC7D,GAAyB,iBAArBnmB,EAAQ,SAA6B,OANH,MAQ9BC,EAAUD,EAAVC,MACR,IAAKA,EAAO,OAEZ,MAAMqB,EAAOkO,YAAQvP,EAAMC,MAAOmQ,KAClC,IAAK/O,EAAM,OAZ2B,MAcvBnO,EAASmO,EAAhBrB,MACH9M,IAELC,IAAU8xD,QAAQ/xD,EAAKzL,GAAI4mC,GAC3Bl7B,IAAU+xD,gBAAgB1mD,EAAS/W,EAAIyL,EAAKzL,MAplC7B,KA0oCnBs6D,YA1oCmB,sCA0oCL,WAAOhiD,EAASolD,EAAYrnC,GAA5B,qBAAA7jB,EAAA,0DAC2B,EAAK3Q,MAAlCmQ,EADE,EACFA,OAAQyoD,EADN,EACMA,iBAEXzoD,EAHK,oDAILsG,EAJK,0EAOAW,KAASC,sBAAT,0CAAkElH,IAPlE,wBAQe9P,IAAgBC,KAAK,CACtC,QAAS,cACT4U,QAAS/E,EACTqH,oBAAqBohD,EACrBhhD,sBAAuBnB,IAZrB,QAQAjW,EARA,OAeN,EAAKE,SAAS,CAAEk4D,iBAAkB,GAAK,KAC/BiD,GACA,EAAK1D,cAKb93D,IAAgBC,KAAK,CACjB,QAAS,eACT4U,QAAS/E,EACTkI,YAAa,CAAC7X,EAAOrC,MAGrBy6D,GACAhG,YAAaziD,EAAQ,GAGzBqkB,EAASh0B,GAhCH,kDAkCNs7D,MAAM,qBAAuBt5B,KAAKI,UAAL,OAlCvB,wDA1oCK,+DAgrCnBm5B,kBAAoB97D,IACXA,IAELhC,KAAKy3D,mBACL5wD,SAASkN,YAAY,cAAc,EAAO/R,EAAM+7D,QAChD/9D,KAAK+pC,gBArrCU,KAwrCnBA,YAxrCmB,sCAwrCL,WAAM1lC,GAAN,SAAAqO,EAAA,qDACV,EAAKmmD,YACL,EAAKmF,WACL,EAAKC,yBAHK,yCAxrCK,2DAisCnBC,wBAA0B,KAAO,MACZzpD,EAAUzU,KAAKo5D,cAAxBpgD,QACR,IAAKvE,EAAO,OAEZA,EAAMnL,QACN,IAAI60D,EAASt3D,SAASo9B,eAAeu0B,WAAW,GAC5C50B,EAAQu6B,EAAOC,aAInB,OAHAx6B,EAAMy6B,mBAAmB5pD,GACzBmvB,EAAMm0B,OAAOoG,EAAOhH,aAAcgH,EAAOG,WAElC,CAAEjxD,KAAMoH,EAAMiG,UAAWpH,SAAUswB,EAAMirB,WAAWn6C,SA3sC5C,KAy7CnBuiD,kBAAoB,KAChB,IAAI7D,EAAc,GACdC,EAAa,GAFK,MAIdrvB,EAAqBhkC,KAArBgkC,UAAWJ,EAAU5jC,KAAV4jC,MACnB,GAAIA,EAAO,CAAC,IACFszB,EAAiCtzB,EAAjCszB,eACN,GAAIA,IADmCtzB,EAAjBuzB,aACe,CAAC,MAC1BC,EAAkBF,EAAlBE,cACJA,GAA4C,MAA3BA,EAAcC,WAC/BjE,EAAcgE,EAAc18C,UAC5B24C,EAAa+D,EAAcE,OAKlClE,IAAepvB,GAAcA,EAAU+qB,cACxCqE,EAAcpvB,EAAU6qB,YAG5B7uD,KAAKyC,SAAS,CACV80D,aAAa,EACblE,aACAD,iBAh9CW,KAo9CnBoE,mBAAqB,KACjBx3D,KAAKyC,SACD,CACI80D,aAAa,GAEjB,KACIv3D,KAAKy3D,sBA19CE,KAs/CnB9zB,WAAa,KACT,MAAMz0B,EAAUlP,KAAKo5D,cAAcpgD,QACnC,IAAK9J,EAAS,OACd,IAAKA,EAAQu0B,WAAW/uB,OAEpB,YADAxF,EAAQ5F,QAIZ,MAAMi1D,EAAel7B,GAAiBn0B,GACtC,IAAKqvD,EACD,OAGJ,MAAM36B,EAAQ/8B,SAASg9B,cACvBD,EAAME,SAASy6B,EAAcA,EAAa7pD,QAC1CkvB,EAAMG,UAAS,GAEf,MAAMC,EAAYl3B,OAAOm3B,eACzBD,EAAUE,kBACVF,EAAUG,SAASP,GAEnB10B,EAAQ5F,SA3gDO,KA8gDnBquD,oBAAsB,KAClB33D,KAAKw3D,sBA/gDU,KAkhDnBI,kBAAoB,CAACvqD,EAAM4V,KACvBjjB,KAAKw3D,qBACLxsD,WAAW,KAAM,MAEL44B,EAAU5jC,KAAV4jC,MACR,GAAIA,EAAO,CAAC,MACAszB,EAAiCtzB,EAAjCszB,eAAgBC,EAAiBvzB,EAAjBuzB,aACxB,GAAID,GAAkBA,IAAmBC,EAAc,CAAC,MAC5CU,EAAeX,EAAfW,WACR,GAAIA,GAAsC,MAAxBA,EAAWR,SAAkB,CAC3CQ,EAAWP,KAAOr0C,EAClB40C,EAAW15C,MAAQ8E,EACnB40C,EAAWn9C,UAAYrN,EAHoB,MAMnC8hD,EAAc0I,EAAd1I,UACR,GAAIA,EAAW,CACX,MAAMvrB,EAAQ/8B,SAASg9B,cACvBD,EAAME,SAASqrB,EAAWA,EAAU2I,YAAYpjD,QAChDkvB,EAAMm0B,OAAO5I,EAAWA,EAAU2I,YAAYpjD,QAE9C,MAAMsvB,EAAYn9B,SAASo9B,eAC3BD,EAAUE,kBACVF,EAAUG,SAASP,GAEvB,SAMZ,MAAMpsB,EAAI,kBAAcyL,EAAd,kBAA2BA,EAA3B,sDAA4E5V,EAA5E,QACVxG,SAASkN,YAAY,gBAAgB,EAAO,MAC5ClN,SAASkN,YAAY,cAAc,EAAOyD,IAC3C,IApjDY,KAujDnBgnD,sBAAwB,KACpBx+D,KAAKy+D,wBAxjDU,KA2jDnBzG,gBA3jDmB,sCA2jDD,WAAO3+C,EAASb,GAAhB,2BAAA9F,EAAA,yDACV8F,EADU,iCAEY,EAAKkmD,iBAAiBlmD,GAFlC,YAEJd,EAFI,yBAIWinD,EAAgBjnD,EAAzBc,QAJF,KAKEmmD,EAAY,SALd,OAMG,iBANH,0BAOiBC,EAAcpmD,EAArBC,MAPV,wDAUgBquB,EAAS83B,EAAfv2C,KAVV,wDAaU5P,EAAUkmD,EAAVlmD,MAbV,wDAgBQomD,EAAQpmD,EAAMC,MAAMqG,KAAKpe,GAAgB,MAAXA,EAAE6d,MAhBxC,4DAmBiB7S,EAASkzD,EAAhBpmD,QAEJ7M,IAAU8xD,QAAQ/xD,EAAKzL,GAAI4mC,GArBjC,+DA8Bd,EAAKq1B,mBAAmB9iD,GA9BV,0CA3jDC,6DA4lDnBylD,gBAAkB,CAACtmD,EAAS7M,KAGxB,OAFA3L,KAAKy+D,sBAAqB,GAElBjmD,EAAQ,UACZ,IAAK,oBACDxY,KAAKg9D,gBAAgBxkD,EAAS7M,GAC9B,MAEJ,IAAK,oBACD3L,KAAKu8D,gBAAgB/jD,EAAS7M,GAC9B,MAEJ,IAAK,uBACD3L,KAAK08D,mBAAmBlkD,EAAS7M,KAzmD1B,KAmoDnBumB,kBAAoB,KAChBlnB,WAAW,IAAMhL,KAAKy3D,mBAAoB,IApoD3B,KAuoDnBqE,iBAAmB,CAACiD,GAAY,KACvB/+D,KAAKg/D,WAEVh/D,KAAKg/D,SAASD,UAAYA,EAC1B/+D,KAAKg/D,SAASz9D,OACdvB,KAAKg/D,SAASC,OAAOC,iBAAiB99D,QAAQmQ,GAASA,EAAMhQ,UA5oD9C,KA+oDnBw5D,mBAAqB,KACjB/6D,KAAK87D,kBAAiB,IAhpDP,KAmpDnBC,aAnpDmB,qBAmpDJ,sCAAArpD,EAAA,yDACP,EAAKssD,SADE,wDAGPC,EAAS,KAHF,kBAKQtsD,UAAUwsD,aAAaC,aAAa,CAAEp8C,OAAO,IALrD,UAKPi8C,EALO,QAMH,EAAKD,SANF,8GASNC,EATM,wBAUP,EAAKx8D,SAAS,CACV48D,wBAAwB,IAXrB,2BAgBLC,EAAc,CAChBC,aAAc,EACdC,WAAY,MAGFP,EAAOC,iBAAiB,GAChCO,iBAAiBH,GAEjBx/D,EAAU,CAAE4/D,SAAU,yBAA0BC,mBAAoB,MACpEC,EAAgB,CAClBC,qBAAsB,WAClB,OAAO,IAAIC,OAAOC,yDAEtBC,uBAAwBD,uDAGtBf,EAAW,IAAIiB,KAAchB,EAAQn/D,EAAS8/D,GAE9CM,EAAS,GAEflB,EAASmB,gBAAkBtvD,IACvBqvD,EAAOpqD,KAAKjF,EAAEwX,OAElB22C,EAASoB,QAAU,OAGnBpB,EAASqB,OAAS,KACdj+D,IAAgBkG,aAAa,CAAE,QAAS,2BACxC,EAAK7F,SAAS,CAAEk3D,cAAe,OAFX,MAIZoF,EAAc,EAAKC,SAAnBD,UAIR,GAHA,EAAKC,SAAW,KAEhB,EAAK5E,YACD2E,EACA,OAIJ,MAAMj4B,EAAO,IAAIw5B,KAAKJ,EAAQ,CAAE,KAAS,2BACnCK,EAAWzzD,OAAOie,IAAIkqB,gBAAgBnO,GAEtC9jB,EAAQ,IAAIw9C,MAAMD,GACxBv9C,EAAMrV,UAAY,KACd,MAAM6K,EAAU,CACZ,QAAS,wBACT6Y,WAAY,CAAE,QAAS,gBAAiBslB,KAAM,GAAI78B,KAAMgtB,EAAKhtB,KAAMuO,KAAMye,GACzEjnC,SAAUkB,KAAK0/D,MAAMz9C,EAAMnjB,UAC3B6gE,SAAU,GACVrnD,QAAS,MAGb,EAAK4jD,oBAAoBzkD,EAASsuB,KAG1Ck4B,EAASv3B,QAAU,KACfrlC,IAAgBkG,aAAa,CAAE,QAAS,4BACxC,EAAK7F,SAAS,CAAEk3D,cAAe,OAE/B,EAAKS,aAIT,EAAK4E,SAAWA,EAChB,EAAKA,SAASj/D,MAAM,IACpB,EAAKO,UAAY,IAAI4oB,KAErB9mB,IAAgBkG,aAAa,CAAE,QAAS,4BACxC,EAAK7F,SAAS,CAAEk3D,cAAe,IAAIzwC,OApFxB,wDAnpDI,KA0uDnBy3C,sBAAwB,KACpB3gE,KAAKyC,SAAS,CACV48D,wBAAwB,KAzuD5Br/D,KAAKw8D,kBAAoB36D,IAAMya,YAC/Btc,KAAKo1C,eAAiBvzC,IAAMya,YAC5Btc,KAAKo5D,cAAgBv3D,IAAMya,YAE3B,MAAMpK,EAASiH,KAAS0oB,YAExB7hC,KAAK+B,MAAQ,CACTmQ,SACAyoD,iBAAkBG,YAA6B5oD,GAC/CuiD,cAAe,EACfmH,gBAAgB,EAChBjC,cAAe,KACf0F,wBAAwB,EACxBuB,SAAU,MAGd/5D,SAASkN,YAAY,6BAA6B,EAAO,MAG7D6J,sBAAsBC,EAAWC,GAAY,MACjCzL,EAAMrS,KAAKwC,MAAX6P,EADgC,EAepCrS,KAAK+B,MAZLmQ,EAHoC,EAGpCA,OACAsrD,EAJoC,EAIpCA,SACA53B,EALoC,EAKpCA,MACA+0B,EANoC,EAMpCA,iBACAlG,EAPoC,EAOpCA,cACAqF,EARoC,EAQpCA,cACAvC,EAToC,EASpCA,YACAqJ,EAVoC,EAUpCA,SACAhF,EAXoC,EAWpCA,eACAjC,EAZoC,EAYpCA,cACA0F,EAboC,EAapCA,uBACA9hB,EAdoC,EAcpCA,MAGJ,OAAI1/B,EAAUxL,IAAMA,IAIhByL,EAAU5L,SAAWA,IAIrB4L,EAAU0/C,WAAaA,IAIvB1/C,EAAU8nB,QAAUA,IAIpB9nB,EAAU68C,mBAAqBA,IAI/B78C,EAAU22C,gBAAkBA,IAI5B32C,EAAU8iD,WAAaA,IAIvB9iD,EAAUy5C,cAAgBA,IAI1Bz5C,EAAUg8C,gBAAkBA,IAI5Bh8C,EAAU67C,gBAAkBA,IAI5B77C,EAAU89C,iBAAmBA,IAI7B99C,EAAUuhD,yBAA2BA,GAIrCvhD,EAAUy/B,QAAUA,aAO5B6c,YACIp6D,KAAKg7D,WACLh7D,KAAK46D,gBACL56D,KAAK+pC,cAGTmwB,YAAa,MAAD,EAC4Cl6D,KAAK+B,MAAjDmQ,EADA,EACAA,OAAQuiD,EADR,EACQA,cAAekG,EADvB,EACuBA,iBAEzBzrD,EAAUlP,KAAKo5D,cAAcpgD,QACnC,IAAK9J,EAAS,OAEd,IAAIf,EAAY,KAEZA,EADAsmD,EACYz0D,KAAK66D,eAAiB76D,KAAK66D,eAAe1sD,UAAY,KAEtDe,EAAQf,UAGxB,MAAMktD,EAAer7D,KAAKu7D,gBAAgBrpD,EAAQyoD,EAAkBxsD,GACpEnO,KAAKm7D,oBAAoBE,GAU7Br4D,oBACI6D,SAASkG,iBAAiB,kBAAmB/M,KAAKm5D,yBAAyB,GAE3E0H,KAAe7zD,GAAG,4BAA6BhN,KAAKq6D,6BACpDlhD,KAASnM,GAAG,yBAA0BhN,KAAKs5D,0BAC3CngD,KAASnM,GAAG,qBAAsBhN,KAAK84B,sBACvC3f,KAASnM,GAAG,0BAA2BhN,KAAKi6D,2BAC5Cl8C,KAAU/Q,GAAG,yBAA0BhN,KAAKm6D,0BAC5CvuD,IAAUoB,GAAG,wBAAyBhN,KAAKu5D,yBAC3CjhD,IAAatL,GAAG,0BAA2BhN,KAAK05D,2BAChDphD,IAAatL,GAAG,oBAAqBhN,KAAK06D,qBAC1CpiD,IAAatL,GAAG,uBAAwBhN,KAAKq5D,wBAC7C/gD,IAAatL,GAAG,uBAAwBhN,KAAK0iB,wBAC7Co+C,KAAa9zD,GAAG,0BAA2BhN,KAAKy6D,2BAEhDz6D,KAAKo6D,YAGTntD,uBACIjN,KAAKk6D,YAEL2G,KAAezzD,IAAI,4BAA6BpN,KAAKq6D,6BACrDlhD,KAAS/L,IAAI,yBAA0BpN,KAAKs5D,0BAC5CngD,KAAS/L,IAAI,qBAAsBpN,KAAK84B,sBACxC3f,KAAS/L,IAAI,0BAA2BpN,KAAKi6D,2BAC7Cl8C,KAAU3Q,IAAI,yBAA0BpN,KAAKm6D,0BAC7CvuD,IAAUwB,IAAI,wBAAyBpN,KAAKu5D,yBAC5CjhD,IAAalL,IAAI,0BAA2BpN,KAAK05D,2BACjDphD,IAAalL,IAAI,oBAAqBpN,KAAK06D,qBAC3CpiD,IAAalL,IAAI,uBAAwBpN,KAAK0iB,wBAC9CpK,IAAalL,IAAI,uBAAwBpN,KAAKq5D,wBAC9CyH,KAAa1zD,IAAI,0BAA2BpN,KAAKy6D,2BAEjD5zD,SAASsG,oBAAoB,kBAAmBnN,KAAKm5D,yBAAyB,GAE9En5D,KAAK+6D,qBAqFTlB,2BACI,MAAM3qD,EAAUlP,KAAKo5D,cAAcpgD,QACnC,IAAK9J,EAAS,OAFS,MAIf2rD,EAAmB76D,KAAnB66D,eAER,GAAIA,EAAgB,CAGhB,GAFA3rD,EAAQf,UAAY0sD,EAAe1sD,WAE9B0sD,EAAej3B,MAEhB,YADA5jC,KAAK2jC,aAIT,MAAMK,EAAYn9B,SAASo9B,eAC3BD,EAAUE,kBACVF,EAAUG,SAAS02B,EAAej3B,OAElC10B,EAAQ5F,aAER4F,EAAQf,UAAY,KACpBnO,KAAK2jC,aAGT3jC,KAAK+pC,cAGT6vB,wBACI,MAAM1qD,EAAUlP,KAAKo5D,cAAcpgD,QAC9B9J,IAELlP,KAAK66D,eAAiB,CAClB1sD,UAAWe,EAAQf,UACnBy1B,MAAO5jC,KAAK4jC,QAuKpBo2B,iBAAkB,MAAD,EACqBh6D,KAAK+B,MAA/BmQ,EADK,EACLA,OAAQuiD,EADH,EACGA,cAEV/8C,EAAUY,IAAazM,IAAIqG,EAAQuiD,GACzC,IAAK/8C,EAAS,OAJD,MAMLc,EAAYd,EAAZc,QACR,IAAKA,EAAS,OAPD,MASLnL,EAAkBmL,EAAlBnL,KAAMgM,EAAYb,EAAZa,QACd,IAAKhM,IAASgM,EAAS,OAEvB,MAAMnK,EAAUlP,KAAKo5D,cAAcpgD,QAE/B3L,EACArN,KAAKk2D,iBAAiB7oD,GACfgM,EACPrZ,KAAKk2D,iBAAiB78C,GAEtBnK,EAAQwL,UAAY,KAI5Bw7C,iBAAiBpe,GAAgB,MACrBzlC,EAAMrS,KAAKwC,MAAX6P,EACFnD,EAAUlP,KAAKo5D,cAAcpgD,QAEnC,IAAK8+B,EAED,YADA5oC,EAAQwL,UAAY,MALI,MASpBrN,EAAmByqC,EAAnBzqC,KAAMiM,EAAaw+B,EAAbx+B,SACd,IACI,MAAM++C,EAAQC,aAASjrD,EAAMiM,EAAUjH,GACvCnD,EAAQf,UAAY,KACpBkqD,EAAMj3D,QAAQT,IACVuO,EAAQd,YAAYzN,KAE1B,MAAOkQ,GACL3B,EAAQwL,UAAYrN,GAkItBivD,WAAW3wD,EAAMo1D,GAAa,IAAD,2HAC1Bp1D,EAD0B,yCACb,MADa,WAGzB0N,EAAU,EAAK+/C,cAAcpgD,QAAQ7K,aAEvC,EAAKirD,cAAcpgD,QAAQ7K,UAAY,KACvC,EAAK47B,gBAGKg3B,EATiB,iCAUnB5I,aAAsBxsD,GAVH,4DAWnBq1D,aAAyBr1D,GAXN,mCASzB4W,EATyB,uBAaxB,CACH5W,OACA4W,QACAlJ,YAhB2B,4CAsFnCw/C,YAAa,MAAD,EAC0B74D,KAAK+B,MAA/BmQ,EADA,EACAA,OAAQuiD,EADR,EACQA,cACVl2C,EAAOR,KAAUlS,IAAIqG,GAC3B,IAAKqM,EAAM,OAEX,MAAMrP,EAAUlP,KAAKo5D,cAAcpgD,QACnC,IAAK9J,EAAS,OANN,MAQAf,EAAce,EAAdf,UACU,SAAdA,GAAsC,oBAAdA,IACxBe,EAAQf,UAAY,MAEFe,EAAdwL,YAGJ2F,aAASnO,IACTuiD,IAEkBl2C,EAAK6nB,sBAAwB7nB,EAAK6nB,oBAAsB,IAAIA,GAAoB7nB,EAAKre,MAC7F24D,UAAU,CAAE,QAAS,sBAGvCmF,WAAY,MACAvJ,EAAkBz0D,KAAK+B,MAAvB0yD,cACF/5C,EAAY1a,KAAKo5D,cAAcpgD,QAAQ0B,UAC7C,IAAKA,GAAaA,EAAUhG,OAAS,IAAM+/C,EAAe,CAStD,YARiBqM,KAAT72B,MAEJ7nC,IAAgBkG,aAAa,CACzB,QAAS,gCACT2hC,KAAM,QAOPg3B,YAAYxgE,MAEvB,IAAIygE,EADUC,OACIC,KAAK1mD,GACZumD,YAAYxgE,MAEvB,IAAKygE,GAASxmD,IAAcwmD,EAAM,GAAI,CASlC,YARiBJ,KAAT72B,MAEJ7nC,IAAgBkG,aAAa,CACzB,QAAS,gCACT2hC,KAAM,QAOlB,MAAMo3B,EAAYn4C,KAAKzoB,MACvB2B,IAAgBC,KAAK,CACjB,QAAS,cACTL,MAAOk/D,EAAM,GACbrrD,MAAO,MACRvT,KAAKg/D,IACJl/D,IAAgBkG,aAAa,CACzB,QAAS,gCACT2hC,KAAM,CACFo3B,YACAr/D,MAAOk/D,EAAM,GACbI,gBAKZl/D,IAAgBC,KAAK,CACjB,QAAS,iBACTL,MAAOk/D,EAAM,GACbrrD,MAAO,MACRvT,KAAKg/D,IACJl/D,IAAgBkG,aAAa,CACzB,QAAS,iCACT2hC,KAAM,CACFo3B,YACAr/D,MAAOk/D,EAAM,GACbI,gBAuOV9H,gBAAgB5zB,GAAQ,IAAD,yHACpBA,EADoB,oDAEpBA,EAAMlxB,OAFc,oDAIJ,IAAjBkxB,EAAMlxB,OAJe,iCAKC,EAAK4nD,WAAW12B,EAAM,GAAIA,EAAM,GAAGpnB,KAAKmM,WAAW,UALpD,UAKfsrC,EALe,0DAQrB,EAAKxzD,SAAS,CACVq3D,eAAe,EACf7D,YAViB,wBAarB,EAAKxzD,SAAS,CAAEmjC,UAbK,4CAoGvB84B,iBAAiBlmD,GAAU,IAAD,+HACM,EAAKzW,MAA/BmQ,EADoB,EACpBA,OAAQuiD,EADY,EACZA,cAGXviD,EAJuB,oDAKvBuiD,EALuB,oDAMvBj8C,EANuB,0EAQrBpW,IAAgBC,KAAK,CACxB,QAAS,mBACT4U,QAAS/E,EACTgF,WAAYu9C,EACZ96C,sBAAuBnB,KAZC,2CAgBhC2jD,mBAAmB9iD,GAAU,MAAD,EACUrZ,KAAK+B,MAA/BmQ,EADgB,EAChBA,OAAQuiD,EADQ,EACRA,cAEXviD,GACAuiD,GACAp7C,GAELjX,IAAgBC,KAAK,CACjB,QAAS,qBACT4U,QAAS/E,EACTgF,WAAYu9C,EACZp7C,YAIF6iD,gBAAgB1jD,EAAS+d,GAAW,IAAD,iIACH,EAAKx0B,MAA/BmQ,EAD6B,EAC7BA,OAAQuiD,EADqB,EACrBA,cAEXviD,EAHgC,oDAIhCuiD,EAJgC,oDAKhCj8C,EALgC,2EAQZpW,IAAgBC,KAAK,CACtC,QAAS,kBACT4U,QAAS/E,EACTgF,WAAYu9C,EACZ96C,sBAAuBnB,IAZM,QAQ3BjW,EAR2B,OAejCg0B,EAASh0B,GAfwB,oGAwFzCg/D,wBAAwBl0D,EAAMiG,EAAU+b,EAAUmyC,GAAe,IAAD,aACpDtvD,EAAWlS,KAAK+B,MAAhBmQ,OAEFuvD,EAAwB,GAE1BzhE,KAAK0hE,sBACL52D,aAAa9K,KAAK0hE,qBAClB1hE,KAAK0hE,oBAAsB,MAG/B,MAAMnhD,EAAOmR,YAAgBxf,GAIvBzR,EAAMyoB,KAAKzoB,MACjBT,KAAKS,IAAMA,EAEX,IAAIkhE,EAAiBruD,EACjBjG,EAAKqH,OAAS,GACditD,IAGJ3hE,KAAK4hE,SAAWv0D,EAChBrN,KAAK6hE,iBAAmBL,EAExB,IAEIM,EACAC,EAHAC,GAAa,EACbz/D,EAAS,GAIT0/D,GAAe,EACnB,GAAIT,EAEAM,EAAsB,EACtBC,GAFAx/D,GAAU8K,EAAK+e,UAAU,IAEH1X,OACtBstD,EAAY,OAEZ,IAAK,IAAIhtD,EAAI2sD,EAAgB3sD,GAAK,EAAGA,IAAK,CACtC,GAAIA,GAAK3H,EAAKqH,OACV,SAEJ,IAAIwtD,EAAK70D,EAAK2H,GACd,IAAU,IAANA,GAA2B,MAAhB3H,EAAK2H,EAAI,IAA8B,OAAhB3H,EAAK2H,EAAI,IAA+B,MAAhB3H,EAAK2H,EAAI,KACxD,MAAPktD,EAAY,CAER,IAAK3hD,GAAc,IAANvL,EAKT,OAJAhV,KAAK4hE,SAAWv0D,EAChBrN,KAAKmiE,aAAe7uD,EACpBtT,KAAKqvB,SAAWA,OAChBrvB,KAAKoiE,WAAW3hE,GAGpBwhE,EAAcjtD,EACdgtD,EAAY,EACZF,EAAsB9sD,EACtB+sD,EAAex/D,EAAOmS,OAAS,EAK3CnS,EAAS2/D,EAAK3/D,EAItB,IAAmB,IAAfy/D,GAKJ,GAAkB,IAAdA,EAAiB,CACjB,MAAMruC,EAAQ,GACR0uC,EAAW,IAAIvtD,IACrB,IAAK,IAAIE,EAAI,EAAGA,EAAIjU,KAAKC,IAAI,IAAKquB,EAAS3a,QAASM,IAAK,CAAC,MAC9C2X,EAAW0C,EAASra,GAApB2X,OACJA,GAAUA,EAAO3W,UAAYqsD,EAASptD,IAAI0X,EAAO3W,WACjDqsD,EAAS7nD,IAAImS,EAAO3W,QAAS2W,EAAO3W,SACpC2d,EAAM7d,KAAK6W,EAAO3W,UAI1B,IAAIssD,EAAiB//D,EAAOquC,OAAOkxB,EAAqBC,GAAc3lD,cACtE,MAAMmmD,EAAWD,EAAenmD,QAAQ,MAAQ,EAC1CqmD,EAAY,GACZC,EAAgB,IAAI3tD,IACpBk0C,EAAS,IAAIl0C,IAEb4tD,EAAa,IACdlB,GAAkD,IAAhBS,GAAqBS,EAAWhuD,OAIvE,MAAM6J,EAAOR,KAAUlS,IAAIqG,GAC3B,GAAIqM,GAAQgC,GAAQA,EAAKzB,QACrB,IAAK,IAAI9J,GAAK,EAAGA,EAAIuL,EAAKzB,QAAQpK,OAAQM,IAAK,CAC3C,IAAI4c,EACAqlB,EACAE,EACAwrB,EACAziE,EACJ,IAAW,IAAP8U,EAAU,CACV,IAAKstD,EAAe5tD,OAAQ,CACxB8tD,EAAU1sD,KAAKyI,GACf,SAEJ04B,EAAY14B,EAAKJ,MACjBg5B,EAAW,GACXvlB,EAAWrT,EAAKqT,SAChB+wC,EAASpkD,EACTre,GAAMqe,EAAKre,OACR,CAAC,MACI8V,EAAYuK,EAAKzB,QAAQ9J,GAAzBgB,QACF6d,EAAO5d,IAAUpK,IAAImK,GAC3B,IAAK6d,IAAS2tC,GAAgBoB,aAAS5sD,IAAYysD,EAAcxtD,IAAIe,GACjE,SAEJ,IAAKssD,EAAe5tD,SACXmuD,aAAc7sD,GAAU,CACzBwsD,EAAU1sD,KAAK+d,GACf,SAGRojB,EAAYpjB,EAAKqjB,WACjBC,EAAWtjB,EAAKujB,UAChBxlB,EAAWiC,EAAKjC,SAChB+wC,EAAS9uC,EACT3zB,EAAK2zB,EAAK3zB,IAGV0xB,EAASld,OAAS,GAAKkd,EAASxV,cAAcuO,WAAW23C,IACtDrrB,EAAUviC,OAAS,GAAKuiC,EAAU76B,cAAcuO,WAAW23C,IAC3DnrB,EAASziC,OAAS,GAAKyiC,EAAS/6B,cAAcuO,WAAW23C,IACzDC,GAAY,UAAGtrB,EAAH,YAAgBE,GAAW/6B,cAAcuO,WAAW23C,MACnEE,EAAU1sD,KAAK6sD,GACf3Z,EAAOxuC,IAAIta,EAAIyiE,IAKvB5rD,aAAa7E,IAAWowD,EAAe5tD,OAAS,GAC5C8tD,EAAU9tD,OAAS,EACnB1U,KAAK0hE,oBAAsB12D,WAAW,KAClChL,KAAK0hE,oBAAsB,KAC3B1hE,KAAK8iE,gBAAgBriE,EAAK+hE,EAAWxZ,GAAQ,IAC9C,GAEHhpD,KAAK8iE,gBAAgBriE,EAAK+hE,EAAWxZ,GAAQ,GAGjDh+C,WAAU,qBAAC,oCAAA0H,EAAA,wDACH,EAAKjS,MAAQA,EADV,iEAKc2B,IAAgBC,KAAK,CACtC,QAAS,oBACT4U,QAAS/E,EACTwJ,MAAO4mD,EACPzsD,MAAO,GACP0F,OAAQ,CAAE,QAAS,2BAA4BwnD,kBAAmB,KAV/D,UAKDxgE,EALC,OAaH,EAAK9B,MAAQA,EAbV,uDAiBCqe,EAAYvc,EAAZuc,SACIpK,OAAS,GAlBd,iBAmBMM,EAAI,EAnBV,aAmBaA,EAAI8J,EAAQpK,QAnBzB,oBAoBSsB,EAAY8I,EAAQ9J,GAApBgB,SACJ4sD,aAAS5sD,GArBd,2DAwBO6d,EAAO5d,IAAUpK,IAAImK,GAxB5B,wDA6BCyrD,EAAsB3rD,KAAK+d,GA7B5B,QAmBiC7e,IAnBjC,wBAgCH,EAAKguD,qBAAqBviE,EAAKghE,GAhC5B,0CAoCR,MAEHzhE,KAAK8iE,gBAAgBriE,EAAK+hE,EAAWxZ,GAAQ,SAzHjDhpD,KAAKoiE,WAAW3hE,GA8HxBuiE,qBAAqB9iE,EAAIuhE,GACrB3uD,QAAQ86B,IAAI,kBAAmB6zB,GAC/Br/D,IAAgBkG,aAAa,CACzB,QAAS,0BACTpI,KACAixC,OAAQswB,IAIhBqB,gBAAgB5iE,EAAIsiE,EAAWxZ,EAAQia,GACnCnwD,QAAQ86B,IAAI,iBAAkB40B,GAC9BpgE,IAAgBkG,aAAa,CACzB,QAAS,yBACTpI,KACAowC,MAAOkyB,IAIfJ,WAAWliE,GACP4S,QAAQ86B,IAAI,kBACZxrC,IAAgBkG,aAAa,CACzB,QAAS,yBACTpI,OAIRgjE,aAIAjF,yBAA0B,MACdxJ,EAAkBz0D,KAAK+B,MAAvB0yD,cACUz0D,KAAKo5D,cAAcpgD,QAAQ0B,WAC1B+5C,EAKfz0D,KAAKyC,SAAS,CACVm5D,gBAAgB,IALpB57D,KAAKyC,SAAS,CACVm5D,gBAAgB,IA+C5B7F,gBACI/1D,KAAKgkC,UAAYn9B,SAASo9B,eACrBjkC,KAAKgkC,WACLhkC,KAAKgkC,UAAUu0B,aAEpBv4D,KAAK4jC,MAAQ5jC,KAAKgkC,UAAUw0B,WAAW,IAG3Cf,mBAAoB,MACR7zB,EAAU5jC,KAAV4jC,MAER,IAAKA,EAED,YADA5jC,KAAK2jC,aAIT,MAAMK,EAAYn9B,SAASo9B,eAC3BD,EAAUE,kBACVF,EAAUG,SAASP,GAEnB5jC,KAAKo5D,cAAcpgD,QAAQ1P,QA4H/Bm1D,qBAAqB0E,GAAS,GAAO,MACzBlN,EAAYj2D,KAAK+B,MAAjBk0D,QAERj2D,KAAKyC,SACD,CACIq3D,eAAe,EACf7D,QAAS,MAEb,KACQkN,GAAUlN,GAAWA,EAAQ58C,SAC7BrZ,KAAKo5D,cAAcpgD,QAAQ7K,UAAY8nD,EAAQ58C,QAC/CrZ,KAAK2jC,aACL3jC,KAAK+pC,eAEL/pC,KAAKy3D,qBAmHrBx0D,SAAU,MACEoP,EAAMrS,KAAKwC,MAAX6P,EADH,EAiBDrS,KAAK+B,MAdLmQ,EAHC,EAGDA,OACAuiD,EAJC,EAIDA,cACAwB,EALC,EAKDA,QACA0E,EANC,EAMDA,iBACA/0B,EAPC,EAODA,MAEAwtB,GATC,EAQDoK,SARC,EASDpK,aACAC,EAVC,EAUDA,WACAkE,EAXC,EAWDA,YACAuC,EAZC,EAYDA,cACA8B,EAbC,EAaDA,eACAjC,EAdC,EAcDA,cACA0F,EAfC,EAeDA,uBACA9hB,EAhBC,EAgBDA,MAGE6lB,EAAiB3O,EAAgB,IAAM4O,aAAcnxD,EAAQuiD,GACnE,IAAIxnC,EAAQ,kBAACwI,GAAA,EAAD,CAAe/Y,MAAOi9C,GAAiBiC,EAAgBlmC,SAAU,kBAAC4tC,GAAD,MAAoBr2C,KAAM,kBAACs2C,GAAD,QAKvG,OAJI9O,IACAxnC,EAAO,kBAACwwB,GAAD,OAIP,yBAAKv6C,UAAU,uBACX,yBAAKA,UAAWkN,IAAW,WAAY,CAAE,qBAAsBupD,GAAiB,CAAE,MAASpc,KACvF,yBAAKr6C,UAAWkN,IAAW,oBACvB,kBAAC,GAAD,CACI8B,OAAQA,EACRiU,UAAWw0C,EACXlG,cAAeqF,EAAgB,EAAIrF,EACnClkD,QAASvQ,KAAKkyB,oBAElB,yBAAKhvB,UAAU,oBACX,yBAAKA,UAAU,wBACX,kBAAC,IAAMw6C,SAAP,CACIC,SACI,kBAACzlC,EAAA,EAAD,CAAYhV,UAAU,uBAAuBiV,aAAW,YACpD,kBAAC,KAAD,QAGR,kBAAC+gD,GAAD,CAAmB9mD,SAAUpS,KAAK89D,sBAG1C,yBAAK56D,UAAU,0BACX,yBACIhD,GAAG,mBACHgD,UAAU,oBACV+Z,IAAKjd,KAAKo5D,cACVj8C,YAA8B9K,EAAjB+wD,EAAmB,UAAe,WAC/CjwD,iBAAe,EACf+J,gCAA8B,EAC9B5Y,UAAWtE,KAAKq1B,cAEhBhY,QAASrd,KAAKu1B,YACd4U,QAASnqC,KAAK+pC,eAGtB,yBAAK7mC,UAAU,yBACX,kBAAC,GAAD,MACA,2BACI+Z,IAAKjd,KAAKw8D,kBACVt5D,UAAU,yBACVsb,KAAK,OACLs3B,SAAS,WACTpkC,SAAU1R,KAAKy8D,+BAEnB,2BACIx/C,IAAKjd,KAAKo1C,eACVlyC,UAAU,yBACVsb,KAAK,OACLs3B,SAAS,WACTC,OAAO,UACPrkC,SAAU1R,KAAKo8D,6BAEjBnyC,QAAQwqC,KAAmBkF,GACzB,kBAAC,GAAD,CACIznD,OAAQA,EACRm7C,cAAertD,KAAKotD,kBACpBI,iBAAkBxtD,KAAKutD,qBACvBG,aAAc1tD,KAAKytD,sBAUrCkM,GACE,yBAAKz2D,UAAU,4CACX,kBAACgV,EAAA,EAAD,CACIhV,UAAU,gCACViV,aAAW,SACX2B,KAAK,QACL1B,MAAM,YACN7H,QAASvQ,KAAK+6D,oBACd,kBAACzzC,GAAD,QAIZ,yBAAKpkB,UAAU,mCACX,kBAACgV,EAAA,EAAD,CACIhV,UAAWkN,IAAW,uBAAwB,CAAC,8BAA+BupD,IAAkBiC,IAChGzjD,aAAW,OACX2B,KAAK,QACLvJ,QAASvQ,KAAK07D,cACbzuC,MAIXzM,aAActO,IAAW,kBAAC,GAAD,CAAkBu/C,OAAQzxD,KAAK+8D,iBAC1D,kBAAC,GAAD,CAAkBn3B,MAAOA,EAAOgvB,UAAW50D,KAAKq9D,mBAAoB3J,SAAU1zD,KAAKs9D,oBAEnF,kBAAC,GAAD,CACI5gD,KAAM66C,EACNnE,YAAaA,EACbC,WAAYA,EACZ1X,OAAQ37C,KAAK43D,kBACblE,SAAU1zD,KAAK23D,sBAEnB,kBAAC,GAAD,CACIj7C,KAAMo9C,EACN5nD,OAAQA,EACRiU,UAAWsuC,EACXwB,QAASA,EACT7X,OAAQp+C,KAAKg4D,gBACbvG,OAAQzxD,KAAK8+D,gBACbpL,SAAU1zD,KAAKw+D,wBAEnB,kBAAC,IAAD,CACI3hD,mBAAoB,EACpBH,KAAM2iD,EACNviD,QAAS9c,KAAK2gE,sBACd5jD,kBAAgB,qBAChB,kBAAC,IAAD,CAAa7c,GAAG,qBAAqBmS,EAAE,sBACvC,kBAAC,KAAD,KACI,kBAAC2hC,GAAA,EAAD,KAAoB3hC,EAAE,6BAE1B,kBAACiL,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQhN,QAASvQ,KAAK2gE,sBAAuBvoD,MAAM,WAC9C/F,EAAE,a,4BCz5DhBmxD,OAlBf,cAA4B3hE,IAAMC,UAC9BmB,SAAU,MAAD,EAC0BjD,KAAKwC,MAA5BktC,EADH,EACGA,QAAS+zB,EADZ,EACYA,UAEjB,OACI,yBAAKvgE,UAAU,kBACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,mBACX,kBAAC,KAAD,CAAQkV,MAAM,UAAUlV,UAAU,wBAAwBqN,QAASkzD,GAC9D/zB,QCEdz9B,qBAVf,cAAmCyO,GAC/Bzd,SAAU,MACEoP,EAAMrS,KAAKwC,MAAX6P,EAEFq9B,EAAoBr9B,EADNrS,KAAK+B,MAAjB6e,QACoB,cAAmB,aAE/C,OAAO,kBAAC,GAAD,CAAe8uB,QAASA,EAAS+zB,UAAWzjE,KAAKghB,gC,OC+SjD/O,qBA5Sf,cAAqBpQ,IAAMC,UAAW,eAAD,iCACjCC,MAAQ,GADyB,KAwEjCo6B,2BAA6B/3B,IACNpE,KAAKwC,MAAhB0P,SAEO9N,EAAO8N,QAEtBlS,KAAKyC,SAAS,CACV25B,aAAch4B,EAAOi4B,cA9EI,KAkFjCqnC,wBAA0Bt/D,IAAW,MACzB6S,EAA0B7S,EAA1B6S,QAASslB,EAAiBn4B,EAAjBm4B,aAGbtlB,IAFejX,KAAKwC,MAAhB0P,QAIRlS,KAAKyC,SAAS,CACVkhE,eAAgB15C,QAAQsS,MAzFC,KA6FjCqnC,sBAAwBx/D,IAAW,MACvB6S,EAAwB7S,EAAxB6S,QAAS8uC,EAAe3hD,EAAf2hD,WAGb9uC,IAFejX,KAAKwC,MAAhB0P,QAIRlS,KAAKyC,SAAS,CACVohE,UAAW9d,KApGc,KAwGjCvmC,mBAAqBpb,IAAW,MACpB8N,EAAWlS,KAAKwC,MAAhB0P,OAEJ4xD,YAAgB5xD,EAAQ9N,EAAOqb,YAAYvf,KAC3CF,KAAKya,eA5GoB,KAgHjCiF,mBAAqBtb,IAAW,MACpB8N,EAAWlS,KAAKwC,MAAhB0P,OAEJ6xD,YAAgB7xD,EAAQ9N,EAAOub,WAAWzf,KAC1CF,KAAKya,eApHoB,KAwHjCupD,WAAa,KAAO,MACR9xD,EAAWlS,KAAKwC,MAAhB0P,OACHA,GAEL9P,IAAgBC,KAAK,CACjB,QAAS,WACT4U,QAAS/E,KA9HgB,KAkIjC+xD,oBAAsB,KAAO,MACjB/xD,EAAWlS,KAAKwC,MAAhB0P,OACHA,GAEL9P,IAAgBC,KAAK,CACjB,QAAS,oBACT4U,QAAS/E,EACTgyD,uBAAuB,KAzIE,KAmJjCC,cAAgB,KAAO,MACXjyD,EAAWlS,KAAKwC,MAAhB0P,OAERwzC,aAAc,CAAE,QAAS,oBAAqBzuC,QAAS/E,KAtJ1B,KAyJjCkyD,eAzJiC,qBAyJhB,sCAAA1xD,EAAA,8DACe,EAAKlQ,MAAzB0P,EADK,EACLA,OAAQpS,EADH,EACGA,QADH,SAGPqZ,KAASC,sBAAT,0CAAkElH,IAH3D,WAITpS,IAAWA,EAAQukE,gBAJV,yBAKwBvkE,EAAQukE,gBAAjCC,EALC,EAKDA,UAAWC,EALV,EAKUA,UALV,SAOHC,aAAoBtyD,EAAQoyD,EAAWC,GAPpC,+CASHniE,IAAgBC,KAAK,CACvB,QAAS,cACT4U,QAAS/E,EACTqH,oBAAqB,EACrBI,sBAAuB,CACnB,QAAS,mBACTtM,KAAM,CACF,QAAS,gBACTA,KAAM,SACNiM,SAAU,IAEdM,0BAA0B,EAC1BC,aAAa,KArBZ,0CAtJjB,gCAAgCrX,EAAOT,GAAQ,MACnCmQ,EAAW1P,EAAX0P,OAGR,GAFuBnQ,EAAf6d,aAEW1N,EAAQ,CACvB,MAAMqM,EAAOR,KAAUlS,IAAIqG,GAC3B,GAAIqM,EAAM,CAAC,MACCwnC,EAA6BxnC,EAA7BwnC,WAAYxpB,EAAiBhe,EAAjBge,aAEpB,MAAO,CACH3c,WAAY1N,EAEZ2xD,UAAW9d,EACX4d,eAAgB15C,QAAQsS,KAKpC,OAAO,KAGX3e,sBAAsBC,EAAWC,GAAY,MAAD,EACT9d,KAAKwC,MAA5B6P,EADgC,EAChCA,EAAGH,EAD6B,EAC7BA,OAAQpS,EADqB,EACrBA,QADqB,EAEYE,KAAK+B,MAAjD4hE,EAFgC,EAEhCA,eAAgBE,EAFgB,EAEhBA,UAAWznC,EAFK,EAELA,aAEnC,OAAIve,EAAU3L,SAAWA,IAIrB2L,EAAU/d,UAAYA,IAKtB+d,EAAUxL,IAAMA,IAIhByL,EAAU6lD,iBAAmBA,IAI7B7lD,EAAU+lD,YAAcA,GAIxB/lD,EAAUse,eAAiBA,MAOnCp5B,oBACI2b,KAAgB3R,GAAG,mBAAoBhN,KAAKwf,oBAC5CzB,KAAU/Q,GAAG,2BAA4BhN,KAAKm8B,4BAC9Cpe,KAAU/Q,GAAG,sBAAuBhN,KAAK4jE,uBACzC7lD,KAAU/Q,GAAG,wBAAyBhN,KAAK0jE,yBAC3C7jD,KAAgB7S,GAAG,mBAAoBhN,KAAK0f,oBAGhDzS,uBACI0R,KAAgBvR,IAAI,mBAAoBpN,KAAKwf,oBAC7CzB,KAAU3Q,IAAI,2BAA4BpN,KAAKm8B,4BAC/Cpe,KAAU3Q,IAAI,sBAAuBpN,KAAK4jE,uBAC1C7lD,KAAU3Q,IAAI,wBAAyBpN,KAAK0jE,yBAC5C7jD,KAAgBzS,IAAI,mBAAoBpN,KAAK0f,oBA+GjDzc,SAAU,MAAD,EAC0BjD,KAAKwC,MAA5B0P,EADH,EACGA,OAAQpS,EADX,EACWA,QAASuS,EADpB,EACoBA,EADpB,EAEoCrS,KAAK+B,MAAtC4hE,EAFH,EAEGA,eAAgBvnC,EAFnB,EAEmBA,aAElB7d,EAAOR,KAAUlS,IAAIqG,GAC3B,IAAKqM,EAAM,OAAO,KALb,MAOGC,EAAqBD,EAArBC,KAAMunC,EAAexnC,EAAfwnC,WACd,IAAKvnC,EAAM,OAAO,KAElB,GAAIunC,EACA,OAAO,kBAAC,GAAD,CAAerW,QAASr9B,EAAE,WAAYoxD,UAAWzjE,KAAKmkE,gBAGjE,GAAIrkE,GAAWA,EAAQukE,gBAAiB,CAEpC,GADcI,YAAUvyD,GAEpB,OAAO,kBAAC,GAAD,CAAew9B,QAASr9B,EAAE,YAAaoxD,UAAWzjE,KAAKokE,iBAItE,OAAQ5lD,EAAK,UACT,IAAK,qBAAsB,CACvB,MAAMwoB,EAAaroB,KAAgB9S,IAAI2S,EAAKK,gBAC5C,IAAKmoB,EAAY,OAAO,KAFD,MAIf09B,EAAW19B,EAAX09B,OACR,IAAKA,EAAQ,OAAO,KALG,MAOfC,EAA2BD,EAA3BC,UAAWC,EAAgBF,EAAhBE,YAEnB,OAAQF,EAAO,UACX,IAAK,gCACD,OAAO,kBAAC,GAAD,MAEX,IAAK,yBACD,OAAO,kBAAC,GAAD,CAAeh1B,QAASr9B,EAAE,cAAeoxD,UAAWzjE,KAAKikE,sBAEpE,IAAK,0BACD,OAAOU,EAAY,kBAAC,GAAD,MAAe,kBAAC,GAAD,CAAej1B,QAASr9B,EAAE,aAAcoxD,UAAWzjE,KAAKgkE,aAE9F,IAAK,uBACD,OAAO,KAEX,IAAK,yBACD,OAAO,kBAAC,GAAD,MAEX,IAAK,6BACD,OAAIW,EACOC,GAAeA,EAAYC,kBAAoB,kBAAC,GAAD,MAAe,KAE9D,kBAAC,GAAD,CAAen1B,QAASr9B,EAAE,aAAcoxD,UAAWzjE,KAAKgkE,aAI3E,MAEJ,IAAK,iBACL,IAAK,kBAED,OADcS,YAAUvyD,IACTyxD,IAAkBvnC,EAI1B,kBAAC,GAAD,MAHI,kBAAC,GAAD,CAAesT,QAASr9B,EAAE,YAAaoxD,UAAWzjE,KAAKokE,iBAKtE,IAAK,qBAAsB,CACvB,MAAMzkD,EAAaE,KAAgBhU,IAAI2S,EAAKe,eAC5C,IAAKI,EAAY,OAAO,KAFD,MAIf4oC,EAAuB5oC,EAAvB4oC,WAAYmc,EAAW/kD,EAAX+kD,OACpB,IAAKA,EAAQ,OAAO,KALG,MAOfC,EAA2BD,EAA3BC,UAAWC,EAAgBF,EAAhBE,YAEnB,OAAQF,EAAO,UACX,IAAK,gCACD,OAAO,kBAAC,GAAD,MAEX,IAAK,yBACD,OAAO,kBAAC,GAAD,CAAeh1B,QAASr9B,EAAE,cAAeoxD,UAAWzjE,KAAKikE,sBAEpE,IAAK,0BACD,OAAOU,EAAY,kBAAC,GAAD,MAAe,kBAAC,GAAD,CAAej1B,QAAsBr9B,EAAbk2C,EAAe,cAAmB,aAAckb,UAAWzjE,KAAKgkE,aAE9H,IAAK,uBACD,OACI,kBAAC,GAAD,CACIt0B,QAAsBr9B,EAAbk2C,EAAe,cAAmB,aAC3Ckb,UAAWzjE,KAAKgkE,aAI5B,IAAK,yBACD,OAAIzb,EACO,kBAAC,GAAD,CAAsBr2C,OAAQA,IAE9B,kBAAC,GAAD,MAGf,IAAK,6BACD,OAAIyyD,EACOC,GAAeA,EAAYC,kBAAoB,kBAAC,GAAD,MAAe,KAGjE,kBAAC,GAAD,CACIn1B,QAAsBr9B,EAAbk2C,EAAe,cAAmB,aAC3Ckb,UAAWzjE,KAAKgkE,eAS5C,OAAO,QCpTAxgE,gBACX,uBAAG86B,UAAU,kCAAkClB,SAAS,WACpD,0BAAM35B,EAAE,s/CAEZ,aCHWD,gBACX,0BAAMC,EAAE,iPACR,S,OC8KWwO,qBA1Jf,cAA6BpQ,IAAMC,UAAW,eAAD,iCACzCC,MAAQ,CACJimC,SAAU,MAF2B,KAKzC88B,kBALyC,sCAKrB,WAAMzgE,GAAN,mBAAAqO,EAAA,4DACOs1B,EAAa3jC,EAA5B4jC,cAEF/1B,EAASiH,KAAS0oB,YAHR,SAIGz/B,IAAgBC,KAAK,CAAE,QAAS,UAAW4U,QAAS/E,IAJvD,OAIVqM,EAJU,OAKhBR,KAAUvD,IAAI+D,GAEd,EAAK9b,SAAS,CAAEulC,aAPA,yCALqB,2DAezCE,gBAAkB,KACdloC,KAAKyC,SAAS,CAAEulC,SAAU,QAhBW,KAmBzC+8B,eAAiB,KACb/kE,KAAKkoC,kBACLl9B,WAAW,IAAMhL,KAAKwC,MAAMwiE,kBAAmB,MArBV,KAwBzCC,mBAAqB,KACjBjlE,KAAKkoC,kBAEL9L,aAAajjB,KAAS0oB,cA3Be,KA8BzCV,iBAAmB,KACfnhC,KAAKkoC,kBAEL9G,aAAUjoB,KAAS0oB,cAjCkB,KAoCzCqjC,YAAc,KACVllE,KAAKkoC,kBAEL,MAAMh2B,EAASiH,KAAS0oB,YAElBtf,EAAQjK,IAAakK,SAAStQ,GACpC,IAAKqQ,EAAO,OAAO,EANH,MAQR4iD,EAAW5iD,EAAX4iD,OACR,QAAKA,IACiB,IAAlBA,EAAOzwD,aAEX0wD,YAAoBlzD,EAAQizD,EAAO,GAAGjlE,MAhDD,KAmDzCmlE,oBAAsB,KAClBrlE,KAAKkoC,kBAEL,MAAMh2B,EAASiH,KAAS0oB,YAClBtjB,EAAOR,KAAUlS,IAAIqG,GAC3B,IAAKqM,EAAM,OAEX,MAAMoO,EAAS24C,YAAcpzD,GACNqM,EAAfwnC,WAEJL,aAAc/4B,GAEd44C,aAAmB54C,IAK3B1pB,SAAU,MACEoP,EAAMrS,KAAKwC,MAAX6P,EACA21B,EAAahoC,KAAK+B,MAAlBimC,SAEF91B,EAASiH,KAAS0oB,YAClBtjB,EAAOR,KAAUlS,IAAIqG,GAC3B,IAAKqM,EAAM,OAAO,KANb,MAQGwnC,EAAexnC,EAAfwnC,WAEF3pB,EAAeopC,YAAgBtzD,GAC/BsvB,EAAaC,YAAcvvB,GAC3BwvB,EAAkBC,YAAmBzvB,EAAQG,GAC7CozD,EAAeC,YAAoBxzD,GACnCyzD,EAAgBC,YAAiB1zD,GAEvC,OACI,oCACI,kBAACgG,EAAA,EAAD,CACIwxB,YAAW1B,EAAW,cAAgB,KACtC2B,gBAAc,OACdzmC,UAAU,mBACViV,aAAW,OACX5H,QAASvQ,KAAK8kE,mBACd,kBAAChxB,GAAD,OAEJ,kBAAC5K,GAAA,EAAD,CACIhpC,GAAG,YACH8nC,SAAUA,EACVtrB,KAAMuN,QAAQ+d,GACdlrB,QAAS9c,KAAKkoC,gBACdiB,mBAAoB,KACpBC,sBAAoB,EACpBC,qBAAqB,EACrBtiB,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,UAEhB,kBAACG,GAAA,EAAD,CAAU7W,QAASvQ,KAAK+kE,gBACpB,kBAACrjD,GAAA,EAAD,KACKlB,aAActO,GAAU,kBAAC,GAAD,MAAe,kBAACgwB,GAAD,OAE5C,kBAACngB,GAAA,EAAD,CAAcC,QAASmgB,YAAiBjwB,EAAQG,MAEnD+pB,GACG,kBAAChV,GAAA,EAAD,CAAU7W,QAASvQ,KAAKilE,oBACpB,kBAACvjD,GAAA,EAAD,KACI,kBAACmkD,GAAD,OAEJ,kBAAC9jD,GAAA,EAAD,CAAcC,QAAS3P,EAAE,mBAGhCmvB,GAAcE,GACX,kBAACta,GAAA,EAAD,CAAU7W,QAASvQ,KAAKmhC,kBACpB,kBAACzf,GAAA,EAAD,KACI,kBAAC4F,GAAD,OAEJ,kBAACvF,GAAA,EAAD,CAAcC,QAAS0f,KAG9B+jC,GACG,kBAACr+C,GAAA,EAAD,CAAU7W,QAASvQ,KAAKklE,aACpB,kBAACxjD,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACK,GAAA,EAAD,CAAcC,QAAS3P,EAAE,6BAGhCszD,GACG,kBAACv+C,GAAA,EAAD,CAAU7W,QAASvQ,KAAKqlE,qBACpB,kBAAC3jD,GAAA,EAAD,KACKqkC,EAAa,kBAAC+f,GAAD,MAAoB,kBAAC1f,GAAD,OAEtC,kBAACrkC,GAAA,EAAD,CAAcC,QAAsB3P,EAAb0zC,EAAe,UAAe,wB,OCHlEggB,OA7Jf,cAAiClkE,IAAMC,UAAW,eAAD,oBAyB7CkkE,8BAAgC5hE,IACTpE,KAAKwC,MAAhB0P,SACO9N,EAAO6S,SAEtBjX,KAAKya,eA7BoC,KAgC7CkD,kBAAoBvZ,IACGpE,KAAKwC,MAAhB0P,SACO9N,EAAO6S,SAEtBjX,KAAKya,eApCoC,KAuC7CwrD,uBAAyB7hE,IACFpE,KAAKwC,MAAhB0P,SACO9N,EAAO6S,SAEtBjX,KAAKya,eA3CoC,KA8C7C6D,mBAAqBla,IAAW,MACpB8N,EAAWlS,KAAKwC,MAAhB0P,OACFqM,EAAOR,KAAUlS,IAAIqG,GAC3B,GAAKqM,GACAA,EAAKC,KAEV,OAAQD,EAAKC,KAAK,UACd,IAAK,qBAAsB,CACvB,MAAME,EAAWC,KAAgBC,YAAYL,EAAKC,KAAKK,gBACvD,GAAIH,GAAYA,EAASI,QAAS,CACfJ,EAASI,QAAQC,KAAKpe,GAAKA,EAAEqV,UAAY5R,EAAO4R,UAE3DhW,KAAKya,cAGb,MAEJ,IAAK,kBAML,IAAK,iBACG8D,EAAKC,KAAKxI,UAAY5R,EAAO4R,SAC7BhW,KAAKya,gBAvEwB,KAiF7C2E,qBAAuBhb,IAAW,MACtB8N,EAAWlS,KAAKwC,MAAhB0P,OACFqM,EAAOR,KAAUlS,IAAIqG,GACtBqM,GACAA,EAAKC,OAGkB,oBAAvBD,EAAKC,KAAK,UAAyD,mBAAvBD,EAAKC,KAAK,UACvDD,EAAKC,KAAKxI,UAAY5R,EAAO4R,SAE7BhW,KAAKya,gBA3FgC,KA+F7C4E,2BAA6Bjb,IAAW,MAC5B8N,EAAWlS,KAAKwC,MAAhB0P,OACFqM,EAAOR,KAAUlS,IAAIqG,GACtBqM,GACAA,EAAKC,MAEiB,uBAAvBD,EAAKC,KAAK,UAAqCD,EAAKC,KAAKK,iBAAmBza,EAAOya,gBACnF7e,KAAKya,eAtGgC,KA0G7C6E,2BAA6Blb,IAAW,MAC5B8N,EAAWlS,KAAKwC,MAAhB0P,OACFqM,EAAOR,KAAUlS,IAAIqG,GACtBqM,GACAA,EAAKC,MAEiB,uBAAvBD,EAAKC,KAAK,UAAqCD,EAAKC,KAAKe,gBAAkBnb,EAAOmb,eAClFvf,KAAKya,eAjHgC,KAqH7C+E,mBAAqBpb,IAAW,MACpB8N,EAAWlS,KAAKwC,MAAhB0P,OACFqM,EAAOR,KAAUlS,IAAIqG,GACtBqM,GACAA,EAAKC,MAEiB,uBAAvBD,EAAKC,KAAK,UAAqCD,EAAKC,KAAKK,iBAAmBza,EAAOqb,YAAYvf,IAC/FF,KAAKya,eA5HgC,KAgI7CiF,mBAAqBtb,IAAW,MACpB8N,EAAWlS,KAAKwC,MAAhB0P,OACFqM,EAAOR,KAAUlS,IAAIqG,GACtBqM,GACAA,EAAKC,MAEiB,uBAAvBD,EAAKC,KAAK,UAAqCD,EAAKC,KAAKe,gBAAkBnb,EAAOub,WAAWzf,IAC7FF,KAAKya,eAtIbzX,oBACI+a,KAAU/Q,GAAG,8BAA+BhN,KAAKgmE,+BACjDjoD,KAAU/Q,GAAG,kBAAmBhN,KAAK2d,mBACrC1H,IAAUjJ,GAAG,mBAAoBhN,KAAKse,oBACtCP,KAAU/Q,GAAG,uBAAwBhN,KAAKimE,wBAC1ChwD,IAAUjJ,GAAG,qBAAsBhN,KAAKof,sBACxCT,KAAgB3R,GAAG,2BAA4BhN,KAAKqf,4BACpDQ,KAAgB7S,GAAG,2BAA4BhN,KAAKsf,4BACpDX,KAAgB3R,GAAG,mBAAoBhN,KAAKwf,oBAC5CK,KAAgB7S,GAAG,mBAAoBhN,KAAK0f,oBAGhDzS,uBACI8Q,KAAU3Q,IAAI,8BAA+BpN,KAAKgmE,+BAClDjoD,KAAU3Q,IAAI,kBAAmBpN,KAAK2d,mBACtC1H,IAAU7I,IAAI,mBAAoBpN,KAAKse,oBACvCP,KAAU3Q,IAAI,uBAAwBpN,KAAKimE,wBAC3ChwD,IAAU7I,IAAI,qBAAsBpN,KAAKof,sBACzCT,KAAgBvR,IAAI,2BAA4BpN,KAAKqf,4BACrDQ,KAAgBzS,IAAI,2BAA4BpN,KAAKsf,4BACrDX,KAAgBvR,IAAI,mBAAoBpN,KAAKwf,oBAC7CK,KAAgBzS,IAAI,mBAAoBpN,KAAK0f,oBAqHjDzc,SAAU,MACEiP,EAAWlS,KAAKwC,MAAhB0P,OAEF8M,EAAWknD,YAAgBh0D,GAAQ,GACnCi0D,EAAmBC,YAAqBl0D,GAE9C,OACI,yBAAKhP,UAAWkN,IAAW,uBAAwB,CAAE,8BAA+B+1D,KAC/EnnD,K,OCjIFqnD,OApBf,cAAyBxkE,IAAMC,UAC3BmB,SAAU,MAAD,EACkCjD,KAAKwC,MAApCU,EADH,EACGA,UAAWgP,EADd,EACcA,OAAQ3B,EADtB,EACsBA,QAE3B,OACI,yBAAKrN,UAAWkN,IAAW,cAAelN,GAAYqN,QAASA,GAC3D,kBAACiC,EAAA,EAAD,CAAUN,OAAQA,EAAQ4H,KAAM,KAChC,yBAAK5W,UAAU,uBACX,kBAAC,GAAD,CAAagP,OAAQA,IACrB,kBAAC,GAAD,CAAoBA,OAAQA,Q,cCbhD,MAAMo0D,WAAqBzkE,IAAMC,UAC7BlC,YAAY4C,GACR0B,MAAM1B,GADS,KA8CnB+jE,QAAU,CAACllE,EAAMT,EAAI4lE,KAAgB,MACzBzsD,EAAW/Z,KAAKwC,MAAhBuX,OAEFvM,EAAYxN,KAAKymE,aAAaztD,QAC9B0tD,EAAQ1mE,KAAK2mE,SAAS3tD,QACtB4tD,EAAQ5mE,KAAK6mE,SAAS7tD,QAE5B,IAAKxL,IAAck5D,IAAUE,EAAO,OAKhCJ,GACAh5D,EAAUlG,MAAM2d,QAAhB,iCAAoDlL,EAApD,OACA2sD,EAAMp/D,MAAM2d,QAAU,aACtB2hD,EAAMt/D,MAAM2d,QAAU,aACtB9kB,sBAAsB,KAClBqN,EAAUlG,MAAM2d,QAAhB,0DARS,QAQT,YAPe,eAQfyhD,EAAMp/D,MAAM2d,QAAZ,0CATS,QAST,YARe,cAQf,qBAAgGlL,EAAhG,MACA6sD,EAAMt/D,MAAM2d,QAAZ,0CAVS,QAUT,YATe,cASf,qBAAgGlL,EAAhG,UAGJvM,EAAUlG,MAAM2d,QAAU,6BAC1ByhD,EAAMp/D,MAAM2d,QAAU,aACtB2hD,EAAMt/D,MAAM2d,QAAU,aACtB9kB,sBAAsB,KAClBqN,EAAUlG,MAAM2d,QAAhB,iCAAoDlL,EAApD,sCAjBS,QAiBT,YAhBe,eAiBf2sD,EAAMp/D,MAAM2d,QAAZ,0CAlBS,QAkBT,YAjBe,cAiBf,qBAAgGlL,EAAhG,MACA6sD,EAAMt/D,MAAM2d,QAAZ,0CAnBS,QAmBT,YAlBe,cAkBf,qBAAgGlL,EAAhG,UAvER/Z,KAAKymE,aAAe5kE,IAAMya,YAC1Btc,KAAK2mE,SAAW9kE,IAAMya,YACtBtc,KAAK6mE,SAAWhlE,IAAMya,YAEtBtc,KAAK+B,MAAQ,GAGjB6b,sBAAsBC,EAAWC,EAAWoK,GACxC,OAAOrK,EAAUsG,OAASnkB,KAAKwC,MAAM2hB,KAGzC,gCAAgC3hB,EAAOT,GAAQ,MACnCoiB,EAAS3hB,EAAT2hB,KACAvjB,EAAiBmB,EAAjBnB,GAER,OAAIujB,IAFqBpiB,EAAb+kE,SAGD,CACHA,SAAU3iD,EACV9iB,KAAMT,EACNA,GAAIujB,EACJqiD,WAAYriD,EAAOvjB,GAIpB,KAGXoC,oBAAqB,MACTwjE,EAAexmE,KAAKwC,MAApBgkE,WACA5lE,EAAOZ,KAAK+B,MAAZnB,GAERZ,KAAKumE,QAAQ,GAAI3lE,EAAI4lE,GAGzB5jE,mBAAmBC,EAAWC,EAAWC,GAAW,MAAD,EAClB/C,KAAKwC,MAA1B2hB,EADuC,EACvCA,KAAMqiD,EADiC,EACjCA,WADiC,EAE1BxmE,KAAK+B,MAAlBV,EAFuC,EAEvCA,KAAMT,EAFiC,EAEjCA,GAEViC,EAAUshB,OAASA,GACnBnkB,KAAKumE,QAAQllE,EAAMT,EAAI4lE,GAqC/BvjE,SAAU,MAAD,EAC0BjD,KAAKwC,MAA5BgkE,EADH,EACGA,WAAYzsD,EADf,EACeA,OADf,EAEgB/Z,KAAK+B,MAAlBV,EAFH,EAEGA,KAAMT,EAFT,EAESA,GAId,OACI,yBAAKsC,UAAU,gBAAgBoE,MAAO,CAAEyS,WACpC,yBAAK7W,UAAU,6BAA6BtC,GAC5C,yBAAKqc,IAAKjd,KAAKymE,aAAcvjE,UAAU,yBACnC,yBAAK+Z,IAAKjd,KAAK2mE,SAAUzjE,UAAU,kBAAkBoE,MAAO,CAAEyS,WAAWysD,EAAa5lE,EAAKS,GAC3F,yBAAK4b,IAAKjd,KAAK6mE,SAAU3jE,UAAU,kBAAkBoE,MAAO,CAAEyS,WAAWysD,EAAanlE,EAAOT,MAajH0lE,GAAaloD,aAAe,CACxB+F,KAAM,KACNqiD,YAAY,EACZzsD,OAAQ,IAGGusD,U,OC7Gf,MAAMS,WAAwBllE,IAAMC,UAAW,eAAD,oBAE1CC,MAAQ,GAER,gCAAgCS,EAAOT,GAAQ,MACnCilE,EAAYxkE,EAAZwkE,QACAC,EAAgBllE,EAAhBklE,YAER,OAAID,IAAYC,EACL,CACHA,YAAaD,EAEbR,WAAYQ,EAAUC,GAIvB,KAGXhkE,SAAU,MAAD,EACgCjD,KAAKwC,MAAlCwkE,EADH,EACGA,QAASjtD,EADZ,EACYA,OAAQmtD,EADpB,EACoBA,QACjBV,EAAexmE,KAAK+B,MAApBykE,WACR,IAAKQ,EAAS,OAAO,KAErB,MAAMG,EAAaH,EAAU,GAE7B,OACI,yBAAK9jE,UAAU,mBAAmBoE,MAAO,CAAEyS,WACtC,IAAIotD,GAAYD,UAAU7wD,IAAI,CAAC1V,EAAGgjB,IAAU,kBAAC,GAAD,CAAcpf,IAAKof,EAAOQ,KAAMxjB,EAAG6lE,WAAYU,GAAWV,EAAaA,EAAYzsD,OAAQA,OAYxJgtD,GAAgB3oD,aAAe,CAC3B4oD,QAAS,EACTjtD,OAAQ,GACRmtD,SAAS,GAGEH,UC2CA90D,qBArFf,cAA4BpQ,IAAMC,UAAW,eAAD,oBACxC6yC,aAAe,KACX/7B,eAFoC,KAKxC2N,aAAe,KACX,IAAIrmB,EAAK,EACL4W,EAAa,GAFA,2BAGjB,YAAkCwB,IAAawwC,cAAc7hB,SAA7D,+CAAuE,CAAC,IAAD,UAA5D/0B,EAA4D,EAA5DA,OAAQiU,EAAoD,EAApDA,UACfjmB,EAAKgS,EACL4E,EAAWhB,KAAKqQ,IALH,kFAQjBK,YAAetmB,EAAI4W,IAbiB,KAgBxCuP,cAAgB,KACZ,IAAInmB,EACJ,MAAM4W,EAAa,GAFD,2BAGlB,YAAkCwB,IAAawwC,cAAc7hB,SAA7D,+CAAuE,CAAC,IAAD,UAA5D/0B,EAA4D,EAA5DA,OAAQiU,EAAoD,EAApDA,UACfjmB,EAAKgS,EACL4E,EAAWhB,KAAKqQ,IALF,kFAQlBG,YAAgBpmB,EAAI4W,IAGxB7T,SAAU,MAAD,EACgBjD,KAAKwC,MAAlB6P,EADH,EACGA,EAAG6gC,EADN,EACMA,MAEX,IAAIk0B,GAAe,EAHd,2BAIL,YAAkC9uD,IAAawwC,cAAc7hB,SAA7D,+CAAuE,CAAC,IAAD,UAA5D/0B,EAA4D,EAA5DA,OAAQiU,EAAoD,EAApDA,UACf,MAAMzO,EAAUY,IAAazM,IAAIqG,EAAQiU,GACzC,IAAKzO,EAAS,CACV0vD,GAAe,EACf,MAEJ,IAAK1vD,EAAQiP,+BAAiCjP,EAAQkP,6BAA8B,CAChFwgD,GAAe,EACf,QAZH,kFAgBL,IAAIC,GAAiB,EAhBhB,2BAiBL,YAAkC/uD,IAAawwC,cAAc7hB,SAA7D,+CAAuE,CAAC,IAAD,UAA5D/0B,EAA4D,EAA5DA,OAAQiU,EAAoD,EAApDA,UACf,MAAMzO,EAAUY,IAAazM,IAAIqG,EAAQiU,GACzC,IAAKzO,EAAS,CACV2vD,GAAiB,EACjB,MAEJ,IAAK3vD,EAAQa,iBAAkB,CAC3B8uD,GAAiB,EACjB,QAzBH,kFA6BL,OACI,yBAAKnkE,UAAU,kBACVmkE,GACG,kBAAC9pD,EAAA,EAAD,CAAQnF,MAAM,UAAUlV,UAAU,wBAAwBqN,QAASvQ,KAAKqmB,eACnEhU,EAAE,WACH,sCACA,kBAAC,GAAD,CAAiB20D,QAAS9zB,KAGjCk0B,GACG,kBAAC7pD,EAAA,EAAD,CAAQnF,MAAM,UAAUlV,UAAU,wBAAwBqN,QAASvQ,KAAKumB,cACnElU,EAAE,UACH,sCACA,kBAAC,GAAD,CAAiB20D,QAAS9zB,KAGlC,yBAAKhwC,UAAU,yBACf,kBAACqa,EAAA,EAAD,CAAQnF,MAAM,UAAUlV,UAAU,wBAAwBqN,QAASvQ,KAAK20C,cACnEtiC,EAAE,e,SCjFR7O,gBACX,0BAAMC,EAAE,q8DACR,gB,cCyIW6jE,OAxIf,cAAkCzlE,IAAMC,UAAW,eAAD,oBAE9CylE,SAAW,CAAC5mE,EAAGozB,EAAG9iB,EAAO8I,EAAQytD,IACvB,IAAN,OAAW7mE,EAAX,YAAgBozB,EAAIyzC,EAApB,YAA8BA,EAA9B,YAAwCA,EAAxC,kBAAwDv2D,EAAxD,cAAmE8I,EAAS,EAAIytD,EAAhF,YAA0FA,EAA1F,YAAoGA,EAApG,mBAAqHv2D,EAArH,OAH0C,KAM9Cw2D,YAAc,CAACvnE,EAAIwnE,EAAWx0B,KAG1B,IAAIzvC,EAAI,GACR,GAAc,IAAVyvC,EACAzvC,EAAIzD,KAAKunE,SAAS,EAAG,EAAG,EAAGG,EAJhB,GAKL1nE,KAAKunE,SAAS,EAAG,GAAI,EAAGG,EAAY,EAL/B,GAML1nE,KAAKunE,SAAS,EAAG,GAAI,EAAGG,EANnB,QAQX,IAAK,IAAI1yD,EAAI,EAAGA,EAAIk+B,EAAOl+B,IACvBvR,GAAKzD,KAAKunE,SAAS,GAAIG,EAAY,GAAK1yD,EAAG,EAAG0yD,EATvC,GAaf,OACI,8BAAUxnE,GAAIA,GACV,0BAAMuD,EAAGA,MAtByB,KA2B9CkkE,aAAe,CAACz0B,EAAOvvB,KACnB,IAAI+jD,EAAY,GAahB,OAZc,IAAVx0B,EACAw0B,EAAY,GACK,IAAVx0B,EACPw0B,EAAY,GACK,IAAVx0B,EACPw0B,EAAY,EACK,IAAVx0B,EACPw0B,EAAY,EACLx0B,EAAQ,IACfw0B,EAAY,GAGTA,GAzCmC,KA4C9CE,cAAgB,CAAC10B,EAAOvvB,KACpB,IAAI+jD,EAAY,GAahB,OAZc,IAAVx0B,EACAw0B,EAAY,GACK,IAAVx0B,EACPw0B,EAAY,GACK,IAAVx0B,EACPw0B,EAAsB,IAAV/jD,EAAc,GAAK,EACd,IAAVuvB,EACPw0B,EAAY,EACLx0B,EAAQ,IACfw0B,EAAY,GAGTA,GA1DmC,KA6D9CG,kBAAoB,CAAClkD,EAAO+jD,EAAWx0B,IACrB,IAAVA,EACO,EACU,IAAVA,EACU,IAAVvvB,EAAc,EAAI+jD,EAAY,EAG3B,IAAVx0B,EACc,IAAVvvB,EACO,EACU,IAAVA,EACA,GAGJ,IAEC+jD,EAAY,GAAK/jD,EA7Ea,KAiF9CmkD,mBAAqB,CAACnkD,EAAOuvB,EAAOw0B,EAAWK,IACvC70B,GAAS,EACF,EAGPvvB,GAAS,EACF,EACAA,GAASuvB,EAAQ,EACjB60B,EAAc,IAGjBL,EAAY,GAAK,GAAK/jD,EAAQ,IAAM+jD,EAAY,GA5Fd,KA+F9CM,eAAiB,CAAC90B,EAAOw0B,IACdx0B,GAAS,EAAI,GAAKw0B,EAAYx0B,EAAQ,GAAKA,EAAQ,GAG9DjwC,SAAU,MAAD,EACoBjD,KAAKwC,MAAtB0wC,EADH,EACGA,MAAOvvB,EADV,EACUA,MACf,GAAc,IAAVuvB,EACA,OACI,yBAAKhwC,UAAU,yBACX,yBAAKA,UAAU,qCAI3B,MAAMwkE,EAAY1nE,KAAK2nE,aAAaz0B,EAAOvvB,GACrCskD,EAAajoE,KAAK4nE,cAAc10B,EAAOvvB,GACvCokD,EAAc/nE,KAAKgoE,eAAe90B,EAAOw0B,GAEzCQ,EAAU,mBAAeh1B,GACzBi1B,EAAWnoE,KAAKynE,YAAYS,EAAYR,EAAWx0B,GAEnDk1B,EAAiBpoE,KAAK6nE,kBAAkBlkD,EAAO+jD,EAAWx0B,GAC1Dm1B,EAAkBroE,KAAK8nE,mBAAmBnkD,EAAOuvB,EAAOw0B,EAAWK,GAEzE,OACI,yBAAK7kE,UAAWkN,IAAW,wBAAyB,CAAE,6BAA8B8iC,EAAQ,KACxF,yBAAKhwC,UAAU,gCAAgCoE,MAAO,CAAE6gE,SAAS,QAAD,OAAUD,EAAV,KAAyBj3D,MAAO,EAAG8I,OAAQguD,EAAazpC,UAAU,eAAD,OAAiB+pC,EAAjB,SAC7H,yBAAKtuD,OAAO,IAAI9I,MAAM,KAClB,8BAAOk3D,IAEX,yBAAKjlE,UAAU,6BAA6BoE,MAAO,CAAEyS,OAAQkuD,EAAY3pC,UAAU,cAAD,OAAgB8pC,EAAhB,cC6RvFn2D,qBA5Yf,cAA4BpQ,IAAMC,UAAW,eAAD,oBACxCC,MAAQ,GADgC,KAuFxCumE,mCAAqClkE,IACdpE,KAAKwC,MAAhB0P,SACO9N,EAAO8N,QAItBlS,KAAKuoE,kBAAkBnkE,EAAO+hB,YA7FM,KAgGxCqiD,wBAA0BpkE,IACHpE,KAAKwC,MAAhB0P,SACY9N,EAAZ6S,SAKRjX,KAAKyoE,kBAvG+B,KA0GxC9lD,mBAAqBve,IAAW,MACpB8N,EAAWlS,KAAKwC,MAAhB0P,OACAwF,EAAYtT,EAAZsT,QACJxF,IAAWwF,EAAQT,SAGlBS,EAAQgxD,WAIb1oE,KAAKyoE,kBApH+B,KAuHxC/lD,uBAAyBte,IAAW,MACxB8N,EAAWlS,KAAKwC,MAAhB0P,OACAizD,EAAWnlE,KAAK+B,MAAhBojE,OACAluD,EAAuC7S,EAAvC6S,QAASwiD,EAA8Br1D,EAA9Bq1D,aAAcr/C,EAAgBhW,EAAhBgW,YACzBtD,EAAa,IAAIhC,IAAIsF,EAAY/D,IAAI1V,GAAK,CAACA,EAAGA,KAChDuR,IAAW+E,GAGVkuD,EAAO53C,KAAK5sB,GAAKmW,EAAW7B,IAAItU,EAAET,MAGlCu5D,GAILz5D,KAAKyoE,kBAtI+B,KAyIxCpmD,uBAAyBje,IAAW,MACxB8N,EAAWlS,KAAKwC,MAAhB0P,OACAizD,EAAWnlE,KAAK+B,MAAhBojE,OACAluD,EAAwB7S,EAAxB6S,QAASC,EAAe9S,EAAf8S,WACbhF,IAAW+E,GAGVkuD,EAAO53C,KAAK5sB,GAAKA,EAAET,KAAOgX,IAI/BlX,KAAKyoE,kBApJ+B,KAuJxCE,YAAc,CAACxiD,EAAW8Y,EAAep/B,EAAW,OAChD,MAAM+oE,EAAc/hE,SAASI,eAAe,gCACtC4hE,EAAehiE,SAASI,eAAe,kCACvC6hE,EAAejiE,SAASI,eAAe,kCAC7C,IAAK2hE,IAAgBC,IAAiBC,EAAc,OAIf,IAAlB7pC,GAAuB9Y,EAAY8Y,GAElD2pC,EAAYthE,MAAM2d,QAAU,+BAC5B4jD,EAAavhE,MAAM2d,QAAU,aAC7B6jD,EAAaxhE,MAAM2d,QAAU,aAC7B9kB,sBAAsB,KAClByoE,EAAYthE,MAAM2d,QAAlB,0DAA+EplB,EAA/E,cARe,eASfgpE,EAAavhE,MAAM2d,QAAnB,0CAAgEplB,EAAhE,cATe,eAUfipE,EAAaxhE,MAAM2d,QAAnB,0CAAgEplB,EAAhE,cAVe,mBAanB+oE,EAAYthE,MAAM2d,QAAU,6BAC5B4jD,EAAavhE,MAAM2d,QAAU,aAC7B6jD,EAAaxhE,MAAM2d,QAAU,aAC7B9kB,sBAAsB,KAClByoE,EAAYthE,MAAM2d,QAAlB,8DAAmFplB,EAAnF,cAjBe,eAkBfgpE,EAAavhE,MAAM2d,QAAnB,0CAAgEplB,EAAhE,cAlBe,eAmBfipE,EAAaxhE,MAAM2d,QAAnB,0CAAgEplB,EAAhE,cAnBe,mBA7Ja,KAqLxC4oE,eAAiB,KAAO,MACZv2D,EAAWlS,KAAKwC,MAAhB0P,OADW,EAE0DlS,KAAK+B,MAA/DgnE,EAFA,EAEX5iD,UAA4C6iD,EAFjC,EAEkB/pC,cAE/BgqC,EAAalrD,KAAUmrD,cAAch3D,GAErCqQ,EAAQjK,IAAakK,SAAStQ,GAC9BizD,EAAS5iD,EAAQA,EAAM4iD,OAAS,GAEtC,IAAIh/C,EAAYg/C,EAAO53C,KAAK5sB,GAAKA,EAAET,KAAO6oE,GAAoBA,EAAmB,GAC5E5iD,GAAag/C,EAAOzwD,OAAS,IAC9ByR,EAAYg/C,EAAO,GAAGjlE,IAE1B,IAAI++B,EAAgB8pC,IAAqB5iD,EAAY6iD,EAAuBD,EAE5E,MAAM/uD,EAAYu6C,aAAkBriD,EAAQiU,GACtC8B,EAAgBusC,aAAsBtiD,EAAQiU,GAEpD7N,IAAa6wD,cAAgB,CAAEj3D,SAAQhS,GAAIimB,GAC3CnmB,KAAKyC,SAAS,CACVwmE,aACA9D,SACAlmC,gBACA9Y,YACAnM,YACAiO,gBACAmhD,UAAW,CACPjjD,YACAnM,YACAiO,kBAEL,KACkC,IAA7BjoB,KAAK+B,MAAMk9B,eACX8pC,IAAqB/oE,KAAK+B,MAAMokB,WAEpCnmB,KAAK2oE,YAAY3oE,KAAK+B,MAAMokB,UAAWnmB,KAAK+B,MAAMk9B,kBAxNlB,KA4NxCrb,wBAA0Bxf,IAAW,MACjByf,EAAkB7jB,KAAKwC,MAA/B0P,OACW9N,EAAX8N,SACO2R,GAEf7jB,KAAKyoE,kBAjO+B,KAoOxCY,gCAAkCjlE,IAAW,MACjC8N,EAAuB9N,EAAvB8N,OAAQ+2D,EAAe7kE,EAAf6kE,WAEZjpE,KAAKwC,MAAM0P,SAAWA,GAE1BlS,KAAKyC,SAAS,CAAEwmE,gBAzOoB,KA4OxCV,kBAAoB15B,IAAkB,MAC1B38B,EAAWlS,KAAKwC,MAAhB0P,OADyB,EAEelS,KAAK+B,MAA7CokB,EAFyB,EAEzBA,UAAWnM,EAFc,EAEdA,UAAWiO,EAFG,EAEHA,cAExBqhD,EAAgB/U,aAAkBriD,EAAQ28B,GAC1C06B,EAAoB/U,aAAsBtiD,EAAQ28B,GAElDu6B,EAAYE,EAAgB,CAC9BnjD,UAAW0oB,EACX70B,UAAWsvD,EACXrhD,cAAeshD,GACf,CACApjD,YACAnM,YACAiO,iBAGJ3P,IAAa6wD,cAAgB,CAAEj3D,SAAQhS,GAAIimB,GAC3CnmB,KAAKyC,SAAS,CACVw8B,cAAe9Y,EACfA,UAAW0oB,EACX70B,UAAWsvD,EACXrhD,cAAeshD,EACfH,aACD,KACkC,IAA7BppE,KAAK+B,MAAMk9B,eACX9Y,IAAcnmB,KAAK+B,MAAMokB,WAE7BnmB,KAAK2oE,YAAY3oE,KAAK+B,MAAMokB,UAAWnmB,KAAK+B,MAAMk9B,kBAxQlB,KA4QxC15B,YAAclB,IAAU,MACZ6N,EAAWlS,KAAKwC,MAAhB0P,OADW,EAEWlS,KAAK+B,MAA3BojE,EAFW,EAEXA,OAAQh/C,EAFG,EAEHA,UAChB,IAAKg/C,EAAOzwD,OAAQ,OAEpB,IAAKyR,EAAW,OAChB,GAAgC,IAA5B9hB,EAAMmF,YAAYC,MAAa,OAEnC6O,IAAakxD,cAAgB,CAAEt3D,SAAQhS,GAAIimB,GAE3CC,YAASlU,EAAQiU,GAEjB,MAAMxC,EAAQwhD,EAAO/uC,UAAUz1B,GAAKA,EAAET,KAAOimB,GAC7C,IAAe,IAAXxC,EAAc,OAElB,MAAMwtC,EAAYxtC,GAASwhD,EAAOzwD,OAAS,EAAI,EAAIiP,EAAQ,EAE3D3jB,KAAKuoE,kBAAkBpD,EAAOhU,GAAWjxD,KA7RL,KAgSxCiK,gBAAkB9F,IACdA,EAAM4B,mBAjS8B,KAoSxCwjE,gBAAkBplE,IAAU,MAChB6N,EAAWlS,KAAKwC,MAAhB0P,OAER9P,IAAgBkG,aAAa,CACzB,QAAS,yBACT4J,YAtSR,gCAAgC1P,EAAOT,GAAQ,MACnC2nE,EAAoB3nE,EAApB2nE,gBACAx3D,EAAW1P,EAAX0P,OAER,GAAIw3D,IAAoBx3D,EAAQ,CAC5B,MAAMqQ,EAAQjK,IAAakK,SAAStQ,GAE9BizD,EAAS5iD,EAAQA,EAAM4iD,OAAS,GAEhCh/C,EAAYg/C,GAAUA,EAAOzwD,OAAS,EAAIywD,EAAO,GAAGjlE,GAAK,EACzD8Z,EAAYu6C,aAAkBriD,EAAQiU,GACtC8B,EAAgBusC,aAAsBtiD,EAAQiU,GAEpD,MAAO,CACHujD,gBAAiBx3D,EACjB+2D,WAAYlrD,KAAUmrD,cAAch3D,GACpCizD,SACAlmC,cAAe,EACf9Y,YACA8B,gBACAjO,YACAovD,UAAW,CACPjjD,YACA8B,gBACAjO,cAKZ,OAAO,KAGX4D,sBAAsBC,EAAWC,EAAWoK,GAAc,MAC9ChW,EAAWlS,KAAKwC,MAAhB0P,OAD6C,EAEXlS,KAAK+B,MAAvCknE,EAF6C,EAE7CA,WAAY9D,EAFiC,EAEjCA,OAAQh/C,EAFyB,EAEzBA,UAE5B,OAAItI,EAAU3L,SAAWA,IAIrB4L,EAAUmrD,aAAeA,IAIzBnrD,EAAUqnD,SAAWA,GAIrBrnD,EAAUqI,YAAcA,IAOhCvjB,mBAAmBC,EAAWC,EAAWC,GAAW,MACxCmP,EAAWlS,KAAKwC,MAAhB0P,OADuC,EAEVlS,KAAK+B,MAAlCk9B,EAFuC,EAEvCA,cAAe9Y,EAFwB,EAExBA,UAEnBtjB,EAAUqP,SAAWA,GACrBlS,KAAK2oE,YAAYxiD,EAAW8Y,EAAe,GAInDj8B,oBACI+a,KAAU/Q,GAAG,gCAAiChN,KAAKqpE,iCACnD/wD,IAAatL,GAAG,wBAAyBhN,KAAK4jB,yBAC9CtL,IAAatL,GAAG,mCAAoChN,KAAKsoE,oCACzDhwD,IAAatL,GAAG,mBAAoBhN,KAAK2iB,oBACzCrK,IAAatL,GAAG,uBAAwBhN,KAAK0iB,wBAC7CpK,IAAatL,GAAG,uBAAwBhN,KAAKqiB,wBAC7C/J,IAAatL,GAAG,wBAAyBhN,KAAKwoE,yBAGlDv7D,uBACI8Q,KAAU3Q,IAAI,gCAAiCpN,KAAKqpE,iCACpD/wD,IAAalL,IAAI,wBAAyBpN,KAAK4jB,yBAC/CtL,IAAalL,IAAI,mCAAoCpN,KAAKsoE,oCAC1DhwD,IAAalL,IAAI,mBAAoBpN,KAAK2iB,oBAC1CrK,IAAalL,IAAI,uBAAwBpN,KAAK0iB,wBAC9CpK,IAAalL,IAAI,uBAAwBpN,KAAKqiB,wBAC9C/J,IAAalL,IAAI,wBAAyBpN,KAAKwoE,yBAyNnDvlE,SAAU,MAAD,EACiBjD,KAAKwC,MAAnB0P,EADH,EACGA,OAAQG,EADX,EACWA,EADX,EAEyFrS,KAAK+B,MAA3FokB,EAFH,EAEGA,UAAW8Y,EAFd,EAEcA,cAAekmC,EAF7B,EAE6BA,OAAQnrD,EAFrC,EAEqCA,UAA0BovD,GAF/D,EAEgDnhD,cAFhD,EAE+DmhD,WAAWH,EAF1E,EAE0EA,WAE/E,IAAK/2D,EAAQ,OAAO,KAEpB,GAAI+2D,EAAY,CAEZ,GADqBA,EAAbU,SACM,OAAO,KAGzB,MAAMjyD,EAAUY,IAAazM,IAAIqG,EAAQiU,GACzC,IAAKzO,EAAS,OAAO,KAErB,MAAMkyD,EAActxD,IAAazM,IAAIqG,EAAQ+sB,GAE7C,IAAIzmB,EAAWd,EAAyB43B,aAAW53B,EAASrF,GAAnCA,EAAE,WACvBgiD,aAAiB38C,KACjBc,EAAUnG,EAAE,mBAGhB,IAAIw3D,EAAeD,EAAmBt6B,aAAWs6B,EAAav3D,GAA7B,GAC7BgiD,aAAiBuV,KACjBpxD,EAAUnG,EAAE,mBAGhB,IAAIsR,EAAQ,EACRtK,EAAUhH,EAAE,iBACZ8yD,GAAUA,EAAOzwD,OAAS,IAC1BiP,EAAQwhD,EAASA,EAAO/uC,UAAUz1B,GAAKA,EAAET,KAAOimB,IAAc,EAE1D9M,EADkB,IAAlB8rD,EAAOzwD,OACiBrC,EAAJ,IAAVsR,EAAgB,wBAA6B,iBAGnD,oCACKtR,EAAE,iBACFsR,EAAQ,GACL,oCACK,KACD,kBAAC,GAAD,CAAiBqjD,QAAS7B,EAAOzwD,OAASiP,EAAO5J,OAAQ,GAAImtD,SAAS,OAO9F,MAAMV,EAA+B,IAAlBvnC,GAAuB9Y,EAAY8Y,EAEtD,OACI,oCACI,kBAAC1d,GAAA,EAAD,CAAUC,QAAM,EAACte,UAAWkN,IAAW,iBAAkB,CAAE,uBAAwB4J,IAAc3J,YAAarQ,KAAKuF,aAC/G,kBAAC,GAAD,CAAqBoe,MAAOwhD,EAAOzwD,OAASiP,EAAQ,EAAGuvB,MAAOiyB,EAAOzwD,SACrE,kBAACo4C,GAAA,EAAD,CACIvZ,KAAMv5B,EACN5J,WAAW,sBACX24B,QAAS,IACTyK,cAAc,EACdC,eAAe,GACf,6BACI,kBAAC,GAAD,CACIvhC,OAAQA,EACRiU,UAAWijD,EAAYA,EAAUjjD,UAAY,KAC7CnM,UAAWovD,EAAYA,EAAUpvD,UAAY,KAC7CiO,cAAemhD,EAAYA,EAAUnhD,cAAgB,SAIjE,yBAAK/kB,UAAU,0BACX,yBAAKA,UAAU,wBAAwBmW,GACvC,yBAAKnW,UAAU,2BACX,yBAAKhD,GAAG,gCACJ,yBAAKA,GAAG,kCAAkCsmE,EAAahuD,EAAUqxD,GACjE,yBAAK3pE,GAAG,kCAAkCsmE,EAAaqD,EAAcrxD,MAI/E2sD,EAAOzwD,OAAS,GACd,kBAACwD,EAAA,EAAD,CACIhV,UAAU,6BACViV,aAAW,OACX5H,QAASvQ,KAAKypE,gBACdp5D,YAAarQ,KAAKmK,iBAClB,kBAAC2/D,GAAD,YC9Lb73D,qBA7Lf,cAAqBnQ,YAAW,eAAD,oBAC3BC,MAAQ,CACJ8lC,mBAAoB1uB,KAAS2vB,wBAC7BihC,gBAAiB5wD,KAAS6wD,sBAHH,KAwB3BC,8BAAgC7lE,IAC5BpE,KAAKyC,SAAS,CAAEynE,eAAgB5xD,IAAawwC,cAAchvC,QAzBpC,KA4B3Bgf,qBAAuB10B,IACnBpE,KAAKya,eA7BkB,KAgC3B0vD,wBAA0B/lE,IACtBpE,KAAKyC,SAAS,CAAEsnE,gBAAiB3lE,EAAOrC,SAjCjB,KAoC3B6lC,2BAA6BxjC,IACzBpE,KAAKyC,SAAS,CAAEolC,mBAAoBzjC,EAAOihC,uBArCpB,KAwC3B2/B,gBAAkB,KACd,MAAM9yD,EAASiH,KAAS0oB,YACX9jB,KAAUlS,IAAIqG,KAGFiH,KAAjB6K,aAGJoC,YAASlU,EAAQ,MAAM,GAEvB0oB,cAA4B,KAlDT,KAsD3BwvC,iBAAmB,KACf,MAAMl4D,EAASiH,KAAS0oB,YACX9jB,KAAUlS,IAAIqG,IAG3B22B,YAAW32B,IA3DY,KA8D3Bm4D,SAAWC,IAGP,OAAOj4D,EAFOrS,KAAKwC,MAAX6P,GAECi4D,GACJ1kE,QAAQ,MAAO,IACfA,QAAQ,SAAK,KA7DtB5C,oBACImW,KAASnM,GAAG,qBAAsBhN,KAAK84B,sBACvC3f,KAASnM,GAAG,2BAA4BhN,KAAK4nC,4BAC7CzuB,KAASnM,GAAG,wBAAyBhN,KAAKmqE,yBAE1C7xD,IAAatL,GAAG,6BAA8BhN,KAAKiqE,+BACnD3xD,IAAatL,GAAG,8BAA+BhN,KAAKiqE,+BAGxDh9D,uBACIkM,KAAS/L,IAAI,qBAAsBpN,KAAK84B,sBACxC3f,KAAS/L,IAAI,2BAA4BpN,KAAK4nC,4BAC9CzuB,KAAS/L,IAAI,wBAAyBpN,KAAKmqE,yBAE3C7xD,IAAalL,IAAI,6BAA8BpN,KAAKiqE,+BACpD3xD,IAAalL,IAAI,8BAA+BpN,KAAKiqE,+BAiDzDhnE,SAAU,MACEoP,EAAMrS,KAAKwC,MAAX6P,EADH,EAMDrS,KAAK+B,MAHL8lC,EAHC,EAGDA,mBACAkiC,EAJC,EAIDA,gBACAG,EALC,EAKDA,eAGEh4D,EAASiH,KAAS0oB,YAClBtjB,EAAOR,KAAUlS,IAAIqG,GAErBi0D,EAAmBC,YAAqBl0D,GAC9C,IAAIiM,EAAQlC,YAAa/J,GAAQ,EAAMG,GACnC2M,EAAWknD,YAAgBh0D,GAAQ,GACnCq4D,GAAwB,EAE5B,GAAIR,EACA,OAAQA,EAAgB,UACpB,IAAK,4BACD5rD,EAAQne,KAAKqqE,SAAS,cACtBrrD,EAAW,GACXurD,GAAwB,EACxB,MACJ,IAAK,mCACDpsD,EAAQne,KAAKqqE,SAAS,uBACtBrrD,EAAW,GACXurD,GAAwB,EACxB,MACJ,IAAK,uBACD,MACJ,IAAK,0BACDpsD,EAAQne,KAAKqqE,SAAS,YACtBrrD,EAAW,GACXurD,GAAwB,EACxB,MACJ,IAAK,mCACDpsD,EAAQne,KAAKqqE,SAAS,uBACtBrrD,EAAW,GACXurD,GAAwB,OAG7B,GAAI1iC,EACP,OAAQA,EAAmB,UACvB,IAAK,2BAEL,IAAK,6BACD,MACJ,IAAK,+BACD1pB,EAAQne,KAAKqqE,SAAS,eACtBrrD,EAAW,GACXurD,GAAwB,EACxB,MACJ,IAAK,0BAEL,IAAK,6BACD,MACJ,IAAK,sCACDpsD,EAAQne,KAAKqqE,SAAS,WACtBrrD,EAAW,GACXurD,GAAwB,EACxB,MACJ,IAAK,iCAEL,IAAK,oCACD,MACJ,IAAK,wCACDpsD,EAAQne,KAAKqqE,SAAS,WACtBrrD,EAAW,GACXurD,GAAwB,OAIhCpsD,EAAQne,KAAKqqE,SAAS,WACtBrrD,EAAW,GACXurD,GAAwB,EAG5B,OACI,yBAAKrnE,UAAWkN,IAAW,iBAAkB,CAAE,2BAA4B85D,EAAiB,KACxF,yBAAKhnE,UAAU,0BACX,kBAAC,GAAD,CAAegwC,MAAOg3B,IACtB,yBAAKhnE,UAAU,sBACVqnE,EACG,yBACIrnE,UAAWkN,IAAW,gBAAiB,OAAQmO,EAAO,iBAAmB,kBACzEhO,QAASvQ,KAAKglE,iBACd,0BAAM9hE,UAAU,yBAAyBib,GACzC,kBAACqsD,GAAA,EAAD,MACA,0BAAMtnE,UAAWkN,IAAW,sBAAuB,CAAE,uBAAwB+1D,KACxEnnD,GAEL,0BAAM9b,UAAU,wBAGpB,kBAAC,GAAD,CACIA,UAAWkN,IAAW,OAAQ,kBAC9B8B,OAAQA,EACR3B,QAASvQ,KAAKglE,kBAGtB,kBAAC,GAAD,CAAe9yD,OAAQA,IACtBqM,GACG,oCACI,kBAACrG,EAAA,EAAD,CACIhV,UAAU,6BACViV,aAAW,SACX5H,QAASvQ,KAAKoqE,kBACd,kBAAC,GAAD,OAEJ,kBAAC,GAAD,CAAgBpF,gBAAiBhlE,KAAKglE,yB,qICnBvDyF,OA1Kf,cAA2B5oE,IAAMC,UAAW,eAAD,oBACvCC,MAAQ,CACJimC,SAAU,KACVz9B,MAAOyB,IAAY3G,OACnBqlE,UAAW1+D,IAAY3G,OACvB+E,UAAU,EACVugE,YAAY,EACZC,WAAW,GAPwB,KAkBvCC,0BAA4BzmE,IAAW,MAC3BiB,EAAuBjB,EAAvBiB,OAAQiG,EAAelH,EAAfkH,gBAEG4sC,IAAf5sC,EACAtL,KAAKyC,SAAS,CAAE8H,MAAOlF,IAEvBrF,KAAKyC,SAAS,CAAE8H,MAAOlF,EAAQqlE,UAAWp/D,KAxBX,KA4BvCw/D,kBAAoB9iC,IAChBhoC,KAAKyC,SAAS,CAAEulC,SAAUA,KA7BS,KAgCvC+iC,mBAAqB,KAAO,MAAD,EACqB/qE,KAAK+B,MAAzCqI,EADe,EACfA,SAAUugE,EADK,EACLA,WAAYC,EADP,EACOA,UAE1BxgE,GACAugE,GACAC,GAEJ5qE,KAAKyC,SAAS,CAAEulC,SAAU,QAvCS,KA0CvCgjC,iBAAmB,CAAC3mE,EAAO4mE,KACvBjrE,KAAKyC,SAAS,CAAEkoE,YAAY,IAExBM,GACAjrE,KAAK8qE,kBAAkBzmE,EAAM4jC,gBA9CE,KAkDvCijC,iBAAmB,KACflrE,KAAKyC,SAAS,CAAEkoE,YAAY,GAAS,KACjC3qE,KAAK+qE,wBApD0B,KAwDvCI,sBAAwB,KACpBnrE,KAAKyC,SAAS,CAAEmoE,WAAW,GAAS,KAChC5qE,KAAK+qE,wBA1D0B,KA8DvCK,iBAAmB,KAAO,MAAD,EACQprE,KAAK+B,MAA1BwI,EADa,EACbA,MAAOmgE,EADM,EACNA,UACTW,EAAY9gE,EAAQ,EAAI,EAAImgE,GAAaY,KAE/ClpE,IAAgBkG,aAAa,CACzB,QAAS,0BACTjD,OAAQgmE,KApEuB,KAwEvC/gE,aAAe,CAACjG,EAAOkG,KAAW,MAAD,EACGvK,KAAK+B,MAA7BqI,EADqB,EACrBA,SAAUsgE,EADW,EACXA,UAEdtgE,EACAhI,IAAgBkG,aAAa,CACzB,QAAS,0BACTjD,OAAQkF,IAGZnI,IAAgBkG,aAAa,CACzB,QAAS,0BACTgD,WAAYf,EAAQ,EAAIA,EAAQmgE,EAChCrlE,OAAQkF,KApFmB,KAyFvCghE,gBAAkB,KAAO,MACbhhE,EAAUvK,KAAK+B,MAAfwI,MAERvK,KAAKyC,SAAS,CACV2H,UAAU,EACVsgE,UAAWngE,KA9FoB,KAkGvCihE,cAAgB,KAAO,MAAD,EACWxrE,KAAK+B,MAA1BwI,EADU,EACVA,MAAOmgE,EADG,EACHA,UAEf1qE,KAAKyC,SACD,CACI2H,UAAU,EACVsgE,UAAWngE,EAAQ,EAAIA,EAAQmgE,GAEnC,KACI1qE,KAAK+qE,wBA3GsB,KAgHvCl5D,cAAgBtH,GACE,IAAVA,EACO,kBAAC,KAAD,CAAeolD,SAAS,UAG/BplD,EAAQ,IACD,kBAAC,KAAD,CAAgBolD,SAAS,UAGhCplD,EAAQ,GACD,kBAAC,KAAD,CAAgBolD,SAAS,UAG7B,kBAAC,KAAD,CAAcA,SAAS,UAnHlC3sD,oBACIgJ,IAAYgB,GAAG,0BAA2BhN,KAAK6qE,2BAGnD59D,uBACIjB,IAAYoB,IAAI,0BAA2BpN,KAAK6qE,2BAiHpD5nE,SAAU,MAAD,EACuBjD,KAAK+B,MAAzBimC,EADH,EACGA,SAAUz9B,EADb,EACaA,MACZmS,EAAOuN,QAAQ+d,GAErB,OACI,yBACIj3B,aAAcF,GAAK7Q,KAAKgrE,iBAAiBn6D,GAAG,GAC5CG,aAAchR,KAAKkrE,iBACnB5jE,MAAO,CACHgM,SAAU,WACVu/C,WAAY,gBAEhB,kBAAC36C,EAAA,EAAD,CAAYhV,UAAU,uBAAuBkV,MAAM,UAAU7H,QAASvQ,KAAKorE,kBACtEprE,KAAK6R,cAActH,IAExB,yBACIjD,MAAO,CACHgM,SAAU,WACVu/C,WAAY,cACZ4Y,WAAY/uD,EAAO,UAAY,SAC/Bw+B,OAAQ,GAEZnqC,aAAcF,GAAK7Q,KAAKgrE,iBAAiBn6D,GAAG,GAC5CG,aAAchR,KAAKmrE,uBACnB,yBAAKjoE,UAAU,uBACX,kBAACgO,EAAA,EAAD,CACIlQ,IAAK,EACLmQ,IAAK,EACLC,KAAM,IACN7G,MAAOA,EACPmH,SAAU1R,KAAKsK,aACfohE,YAAa1rE,KAAKurE,gBAClBI,UAAW3rE,KAAKwrE,cAChBI,YAAY,kB,0CCrFzBC,OAjFf,cAA2BhqE,IAAMC,UAC7BlC,YAAY4C,GACR0B,MAAM1B,GADS,KAkBnBspE,0BAA4B1nE,IAAW,MAC3BqyD,EAAWryD,EAAXqyD,OAERz2D,KAAKyC,SAAS,CAAEg0D,YArBD,KAwBnBsV,aAAe,KAAO,MACVtV,EAAWz2D,KAAK+B,MAAhB00D,OAER,IAAIuV,EAAavV,EACjB,OAAQA,GACJ,KAAKwV,IAAWC,KACZF,EAAaC,IAAWE,OACxB,MAEJ,KAAKF,IAAWE,OACZH,EAAaC,IAAWG,WACxB,MAEJ,KAAKH,IAAWG,WACZJ,EAAaC,IAAWC,KAKhC9pE,IAAgBkG,aAAa,CACzB,QAAS,0BACTmuD,OAAQuV,KA7CG,KAiDnBK,QAAU5V,IACN,OAAQA,GACJ,KAAKwV,IAAWC,KAGhB,KAAKD,IAAWE,OACZ,OAAO,kBAAC,KAAD,CAAYxc,SAAS,UAEhC,KAAKsc,IAAWG,WACZ,OAAO,kBAAC,KAAD,CAAezc,SAAS,UAEnC,QACI,OAAO,kBAAC,KAAD,CAAYA,SAAS,YA7DrB,MAGP8G,EAAWzqD,IAAXyqD,OAERz2D,KAAK+B,MAAQ,CACT00D,UAIRzzD,oBACIgJ,IAAYgB,GAAG,0BAA2BhN,KAAK8rE,2BAGnD7+D,uBACIjB,IAAYoB,IAAI,0BAA2BpN,KAAK8rE,2BAmDpD7oE,SAAU,MACEwzD,EAAWz2D,KAAK+B,MAAhB00D,OAER,OACI,kBAACv+C,EAAA,EAAD,CACIhV,UAAU,uBACVkV,MAAOq+C,IAAWwV,IAAWC,KAAO,UAAY,UAChD37D,QAASvQ,KAAK+rE,cACb/rE,KAAKqsE,QAAQ5V,M,qBC5Bf6V,OAhDf,cAA4BzqE,IAAMC,UAC9BlC,YAAY4C,GACR0B,MAAM1B,GADS,KAkBnB+pE,2BAA6BnoE,IAAW,MAC5BooE,EAAYpoE,EAAZooE,QAERxsE,KAAKyC,SAAS,CAAE+pE,aArBD,KAwBnBC,cAAgB,KAAO,MACXD,EAAYxsE,KAAK+B,MAAjByqE,QAERpqE,IAAgBkG,aAAa,CACzB,QAAS,2BACTkkE,SAAUA,KA7BC,MAGPA,EAAYxgE,IAAZwgE,QAERxsE,KAAK+B,MAAQ,CACTyqE,WAIRxpE,oBACIgJ,IAAYgB,GAAG,2BAA4BhN,KAAKusE,4BAGpDt/D,uBACIjB,IAAYoB,IAAI,2BAA4BpN,KAAKusE,4BAkBrDtpE,SAAU,MACEupE,EAAYxsE,KAAK+B,MAAjByqE,QAER,OACI,kBAACt0D,EAAA,EAAD,CACIhV,UAAU,uBACVkV,MAAQo0D,EAAsB,UAAZ,UAClBj8D,QAASvQ,KAAKysE,eACd,kBAAC,KAAD,CAAa9c,SAAS,aCzCtC,MAAM+c,WAA2B7qE,IAAMC,UACnClC,YAAY4C,GACR0B,MAAM1B,GADS,KAqBnBmqE,gCAAkCvoE,IAAW,MACjC2B,EAAiB3B,EAAjB2B,aAER/F,KAAKyC,SAAS,CAAEsD,kBAxBD,KA2BnB6mE,qCAAuCxoE,IAAW,MACtCyoE,EAAsBzoE,EAAtByoE,kBAER7sE,KAAKyC,SAAS,CAAEoqE,uBA9BD,KAiCnB/mE,mBAAqB,KAAO,MAChBkd,EAAUhjB,KAAKwC,MAAfwgB,MADe,EAEqBhjB,KAAK+B,MAAzC8qE,EAFe,EAEfA,kBAAmB9mE,EAFJ,EAEIA,aAGrB+mE,GADO9pD,EAAQ6pD,EAAoB9mE,KACfgnE,IACpBC,IACAD,IAEF/pD,EACA5gB,IAAgBkG,aAAa,CACzB,QAAS,qCACTukE,kBAAmBC,IAGvB1qE,IAAgBkG,aAAa,CACzB,QAAS,gCACTvC,aAAc+mE,KAlDP,MAGPD,EAAoC7gE,IAApC6gE,kBAAmB9mE,EAAiBiG,IAAjBjG,aAE3B/F,KAAK+B,MAAQ,CACT8qE,oBACA9mE,gBAIR/C,oBACIgJ,IAAYgB,GAAG,gCAAiChN,KAAK2sE,iCACrD3gE,IAAYgB,GAAG,qCAAsChN,KAAK4sE,sCAG9D3/D,uBACIjB,IAAYoB,IAAI,gCAAiCpN,KAAK2sE,iCACtD3gE,IAAYoB,IAAI,qCAAsCpN,KAAK4sE,sCAqC/D3pE,SAAU,MACE+f,EAAUhjB,KAAKwC,MAAfwgB,MADH,EAEuChjB,KAAK+B,MAAzC8qE,EAFH,EAEGA,kBAAmB9mE,EAFtB,EAEsBA,aAErBS,EAAOwc,EAAQ6pD,EAAoB9mE,EAEzC,OACI,kBAACmS,EAAA,EAAD,CACIhV,UAAU,uBACVkV,MAAO5R,EAAOumE,IAA6B,UAAY,UACvDx8D,QAASvQ,KAAK8F,oBACd,yBAAK5C,UAAU,+BAAf,QAMhBwpE,GAAmBtuD,aAAe,CAC9B4E,OAAO,GAOI0pD,U,OCxBAO,OA3Df,cAAmBprE,IAAMC,UACrBlC,YAAY4C,GACR0B,MAAM1B,GADS,KAwBnB0qE,wBAA0B9oE,IAAW,MACzBa,EAA0Bb,EAA1Ba,YAAapF,EAAauE,EAAbvE,SACbqnE,EAAYlnE,KAAK+B,MAAjBmlE,QAERlnE,KAAKyC,SAAS,CACVwC,cACApF,WACAstE,kBAAmBr9D,YAAkB/O,KAAKgP,MAAM9K,GAAe,GAAIpF,EAAUqnE,MA/BlE,KAmCnBkG,cAAgB/oE,IACZA,EAAM4B,kBACN5B,EAAM6B,iBAFe,QAIsBlG,KAAK+B,MAAxCkD,EAJa,EAIbA,YAAapF,EAJA,EAIAA,SAAUqnE,EAJV,EAIUA,QAE/BlnE,KAAKyC,SAAS,CACVykE,SAAUA,EACViG,kBAAmBr9D,YAAkB/O,KAAKgP,MAAM9K,GAAe,GAAIpF,GAAWqnE,MA3CnE,MAGPrnE,EAAaG,KAAKwC,MAAlB3C,SAKRG,KAAK+B,MAAQ,CACTmlE,SAHY,EAIZjiE,YALgB,EAMhBpF,WACAstE,kBAAmBr9D,YAPH,EAOkCjQ,GANtC,IAUpBmD,oBACIgJ,IAAYgB,GAAG,wBAAyBhN,KAAKktE,yBAGjDjgE,uBACIjB,IAAYoB,IAAI,wBAAyBpN,KAAKktE,yBA0BlDjqE,SAAU,MACEkqE,EAAsBntE,KAAK+B,MAA3BorE,kBAER,OACI,yBAAKjqE,UAAU,qBAAqBqN,QAASvQ,KAAKotE,eAC7CD,K,iECiOFE,OA7Qf,cAAuBxrE,IAAMC,UACzBlC,YAAY4C,GACR0B,MAAM1B,GADS,KA0BnB8qE,eAAiB,KACb,MAAM7/C,EAAOztB,KAAK0tB,QAAQ1U,QAC1B,IAAKyU,EAAM,OAFQ,QAIkBztB,KAAK+B,MAAlCwrE,EAJW,EAIXA,SAAU71D,EAJC,EAIDA,QAAS81D,EAJR,EAIQA,MAC3B,IAAK91D,IAAY81D,EAAO,OACxB,IAAKD,EAAU,OAEf,MAAM5pD,EAAQ,IAAI4pD,EAASjgD,OACtB45C,UACA9wC,UAAUz1B,GAAK8sE,aAAmB9sE,EAAG+W,GAAW81D,IACrD,IAAe,IAAX7pD,EAAc,OAElB,MAAMQ,EAAOnkB,KAAK0tE,WAAW7hE,IAAI8X,GACjC,IAAKQ,EAAM,OAEX,MAAM4pC,EAAO4f,eAAqBxpD,GAC7B4pC,IAELtgC,EAAKD,UAAYugC,EAAKpgC,UAAY,KA7CnB,KA8DnBigD,kCAAoCxpE,IAAW,MACnCypE,EAASzpE,EAATypE,KAEJA,EACA7tE,KAAKyC,SACD,CACIqrE,kBAAmBD,GAEvB,KACI7tE,KAAK+tE,YAIb/tE,KAAKyC,SACD,CACIqrE,kBAAmBD,GAEvB,KACI7tE,KAAKguE,cAhFF,KAsFnBC,0BAA4B7pE,IAAW,MAC3Bf,EAAWe,EAAXf,OAER,OAAQA,EAAO,UACX,IAAK,UAEDrD,KAAKyC,SAAS,CACViV,QAASrU,EACTmqE,MAAO,OAEX,MAEJ,IAAK,oBAEDxtE,KAAKyC,SAAS,CACViV,QAAS,KACT81D,MAAOnqE,EAAOmqE,UAtGX,KA6GnBU,mCAAqC9pE,IAAW,MAAD,EAChBpE,KAAK+B,MAAxB2V,EADmC,EACnCA,QAAS81D,EAD0B,EAC1BA,MACTnqE,EAAWe,EAAXf,OAEF6O,EAASwF,EAAUA,EAAQT,QAAU,EACrCkP,EAAYzO,EAAUA,EAAQxX,GAAK,EAErCiuE,aAAgBj8D,EAAQiU,EAAWqnD,EAAOnqE,IAC1CrD,KAAKyC,SAAS,CACV8qE,SAAU,QAtHH,KA2HnBa,4BAA8BhqE,IAAW,MAAD,EACTpE,KAAK+B,MAAxB2V,EAD4B,EAC5BA,QAAS81D,EADmB,EACnBA,MACTnqE,EAAqBe,EAArBf,OAAQkqE,EAAanpE,EAAbmpE,SAEVr7D,EAASwF,EAAUA,EAAQT,QAAU,EACrCkP,EAAYzO,EAAUA,EAAQxX,GAAK,EAErCiuE,aAAgBj8D,EAAQiU,EAAWqnD,EAAOnqE,IAC1CrD,KAAKyC,SAAS,CACV8qE,cApIO,KAyInBQ,QAAU,KACNjjE,aAAa9K,KAAKquE,aAElBruE,KAAKquE,YAAcrjE,WAAW,KAAO,MAAD,EACchL,KAAK+B,MAA3CusE,EADwB,EACxBA,eAAgBR,EADQ,EACRA,kBACxB9tE,KAAKyC,SAAS,CACVia,KAAM4xD,GAAkBR,KAE7B,MAjJY,KAoJnBE,SAAW,KACPljE,aAAa9K,KAAK+oC,SAElB/oC,KAAK+oC,QAAU/9B,WAAW,KAAO,MAAD,EACkBhL,KAAK+B,MAA3CusE,EADoB,EACpBA,eAAgBR,EADI,EACJA,kBACxB9tE,KAAKyC,SAAS,CACVia,KAAM4xD,GAAkBR,KAE7B,MA5JY,KA+JnB9C,iBAAmB,KACfhrE,KAAKyC,SAAS,CACVqrE,mBAAmB,EACnBpxD,MAAM,KAlKK,KAsKnBwuD,iBAAmB,KACflrE,KAAKyC,SACD,CACIqrE,mBAAmB,GAEvB,KACI9tE,KAAKguE,cA5KE,KAiLnBn/C,aAAe,KACX,MAAMpB,EAAOztB,KAAK0tB,QAAQ1U,QACrByU,IAEDA,EAAKD,WAAauF,KAClB3wB,IAAgBkG,aAAa,CACzB,QAAS,kCAENmlB,EAAKD,UAAYC,EAAKK,cAAgBL,EAAKqF,aAAeC,MACjE3wB,IAAgBkG,aAAa,CACzB,QAAS,oCAxLjBtI,KAAK0tB,QAAU7rB,IAAMya,YACrBtc,KAAK0tE,WAAa,IAAI54D,IAJP,MAMP4C,EAA6B1L,IAA7B0L,QAAS81D,EAAoBxhE,IAApBwhE,MAAOD,EAAavhE,IAAbuhE,SACxBvtE,KAAK+B,MAAQ,CACT2V,UACA81D,QACAD,WAEA7wD,MAAM,EACN4xD,gBAAgB,EAChBR,mBAAmB,GAI3BlrE,mBAAmBC,EAAWC,EAAWC,GAAW,MACxC2Z,EAAS1c,KAAK+B,MAAd2a,MAEH5Z,EAAU4Z,MAAQA,GACnB1c,KAAKstE,iBA0BbtqE,oBACIgJ,IAAYgB,GAAG,0BAA2BhN,KAAKiuE,2BAC/CjiE,IAAYgB,GAAG,4BAA6BhN,KAAKouE,6BACjDpiE,IAAYgB,GAAG,mCAAoChN,KAAKkuE,oCACxDliE,IAAYgB,GAAG,kCAAmChN,KAAK4tE,mCAG3D3gE,uBACIjB,IAAYoB,IAAI,0BAA2BpN,KAAKiuE,2BAChDjiE,IAAYoB,IAAI,4BAA6BpN,KAAKouE,6BAClDpiE,IAAYoB,IAAI,mCAAoCpN,KAAKkuE,oCACzDliE,IAAYoB,IAAI,kCAAmCpN,KAAK4tE,mCAqI5DW,aAAaf,EAAOgB,GAChB,IAAKhB,EAAO,OAAO,KAEnB,IAAIt+D,EAAU,KACd,OAAQs+D,EAAM,UACV,IAAK,iBACDt+D,EACI,kBAAC,KAAD,CACIs+D,MAAOA,EACPxqD,MAAOwqD,EAAMxqD,MACbmF,UAAW,IAAMsmD,aAAqBjB,EAAMxqD,MAAOwqD,EAAMn0D,QAASm0D,EAAOgB,GAAa,KAE9F,MAEJ,IAAK,qBACDt/D,EACI,kBAAC,KAAD,CACIs+D,MAAOA,EACPtqD,UAAWsqD,EAAMn8C,WACjBlJ,UAAW,IAAMsmD,aAAqBjB,EAAMn8C,WAAYm8C,EAAMn0D,QAASm0D,EAAOgB,GAAa,KAM3G,OAAOt/D,EAGXjM,SAAU,MAAD,EACsBjD,KAAK+B,MAAxB2a,EADH,EACGA,KAAM6wD,EADT,EACSA,SAEd,IAAK7wD,EAAM,OAAO,KAClB,IAAK6wD,EAAU,OAAO,KAJjB,MAMGjgD,EAAUigD,EAAVjgD,MACR,IAAKA,EAAO,OAAO,KACnB,GAAIA,EAAM5Y,QAAU,EAAG,OAAO,KAE9B1U,KAAK0tE,WAAW7oC,QAEhB,IAAI6pC,EAAK,KACiB,sBAAtBphD,EAAM,GAAG,WACTohD,EAAKnB,EAASlqE,OAAOmrE,aAGzB,MAAMG,EAAqC,YAAtBrhD,EAAM,GAAG,SACxB3sB,GAAK6hB,aAAS7hB,EAAG,IAAMwnB,aAAUxnB,EAAEsW,QAAStW,EAAET,KAC9CS,GAAKX,KAAKuuE,aAAa5tE,EAAG+tE,GAEhC,OACI,yBAAKxrE,UAAU,YACX,yBAAKA,UAAU,oBACX,yBACI+Z,IAAKjd,KAAK0tB,QACVxqB,UAAU,iBACV6N,aAAc/Q,KAAKgrE,iBACnBh6D,aAAchR,KAAKkrE,iBACnB52C,SAAUt0B,KAAK6uB,cACd,IAAIvB,GACA45C,UACA7wD,IAAI,CAAC1V,EAAGgjB,IACL,yBAAKpf,IAAK5D,EAAET,IAAMyjB,EAAO1G,IAAKmW,GAAMpzB,KAAK0tE,WAAWlzD,IAAImJ,EAAOyP,GAAKlwB,UAAU,iBACzEyrE,EAAahuE,UChQlD,IAAI0gE,GAAY,KAEhB,MAAMuN,GAAU,IAAI95D,IACd+5D,GAAW,IAAI/5D,IAEd,SAAeg6D,GAAtB,mC,6CAAO,WAA+B7rD,GAA/B,mBAAAvQ,EAAA,iEAEKnQ,EAAS,MACTqsE,GAAQ35D,IAAIgO,GAHjB,gBAIK1gB,EAASqsE,GAAQ/iE,IAAIoX,GAJ1B,8BAMWxiB,EAAO4gE,GAAY,IAAIn4C,KANlC,SAOoB9mB,IAAgBC,KAAK,CAChC,QAAS,wBACT4gB,MACA8rD,YAAY,IAVrB,UAOKxsE,EAPL,OAYKqsE,GAAQp0D,IAAIyI,EAAK1gB,GACjBssE,GAASr0D,IAAIjY,EAAQ0gB,GACjBo+C,KAAc5gE,EAdvB,mDAiBCqS,QAAQ86B,IAAI,YAAarrC,GACzBysE,YAAuBzsE,GACvB0sE,YAAsB,CAAET,YAAajsE,EAAQ0gB,QAnB9C,mDAqBOisD,EAAYpiE,OAAO4P,QACfyyD,OAAS,KACnBD,EAAUjnB,SAAWhlC,EAvBtB,yD,0PC65BQhR,qBAn5Bf,cAA2BpQ,IAAMC,UAC7BlC,YAAY4C,GACR0B,MAAM1B,GADS,KAwGnB4sE,kBAAoB,KAChB,MAAMvqE,EAAQ7E,KAAKqvE,SAASr2D,QACvBnU,GAEL7E,KAAKgF,WAAWH,EAAMI,YAAcE,MA5GrB,KA+GnBmqE,mBAAqB,KACjB,MAAMzqE,EAAQ7E,KAAKqvE,SAASr2D,QACvBnU,GAEL7E,KAAKgF,WAAWH,EAAMI,YAAcE,MAnHrB,KAsHnBoqE,aAAelrE,IACGrE,KAAKqvE,SAASr2D,SAG5BhZ,KAAKgF,WAAWX,EAAMmrE,WA1HP,KA6HnBxqE,WAAaC,IACT,MAAMJ,EAAQ7E,KAAKqvE,SAASr2D,QACvBnU,IAELI,EAAckB,YAAMlB,EAAa,EAAGJ,EAAMhF,UAAY,GAEtDgF,EAAMI,YAAcA,IAnIL,KA4LnB6vD,0BAA4B1wD,IACxB,MAAM+C,EAASnH,KAAKqvE,SAASr2D,QACxB7R,IAEAA,EAAOgC,SACRnJ,KAAKyvE,cAAc,KACnBzvE,KAAK0vE,iBAAkB,KAlMZ,KAsMnBxa,yBAA2B9wD,IACvB,MAAM+C,EAASnH,KAAKqvE,SAASr2D,QACxB7R,GAEDA,EAAOgC,QAAUnJ,KAAK0vE,kBACtB1vE,KAAK2vE,aAAa,KAClB3vE,KAAK0vE,iBAAkB,IA5MZ,KAgNnB/C,gCAAkCvoE,IAAW,MACjC2B,EAAiB3B,EAAjB2B,aADgC,EAGb/F,KAAK+B,MAAxB2V,EAHgC,EAGhCA,QAAS81D,EAHuB,EAGvBA,MACjB,IAAK91D,IAAY81D,EAAO,OAGxB,GADcjqD,aAAS7L,GAAW81D,GACvB,OAEX,MAAMrmE,EAASnH,KAAKqvE,SAASr2D,QACxB7R,IAELA,EAAOpB,aAAeA,IA5NP,KA+NnB6mE,qCAAuCxoE,IAAW,MACtCyoE,EAAsBzoE,EAAtByoE,kBADqC,EAGlB7sE,KAAK+B,MAAxB2V,EAHqC,EAGrCA,QAAS81D,EAH4B,EAG5BA,MACjB,IAAK91D,IAAY81D,EAAO,OAExB,IAAKjqD,aAAS7L,GAAW81D,GAAQ,OACjC,IAAKoC,aAAqBl4D,GAAW81D,GAAQ,OAE7C,MAAMrmE,EAASnH,KAAKqvE,SAASr2D,QACxB7R,IAELA,EAAOpB,aAAe8mE,IA3OP,KA8OnBhC,0BAA4BzmE,IAAW,MAC3BiB,EAAWjB,EAAXiB,OAEF8B,EAASnH,KAAKqvE,SAASr2D,QACxB7R,IAELA,EAAO9B,OAASA,IApPD,KAuPnBwqE,wBAA0BzrE,IAAW,MACzBf,EAA4Be,EAA5Bf,OAAQkH,EAAoBnG,EAApBmG,MAAO1K,EAAauE,EAAbvE,SADS,EAELG,KAAK+B,MAAxB2V,EAFwB,EAExBA,QAAS81D,EAFe,EAEfA,MAEjB,IAAKW,aAAgBz2D,EAASA,EAAQT,QAAU,EAAGS,EAASA,EAAQxX,GAAK,EAAGstE,EAAOnqE,GAAS,OAE5F,MAAM8D,EAASnH,KAAKqvE,SAASr2D,QACxB7R,IACAA,EAAOtH,SAKZsH,EAAOlC,YAAcsF,EAAQpD,EAAOtH,SAJhCG,KAAK8vE,aAAe,CAAEvlE,QAAO1K,cAhQlB,KAuQnBmtD,iCAAmC5oD,IAC/BpE,KAAK+vE,mBAAqB9lD,QAAQ9Q,KAAS8zC,qBAxQ5B,KA2QnB+iB,+BAAiC5rE,IAC7BpE,KAAK+vE,oBAAqB,GA5QX,KA+QnBE,+BAAiC7rE,IAC7BpE,KAAK+vE,oBAAqB,GAhRX,KAmRnBG,8BAAgC9rE,IAC5BpE,KAAK+vE,oBAAqB,EAEX/vE,KAAKqvE,SAASr2D,SAG7BhZ,KAAKyvE,cAAc,MAzRJ,KA4RnBU,iBAAmB9sE,IACf,IAAKA,EAAQ,OADY,MAGjBkqE,EAAavhE,IAAbuhE,SACK6C,EAAYpwE,KAAK+B,MAAtBymB,IAEFA,EAAM6nD,aAAYhtE,GAClBq8D,EAAW4Q,aAAiBjtE,GAPT,EAQSqI,aAAerI,GAAzC4B,EARiB,EAQjBA,YAAapF,EARI,EAQJA,SACf0wE,EAAUtmD,QAAQzB,GAElBgoD,EAAgC,sBAApBntE,EAAO,SACnB,CAAEqU,QAAS,KAAM81D,MAAOnqE,EAAOmqE,MAAOgB,YAAanrE,EAAOmrE,aAC1D,CAAE92D,QAASrU,EAAQmqE,MAAO,KAAMgB,YAAa,MAEnDxuE,KAAKyC,S,wVAAL,EAEQwC,cACApF,WACA0tE,WACAgD,UACA/nD,OACGgoD,EAPX,CAQQ9Q,aAEJ,KACI,MAAMv4D,EAASnH,KAAKqvE,SAASr2D,QACxB7R,IAEDipE,IAAY5nD,IACZrhB,EAAOi9B,OACHpkC,KAAK8vE,cACL3oE,EAAOlC,YAAcjF,KAAK8vE,aAAavlE,MAAQvK,KAAK8vE,aAAajwE,SACjEG,KAAK8vE,aAAe,MAEpB3oE,EAAOlC,YAAcA,GAIzBjF,KAAK+vE,oBACL5oE,EAAOe,QAEP9F,IAAgBkG,aAAa,CACzB,QAAS,yBACTjF,YAEG8D,EAAOgC,QACdhC,EAAOc,WA3UJ,KAiVnBwoE,wBAA0BrsE,IAAW,MACzB8N,EAA8B9N,EAA9B8N,OAAQiU,EAAsB/hB,EAAtB+hB,UAAWtd,EAAWzE,EAAXyE,OADK,EAEQ7I,KAAK+B,MAArC2V,EAFwB,EAExBA,QAAS81D,EAFe,EAEfA,MAAOgB,EAFQ,EAERA,YAExB,GAAI92D,EAAS,CAAC,MACFT,EAAyBS,EAAzBT,QAAS/W,EAAgBwX,EAAhBxX,GAAIsY,EAAYd,EAAZc,QACrB,IAAKA,EAAS,OACd,GAAItG,IAAW+E,GAAWkP,IAAcjmB,EAAI,OAE5C,IAAIwwE,GAAe,EACnB,OAAQl4D,EAAQ,UACZ,IAAK,cAAe,CAAC,MACTkY,EAAalY,EAAbkY,SACR,GAAIA,EAAU,CAAC,MACH1N,EAAkC0N,EAAlC1N,MAAOqO,EAA2BX,EAA3BW,WAAY/F,EAAeoF,EAAfpF,WAE3B,GAAItI,EAAO,CACP,GAAI2tD,cAAqB,OAGzB,GADwB3tD,EAAhBA,MACE,CACN0tD,GAAe,EACf,OAIR,GAAIr/C,EAAY,CAEZ,GADkBA,EAAVzE,MACG,CACP8jD,GAAe,EACf,OAIR,GAAIplD,EAAY,CAEZ,GADkBA,EAAVzmB,MACG,CACP6rE,GAAe,EACf,QAKZ,MAEJ,IAAK,eAAgB,CAAC,MACV1tD,EAAUxK,EAAVwK,MACR,GAAIA,EAAO,CACP,GAAI2tD,cAAqB,OAGzB,GADwB3tD,EAAhBA,MACE,CACN0tD,GAAe,EACf,OAIR,MAEJ,IAAK,mBAAoB,CAAC,MACdr/C,EAAe7Y,EAAf6Y,WACR,GAAIA,EAAY,CAEZ,GADkBA,EAAVzE,MACG,CACP8jD,GAAe,EACf,OAIR,MAEJ,IAAK,mBAAoB,CAAC,MACdplD,EAAe9S,EAAf8S,WACR,GAAIA,EAAY,CAEZ,GADkBA,EAAVzmB,MACG,CACP6rE,GAAe,EACf,OAIR,OAIJA,GACA1wE,KAAKmwE,iBAAiBz4D,QAEvB,GAAI81D,EAAO,CACd,IAAIkD,GAAe,EACnB,OAAQlD,EAAM,UACV,IAAK,iBAAkB,CAAC,MACZxqD,EAAUwqD,EAAVxqD,MACR,GAAIA,EAAO,CACP,GAAI2tD,cAAqB,OADlB,MAGQhlE,EAASqX,EAAhBA,MACJrX,GAAQA,EAAKzL,KAAO2I,IACpB6nE,GAAe,GAIvB,MAEJ,IAAK,qBAAsB,CAAC,MAChBr/C,EAAem8C,EAAfn8C,WACR,GAAIA,EAAY,CAAC,MACE1lB,EAAS0lB,EAAhBzE,MACJjhB,GAAQA,EAAKzL,KAAO2I,IACpB6nE,GAAe,GAIvB,MAEJ,IAAK,qBAAsB,CAAC,MAChBplD,EAAekiD,EAAfliD,WACR,GAAIA,EAAY,CAAC,MACE3f,EAAS2f,EAAhBzmB,MACJ8G,GAAQA,EAAKzL,KAAO2I,IACpB6nE,GAAe,GAIvB,OAIJA,GACA1wE,KAAKmwE,iBAAiB,CAAE,QAAS,oBAAqB3C,QAAOgB,kBAldtD,KAudnBJ,4BAA8BhqE,IAAW,MAC7BmpE,EAAqBnpE,EAArBmpE,SAAUlqE,EAAWe,EAAXf,OADkB,EAETrD,KAAK+B,MAAxB2V,EAF4B,EAE5BA,QAAS81D,EAFmB,EAEnBA,MAEXt7D,EAASwF,EAAUA,EAAQT,QAAU,EACrCkP,EAAYzO,EAAUA,EAAQxX,GAAK,EAErCiuE,aAAgBj8D,EAAQiU,EAAWqnD,EAAOnqE,IAC1CrD,KAAKyC,SAAS,CAAE8qE,cA/dL,KAmenBqD,yBAA2BxsE,IACvBpE,KAAKyC,SAAS,CACViV,QAAS,KACT81D,MAAO,KACPgB,YAAa,KACbjB,SAAU,KACVgD,SAAS,EACT/nD,IAAK,KACLk3C,SAAU,MACX,KACC,MAAMv4D,EAASnH,KAAKqvE,SAASr2D,QACxB7R,GAELA,EAAOi9B,UAhfI,KAofnB6pC,0BAA4B7pE,IAAW,MAC3Bf,EAAWe,EAAXf,OAD0B,EAEFrD,KAAK+B,MAA7B2V,EAF0B,EAE1BA,QAAS81D,EAFiB,EAEjBA,MAAOhlD,EAFU,EAEVA,IAExB,GAAI2lD,aAAgBz2D,EAAUA,EAAQT,QAAU,EAAGS,EAAUA,EAAQxX,GAAK,EAAGstE,EAAOnqE,GAAS,CACzF,IAAKmlB,EAAK,OAEV,MAAMrhB,EAASnH,KAAKqvE,SAASr2D,QAC7B,IAAK7R,EAAQ,OAEbnH,KAAK0vE,iBAAkB,EACnBvoE,EAAOgC,OACPhC,EAAOc,OAEPd,EAAOe,aAGXlI,KAAKmwE,iBAAiB9sE,IArgBX,KAygBnBwtE,WAAa,KACTzuE,IAAgBkG,aAAa,CACzB,QAAS,2BA3gBE,KA+gBnBH,WAAa,KAAO,MAAD,EACyBnI,KAAK+B,MAArC2V,EADO,EACPA,QAAS81D,EADF,EACEA,MAAOgB,EADT,EACSA,YACxB,IAAK92D,IAAY81D,EAAO,OAExB,MAAMnqE,EAASqU,GAAW,CAAE,QAAS,oBAAqB81D,QAAOgB,eAEjEpsE,IAAgBkG,aAAa,CACzB,QAAS,0BACTjF,YAvhBW,KA2hBnBytE,WAAa,KACT1uE,IAAgBkG,aAAa,CACzB,QAAS,2BA7hBE,KAiiBnBG,YAAc,CAACsoE,GAAW,KAAU,MAAD,EACS/wE,KAAK+B,MAArC2V,EADuB,EACvBA,QAAS81D,EADc,EACdA,MAAOgB,EADO,EACPA,YACxB,IAAK92D,IAAY81D,EAAO,OAExB,MAAMnqE,EAASqU,GAAW,CAAE,QAAS,oBAAqB81D,QAAOgB,eAEjEpsE,IAAgBkG,aAAa,CACzB,QAAS,0BACTjF,SACA0tE,aAGJ/wE,KAAKyC,SACD,GAKA,KACIL,IAAgBkG,aAAa,CACzB,QAAS,uBACTjF,SACA0tE,gBAvjBG,KA6jBnBC,iBAAmB,KACf,MAAMnsE,EAAQ7E,KAAKqvE,SAASr2D,QAC5BhZ,KAAK2I,eAAe,CAAE1D,YAAa,EAAGpF,SAAUgF,EAAMhF,WAEtDG,KAAKyI,aAAY,IAjkBF,KAokBnB1D,YAAc,KACV,MAAMoC,EAASnH,KAAKqvE,SAASr2D,QACzB7R,GACAA,EAAOe,QAGXlI,KAAKyI,aAAY,IA1kBF,KA6kBnBZ,qBAAuB,KAAO,IAAD,EAC0B7H,KAAK+B,MAAlD2V,EADmB,EACnBA,QAAS81D,EADU,EACVA,MAAOgB,EADG,EACHA,YAAavpE,EADV,EACUA,YACnC,IAAKyS,IAAY81D,EAAO,OAExB,MAAMrmE,EAASnH,KAAKqvE,SAASr2D,QAC7B,IAAK7R,EAAQ,OALY,MAOjB0lE,EAA4C7gE,IAA5C6gE,kBAAmB9mE,EAAyBiG,IAAzBjG,aAAcV,EAAW2G,IAAX3G,OAEnC2d,EAAQO,aAAS7L,GAAW81D,GAC5BtqD,EAAY+tD,aAASv5D,GAAW81D,GAEtC,IAAIhnE,EAAOumE,IACP7pD,EACA1c,EAAOT,EACAid,GAAS4sD,aAAqBl4D,GAAW81D,KAChDhnE,EAAOqmE,GAGX1lE,EAAOpB,aAAeS,EACtBW,EAAO9B,OAASA,EAChB8B,EAAO+pE,OAAQ,EACXlxE,KAAK8vE,cACL3oE,EAAOlC,YAAckC,EAAOtH,SAAWG,KAAK8vE,aAAavlE,MACzDvK,KAAK8vE,aAAe,MAEpB3oE,EAAOlC,YAAcA,EAGzBkC,EAAOc,OA7BkB,MA+BjBH,EAAgDX,EAAhDW,SAAUjI,EAAsCsH,EAAtCtH,SAAUsxE,EAA4BhqE,EAA5BgqE,WAAYC,EAAgBjqE,EAAhBiqE,YAClC/tE,EAASqU,GAAW,CAAE,QAAS,oBAAqB81D,QAAOgB,eAWjE,GATApsE,IAAgBkG,aAAa,CACzB,QAAS,kCACTjF,SACAyE,WACAjI,WACAsxE,aACAC,gBAGApuD,EACA,OAEJ,GAAIE,EACA,OAGJ,IAAI+7C,EAAS,KACT,kBAAmB93D,EACnB83D,EAAS93D,EAAOkqE,gBACT,qBAAsBlqE,IAC7B83D,EAAS93D,EAAOmqE,oBAGfrS,GAIL78D,IAAgBkG,aAAa,CACzB,QAAS,iCACT4J,OAAQwF,EAAQT,QAChBkP,UAAWzO,EAAQxX,GACnB++D,OAAQA,KA9oBG,KAkpBnBj2D,eAAiB,KAAO,MAAD,EACqBhJ,KAAK+B,MAArC2V,EADW,EACXA,QAAS81D,EADE,EACFA,MAAOgB,EADL,EACKA,YACxB,IAAK92D,IAAY81D,EAAO,OAExB,MAAMrmE,EAASnH,KAAKqvE,SAASr2D,QAC7B,IAAK7R,EAAQ,OALM,MAOXW,EAAaX,EAAbW,SAEFzE,EAASqU,GAAW,CAAE,QAAS,oBAAqB81D,QAAOgB,eAEjEpsE,IAAgBkG,aAAa,CACzB,QAAS,4BACTjF,SACAyE,cAhqBW,KAoqBnBc,iBAAmB,KAAO,MAAD,EACmB5I,KAAK+B,MAArC2V,EADa,EACbA,QAAS81D,EADI,EACJA,MAAOgB,EADH,EACGA,YACxB,IAAK92D,IAAY81D,EAAO,OAExB,MAAMrmE,EAASnH,KAAKqvE,SAASr2D,QAC7B,IAAK7R,EAAQ,OALQ,MAOblC,EAAoCkC,EAApClC,YAAa6C,EAAuBX,EAAvBW,SAAUjI,EAAasH,EAAbtH,SAE/BG,KAAKyC,SAAS,CAAEwC,gBAEhB,MAAM5B,EAASqU,GAAW,CAAE,QAAS,oBAAqB81D,QAAOgB,eAEjEpsE,IAAgBkG,aAAa,CACzB,QAAS,wBACTjF,SACAxD,WACAoF,cACA6C,WACAu5D,UAAWn4C,KAAKzoB,QAGpBT,KAAK2I,eAAe,CAAE1D,cAAapF,cA1rBpB,KA6rBnBmI,cAAgB,OA7rBG,KAisBnBupE,gBAAkB,KAAO,MAAD,EACoBvxE,KAAK+B,MAArC2V,EADY,EACZA,QAAS81D,EADG,EACHA,MAAOgB,EADJ,EACIA,YACxB,IAAK92D,IAAY81D,EAAO,OAExBxtE,KAAKyC,SAAS,CAAE8tE,SAAS,IAEzB,MAAMppE,EAASnH,KAAKqvE,SAASr2D,QAC7B,IAAK7R,EAAQ,OAPO,MASZlC,EAA0BkC,EAA1BlC,YAAapF,EAAasH,EAAbtH,SAEfwD,EAASqU,GAAW,CAAE,QAAS,oBAAqB81D,QAAOgB,eAEjEpsE,IAAgBkG,aAAa,CACzB,QAAS,wBACTjF,SACA4B,cACApF,WACAwhE,UAAWn4C,KAAKzoB,SAntBL,KAutBnB+wE,iBAAmB,KAAO,MAAD,EACmBxxE,KAAK+B,MAArC2V,EADa,EACbA,QAAS81D,EADI,EACJA,MAAOgB,EADH,EACGA,YACxB,IAAK92D,IAAY81D,EAAO,OAOxB,GALAxtE,KAAKyC,SAAS,CACV8tE,SAAS,KAGEvwE,KAAKqvE,SAASr2D,QAChB,OAEb,MAAM3V,EAASqU,GAAW,CAAE,QAAS,oBAAqB81D,QAAOgB,eAEjEpsE,IAAgBkG,aAAa,CACzB,QAAS,yBACTjF,YAtuBW,KA0uBnBouE,QAAU,CAACttD,EAAMopD,KACb,IAAKppD,EAAM,OAAO,EAClB,IAAKopD,IAAaA,EAASjgD,MAAM5Y,OAAQ,OAAO,EAEhD,MAAMiP,EAAQ4pD,EAASjgD,MAAM8I,UAAUz1B,GAAK8sE,aAAmB9sE,EAAGwjB,IAClE,OAAe,IAAXR,GAEGA,EAAQ,EAAI4pD,EAASjgD,MAAM5Y,QAjvBnB,KAovBnBg9D,QAAU,CAACvtD,EAAMopD,KACb,IAAKppD,EAAM,OAAO,EAClB,IAAKopD,IAAaA,EAASjgD,MAAM5Y,OAAQ,OAAO,EAEhD,MAAMiP,EAAQ4pD,EAASjgD,MAAM8I,UAAUz1B,GAAK8sE,aAAmB9sE,EAAGwjB,IAClE,OAAe,IAAXR,GAEGA,EAAQ,GAAK,GA3vBL,KA8vBnBguD,sBAAwB,KACpBvvE,IAAgBkG,aAAa,CACzB,QAAS,kCACTulE,MAAM,KAjwBK,KAqwBnB+D,sBAAwB,KACpBxvE,IAAgBkG,aAAa,CACzB,QAAS,kCACTulE,MAAM,KAxwBK,KA4wBnBgE,iBAAmB,KAAO,MAAD,EACmB7xE,KAAK+B,MAArC2V,EADa,EACbA,QAAS81D,EADI,EACJA,MAAOgB,EADH,EACGA,YACpB92D,EACA0O,YAAS1O,EAAQT,QAASS,EAAQxX,IAIlCstE,GAASgB,GD5yBd,SAA8BA,EAAahB,GAC9C,MAAMvqD,EAAM4rD,GAAShjE,IAAI2iE,GACpBvrD,IAELnQ,QAAQ86B,IAAI,YAAa4gC,GACzBQ,YAAuBR,GACvBS,YAAsB,CAAET,cAAahB,QAAOvqD,SCuyBpC6uD,CAAqBtD,EAAahB,IApxBvB,KAyxBnB7kE,eAAiB1D,IAAgB,MAAD,EACDjF,KAAK+B,MAAxB2V,EADoB,EACpBA,QAAS81D,EADW,EACXA,MACjB,IAAK91D,IAAY81D,EAAO,OAExB,IAAKoC,aAAqBl4D,GAAW81D,GAAQ,OAE7C,MAAMxqD,EAAQ+uD,aAAgBr6D,EAAQT,QAASS,EAAQxX,IACvD,IAAK8iB,EAAO,OAPgB,MASbrX,EAASqX,EAAhBA,MACR,IAAKrX,EAAM,OAViB,MAYpBG,EAAWH,EAAXG,OACR,IAAKA,EAAQ,OAbe,MAepBC,EAAcD,EAAdC,UACHA,IAEA9G,EAGD+G,IAAYrD,eAAeoD,EAAW9G,GAFtC+G,IAAYC,iBAAiBF,KAzyBjC/L,KAAKqvE,SAAWxtE,IAAMya,YAHP,MAKP5E,EAA0C1L,IAA1C0L,QAAS81D,EAAiCxhE,IAAjCwhE,MAAOgB,EAA0BxiE,IAA1BwiE,YAAajB,EAAavhE,IAAbuhE,SALtB,EAMmB7hE,aAAegM,GAAzCzS,EANO,EAMPA,YAAapF,EANN,EAMMA,SAErBG,KAAK+B,MAAQ,CACTkD,cACApF,WACA6X,UACA81D,QACAgB,cACAjB,WACAgD,SAAS,EACT/nD,IAAK6nD,aAAY34D,GACjBgoD,SAAU4Q,aAAiB54D,IAInCkG,sBAAsBC,EAAWC,EAAWoK,GAAc,MAAD,EACFloB,KAAK+B,MAAhD2V,EAD6C,EAC7CA,QAAS81D,EADoC,EACpCA,MAAOD,EAD6B,EAC7BA,SAAU/kD,EADmB,EACnBA,IAAK+nD,EADc,EACdA,QAEvC,OAAIzyD,EAAU0vD,QAAUA,IAIpB1vD,EAAUpG,UAAYA,IAItBoG,EAAUyvD,WAAaA,IAIvBzvD,EAAU0K,MAAQA,GAIlB1K,EAAUyyD,UAAYA,KAO9BvtE,oBACIhD,KAAKgyE,0BAEL74D,KAASnM,GAAG,iCAAkChN,KAAKgtD,kCACnDphD,IAAUoB,GAAG,4BAA6BhN,KAAKywE,yBAC/C7kE,IAAUoB,GAAG,4BAA6BhN,KAAKywE,yBAC/C7kE,IAAUoB,GAAG,wBAAyBhN,KAAKywE,yBAC3Cn4D,IAAatL,GAAG,0BAA2BhN,KAAK80D,2BAChDx8C,IAAatL,GAAG,yBAA0BhN,KAAKk1D,0BAC/ClpD,IAAYgB,GAAG,0BAA2BhN,KAAKiuE,2BAC/CjiE,IAAYgB,GAAG,yBAA0BhN,KAAK4wE,0BAC9C5kE,IAAYgB,GAAG,4BAA6BhN,KAAKouE,6BACjDpiE,IAAYgB,GAAG,8BAA+BhN,KAAKkwE,+BACnDlkE,IAAYgB,GAAG,+BAAgChN,KAAKiwE,gCACpDjkE,IAAYgB,GAAG,+BAAgChN,KAAKgwE,gCACpDhkE,IAAYgB,GAAG,0BAA2BhN,KAAK6qE,2BAC/C7+D,IAAYgB,GAAG,gCAAiChN,KAAK2sE,iCACrD3gE,IAAYgB,GAAG,qCAAsChN,KAAK4sE,sCAC1D5gE,IAAYgB,GAAG,wBAAyBhN,KAAK6vE,yBAGjD5iE,uBACIjN,KAAKiyE,6BAEL94D,KAAS/L,IAAI,iCAAkCpN,KAAKgtD,kCACpDphD,IAAUwB,IAAI,4BAA6BpN,KAAKywE,yBAChD7kE,IAAUwB,IAAI,4BAA6BpN,KAAKywE,yBAChD7kE,IAAUwB,IAAI,wBAAyBpN,KAAKywE,yBAC5Cn4D,IAAalL,IAAI,0BAA2BpN,KAAK80D,2BACjDx8C,IAAalL,IAAI,yBAA0BpN,KAAKk1D,0BAChDlpD,IAAYoB,IAAI,0BAA2BpN,KAAKiuE,2BAChDjiE,IAAYoB,IAAI,yBAA0BpN,KAAK4wE,0BAC/C5kE,IAAYoB,IAAI,4BAA6BpN,KAAKouE,6BAClDpiE,IAAYoB,IAAI,8BAA+BpN,KAAKkwE,+BACpDlkE,IAAYoB,IAAI,+BAAgCpN,KAAKiwE,gCACrDjkE,IAAYoB,IAAI,+BAAgCpN,KAAKgwE,gCACrDhkE,IAAYoB,IAAI,0BAA2BpN,KAAK6qE,2BAChD7+D,IAAYoB,IAAI,gCAAiCpN,KAAK2sE,iCACtD3gE,IAAYoB,IAAI,qCAAsCpN,KAAK4sE,sCAC3D5gE,IAAYoB,IAAI,wBAAyBpN,KAAK6vE,yBAGlDmC,0BAA2B,MACfE,EAAiBv/D,UAAjBu/D,aACR,GAAKA,EAEL,IACIA,EAAaC,iBAAiB,YAAanyE,KAAK8wE,YAChDoB,EAAaC,iBAAiB,gBAAiBnyE,KAAK6wE,YACpDqB,EAAaC,iBAAiB,cAAenyE,KAAKovE,mBAClD8C,EAAaC,iBAAiB,eAAgBnyE,KAAKsvE,oBACnD4C,EAAaC,iBAAiB,SAAUnyE,KAAKuvE,cAC/C,WAmCN0C,6BAA8B,MAClBC,EAAiBv/D,UAAjBu/D,aACR,GAAKA,EAEL,IACIA,EAAaC,iBAAiB,YAAa,MAC3CD,EAAaC,iBAAiB,gBAAiB,MAC/CD,EAAaC,iBAAiB,cAAe,MAC7CD,EAAaC,iBAAiB,eAAgB,MAC9CD,EAAaC,iBAAiB,SAAU,MAC3C,WAKL1C,cAAc5vE,GACV,MAAMsH,EAASnH,KAAKqvE,SAASr2D,QAC7B,IAAK7R,EAAQ,OAGb,IAAI+rC,EAAQ,EACZ,MAAMk/B,EAAgBjrE,EAAO9B,OAC7BrF,KAAKqyE,eAAiBrd,YAAY,KAC1B9hB,GAJgB,IAKhB/rC,EAAOe,QACPf,EAAO9B,OAAS+sE,EAChBE,cAActyE,KAAKqyE,kBAEnBlrE,EAAO9B,OAAS+sE,GAAiBl/B,EAAQ,GACzCA,MAELrzC,EAZqB,IAe5B8vE,aAAa9vE,GACT,MAAMsH,EAASnH,KAAKqvE,SAASr2D,QAC7B,IAAK7R,EAAQ,OAGb,IAAI+rC,EAAQ,EACZ,MAAMk/B,EAAgBjrE,EAAO9B,OAC7B8B,EAAO9B,OAAS,EAChB8B,EAAOc,OACPjI,KAAKqyE,eAAiBrd,YAAY,KAC1B9hB,GANgB,IAOhB/rC,EAAO9B,OAAS+sE,EAChBE,cAActyE,KAAKqyE,kBAEnBlrE,EAAO9B,OAAS+sE,EAVA,IAUmCl/B,EAAQ,GAC3DA,MAELrzC,EAbqB,IAsoB5BoD,SAAU,MACEoP,EAAMrS,KAAKwC,MAAX6P,EADH,EAEkErS,KAAK+B,MAApEwuE,EAFH,EAEGA,QAAS74D,EAFZ,EAEYA,QAAS81D,EAFrB,EAEqBA,MAAO3tE,EAF5B,EAE4BA,SAAU0tE,EAFtC,EAEsCA,SAAU/kD,EAFhD,EAEgDA,IAAKk3C,EAFrD,EAEqDA,SAEpD18C,EAAQO,aAAS7L,GAAW81D,GAC5B+E,EAAe3C,aAAqBl4D,GAAW81D,GAE/CxkD,EAAOtR,EAAUA,EAAQsR,KAAO,KAEhC7K,EAAQq0D,aAAc96D,GAAW81D,EAAOn7D,GAIxCogE,GAHcC,aAAY1pD,GAChB2pD,aAAQ3pD,IAEEhG,GAASuvD,GAC7BK,EAAa5vD,EACb6vD,EAAc7vD,EACdyuD,EAAUzxE,KAAKyxE,QAAQ/5D,GAAW81D,EAAOD,GACzCmE,EAAU1xE,KAAK0xE,QAAQh6D,GAAW81D,EAAOD,GAEzClqE,EAASmlB,EAAM,4BAAQA,IAAKA,EAAKhK,KAAMkhD,IAAc,KAE3D,OACI,oCACI,2BACIx8D,UAAU,sBACV+Z,IAAKjd,KAAKqvE,SACVyD,UAAU,EACVhiD,UAAU,EACV7f,MAAO,GACP8I,OAAQ,GACRg5D,yBAAyB,EACzBC,iBAAkBhzE,KAAK6H,qBACvBorE,UAAWjzE,KAAKgI,cAChBI,OAAQpI,KAAKuxE,gBACb/oE,QAASxI,KAAKwxE,iBACd9oE,QAAS1I,KAAKgxE,iBACdkC,aAAclzE,KAAK4I,iBACnBuqE,WAAYnzE,KAAKgJ,gBAEhB3F,IAEHqU,GAAW81D,IACT,yBAAKtqE,UAAU,iBACX,kBAACgV,EAAA,EAAD,CACIpG,UAAW2/D,EACXvuE,UAAU,uBACVkV,MAAM,UACN7H,QAASvQ,KAAK6wE,YACd,kBAAC,KAAD,CAAkBlhB,SAAS,WAE/B,kBAACz3C,EAAA,EAAD,CACIhV,UAAU,uBACVkV,MAAM,UACNtG,UAAW0W,EACXjY,QAASvQ,KAAKmI,YACbooE,EAAU,kBAAC3+D,EAAA,EAAD,MAAgB,kBAACwhE,EAAA,EAAD,OAE/B,kBAACl7D,EAAA,EAAD,CACIpG,UAAW4/D,EACXxuE,UAAU,uBACVkV,MAAM,UACN7H,QAASvQ,KAAK8wE,YACd,kBAAC,KAAD,CAAcnhB,SAAS,WAE3B,kBAAC,GAAD,MACA,yBACIzsD,UAAU,wBACV6N,aAAc/Q,KAAK2xE,sBACnB3gE,aAAchR,KAAK4xE,sBACnBrhE,QAASvQ,KAAK6xE,kBACd,yBAAK3uE,UAAU,uBACVib,GA3DR,GAqDD,QAgBA,kBAAC,GAAD,CAAMte,SAAUA,IAChB,kBAAC,GAAD,MACC4yE,GAAoB,kBAAC,GAAD,CAAoBzvD,MAAOA,IAC/C4vD,GAAc,kBAAC,GAAD,MACdC,GAAe,kBAAC,GAAD,MAChB,kBAAC36D,EAAA,EAAD,CAAYhV,UAAU,uBAAuBqN,QAASvQ,KAAK+E,aACvD,kBAAC+L,EAAA,EAAD,CAAW6+C,SAAS,gB,OCxvBjC19C,qBAjKf,cAAwBpQ,IAAMC,UAAW,eAAD,oBASpCuxE,sBAAwBjvE,IAAW,MACvB8N,EAAWlS,KAAKwC,MAAhB0P,OACY9N,EAAZ6S,UAEQ/E,GAEhBlS,KAAKya,eAf2B,KAkBpC1V,YAAc,KAAO,MACTmN,EAAWlS,KAAKwC,MAAhB0P,OAER,IADa6L,KAAUlS,IAAIqG,GAChB,OAAO,KAElB9P,IAAgBC,KAAK,CACjB,QAAS,sBACT4U,QAAS/E,KAzBmB,KA6BpCohE,iBAAmB,KAAO,MACdphE,EAAWlS,KAAKwC,MAAhB0P,OAERqzD,aAAmBD,YAAcpzD,KAhCD,KAmCpCqhE,8BAAgC,KAAO,MAC3BrhE,EAAWlS,KAAKwC,MAAhB0P,OAERqzD,aAAmBD,YAAcpzD,KAtCD,KAyCpCshE,uBAAyB,KAAO,MACpBthE,EAAWlS,KAAKwC,MAAhB0P,OACFkf,EAAS0D,YAAc5iB,GACxBkf,GAELhvB,IAAgBC,KAAK,CACjB,QAAS,mBACT2T,QAASob,KAhDmB,KAoDpCqiD,iBAAmB,KAAO,MACdvhE,EAAWlS,KAAKwC,MAAhB0P,OACFkf,EAAS0D,YAAc5iB,GAC7B,IAAKkf,EAAQ,OAEb,MAAMyC,EAAO5d,IAAUpK,IAAIulB,GAC3B,IAAKyC,EAAM,OANU,MAQb7d,EAAiD6d,EAAjD7d,QAAS09D,EAAwC7/C,EAAxC6/C,aAAcx8B,EAA0BrjB,EAA1BqjB,WAAYE,EAAcvjB,EAAdujB,UAE3Ch1C,IAAgBC,KAAK,CACjB,QAAS,aACTsxE,QAAS,CACL,QAAS,UACTD,eACAx8B,aACAE,YACAw8B,MAAO,GACP59D,WAEJ69D,oBAAoB,KAxEQ,KA4EpCC,gBAAkB,KAAO,MACb5hE,EAAWlS,KAAKwC,MAAhB0P,OAERqzD,aAAmBD,YAAcpzD,KA9ErClP,oBACI+a,KAAU/Q,GAAG,sBAAuBhN,KAAKqzE,uBAG7CpmE,uBACI8Q,KAAU3Q,IAAI,sBAAuBpN,KAAKqzE,uBA4E9CpwE,SAAU,MAAD,EACiBjD,KAAKwC,MAAnB0P,EADH,EACGA,OAAQG,EADX,EACWA,EAChB,IAAKH,EAAQ,OAAO,KAEpB,MAAMqM,EAAOR,KAAUlS,IAAIqG,GAC3B,IAAKqM,EAAM,OAAO,KALb,MAOGw1D,EAAex1D,EAAfw1D,WACR,IAAKA,EAAY,OAAO,KAExB,IAAIv7D,EAAU,KACd,OAAQu7D,EAAW,UACf,IAAK,gCACDv7D,EACI,kBAAC+E,EAAA,EAAD,CAAQnF,MAAM,UAAUlV,UAAU,wBAAwBqN,QAASvQ,KAAKwzE,wBACnEnhE,EAAE,iBAGX,MAEJ,IAAK,0BACDmG,EACI,kBAAC+E,EAAA,EAAD,CAAQnF,MAAM,UAAUlV,UAAU,wBAAwBqN,QAASvQ,KAAKyzE,kBACnEphE,EAAE,mBAGX,MAEJ,IAAK,8BACDmG,EACI,oCACI,kBAAC+E,EAAA,EAAD,CAAQnF,MAAM,UAAUlV,UAAU,wBAAwBqN,QAASvQ,KAAKyzE,kBACnEphE,EAAE,mBAEP,kBAACkL,EAAA,EAAD,CAAQnF,MAAM,YAAYlV,UAAU,wBAAwBqN,QAASvQ,KAAK8zE,iBACrEzhE,EAAE,oBAIf,MAEJ,IAAK,iCACDmG,EACI,kBAAC+E,EAAA,EAAD,CACInF,MAAM,YACNlV,UAAU,wBACVqN,QAASvQ,KAAKuzE,+BACblhE,EAAE,uBAGX,MAEJ,IAAK,0BACDmG,EACI,kBAAC+E,EAAA,EAAD,CAAQnF,MAAM,YAAYlV,UAAU,wBAAwBqN,QAASvQ,KAAKszE,kBACrEjhE,EAAE,eAOnB,OACI,yBAAKnP,UAAU,aAAamN,YAAarQ,KAAKuF,aAC1C,yBAAKrC,UAAU,sBAAsBsV,GACrC,yBAAKtV,UAAU,2BACX,kBAACgV,EAAA,EAAD,CAAY3H,QAASvQ,KAAK+E,aACtB,kBAAC+L,EAAA,EAAD,Y,+BChKTtN,gBACX,0BAAMC,EAAE,4jBACR,QCFWD,gBACX,0BAAMC,EAAE,wzBACR,cCFWD,gBACX,uBAAG66B,OAAO,eAAenB,YAAY,IAAIC,KAAK,OAAOC,SAAS,UAAUK,cAAc,QAAQa,UAAU,mBACpG,0BAAM76B,EAAE,2IACR,8BAAUi6B,eAAe,QAAQs2C,OAAO,yBACxC,8BAAUt2C,eAAe,QAAQs2C,OAAO,+BAE5C,e,oCCoYW5+D,OALCC,YACZpD,cACAqD,IAGWF,CAlWf,cAA0BvT,IAAM4sC,cAAe,eAAD,iCAC1C1sC,MAAQ,CACJkyE,iBAAiB,GAFqB,KAK1CC,sBAAwB7vE,IACDrE,KAAK+B,MAAhBs/B,QAGRrhC,KAAKyC,SAAS,CACVwxE,iBAAiB,EACjBrsD,aAAa,KAXqB,KAe1CusD,mBAAqB9vE,IACbA,GACAA,EAAM4B,kBAGVjG,KAAKyC,SAAS,CAAEwxE,iBAAiB,KApBK,KAuB1CG,eAAiB/vE,IACbA,EAAM4B,kBADgB,QAGQjG,KAAKwC,MAA3B0P,EAHc,EAGdA,OAAQiU,EAHM,EAGNA,UACYnmB,KAAK+B,MAAzBkyE,iBAGJj0E,KAAKyC,SAAS,CAAEwxE,iBAAiB,IAGrCI,aAASniE,EAAQiU,IAjCqB,KAoC1CmuD,aAAejwE,IACPA,GACAA,EAAM4B,kBAFU,QAKmBjG,KAAKwC,MAApC0P,EALY,EAKZA,OAAQiU,EALI,EAKJA,WAEhBrJ,EAPoB,EAKOA,SAEnBzY,GACRkwE,aAAiBriE,EAAQiU,IA5Ca,KA+C1C5O,eAAiBlT,IAAU,MAAD,EACWrE,KAAKwC,MAA9Bsa,EADc,EACdA,QAAS03D,EADK,EACLA,SAAUniE,EADL,EACKA,EAE3ByK,EAAQzY,GAEHmwE,IAEL/hE,EAAK+hE,GACLx0E,KAAKyX,sBAAsBpF,EAAE,iBAvDS,KA0D1CoiE,4BA1D0C,sCA0DZ,WAAMpwE,GAAN,2BAAAqO,EAAA,8DACgB,EAAKlQ,MAAvCsa,EADkB,EAClBA,QAAS5K,EADS,EACTA,OAAQiU,EADC,EACDA,UAAW9T,EADV,EACUA,EAEpCyK,EAAQzY,GAHkB,SAKJjC,IAAgBC,KAAK,CACvC,QAAS,iBACT4U,QAAS/E,EACTgF,WAAYiP,EACZhP,WAAW,EACXC,aAAa,IAVS,UAKpBs9D,EALoB,2DAcZF,EAAaE,EAAnBl9D,KAdkB,mDAkB1B/E,EAAK+hE,GACL,EAAK/8D,sBAAsBpF,EAAE,eAnBH,0CA1DY,2DAgF1CoF,sBAAwBC,IAAY,MAAD,EACY1X,KAAKwC,MAAxCmV,EADuB,EACvBA,gBAAiBC,EADM,EACNA,cAEnBC,EAAWF,EAAgBD,EAAS,CACtCI,iBAAkBC,IAClBC,kBAAkB,EAClBC,OAAQ,CACJ,kBAACC,EAAA,EAAD,CACI3T,IAAI,QACJ4T,aAAW,QACXC,MAAM,UACNlV,UAAU,4BACVqN,QAAS,KACLqH,EAAcC,KAElB,kBAAC/G,EAAA,EAAD,WA/F0B,KAqG1C6jE,YAActwE,IAAU,MAAD,EACoBrE,KAAKwC,MAApC0P,EADW,EACXA,OAAQiU,EADG,EACHA,UAAWrJ,EADR,EACQA,QAE3BlE,cACAkE,EAAQzY,GACRswD,YAAaziD,EAAQiU,IA1GiB,KA6G1Csa,UAAYp8B,IAAU,MAAD,EACsBrE,KAAKwC,MAApC0P,EADS,EACTA,OAAQiU,EADC,EACDA,UAAWrJ,EADV,EACUA,QAE3BlE,cACAkE,EAAQzY,GAEJuwE,aAAgB1iE,EAAQiU,GACxBi/C,YAAoBlzD,EAAQiU,GAE5B0uD,YAAkB3iE,EAAQiU,IAtHQ,KA0H1CE,cAAgBhiB,IAAU,MAAD,EACkBrE,KAAKwC,MAApC0P,EADa,EACbA,OAAQiU,EADK,EACLA,WAEhBrJ,EAHqB,EACMA,SAEnBzY,GACRiiB,YAAgBpU,EAAQ,CAACiU,KA9Ha,KAiI1C2uD,WAAazwE,IAAU,MAAD,EACqBrE,KAAKwC,MAApC0P,EADU,EACVA,OAAQiU,EADE,EACFA,UAAWrJ,EADT,EACSA,QAE3BlE,cACAkE,EAAQzY,GACRqwD,YAAYxiD,EAAQiU,IAtIkB,KAyI1C0O,aAAexwB,IAAU,MAAD,EACmBrE,KAAKwC,MAApC0P,EADY,EACZA,OAAQiU,EADI,EACJA,WAChBrJ,EAFoB,EACOA,SACnBzY,GAER,MAAM2/B,EAAYl3B,OAAOm3B,eAAe4qB,WACxC,IAAKkmB,aAAiB/wC,GAClB,OAGJ,MAAM7xB,GAAYmG,IAAawwC,cAAc7zC,IAA3B,iBAAyC/C,EAAzC,sBAA6DiU,IAC/E6uD,YAAc9iE,EAAQiU,EAAWhU,IAnJK,KAsJ1CoU,aAAeliB,IAAU,MAAD,EACmBrE,KAAKwC,MAApC0P,EADY,EACZA,OAAQiU,EADI,EACJA,WAEhBrJ,EAHoB,EACOA,SAEnBzY,GACRmiB,YAAetU,EAAQ,CAACiU,KA1Jc,KA6J1C8uD,eAAiB5wE,IAAU,MAAD,EACQrE,KAAKwC,MAA3B0P,EADc,EACdA,OAAQiU,EADM,EACNA,UACVzO,EAAUY,IAAazM,IAAIqG,EAAQiU,GACzC,IAAKzO,EAAS,OAHQ,MAKdc,EAAYd,EAAZc,QACR,IAAKA,EAAS,OANQ,MAQdrW,EAAYqW,EAAZrW,QACR,IAAKA,EAAS,OATQ,MAWLwJ,EAASxJ,EAAlBA,QACR,IAAKwJ,EAAM,OAEX,MAAMm7B,EAAOl7B,IAAUm7B,QAAQp7B,EAAKzL,IAC/B4mC,GAELouC,YAASpuC,EAAM,gBAGnB7jC,SAAU,MAAD,EAC6EjD,KAAKwC,MAA/E6P,EADH,EACGA,EAAGH,EADN,EACMA,OAAQiU,EADd,EACcA,UAAWM,EADzB,EACyBA,eAAgB+tD,EADzC,EACyCA,SAAU93D,EADnD,EACmDA,KAAMI,EADzD,EACyDA,QAASzZ,EADlE,EACkEA,OAC/D4wE,EAAoBj0E,KAAK+B,MAAzBkyE,gBACR,IAAKA,IAAoBv3D,EAAM,OAAO,KAEtC,MAAMohB,EAAW82C,aAAgB1iE,EAAQiU,GACnCgvD,EAAeC,aAAoBljE,EAAQiU,IAAyB,SAAX9iB,EACzDgyE,EAAcC,aAAmBpjE,EAAQiU,IAAyB,SAAX9iB,EACvDkyE,EAAe/5D,YAAgBtJ,IAAsB,SAAX7O,EAC1CmyE,EAAcC,YAAevjE,KAAYwjE,aAAiBp9D,IAAazM,IAAIqG,EAAQiU,IACnFkhD,EAAiBsO,aAAsBzjE,EAAQiU,GAC/CihD,EAAewO,aAAoB1jE,EAAQiU,GAC3C0vD,EAAcC,aAAmB5jE,EAAQiU,KAAehN,KAAS48D,WAAwB,SAAX1yE,EAC9E2yE,GAAiB19D,IAAa29D,mBAAmB/jE,EAAQiU,KAAeuvD,aAAiBp9D,IAAazM,IAAIqG,EAAQiU,IAClH+vD,EAAcjsD,QAAQuqD,GACtB2B,EAA2BC,aAAmBlkE,GAIpD,OADIijE,GAAgBE,GAAeE,GAAgBC,GAAenO,GAAkBD,GAAgByO,GAAeG,GAAiBE,GAAeC,EAM/I,oCACI,kBAACtvD,GAAA,EAAD,CACInK,MAAM,EACNI,QAASA,EACTgK,gBAAgB,iBAChBL,eAAgBA,EAChBM,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QAEhB5W,YAAaQ,GAAKA,EAAE5K,mBACpB,kBAACkhB,GAAA,EAAD,CAAU5W,QAASM,GAAKA,EAAE5K,mBAOrB+vE,GACG,kBAAC5uD,GAAA,EAAD,CAAU7W,QAASvQ,KAAK60B,cACpB,kBAACnT,GAAA,EAAD,KACI,kBAAC20D,GAAD,OAEJ,kBAACt0D,GAAA,EAAD,CAAcC,QAAS3P,EAAE,aAGhC8jE,GACG,kBAAC/uD,GAAA,EAAD,CAAU7W,QAASvQ,KAAKy0E,6BACpB,kBAAC/yD,GAAA,EAAD,KACI,kBAAC40D,GAAD,OAEJ,kBAACv0D,GAAA,EAAD,CAAcC,QAAS3P,EAAE,sBAGhC6jE,GACG,kBAAC9uD,GAAA,EAAD,CAAU7W,QAASvQ,KAAKuX,gBACpB,kBAACmK,GAAA,EAAD,KACI,kBAAC40D,GAAD,OAEJ,kBAACv0D,GAAA,EAAD,CAAcC,QAAS3P,EAAE,eAGhCkjE,GACG,kBAACnuD,GAAA,EAAD,CAAU7W,QAASvQ,KAAK20E,aACpB,kBAACjzD,GAAA,EAAD,KACI,kBAAC2F,GAAD,CAAW/f,MAAO,CAACg3B,UAAW,iBAElC,kBAACvc,GAAA,EAAD,CAAcC,QAAS3P,EAAE,YAGhCmjE,GACG,kBAACpuD,GAAA,EAAD,CAAU7W,QAASvQ,KAAKygC,WACnB3C,EACG,oCACI,kBAACpc,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACK,GAAA,EAAD,CAAcC,QAAS3P,EAAE,mBAG7B,oCACI,kBAACqP,GAAA,EAAD,KACI,kBAAC,GAAD,OAEJ,kBAACK,GAAA,EAAD,CAAcC,QAAS3P,EAAE,kBAKxCg1D,GACG,kBAACjgD,GAAA,EAAD,CAAU7W,QAASvQ,KAAKqmB,eACpB,kBAAC3E,GAAA,EAAD,KACI,kBAAC2F,GAAD,OAEJ,kBAACtF,GAAA,EAAD,CAAcC,QAAS3P,EAAE,cAGhCwjE,GACG,kBAACzuD,GAAA,EAAD,CAAU7W,QAASvQ,KAAK80E,YACpB,kBAACpzD,GAAA,EAAD,KACI,kBAAC6yB,GAAD,OAEJ,kBAACxyB,GAAA,EAAD,CAAcC,QAAS3P,EAAE,WAGhC+0D,GACG,kBAAChgD,GAAA,EAAD,CAAUhP,MAAM,YAAY7H,QAASvQ,KAAKumB,cACtC,kBAAC7E,GAAA,EAAD,KACI,kBAAC4F,GAAD,OAEJ,kBAACvF,GAAA,EAAD,CAAcC,QAAS3P,EAAE,aAGhC8iE,GACG,kBAAC/tD,GAAA,EAAD,CAAU7W,QAASvQ,KAAKs0E,cACpB,kBAAC5yD,GAAA,EAAD,KACI,kBAAC60D,GAAD,OAEJ,kBAACx0D,GAAA,EAAD,CAAcC,QAAS3P,EAAE,aAGhCgjE,GACG,kBAACjuD,GAAA,EAAD,CAAU7W,QAASvQ,KAAKk0E,uBACpB,kBAACxyD,GAAA,EAAD,KACI,kBAAC2iC,GAAD,OAEJ,kBAACtiC,GAAA,EAAD,CAAcC,QAAS3P,EAAE,iBAKzC,kBAAC,IAAD,CACIwK,mBAAoB,EACpBH,KAAMu3D,EACNn3D,QAAS9c,KAAKm0E,mBACdp3D,kBAAgB,qBAChB,kBAAC,IAAD,CAAa7c,GAAG,qBAAqBmS,EAAE,uBACvC,kBAAC,KAAD,KACI,kBAAC2hC,GAAA,EAAD,KAAoB3hC,EAAE,uBAE1B,kBAACiL,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQhN,QAASvQ,KAAKm0E,mBAAoB/7D,MAAM,WAC3C/F,EAAE,WAEP,kBAACkL,EAAA,EAAD,CAAQhN,QAASvQ,KAAKo0E,eAAgBh8D,MAAM,WACvC/F,EAAE,YArIZ,QC7OJ7O,gBACX,0BAAMC,EAAE,gEACR,a,4BCwIWwO,qBAhIf,cAAmBpQ,IAAMC,UAAW,eAAD,oBAE/BC,MAAQ,GAFuB,KA+C/BymE,wBAA0BpkE,IAAW,MACzB6S,EAAwB7S,EAAxB6S,QAASC,EAAe9S,EAAf8S,WADe,EAEUlX,KAAKwC,MAAvC0P,EAFwB,EAExBA,OAEFo8B,EAAM,CAJoB,EAEhBnoB,aAFgB,EAELrP,YAEe,IAAKyE,OAAO5a,GAAKspB,QAAQtpB,IAE/DsW,IAAY/E,GACXo8B,EAAI/gB,KAAK5sB,GAAKA,IAAMuW,IAEzBlX,KAAKyC,SAAS,CAAEq7B,SAAUwQ,EAAI/gB,KAAK5sB,GAAK2X,IAAazM,IAAIqG,EAAQvR,GAAG+nE,cAxDzC,KA2D/B8N,sBAAwBpyE,IAAW,MACvB6S,EAA6C7S,EAA7C6S,QAASC,EAAoC9S,EAApC8S,WAAuBu/D,EAAaryE,EAAxBsyE,UACrBh/D,EAAY1X,KAAK+B,MAAjB2V,QAEHA,GACDA,EAAQT,UAAYA,GACpBS,EAAQxX,KAAOgX,GAEnBlX,KAAKyC,SAAS,CAAEg0E,cAnEW,KAsE/BE,+BAAiCvyE,IAAW,MAChC6S,EAA0C7S,EAA1C6S,QAASC,EAAiC9S,EAAjC8S,WAAY0/D,EAAqBxyE,EAArBwyE,iBACrBl/D,EAAY1X,KAAK+B,MAAjB2V,QAEHA,GACDA,EAAQT,UAAYA,GACpBS,EAAQxX,KAAOgX,GAEnBlX,KAAKyC,SAAS,CAAEo0E,gBAAiBD,KA1ErC,gCAAgCp0E,EAAOT,GAAQ,MACnCmQ,EAAkC1P,EAAlC0P,OAAQiU,EAA0B3jB,EAA1B2jB,UAAWrP,EAAetU,EAAfsU,WACnB8I,EAA8C7d,EAA9C6d,WAAYqf,EAAkCl9B,EAAlCk9B,cAAe63C,EAAmB/0E,EAAnB+0E,eAEnC,GAAIl3D,IAAe1N,GAAU+sB,IAAkB9Y,GAAa4wD,YAAmBD,EAAgBhgE,GAAa,CAExG,MAAMw3B,EAAM,CAACnoB,KAAerP,GAAc,IAAKyE,OAAO5a,GAAKspB,QAAQtpB,IAC7DT,EAAKouC,EAAIA,EAAI55B,OAAS,GAEtBgD,EAAUY,IAAazM,IAAIqG,EAAQhS,GACzC,IAAKwX,EAAS,OAAO,KANmF,MAQhGsR,EAA0FtR,EAA1FsR,KAAiBytD,EAAyE/+D,EAApFg/D,UAAuCG,EAA6Cn/D,EAA/Dk/D,iBAAgDI,EAAet/D,EAA5B8nB,YAEtE,MAAO,CACH5f,WAAY1N,EACZ+sB,cAAe9Y,EACf2wD,eAAgBhgE,EAEhBY,UACAsR,OACAytD,WACAI,kBACAG,aACAl5C,SAAUwQ,EAAI/gB,KAAK5sB,GAAK2X,IAAazM,IAAIqG,EAAQvR,GAAG+nE,YAI5D,OAAO,KAGX1lE,oBACIsV,IAAatL,GAAG,sBAAuBhN,KAAKw2E,uBAC5Cl+D,IAAatL,GAAG,+BAAgChN,KAAK22E,gCACrDr+D,IAAatL,GAAG,wBAAyBhN,KAAKwoE,yBAGlDv7D,uBACIqL,IAAalL,IAAI,sBAAuBpN,KAAKw2E,uBAC7Cl+D,IAAalL,IAAI,+BAAgCpN,KAAK22E,gCACtDr+D,IAAalL,IAAI,wBAAyBpN,KAAKwoE,yBAqCnDvlE,SAAU,MAAD,EAC2DjD,KAAKwC,MAA7DU,EADH,EACGA,UAAWgP,EADd,EACcA,OAAQiU,EADtB,EACsBA,UAAW8wD,EADjC,EACiCA,YAAa5kE,EAD9C,EAC8CA,EAAG/K,EADjD,EACiDA,MADjD,EAE6DtH,KAAK+B,MAA/DinB,EAFH,EAEGA,KAAMytD,EAFT,EAESA,SAAUO,EAFnB,EAEmBA,WAAYl5C,EAF/B,EAE+BA,SAEhBo5C,GAJf,EAEyCL,iBAEG,CAAEM,WAAY,EAAGC,cAAe,IAAzED,WAEFE,EAAU1E,aAAQ3pD,GAClBsuD,EAAc5E,aAAY1pD,GAC1BuuD,EAAWC,aAASN,GAE1B,OACI,yBAAKh0E,UAAWkN,IAAW,OAAQlN,GAAYoE,MAAOA,GAElD,wCACC4vE,EAAQ,GACL,oCACI,kBAAC,KAAD,CAAgBh0E,UAAU,oBAC1B,0BAAMA,UAAU,aAAaib,MAAO+4D,GAApC,OAEKK,EAFL,cAOPz5C,GACG,oCACI,kBAAC,GAAD,CAAS56B,UAAU,kBACnB,uCAGPuzE,EAAW,GAAK,8BAAOpkE,EAAE,iBAAT,QACjB,uBAAG9B,QAAS0mE,GACR,0BAAM94D,MAAOm5D,GAAcD,IAE9BL,GAAc,kBAAC,GAAD,CAAQ9kE,OAAQA,EAAQiU,UAAWA,Q,0BC+JnDsxD,OA/Qf,cAAwB51E,IAAMC,UAAW,eAAD,iCAEpCC,MAAQ,CACJ6lB,aAAa,GAHmB,KAMpC8vD,aAAe,CAAChgE,EAASvU,KAAiB,MAC9B8T,EAAyBS,EAAzBT,QAAS/W,EAAgBwX,EAAhBxX,GAAIsY,EAAYd,EAAZc,QAErB,OAAQA,EAAQ,UACZ,IAAK,eAAgB,CACjB,MAAMm/D,EACF,kBAAC,GAAD,CACIz0E,UAAU,cACVqB,IAAG,UAAK0S,EAAL,YAAgB/W,EAAhB,SACHgS,OAAQ+E,EACRkP,UAAWjmB,IAIbsqB,EAAUotD,aAAWlgE,GACrBrK,EAAOkhD,aAAQ72C,EAAW8S,EAAU,KAAOmtD,EAAYh3E,GAAKA,GAElE,OACI,oCACI,kBAAC,KAAD,CACI6d,KAAK,UACLtM,OAAQ+E,EACRkP,UAAWjmB,EACX8iB,MAAOxK,EAAQwK,MACf7f,YAAaA,EACbmE,MAAO,CAAE2J,MAAO,OAAQ8I,OAAQ,QAChCoO,UAAWnoB,KAAKmoB,YAClB9a,GAAQA,EAAKqH,OAAS,GACpB,yBAAKxR,UAAW,gBACXmK,IAMrB,IAAK,eACD,OACI,kBAACwqE,GAAA,EAAD,CACIr5D,KAAK,UACLtM,OAAQ+E,EACRkP,UAAWjmB,EACXuY,MAAOD,EAAQC,MACftV,YAAaA,EACbmE,MAAO,CAAE2J,MAAO,OAAQ8I,OAAQ,QAChCoO,UAAWnoB,KAAKmoB,YAG5B,IAAK,eACD,OACI,kBAAC2vD,GAAA,EAAD,CACIt5D,KAAK,UACLtM,OAAQ+E,EACRkP,UAAWjmB,EACX2E,MAAO2T,EAAQ3T,MACf1B,YAAaA,EACbmE,MAAO,CAAE2J,MAAO,OAAQ8I,OAAQ,QAChCoO,UAAWnoB,KAAKmoB,YAG5B,IAAK,kBAAmB,CACpB,MAAMwvD,EACF,kBAAC,GAAD,CACIz0E,UAAU,cACVqB,IAAG,UAAK0S,EAAL,YAAgB/W,EAAhB,SACHgS,OAAQ+E,EACRkP,UAAWjmB,IAIbsqB,EAAUotD,aAAWlgE,GACrBrK,EAAOkhD,aAAQ72C,EAAW8S,EAAU,KAAOmtD,EAAYh3E,GAAKA,GAElE,OACI,oCACI,kBAACo3E,GAAA,EAAD,CACIv5D,KAAK,UACLtM,OAAQ+E,EACRkP,UAAWjmB,EACX2G,SAAU2R,EAAQ3R,SAClB1D,YAAaA,EACbmE,MAAO,CAAE2J,MAAO,OAAQ8I,OAAQ,QAChCoO,UAAWnoB,KAAKmoB,YAClB9a,GAAQA,EAAKqH,OAAS,GACpB,yBAAKxR,UAAW,gBACXmK,KAQzB,OAAO,MAlGyB,KAmHpC2qE,iCAAmC5zE,IAAW,MAClCsT,EAAY1X,KAAKwC,MAAjBkV,QADiC,EAEP1X,KAAK+B,MAA/BoQ,EAFiC,EAEjCA,SAAU8lE,EAFuB,EAEvBA,YAEd9lE,IAEAuF,EAAQT,UAAY7S,EAAO8N,QAAUwF,EAAQxX,KAAOkE,EAAO+hB,UACvD8xD,EACAj4E,KAAKyC,SAAS,CAAEw1E,aAAa,GAAS,KAClCjtE,WAAW,KACPhL,KAAKyC,SAAS,CAAEw1E,aAAa,KAC9B,KAGPj4E,KAAKyC,SAAS,CAAEw1E,aAAa,IAE1BA,GACPj4E,KAAKyC,SAAS,CAAEw1E,aAAa,MApID,KAwIpCC,6BAA+B9zE,IACtBpE,KAAK+B,MAAMoQ,UAEhBnS,KAAKyC,SAAS,CAAE0P,UAAU,KA3IM,KA8IpC83D,8BAAgC7lE,IAAW,MAC/BsT,EAAY1X,KAAKwC,MAAjBkV,QACSxF,EAA0BwF,EAAnCT,QAAqBkP,EAAczO,EAAlBxX,GAEjBiS,EAAa/N,EAAb+N,SAEJD,IAAW9N,EAAO8N,QAAUiU,IAAc/hB,EAAO+hB,WACjDnmB,KAAKyC,SAAS,CAAE0P,WAAU8lE,aAAa,KArJX,KAyJpCtwD,sBAzJoC,sCAyJZ,WAAMtjB,GAAN,mBAAAqO,EAAA,qDAChBrO,IACAA,EAAM6B,iBACN7B,EAAM4B,mBAGc,EAAKlE,MAArB6lB,YAGJ,EAAKnlB,SAAS,CAAEmlB,aAAa,KAEvBrgB,EAAOlD,EAAM4F,QACbxC,EAAMpD,EAAM6F,QACZsqE,EACFnwE,EAAMuD,QAAmC,MAAzBvD,EAAMuD,OAAOuwE,SAAmB9zE,EAAMuD,OAAO0vD,KAAOjzD,EAAMuD,OAAO0vD,KAAO,KAE5F,EAAK70D,SAAS,CACVmlB,aAAa,EACb4sD,WACAjtE,OACAE,SApBY,yCAzJY,2DAkLpCogB,uBAAyBxjB,IACjBA,GACAA,EAAM4B,kBAGVjG,KAAKyC,SAAS,CAAEmlB,aAAa,KAvLG,KA0LpCO,UAAY9jB,IACR,GAAIiU,IAAawwC,cAAchvC,KAAO,EAAG,OAErCzV,IACAA,EAAM6B,iBACN7B,EAAM4B,mBALO,MAQTyR,EAAY1X,KAAKwC,MAAjBkV,QACR,IAAKA,EAAS,OATG,MAWTT,EAAgBS,EAAhBT,QAAS/W,EAAOwX,EAAPxX,GAEjBioB,aAAUlR,EAAS/W,IAvMa,KA0MpCk4E,gBAAkB/zE,IAGd,MAAM2/B,EAAYl3B,OAAOm3B,eAAe4qB,WACxC,IAAKkmB,aAAiB/wC,GAClB,OALmB,MAQftsB,EAAY1X,KAAKwC,MAAjBkV,QACSxF,EAA0BwF,EAAnCT,QAAqBkP,EAAczO,EAAlBxX,GAEzB,GAAwC,IAApCoY,IAAawwC,cAAchvC,KAAY,OAE3C,MAAM3H,GAAYmG,IAAawwC,cAAc7zC,IAA3B,iBAAyC/C,EAAzC,sBAA6DiU,IAC/E6uD,YAAc9iE,EAAQiU,EAAWhU,GAEjC9N,EAAM6B,iBACN7B,EAAM4B,mBAtHVjD,oBACIsV,IAAatL,GAAG,iCAAkChN,KAAKg4E,kCACvD1/D,IAAatL,GAAG,8BAA+BhN,KAAKiqE,+BAEpD3xD,IAAatL,GAAG,6BAA8BhN,KAAKk4E,8BAGvDjrE,uBACIqL,IAAalL,IAAI,iCAAkCpN,KAAKg4E,kCACxD1/D,IAAalL,IAAI,8BAA+BpN,KAAKiqE,+BAErD3xD,IAAalL,IAAI,6BAA8BpN,KAAKk4E,8BA8GxDj1E,SAAU,MAAD,EAC8CjD,KAAKwC,MAAhDkV,EADH,EACGA,QAASpE,EADZ,EACYA,SAAUnQ,EADtB,EACsBA,YAAaE,EADnC,EACmCA,OADnC,EAE+DrD,KAAK+B,MAAjE6lB,EAFH,EAEGA,YAAa4sD,EAFhB,EAEgBA,SAAU/sE,EAF1B,EAE0BA,IAAKF,EAF/B,EAE+BA,KAAM4K,EAFrC,EAEqCA,SAAU8lE,EAF/C,EAE+CA,YAE5ChhE,EAAgBS,EAAhBT,QAAS/W,EAAOwX,EAAPxX,GAEjB,IAAIoH,EAAQ,GACRpE,EAAY,sBAMhB,OALIoQ,IACAhM,EAAQ,CAAE2J,MAAOqC,EAASrC,MAAO8I,OAAQzG,EAASyG,OAAS5W,GAC3DD,EAAY,cAIZ,oCACI,yBACIA,UAAWkN,IAAWlN,EAAW,CAAE,yBAA0B+0E,IAAgB9lE,GAAW,CAAE,gBAAiBA,IAC3G5B,QAASvQ,KAAKo4E,gBACd1vD,cAAe1oB,KAAK2nB,sBACpBrgB,MAAOA,GACP,yBAAKpE,UAAU,sBAAsBlD,KAAK03E,aAAahgE,EAASvU,KAC9DgP,GAAY8lE,IACV,yBAAK/0E,UAAU,wBACX,yBAAKA,UAAU,6BACTiP,GAAY,kBAAC,KAAD,CAAejP,UAAU,8BAKvD,kBAAC,GAAD,CACIgP,OAAQ+E,EACRkP,UAAWjmB,EACXumB,eAAgB,CAAEhf,MAAKF,QACvBmV,KAAMkL,EACN9K,QAAS9c,KAAK6nB,uBACd2sD,SAAUA,EACVnxE,OAAQA,O,OCjOb4O,qBA1Cf,cAAsBpQ,IAAMC,UAAW,eAAD,oBASlCu2E,uBAAyB,KACrBr4E,KAAKya,eATTzX,oBACIsoC,KAAkBt+B,GAAG,6BAA8BhN,KAAKq4E,wBAG5DprE,uBACIq+B,KAAkBl+B,IAAI,6BAA8BpN,KAAKq4E,wBAO7Dp1E,SAAU,MAAD,EACkBjD,KAAKwC,MAApBwmB,EADH,EACGA,KAAMD,EADT,EACSA,KAGRjpB,EADW,IAAIopB,KAAY,IAAPF,GAAasvD,iBAAkB,IAAIpvD,MAAOovD,cAE9D,CACIjvD,IAAK,UACLC,MAAO,OACPC,KAAM,WAEV,CACIF,IAAK,UACLC,MAAO,QAGjB,OACI,yBAAKpmB,UAAU,YACX,yBAAKA,UAAU,oBACX,6BAAM,IAAIgmB,KAAY,IAAPF,GAAaG,mBAAmB,CAACJ,EAAKK,UAAWtpB,S,OCuDrEmS,qBAnFf,cAAsBpQ,IAAMC,UAAW,eAAD,oBAClCC,MAAQ,CACJw2E,SAAU,MAFoB,KAKlCC,eAAiBzqB,IACb/tD,KAAKyC,SAAS,CACV81E,SAAUxqB,KAPgB,KAWlC0qB,YAAcp0E,IACVA,EAAM4B,kBADa,MAGXyyE,EAAgB14E,KAAKwC,MAArBk2E,YACR,IAAKA,EAAa,OAAO,KAJN,MAMXC,EAAWD,EAAXC,OAER,OAAQA,EAAO,UACX,IAAK,2BAA4B,CAAC,MACtBnpD,EAAmBmpD,EAAnBnpD,eAERY,YAASZ,GAAgB,GACzB,MAEJ,IAAK,iCACD,MAEJ,IAAK,8BAA+B,CAAC,MACzBvY,EAAwB0hE,EAAxB1hE,QAASC,EAAeyhE,EAAfzhE,WAEjBkP,YAASnP,EAASC,GAClB,SAKZjU,SAAU,MAAD,EACsBjD,KAAKwC,MAAxB6P,EADH,EACGA,EAAGqmE,EADN,EACMA,YAGLv6D,GAFene,KAAK+B,MAAlBw2E,SAEMK,aAAgBF,EAAarmE,IAC3BwmE,aAAsBH,IAClC,oCACKrmE,EAAE,cACH,0BAAMnP,UAAU,gBAAgB+Z,IAAKjd,KAAKw4E,kBAMlD,OACI,yBAAKt1E,UAAWkN,IAAW,iBAAkB,YACzC,6BAAMiC,EAAE,qBACR,yBAAKnP,UAAU,oBACVmP,EAAE,QAAU,IAeT,uBAAG9B,QAASvQ,KAAKy4E,aAAct6D,QC9EvD,MAAM26D,GAAqB,EACrBC,GAAsB,EACtBC,GAAoB,EACpBC,GAAuB,EAE7B,MAAMC,GACFt5E,YAAYu5E,EAAYC,GACpBp5E,KAAKm5E,WAAaA,EAClBn5E,KAAKo5E,QAAUA,GAIvB,MAAMC,GAeF7+D,IAAI8+D,EAAMC,EAAMC,EAAMC,EAAMC,EAAGC,EAAGC,GAC9B55E,KAAKs5E,KAAOA,EACZt5E,KAAKu5E,KAAOA,EACZv5E,KAAKw5E,KAAOA,EACZx5E,KAAKy5E,KAAOA,EACZz5E,KAAK65E,SAAWH,EAChB15E,KAAKiR,MAAQyoE,EACb15E,KAAK+Z,OAAS4/D,EACd35E,KAAK45E,MAAQA,EAGjBE,UACI,MAAM,QAAN,OAAe95E,KAAKs5E,KAApB,kBAAkCt5E,KAAKu5E,KAAvC,kBAAqDv5E,KAAKw5E,KAA1D,kBAAwEx5E,KAAKy5E,KAA7E,sBAA+Fz5E,KAAK65E,SAApG,mBAAuH75E,KAAKiR,MAA5H,oBAA6IjR,KAAK+Z,OAAlJ,mBAAmK/Z,KAAK45E,MAAxK,4BAAiM55E,KAAK+5E,eAAtM,4BAAwO/5E,KAAKg6E,iBAIrP,MAAMC,GAEFr6E,cACII,KAAKk6E,SAAW,GAChBl6E,KAAKm6E,UAAY,IAAIrlE,IACrB9U,KAAKo6E,aAAe,IACpBp6E,KAAKq6E,YAAa,EAClBr6E,KAAKs6E,MAAQ,EAGjBC,YAAYxxB,EAAOhpD,EAAOy6E,GACtB,IAAIC,EAAM,EACV,IAAK,IAAIzlE,EAAIjV,EAAOiV,EAAIwlE,EAAKxlE,IACzBylE,GAAO1xB,EAAM/zC,GAGjB,OAAO,IAAQhV,KAAKs6E,MAAQG,EAGhCC,UAAUrrD,EAAUsrD,GAKhB,GAJA36E,KAAKk6E,SAAW,GAChBl6E,KAAKm6E,UAAY,IAAIrlE,IACrB9U,KAAKqvB,SAAWA,GAEXA,EAAU,OALe,MAMtB3a,EAAW2a,EAAX3a,OACR,GAAIA,GAAU,EACV,OAGJ1U,KAAK46E,WAAa,EAClB56E,KAAK66E,YAAc,EAEnB76E,KAAKs6E,MAAQK,EAAe36E,KAAKo6E,aACjCp6E,KAAKo6E,aAAeO,EAEY55E,KAAK0/D,MAAM,IAAMzgE,KAAKs6E,OAAtD,MACMvlD,EAAYh0B,KAAK0/D,MAAM,IAAMzgE,KAAKs6E,OAClC/hD,EAAWx3B,KAAK0/D,MAAM,GAAKzgE,KAAKs6E,OAChCQ,EAAgB/5E,KAAK0/D,MAAM,GAAKzgE,KAAKs6E,OACrCS,EAAgB,IAAQ/6E,KAAKs6E,MACnC,IAAIU,EAAqB,EACrBC,EAAc,GAElB,IAAI1B,EAAO,EACP2B,GAAY,EAEhB,IAAK,IAAIlmE,EAAI,EAAGA,EAAIN,EAAQM,IAAK,CAC7B,MAAM0C,EAAU2X,EAASra,GADI,EAEZilE,GAAgBkB,eAAezjE,GAAxCgiE,EAFqB,EAErBA,EAAGC,EAFkB,EAElBA,EAELrmE,EAAW,IAAI+lE,GACrB/lE,EAAS8nE,OAASpmE,IAAMqa,EAAS3a,OAAS,EAC1CpB,EAAS2iC,YAAcyjC,EAAIC,EACvBrmE,EAAS2iC,YAAc,IACvBglC,GAAe,IACR3nE,EAAS2iC,YAAc,GAC9BglC,GAAe,IAEfA,GAAe,IAGnBD,GAAsB1nE,EAAS2iC,YAC3B3iC,EAAS2iC,YAAc,IACvBilC,GAAY,GAGhBl7E,KAAKm6E,UAAU3/D,IAAI9C,EAASpE,GAC5BtT,KAAKk6E,SAASpkE,KAAKxC,GAGvB,MAAM+nE,EAAkBr7E,KAAKo6E,aAAeW,EAG5C,GAFAC,GAA0CtmE,EAErCwmE,GAAyB,IAAXxmE,GAA2B,IAAXA,GAA2B,IAAXA,EA8I5C,CACH,MAAM4mE,EAAgB,IAAIntC,MAAMnuC,KAAKk6E,SAASxlE,QAC9C,IAAK,IAAIM,EAAI,EAAGA,EAAIN,EAAQM,IAEpBsmE,EAActmE,GADdgmE,EAAqB,IACFj6E,KAAKoQ,IAAI,EAAKnR,KAAKk6E,SAASllE,GAAGihC,aAE/Bl1C,KAAKC,IAAI,EAAKhB,KAAKk6E,SAASllE,GAAGihC,aAEtDqlC,EAActmE,GAAKjU,KAAKoQ,IAAI,OAASpQ,KAAKC,IAAI,IAAKs6E,EAActmE,KAGrE,IAAIumE,EACAC,EACAC,EACAC,EACJ,MAAMC,EAAW,GACjB,IAAKJ,EAAY,EAAGA,EAAYD,EAAc5mE,OAAQ6mE,IAClDC,EAAaF,EAAc5mE,OAAS6mE,EAChCA,EAAY,GAAKC,EAAa,GAGlCG,EAAS7lE,KAAK,IAAIojE,GAA4B,CAACqC,EAAWC,GAAa,CAACx7E,KAAKu6E,YAAYe,EAAe,EAAGC,GAAYv7E,KAAKu6E,YAAYe,EAAeC,EAAWD,EAAc5mE,WAGpL,IAAK6mE,EAAY,EAAGA,EAAYD,EAAc5mE,OAAS,EAAG6mE,IACtD,IAAKC,EAAa,EAAGA,EAAaF,EAAc5mE,OAAS6mE,EAAWC,IAChEC,EAAYH,EAAc5mE,OAAS6mE,EAAYC,EAC3CD,EAAY,GAAKC,GAAcR,EAAqB,IAAO,EAAI,IAAMS,EAAY,GAGrFE,EAAS7lE,KAAK,IAAIojE,GAA4B,CAACqC,EAAWC,EAAYC,GAAY,CAACz7E,KAAKu6E,YAAYe,EAAe,EAAGC,GAAYv7E,KAAKu6E,YAAYe,EAAeC,EAAWA,EAAYC,GAAax7E,KAAKu6E,YAAYe,EAAeC,EAAYC,EAAYF,EAAc5mE,WAIpR,IAAK6mE,EAAY,EAAGA,EAAYD,EAAc5mE,OAAS,EAAG6mE,IACtD,IAAKC,EAAa,EAAGA,EAAaF,EAAc5mE,OAAS6mE,EAAWC,IAChE,IAAKC,EAAY,EAAGA,EAAYH,EAAc5mE,OAAS6mE,EAAYC,EAAYC,IAC3EC,EAAaJ,EAAc5mE,OAAS6mE,EAAYC,EAAaC,EACzDF,EAAY,GAAKC,EAAa,GAAKC,EAAY,GAAKC,EAAa,GAGrEC,EAAS7lE,KAAK,IAAIojE,GAA4B,CAACqC,EAAWC,EAAYC,EAAWC,GAAa,CAAC17E,KAAKu6E,YAAYe,EAAe,EAAGC,GAAYv7E,KAAKu6E,YAAYe,EAAeC,EAAWA,EAAYC,GAAax7E,KAAKu6E,YAAYe,EAAeC,EAAYC,EAAYD,EAAYC,EAAaC,GAAYz7E,KAAKu6E,YAAYe,EAAeC,EAAYC,EAAaC,EAAWH,EAAc5mE,WAK7Y,IAAIknE,EAAU,KACVC,EAAc,EACdC,EAAY97E,KAAKo6E,aAAe,EAAI,EACxC,IAAK,IAAIplE,EAAI,EAAGA,EAAI2mE,EAASjnE,OAAQM,IAAK,CACtC,MAAM+mE,EAAUJ,EAAS3mE,GACzB,IAAI+E,EAAS,EACTiiE,EAAgBr2E,OAAOs2E,UAC3B,IAAK,IAAIhsC,EAAI,EAAGA,EAAI8rC,EAAQ3C,QAAQ1kE,OAAQu7B,IACxCl2B,GAAUgiE,EAAQ3C,QAAQnpC,GACtB8rC,EAAQ3C,QAAQnpC,GAAK+rC,IACrBA,EAAgBD,EAAQ3C,QAAQnpC,IAIxC,IAAIglB,EAAOl0D,KAAKopB,IAAIpQ,EAAS+hE,GACzBC,EAAQ5C,WAAWzkE,OAAS,IACxBqnE,EAAQ5C,WAAW,GAAK4C,EAAQ5C,WAAW,IAAO4C,EAAQ5C,WAAWzkE,OAAS,GAAKqnE,EAAQ5C,WAAW,GAAK4C,EAAQ5C,WAAW,IAAQ4C,EAAQ5C,WAAWzkE,OAAS,GAAKqnE,EAAQ5C,WAAW,GAAK4C,EAAQ5C,WAAW,MAClNlkB,GAAQ,KAIZ+mB,EAAgBzjD,IAChB08B,GAAQ,MAGI,OAAZ2mB,GAAoB3mB,EAAO4mB,KAC3BD,EAAUG,EACVF,EAAc5mB,GAItB,GAAgB,OAAZ2mB,EACA,OAGJ,IAAIj4D,EAAQ,EACRoQ,EAAI,EAER,IAAK,IAAI/e,EAAI,EAAGA,EAAI4mE,EAAQzC,WAAWzkE,OAAQM,IAAK,CAChD,IAAIknE,EAAIN,EAAQzC,WAAWnkE,GACvBmnE,EAAaP,EAAQxC,QAAQpkE,GAC7BonE,EAAWp8E,KAAKo6E,aAChBiC,EAAW,KACf9C,EAAOx4E,KAAKoQ,IAAIooE,EAAM2C,EAAI,GAC1B,IAAK,IAAIjsC,EAAI,EAAGA,EAAIisC,EAAGjsC,IAAK,CACxB,IAAIqsC,EAAQhB,EAAc33D,GACtB1S,EAAQlQ,KAAK0/D,MAAM6b,EAAQH,GAC/BC,GAAYnrE,EACZ,IAAIsrE,EAAMv8E,KAAKk6E,SAASv2D,GACpBi2D,EAAQ,EACF,IAAN5kE,IACA4kE,GAASZ,IAEThkE,IAAM4mE,EAAQzC,WAAWzkE,OAAS,IAClCklE,GAASX,IAEH,IAANhpC,IACA2pC,GAASd,IAKT7oC,IAAMisC,EAAI,IACVtC,GAASb,GAELsD,EAAWE,GAGnBA,EAAI/hE,IAAIy1B,EAAGA,EAAGj7B,EAAGA,EAAG/D,EAAOkrE,EAAapB,EAAenB,GACvDj2D,IAEJ04D,EAASprE,OAASmrE,EAClBC,EAASxC,UAAYuC,EACrBroD,GAAKooD,EAGTn8E,KAAK46E,WAAa56E,KAAKo6E,aACvBp6E,KAAK66E,YAAc9mD,EAAIgnD,OAxQvB,OAAQrmE,GACJ,KAAK,EAAG,CACJ,MAAM8nE,EAAYx8E,KAAKk6E,SAAS,GAC1BuC,EAAYz8E,KAAKk6E,SAAS,GAEhC,GAAoB,OAAhBe,GAAwBD,EAAqB,IAAMK,GAAmBmB,EAAUvmC,YAAcwmC,EAAUxmC,YAAc,GAAK,CAC3H,MAAMl8B,EAAShZ,KAAKwF,MAAMxF,KAAKC,IAAIhB,KAAKo6E,aAAeoC,EAAUvmC,YAAal1C,KAAKC,IAAIhB,KAAKo6E,aAAeqC,EAAUxmC,YAAa8kC,EAAgB,KAASA,EAC3JyB,EAAUhiE,IAAI,EAAG,EAAG,EAAG,EAAGxa,KAAKo6E,aAAcrgE,EAAQ++D,GAAqBC,GAAsBC,IAChGyD,EAAUjiE,IAAI,EAAG,EAAG,EAAG,EAAGxa,KAAKo6E,aAAcrgE,EAAQ++D,GAAqBC,GAAsBE,IAEhGj5E,KAAK46E,WAAa56E,KAAKo6E,aACvBp6E,KAAK66E,YAAuB,EAAT9gE,OAChB,GAAoB,OAAhBkhE,GAAwC,OAAhBA,EAAsB,CACrD,MAAMhqE,EAAQjR,KAAKo6E,aAAe,EAC5BrgE,EAAShZ,KAAKwF,MAAMxF,KAAKC,IAAIiQ,EAAQurE,EAAUvmC,YAAal1C,KAAKC,IAAIiQ,EAAQwrE,EAAUxmC,YAAa8kC,KAAmBA,EAC7HyB,EAAUhiE,IAAI,EAAG,EAAG,EAAG,EAAGvJ,EAAO8I,EAAQ++D,GAAqBG,GAAuBD,IACrFyD,EAAUjiE,IAAI,EAAG,EAAG,EAAG,EAAGvJ,EAAO8I,EAAQg/D,GAAsBE,GAAuBD,IACtFO,EAAO,EAEPv5E,KAAK46E,WAAa3pE,EAAQA,EAC1BjR,KAAK66E,YAAc9gE,MAChB,CACH,IAAI2iE,EAAc37E,KAAKoQ,IAAI,GAAMnR,KAAKo6E,aAAcr5E,KAAKwF,MAAOvG,KAAKo6E,aAAeoC,EAAUvmC,aAAe,EAAMumC,EAAUvmC,YAAc,EAAMwmC,EAAUxmC,eACvJ0mC,EAAa38E,KAAKo6E,aAAesC,EACrC,GAAIC,EAAapkD,EAAU,CACvB,MAAM08B,EAAO18B,EAAWokD,EACxBA,EAAapkD,EACbmkD,GAAeznB,EAGnB,MAAMl7C,EAAShZ,KAAKC,IAAI+5E,EAAeh6E,KAAKwF,MAAMxF,KAAKC,IAAI27E,EAAaH,EAAUvmC,YAAaymC,EAAcD,EAAUxmC,eAAiB8kC,EACxIyB,EAAUhiE,IAAI,EAAG,EAAG,EAAG,EAAGmiE,EAAY5iE,EAAQ++D,GAAqBG,GAAuBD,IAC1FyD,EAAUjiE,IAAI,EAAG,EAAG,EAAG,EAAGkiE,EAAa3iE,EAAQg/D,GAAsBE,GAAuBD,IAC5FO,EAAO,EAEPv5E,KAAK46E,WAAa+B,EAAaD,EAC/B18E,KAAK66E,YAAc9gE,EAGvB,MAEJ,KAAK,EAAG,CACJ,MAAMyiE,EAAYx8E,KAAKk6E,SAAS,GAC1BuC,EAAYz8E,KAAKk6E,SAAS,GAC1B0C,EAAY58E,KAAKk6E,SAAS,GAChC,GAAuB,MAAnBe,EAAY,GAChB,CACI,MAAM4B,EAAc97E,KAAKC,IAAoB,GAAhB+5E,EAAqBh6E,KAAKwF,MAAMk2E,EAAUxmC,YAAcj2C,KAAKo6E,cAAgBwC,EAAU3mC,YAAcwmC,EAAUxmC,eACtI6mC,EAAe/B,EAAgB8B,EAC/BE,EAAah8E,KAAKoQ,IAAIonB,EAAUx3B,KAAKC,IAAwB,GAApBhB,KAAKo6E,aAAoBr5E,KAAKwF,MAAMxF,KAAKC,IAAI67E,EAAcD,EAAU3mC,YAAa6mC,EAAeL,EAAUxmC,gBAEpJ+mC,EAAYj8E,KAAKwF,MAAMxF,KAAKC,IAAI+5E,EAAgByB,EAAUvmC,YAAc6kC,EAAe96E,KAAKo6E,aAAe2C,IACjHP,EAAUhiE,IAAI,EAAG,EAAG,EAAG,EAAGwiE,EAAW,EAAKlE,GAAqBG,GAAuBD,IACtFyD,EAAUjiE,IAAI,EAAG,EAAG,EAAG,EAAGuiE,EAAYD,EAAe/B,EAAehC,GAAsBC,IAC1F4D,EAAUpiE,IAAI,EAAG,EAAG,EAAG,EAAGuiE,EAAYF,EAAc9B,EAAehC,GAAsBE,IACzF2D,EAAU/C,SAAW75E,KAAKo6E,aAE1BoC,EAAUzC,eAAiB,CAAC8C,EAAc9B,EAAe+B,EAAe/B,GAKpE0B,EAAU5C,SAAW75E,KAAKo6E,aAAe4C,EACzCJ,EAAU5C,eAAiBgD,EAE/Bh9E,KAAKq6E,YAAa,EAClBd,EAAO,EAEPv5E,KAAK46E,WAAaoC,EAAYD,EAC9B/8E,KAAK66E,YAAc,MAGvB,CACI,MAAMoC,EAAcl8E,KAAKwF,MAAMxF,KAAKC,IAAIhB,KAAKo6E,aAAeoC,EAAUvmC,YAA+B,IAAjB8kC,IAA0BA,EAC9GyB,EAAUhiE,IAAI,EAAG,EAAG,EAAG,EAAGxa,KAAKo6E,aAAc6C,EAAanE,GAAqBC,GAAsBC,IAErG,MAAM/nE,EAAQjR,KAAKo6E,aAAe,EAC5B0C,EAAe/7E,KAAKC,IAAI+5E,EAAgBkC,EAAal8E,KAAKwF,MAAMxF,KAAKC,IAAIiQ,EAAQwrE,EAAUxmC,YAAahlC,EAAQ2rE,EAAU3mC,eAAiB8kC,EACjJ0B,EAAUjiE,IAAI,EAAG,EAAG,EAAG,EAAGvJ,EAAO6rE,EAAchE,GAAqBG,IACpE2D,EAAUpiE,IAAI,EAAG,EAAG,EAAG,EAAGvJ,EAAO6rE,EAAc/D,GAAsBE,IACrEM,EAAO,EAEPv5E,KAAK46E,WAAa56E,KAAKo6E,aACvBp6E,KAAK66E,YAAcoC,EAAcH,EAGrC,MAEJ,KAAK,EAAG,CACJ,MAAMN,EAAYx8E,KAAKk6E,SAAS,GAC1BuC,EAAYz8E,KAAKk6E,SAAS,GAC1B0C,EAAY58E,KAAKk6E,SAAS,GAC1BgD,EAAYl9E,KAAKk6E,SAAS,GAChC,GAAuB,MAAnBe,EAAY,GAAY,CACxB,MAAMkC,EAAKp8E,KAAKwF,MAAMxF,KAAKC,IAAIhB,KAAKo6E,aAAeoC,EAAUvmC,YAA6B,IAAhB8kC,IAAyBA,EACnGyB,EAAUhiE,IAAI,EAAG,EAAG,EAAG,EAAGxa,KAAKo6E,aAAc+C,EAAIrE,GAAqBC,GAAsBC,IAE5F,IAAIW,EAAI54E,KAAKwF,MAAMvG,KAAKo6E,cAAgBqC,EAAUxmC,YAAc2mC,EAAU3mC,YAAcinC,EAAUjnC,cAClG,MAAMmnC,EAAKr8E,KAAKoQ,IAAIonB,EAAUx3B,KAAKC,IAAwB,GAApBhB,KAAKo6E,aAAoBT,EAAI8C,EAAUxmC,cACxEonC,EAAKt8E,KAAKoQ,IAAIpQ,KAAKoQ,IAAIonB,EAA8B,IAApBv4B,KAAKo6E,cAAsBT,EAAIuD,EAAUjnC,aAC1EqnC,EAAKt9E,KAAKo6E,aAAegD,EAAKC,EACpC1D,EAAI54E,KAAKC,IAAI+5E,EAAgBoC,EAAIxD,GACjCA,GAAKoB,EACL0B,EAAUjiE,IAAI,EAAG,EAAG,EAAG,EAAG4iE,EAAIzD,EAAGb,GAAqBG,IACtD2D,EAAUpiE,IAAI,EAAG,EAAG,EAAG,EAAG8iE,EAAI3D,EAAGV,IACjCiE,EAAU1iE,IAAI,EAAG,EAAG,EAAG,EAAG6iE,EAAI1D,EAAGZ,GAAsBE,IACvDM,EAAO,EAEPv5E,KAAK46E,WAAa56E,KAAKo6E,aACvBp6E,KAAK66E,YAAcsC,EAAKxD,MACrB,CACH,MAAMD,EAAI34E,KAAKoQ,IAAIonB,EAAUx3B,KAAKwF,MAAMw0E,GAAiB,EAAM0B,EAAUxmC,YAAc,EAAM2mC,EAAU3mC,YAAc,EAAMinC,EAAUjnC,eAC/HknC,EAAKp8E,KAAKC,IAAI,IAAMD,KAAKoQ,IAAI4jB,EAAW2kD,EAAI+C,EAAUxmC,aAAe8kC,GACrEwC,EAAKx8E,KAAKC,IAAI,IAAMD,KAAKoQ,IAAI4jB,EAAW2kD,EAAIkD,EAAU3mC,aAAe8kC,GACrEyC,EAAK,EAAML,EAAKI,EAChBH,EAAKr8E,KAAKwF,MAAMxF,KAAKC,IAAI+5E,EAAgByB,EAAUvmC,YAAc6kC,EAAe96E,KAAKo6E,aAAeV,IAE1G8C,EAAUhiE,IAAI,EAAG,EAAG,EAAG,EAAG4iE,EAAID,EAAKI,EAAKC,EAAI1E,GAAqBE,GAAoBC,IACrFwD,EAAUjiE,IAAI,EAAG,EAAG,EAAG,EAAGk/D,EAAGyD,EAAIpE,GAAsBC,IACvD4D,EAAUpiE,IAAI,EAAG,EAAG,EAAG,EAAGk/D,EAAG6D,EAAIxE,IACjC6D,EAAU/C,SAAW75E,KAAKo6E,aAC1B8C,EAAU1iE,IAAI,EAAG,EAAG,EAAG,EAAGk/D,EAAG8D,EAAIzE,GAAsBE,IACvDiE,EAAUrD,SAAW75E,KAAKo6E,aAKtBqC,EAAU5C,SAAW75E,KAAKo6E,aAAegD,EACzCR,EAAU5C,eAAiBoD,EAC3BF,EAAUlD,eAAiBoD,EAE/BZ,EAAUzC,eAAiB,CAAEoD,EAAII,EAAIC,GACrCx9E,KAAKq6E,YAAa,EAClBd,EAAO,EAEPv5E,KAAK46E,WAAalB,EAAI0D,EACtBp9E,KAAK66E,YAAcsC,EAAKI,EAAKC,EAEjC,QAkIhB,sBAAsB9lE,GAClB,IAAIgiE,EAAI,EACJC,EAAI,EACJjhE,EAAQ,GACZ,OAAQhB,EAAQc,QAAQ,UACpB,IAAK,eAAgB,CAAC,MAAD,EACgBd,EAAQc,QAAjCC,EADS,EACTA,MAAOwP,EADE,EACFA,cACXxP,EACAC,EAAQD,EAAMC,MACPuP,GACPvP,EAAM5C,KAAKmS,GAGf,MAEJ,IAAK,eAAgB,CAAC,MAAD,EAC2BvQ,EAAQc,QAA5C3T,EADS,EACTA,MAAOmV,EADE,EACFA,UAAWiO,EADT,EACSA,cAC1B,GAAIpjB,EAAO,CAAC,MACAoM,EAAkBpM,EAAlBoM,MAAO8I,EAAWlV,EAAXkV,OACfrB,EAAM5C,KAAK,CAAE7E,QAAO8I,gBACbkO,EACPvP,EAAM5C,KAAKmS,GACJjO,GACPtB,EAAM5C,KAAKkE,GAGf,MAEJ,IAAK,kBAAmB,CAAC,MAAD,EACiBtC,EAAQc,QAArCwB,EADY,EACZA,UAAWiO,EADC,EACDA,cACfA,EACAvP,EAAM5C,KAAKmS,GACJjO,EACPtB,EAAM5C,KAAKkE,GAEXtB,EAAM5C,KAAK,CAAE7E,MAAO,GAAI8I,OAAQ,KAGpC,OAIR,MAAM0N,EAAYwyD,GAAgBtuD,aAAajT,EAAO,MAMtD,OALI+O,IACAiyD,EAAIjyD,EAAUxW,MACd0oE,EAAIlyD,EAAU1N,QAGX,CAAE2/D,IAAGC,KAGhB,oBAAoBjhE,EAAO+kE,EAAMC,GAC7B,IAAKhlE,IAAUA,EAAMhE,OAAQ,OAAO,KAEpC,IAAIipE,EAAW,EACXC,EAAW,KACf,IAAK,IAAI5oE,EAAI,EAAGA,EAAI0D,EAAMhE,OAAQM,IAAK,CAAC,MAAD,EACH0D,EAAM1D,GAAvB0kE,EADoB,EAC3BzoE,MAAkB0oE,EADS,EACjB5/D,OAElB,GAAI2jE,EAAW,CACX,MAAMG,EAAclE,GAAKD,EAAIA,EAAIC,IAC5BiE,GAAaH,EAAO,KAAOA,EAAOE,GAAYA,EAAWE,KAC1DF,EAAWE,EACXD,EAAWllE,EAAM1D,QAGlB,CACH,MAAM6oE,EAAcnE,GAAKC,EAAID,EAAIC,IAC5BiE,GAAaH,EAAO,KAAOI,GAAeJ,GAAQE,EAAWE,KAC9DF,EAAWE,EACXD,EAAWllE,EAAM1D,KAK7B,OAAO4oE,GAIA3D,U,OCzcAhoE,qBANf,SAAyBzP,GAAQ,MACrB6P,EAAM7P,EAAN6P,EAER,OAAO,yBAAKnP,UAAU,oBAAoBmP,EAAE,qB,OCejCyrE,OAjBf,SAAmBt7E,GAAQ,MACf6+B,EAA8B7+B,EAA9B6+B,OAAQgF,EAAsB7jC,EAAtB6jC,MAAOnmB,EAAe1d,EAAf0d,IAAK5Y,EAAU9E,EAAV8E,MAE5B,OACI,yBACIpE,UAAWkN,IACP,YACA,CAAE,cAAeixB,GACjB,CAAE,aAAcgF,GAChB,CAAE,WAAYnmB,IAElB5Y,MAAOA,K,OCOnB,MAAMy2E,WAAcl8E,IAAMC,UAAW,eAAD,oBAChCC,MAAQ,GADwB,KA0DhCi2E,iCAAmC5zE,IAAW,MAAD,EACVpE,KAAKwC,MAA5B0P,EADiC,EACjCA,OAAQ4E,EADyB,EACzBA,WADyB,EAEP9W,KAAK+B,MAA/BoQ,EAFiC,EAEjCA,SAAU8lE,EAFuB,EAEvBA,YAEd9lE,IAEAD,IAAW9N,EAAO8N,QAAU4E,EAAWyW,KAAK5sB,GAAKA,IAAMyD,EAAO+hB,WAC1D8xD,EACAj4E,KAAKyC,SAAS,CAAEw1E,aAAa,EAAO+F,iBAAiB,GAAS,KAC1DhzE,WAAW,KACPhL,KAAKyC,SAAS,CAAEw1E,aAAa,EAAM+F,gBAAiBlnE,EAAWpC,OAAS,GAAKoC,EAAWA,EAAWpC,OAAS,KAAOtQ,EAAO+hB,aAC3H,KAGPnmB,KAAKyC,SAAS,CAAEw1E,aAAa,EAAM+F,gBAAiBlnE,EAAWpC,OAAS,GAAKoC,EAAWA,EAAWpC,OAAS,KAAOtQ,EAAO+hB,YAEvH8xD,GACPj4E,KAAKyC,SAAS,CAAEw1E,aAAa,EAAO+F,iBAAiB,MA3E7B,KA+EhC/T,8BAAgC7lE,IAAW,MAAD,EACPpE,KAAKwC,MAA5B0P,EAD8B,EAC9BA,OAAQ4E,EADsB,EACtBA,WACK1S,EAAb+N,SAEJD,IAAW9N,EAAO8N,QAAU4E,EAAWyW,KAAK5sB,GAAKA,IAAMyD,EAAO+hB,YAC9DnmB,KAAKyC,SAAS,CAAE0P,SAAU2E,EAAWpW,MAAMC,GAAK2X,IAAa29D,mBAAmB/jE,EAAQvR,OApFhE,KAwFhCu3E,6BAA+B9zE,IACtBpE,KAAK+B,MAAMoQ,UAEhBnS,KAAKyC,SAAS,CAAE0P,UAAU,KA3FE,KA8FhCkQ,uBAAyBje,IAAW,MACxB6S,EAAwB7S,EAAxB6S,QAASC,EAAe9S,EAAf8S,WADc,EAEalX,KAAKwC,MAAzC0P,EAFuB,EAEvBA,OAAQ4E,EAFe,EAEfA,WAAY3T,EAFG,EAEHA,YACN86E,EAAoBj+E,KAAK+B,MAAvCm8E,aAER,GAAIhsE,IAAW+E,EAAS,OACxB,IAAKH,EAAWyW,KAAK5sB,GAAKA,IAAMuW,GAAa,OAE7C,MAAMinE,EAAU,IAAIlE,GACpBkE,EAAQzD,UAAU5jE,EAAWT,IAAI1V,GAAK2X,IAAazM,IAAIqG,EAAQvR,IAAKwC,GAE/C,OACA86E,EACjBj+E,KAAKyC,SAAS,CAAEy7E,aAFC,KAEaC,YAE9Bn+E,KAAKyC,SAAS,CAAE07E,aA7GQ,KAiHhC/F,gBAAkB,KAGd,MAAMp0C,EAAYl3B,OAAOm3B,eAAe4qB,WACxC,IAAKkmB,aAAiB/wC,GAClB,OALgB,QAQWhkC,KAAKwC,MAA5B0P,EARY,EAQZA,OAAQ4E,EARI,EAQJA,WAGhB,GAFqB9W,KAAK+B,MAAlBoQ,SAGJ,IAAK,IAAI6C,EAAI,EAAGA,EAAI8B,EAAWpC,OAAQM,IACnCggE,YAAc9iE,EAAQ4E,EAAW9B,IAAI,QAGzC,IAAK,IAAIA,EAAI,EAAGA,EAAI8B,EAAWpC,OAAQM,IACnCggE,YAAc9iE,EAAQ4E,EAAW9B,IAAI,IA/HjD4I,sBAAsBC,EAAWC,EAAWoK,GAAc,MAC9CpR,EAAe9W,KAAKwC,MAApBsU,WAD6C,EAEL9W,KAAK+B,MAA7Cm8E,EAF6C,EAE7CA,aAAc/rE,EAF+B,EAE/BA,SAAU8lE,EAFqB,EAErBA,YAEhC,OAAKlB,YAAmBl5D,EAAU/G,WAAYA,KAI1CgH,EAAUogE,eAAiBA,IAI3BpgE,EAAU3L,WAAaA,GAIvB2L,EAAUm6D,cAAgBA,IAOlC,gCAAgCz1E,EAAOT,GAAQ,MACnCoB,EAAoCX,EAApCW,YAAa+O,EAAuB1P,EAAvB0P,OAAQ4E,EAAetU,EAAfsU,WAE7B,GAAIA,IAAe/U,EAAM+0E,eAAgB,CACrC,MAAMqH,EAAU,IAAIlE,GAGpB,OAFAkE,EAAQzD,UAAU5jE,EAAWT,IAAI1V,GAAK2X,IAAazM,IAAIqG,EAAQvR,IAAKwC,GAE7D,CACHg7E,UACArH,eAAgBhgE,GAIxB,OAAO,KAGX9T,oBACIsV,IAAatL,GAAG,iCAAkChN,KAAKg4E,kCACvD1/D,IAAatL,GAAG,8BAA+BhN,KAAKiqE,+BAEpD3xD,IAAatL,GAAG,6BAA8BhN,KAAKk4E,8BACnD5/D,IAAatL,GAAG,uBAAwBhN,KAAKqiB,wBAGjDpV,uBACIqL,IAAalL,IAAI,iCAAkCpN,KAAKg4E,kCACxD1/D,IAAalL,IAAI,8BAA+BpN,KAAKiqE,+BAErD3xD,IAAalL,IAAI,6BAA8BpN,KAAKk4E,8BACpD5/D,IAAalL,IAAI,uBAAwBpN,KAAKqiB,wBAgFlDpf,SAAU,IAAD,EACsBjD,KAAKwC,MAA1B47E,EADD,EACCA,SAAU/6E,EADX,EACWA,OADX,QAE6FrD,KAAKwC,MAA/F0P,EAFH,EAEGA,OAAQ4E,EAFX,EAEWA,WAAY3T,EAFvB,EAEuBA,YAAak7E,EAFpC,EAEoCA,oBAAqBl+D,EAFzD,EAEyDA,UAAWikC,EAFpE,EAEoEA,SAFpE,KAE8E/xC,EAU/ErS,KAAK+B,OARLm8E,EAJC,EAIDA,aACA/rE,EALC,EAKDA,SAEAorC,GAPC,EAMD06B,YANC,EAOD16B,OAMI4gC,GAbH,EAQD3J,SARC,EASD5sD,YATC,EAUDrgB,KAVC,EAWDE,IAEgBzH,KAAK+B,MAAjBo8E,SACR,IAAKA,EACD,OAAO,KAGX,IAAKrnE,EAAWpC,OACZ,OAAO,KAGX,IAAIyR,EAAYrP,EAAWA,EAAWpC,OAAS,GAC/C,MAAMgD,EAAUY,IAAazM,IAAIqG,EAAQiU,GACzC,IAAKzO,EAAS,OAAO,gDAxBhB,MA0BGc,EAA0Ed,EAA1Ec,QAASgnB,EAAiE9nB,EAAjE8nB,YAAaxW,EAAoDtR,EAApDsR,KAAMzP,EAA8C7B,EAA9C6B,oBAAqB+kE,EAAyB5mE,EAAzB4mE,aAAc3xD,EAAWjV,EAAXiV,OAEjEqqD,EAAax3C,IAAgB/e,YAAcvO,GAE3CylE,EACF,kBAAC,GAAD,CACIz0E,UAAU,cACVqB,IAAG,UAAK2N,EAAL,YAAeiU,EAAf,SACHjU,OAAQA,EACR4E,WAAYA,IAGd0T,EAAUotD,aAAWlgE,GAC3B,IAAIrK,EAAO,KACX,IAAK,IAAI2H,EAAI,EAAGA,EAAI8B,EAAWpC,OAAQM,IAAK,CACxC,MAAMupE,EAAIjmE,IAAazM,IAAIqG,EAAQ4E,EAAW9B,IACxC3C,EAAIk8C,aAAQgwB,EAAK/zD,EAAU,KAAOmtD,EAAYtlE,GACpD,GAAIA,GAAKA,EAAEqC,OAAQ,CACf,GAAa,OAATrH,EAAe,CACfA,EAAO,KACP,MAEAA,EAAOgF,EACP8T,EAAYrP,EAAW9B,IAInC,MAAMwpE,EAAsB,OAATnxE,GAAiBA,EAAKqH,OAAS,EAC5C+pE,EACF,kBAAC,GAAD,CACIv7E,UAAWkN,IAAW,YAAa,CAC/B,eAAgBouE,IAEpBtsE,OAAQA,EACR4E,WAAYA,EACZmgE,YAAaj3E,KAAK0+E,kBAIpBC,EAAcC,aAAmB1sE,EAAQiU,GACzC04D,EAAY50D,QAAQ1Q,GACpBulE,EAAgBt+D,aAActO,MAAamO,aAASnO,KAAY8kE,GAChE+H,GAAaD,GAAiB3+D,GAAcw+D,GAAeE,EAE3DG,EAAYv+D,YAAcvO,GAC1B+sE,EAAYz+D,aAActO,GAMhC,IAAIq9B,EAAO,KACX,GAAI6uC,EACA,GAAI/9D,aAASnO,IAAWosE,EACpB,OAAQA,EAAa3F,OAAO,UACxB,IAAK,iCACDppC,EAAO,kBAACC,GAAA,EAAD,CAAUnJ,OAAK,EAAC4Q,UAAWqnC,EAAa3F,OAAOuG,YAAa9sE,SAAUpS,KAAKm/E,mBAClF,MAEJ,IAAK,2BACD5vC,EAAO,kBAACC,GAAA,EAAD,CAAUnJ,OAAK,EAACjV,OAAQktD,EAAa3F,OAAOnpD,eAAgBpd,SAAUpS,KAAKm/E,mBAClF,MAEJ,IAAK,8BACD5vC,EAAO,kBAAC/8B,EAAA,EAAD,CAAU6zB,OAAK,EAACn0B,OAAQosE,EAAa3F,OAAO1hE,QAAS7E,SAAUpS,KAAKo/E,wBAKnF7vC,EADO0vC,EACA,kBAAC,GAAD,CAAW54C,OAAK,IAChB24C,EACA,kBAAC,GAAD,CAAW34C,OAAK,IAChB7G,EACA,kBAAC,GAAD,CAAW6G,OAAK,IAChB1Z,EAAO3W,QACP,kBAACw5B,GAAA,EAAD,CAAUnJ,OAAK,EAACjV,OAAQzE,EAAO3W,QAAS5D,SAAUpS,KAAKm/E,mBAEvD,kBAAC3sE,EAAA,EAAD,CAAU6zB,OAAK,EAACn0B,OAAQA,EAAQE,SAAUpS,KAAKo/E,mBAI9D,MAAM93E,EAAQ,CAAE2J,MAAOktE,EAAQvD,WAAa,EAAI,GAC1CyE,EAAkC,mBAArB7mE,EAAQ,UAAsD,qBAArBA,EAAQ,SAC9D8mE,GAAed,IAAoC,qBAArBhmE,EAAQ,UAAwD,iBAArBA,EAAQ,UAAoD,iBAArBA,EAAQ,UAExH8U,EAAQ6wD,EAAQ9uD,SAAShZ,IAAI1V,GAC/B,kBAAC,GAAD,CACI4D,IAAK5D,EAAET,GACPwX,QAAS/W,EACT2S,SAAU6qE,EAAQhE,UAAUtuE,IAAIlL,GAChCwC,YAAaA,EACbE,OAAQA,KAGhB,OACI,6BACK+gD,GAAY,kBAAC,GAAD,CAASp7B,KAAMA,IAC5B,yBACI9lB,UAAWkN,IAAW,UAAW,gBAAiB,CAC9C,kBAAmB+P,GAAai+D,GAAYkB,EAC5C,iBAAkB/vC,EAClB,cAAeynC,EACf,mBAAoB7kE,EAEpB,sBAAuBgO,IAAci+D,EACrC,iBAAkBj+D,IAAci+D,EAChC,sBAAuBj+D,GAAai+D,IAAakB,EACjD,8BAA+Bn/D,GAAai+D,GAAYkB,EACxD,yBAA0BD,IAE9BE,YAAav/E,KAAK6K,gBAClB20E,WAAYx/E,KAAKy/E,eACjBpvE,YAAarQ,KAAKmK,gBAClBoG,QAASvQ,KAAKo4E,gBACdsH,eAAgB1/E,KAAK2/E,mBACrBj3D,cAAe1oB,KAAK2nB,uBACnB02D,GAAuB,kBAAC,GAAD,MACxB,yBAAKn7E,UAAU,gBACX,yBAAKA,UAAU,mBACX,kBAAC,KAAD,CAAeA,UAAU,yBAE7B,yBAAKA,UAAWkN,IAAW,kBAAmB,CAAE,MAASmtC,KACpDhO,EACD,yBACIrsC,UAAWkN,IACP,kBAAmB,CACnB,iBAAkBivE,EAClB,qBAAsBA,GAAcrI,IAExC1vE,MAAOA,GACN+3E,IAAgBl/D,IAAc2+D,GAAkBH,IAC7C,yBAAKz7E,UAAU,iBACVid,IAAcw+D,GACX,kBAAC7xD,GAAA,EAAD,CAAeH,OAAQA,EAAQ+rD,YAAa4F,EAAcl4D,UAAQ,EAACgK,UAAQ,IAE9EuuD,GAAe,kBAAC,GAAD,CAASjG,YAAa4F,KAG7CO,GACG,kBAAC,GAAD,CACI3sE,OAAQA,EACRiU,UAAW5M,EACXhJ,QAASvQ,KAAK4/E,mBAGtB,yBAAK18E,UAAWkN,IACZ,QACA,CAAE,gBAAiBouE,GACnB,CAAE,cAAeO,KAEjB,yBAAK77E,UAAU,gBAAgBoE,MAAO,CAAE2J,MAAOktE,EAAQvD,aAClDttD,IAGT,yBACIpqB,UAAWkN,IAAW,eAAgB,CAClC,sBAAwC,IAAjB8tE,EACvB,sBAAwC,IAAjBA,EACvB,sBAAwC,IAAjBA,KAE1B7wE,GAEJgyE,GAAcZ,GAEnB,yBAAKv7E,UAAU,0BAEnB,yBAAKA,UAAU,wBAkBvC66E,GAAM3/D,aAAe,CACjBjb,YAAa08E,IACb1/D,WAAW,EACXi+D,UAAU,EACVC,qBAAqB,EACrByB,UAAU,GAGC/B,U,OClWf,MAAMgC,WAAsBl+E,IAAMC,UAAW,eAAD,oBACxCC,MAAQ,GADgC,KA+DxCi2E,iCAAmC5zE,IAAW,MAAD,EACVpE,KAAKwC,MAA5B0P,EADiC,EACjCA,OAAQ4E,EADyB,EACzBA,WADyB,EAEP9W,KAAK+B,MAA/BoQ,EAFiC,EAEjCA,SAAU8lE,EAFuB,EAEvBA,YAEd9lE,IAEAD,IAAW9N,EAAO8N,QAAU4E,EAAWyW,KAAK5sB,GAAKA,IAAMyD,EAAO+hB,WAC1D8xD,EACAj4E,KAAKyC,SAAS,CAAEw1E,aAAa,EAAO+F,iBAAiB,GAAS,KAC1DhzE,WAAW,KACPhL,KAAKyC,SAAS,CAAEw1E,aAAa,EAAM+F,gBAAiBlnE,EAAWpC,OAAS,GAAKoC,EAAWA,EAAWpC,OAAS,KAAOtQ,EAAO+hB,aAC3H,KAGPnmB,KAAKyC,SAAS,CAAEw1E,aAAa,EAAM+F,gBAAiBlnE,EAAWpC,OAAS,GAAKoC,EAAWA,EAAWpC,OAAS,KAAOtQ,EAAO+hB,YAEvH8xD,GACPj4E,KAAKyC,SAAS,CAAEw1E,aAAa,EAAO+F,iBAAiB,MAhFrB,KAoFxC/T,8BAAgC7lE,IAAW,MAAD,EACPpE,KAAKwC,MAA5B0P,EAD8B,EAC9BA,OAAQ4E,EADsB,EACtBA,WACK1S,EAAb+N,SAEJD,IAAW9N,EAAO8N,QAAU4E,EAAWyW,KAAK5sB,GAAKA,IAAMyD,EAAO+hB,YAC9DnmB,KAAKyC,SAAS,CACV0P,SAAU2E,EAAWpW,MAAMC,GAAK2X,IAAa29D,mBAAmB/jE,EAAQvR,IACxEq/E,aAAclpE,EAAWpC,OAAS,GAAK4D,IAAa29D,mBAAmB/jE,EAAQ4E,EAAWA,EAAWpC,OAAS,OA3FlF,KAgGxCwjE,6BAA+B9zE,IAC3BpE,KAAKyC,SAAS,CAAE0P,UAAU,EAAO6tE,cAAc,KAjGX,KAoGxC39D,uBAAyBje,IAAW,MACxB6S,EAAwB7S,EAAxB6S,QAASC,EAAe9S,EAAf8S,WADc,EAEalX,KAAKwC,MAAzC0P,EAFuB,EAEvBA,OAAQ4E,EAFe,EAEfA,WACMmnE,GAHS,EAEH96E,YACcnD,KAAK+B,MAAvCm8E,cAER,GAAIhsE,IAAW+E,EAAS,OACxB,IAAKH,EAAWyW,KAAK5sB,GAAKA,IAAMuW,GAAa,OAExB,OACA+mE,EACjBj+E,KAAKyC,SAAS,CAAEy7E,aAFC,OAIjBl+E,KAAKya,eAhH2B,KAoHxC29D,gBAAkB,KAGd,MAAMp0C,EAAYl3B,OAAOm3B,eAAe4qB,WACxC,IAAKkmB,aAAiB/wC,GAClB,OALgB,QAQWhkC,KAAKwC,MAA5B0P,EARY,EAQZA,OAAQ4E,EARI,EAQJA,WAGhB,GAFqB9W,KAAK+B,MAAlBoQ,SAGJ,IAAK,IAAI6C,EAAI,EAAGA,EAAI8B,EAAWpC,OAAQM,IACnCggE,YAAc9iE,EAAQ4E,EAAW9B,IAAI,QAGzC,IAAK,IAAIA,EAAI,EAAGA,EAAI8B,EAAWpC,OAAQM,IACnCggE,YAAc9iE,EAAQ4E,EAAW9B,IAAI,IAlIjD4I,sBAAsBC,EAAWC,EAAWoK,GAAc,MAC9CpR,EAAe9W,KAAKwC,MAApBsU,WAD6C,EAE0B9W,KAAK+B,MAA5Em8E,EAF6C,EAE7CA,aAAc8B,EAF+B,EAE/BA,aAAc7tE,EAFiB,EAEjBA,SAAU6rE,EAFO,EAEPA,gBAAiB/F,EAFV,EAEUA,YAE/D,OAAKlB,YAAmBl5D,EAAU/G,WAAYA,KAI1CgH,EAAUogE,eAAiBA,IAI3BpgE,EAAU3L,WAAaA,IAIvB2L,EAAUkiE,eAAiBA,IAI3BliE,EAAUm6D,cAAgBA,GAI1Bn6D,EAAUkgE,kBAAoBA,MAOtC,gCAAgCx7E,EAAOT,GACSS,EAApCW,YAAoCX,EAAvB0P,OADsB,MACd4E,EAAetU,EAAfsU,WAE7B,OAAIA,IAAe/U,EAAM+0E,eAEd,CACHA,eAAgBhgE,GAIjB,KAGX9T,oBACIsV,IAAatL,GAAG,iCAAkChN,KAAKg4E,kCACvD1/D,IAAatL,GAAG,8BAA+BhN,KAAKiqE,+BAEpD3xD,IAAatL,GAAG,6BAA8BhN,KAAKk4E,8BACnD5/D,IAAatL,GAAG,uBAAwBhN,KAAKqiB,wBAGjDpV,uBACIqL,IAAalL,IAAI,iCAAkCpN,KAAKg4E,kCACxD1/D,IAAalL,IAAI,8BAA+BpN,KAAKiqE,+BAErD3xD,IAAalL,IAAI,6BAA8BpN,KAAKk4E,8BACpD5/D,IAAalL,IAAI,uBAAwBpN,KAAKqiB,wBA8ElDpf,SAAU,IAAD,EACsBjD,KAAKwC,MAA1B47E,EADD,EACCA,SAAU/6E,EADX,EACWA,OADX,QAE6FrD,KAAKwC,MAA/F0P,EAFH,EAEGA,OAAQ4E,EAFX,EAEWA,WAAY3T,EAFvB,EAEuBA,YAAak7E,EAFpC,EAEoCA,oBAAqBl+D,EAFzD,EAEyDA,UAAWikC,EAFpE,EAEoEA,SAFpE,KAE8E/xC,EAY/ErS,KAAK+B,OATLoQ,GALC,EAID+rE,aAJC,EAKD/rE,UACA6tE,EANC,EAMDA,aAEAhC,GARC,EAOD/F,YAPC,EAQD+F,iBACAzgC,EATC,EASDA,MATC,EAUDi3B,SAVC,EAWD5sD,YAXC,EAYDrgB,KAZC,EAaDE,IAGJ,IAAKqP,EAAWpC,OACZ,OAAO,KAGX,IAAIyR,EAAYrP,EAAWA,EAAWpC,OAAS,GAC/C,MAAMgD,EAAUY,IAAazM,IAAIqG,EAAQiU,GACzC,IAAKzO,EAAS,OAAO,gDAtBhB,MAwBGc,EAA0Ed,EAA1Ec,QAASgnB,EAAiE9nB,EAAjE8nB,YAAaxW,EAAoDtR,EAApDsR,KAAMzP,EAA8C7B,EAA9C6B,oBAAqB+kE,EAAyB5mE,EAAzB4mE,aAAc3xD,EAAWjV,EAAXiV,OAEjEqqD,EAAax3C,IAAgB/e,YAAcvO,GAE3CylE,EACF,kBAAC,GAAD,CACIz0E,UAAU,cACVqB,IAAG,UAAK2N,EAAL,YAAeiU,EAAf,SACHjU,OAAQA,EACR4E,WAAYA,IAGd0T,EAAUotD,aAAWlgE,GAC3B,IAAIrK,EAAO,KACX,IAAK,IAAI2H,EAAI,EAAGA,EAAI8B,EAAWpC,OAAQM,IAAK,CACxC,MAAMupE,EAAIjmE,IAAazM,IAAIqG,EAAQ4E,EAAW9B,IACxC3C,EAAIk8C,aAAQgwB,EAAK/zD,EAAU,KAAOmtD,EAAYtlE,GACpD,GAAIA,GAAKA,EAAEqC,OAAQ,CACf,GAAa,OAATrH,EAAe,CACfA,EAAO,KACP,MAEAA,EAAOgF,EACP8T,EAAYrP,EAAW9B,IAInC,MAAMwpE,EAAsB,OAATnxE,GAAiBA,EAAKqH,OAAS,EAC5C+pE,EACF,kBAAC,GAAD,CACIv7E,UAAWkN,IAAW,YAAa,CAC/B,eAAe,IAEnB8B,OAAQA,EACR4E,WAAYA,EACZmgE,YAAaj3E,KAAK0+E,kBAIpBC,EAAcC,aAAmB1sE,EAAQiU,GACzC04D,EAAY50D,QAAQ1Q,GACpBulE,EAAgBt+D,aAActO,MAAamO,aAASnO,KAAY8kE,GAChE+H,GAAaD,GAAiB3+D,GAAcw+D,GAAeE,EAE3DG,EAAYv+D,YAAcvO,GAC1B+sE,EAAYz+D,aAActO,GAMhC,IAAIq9B,EAAO,KACX,GAAI6uC,EACA,GAAI/9D,aAASnO,IAAWosE,EACpB,OAAQA,EAAa3F,OAAO,UACxB,IAAK,iCACDppC,EAAO,kBAACC,GAAA,EAAD,CAAUnJ,OAAK,EAAC4Q,UAAWqnC,EAAa3F,OAAOuG,YAAa9sE,SAAUpS,KAAKm/E,mBAClF,MAEJ,IAAK,2BACD5vC,EAAO,kBAACC,GAAA,EAAD,CAAUnJ,OAAK,EAACjV,OAAQktD,EAAa3F,OAAOnpD,eAAgBpd,SAAUpS,KAAKm/E,mBAClF,MAEJ,IAAK,8BACD5vC,EAAO,kBAAC/8B,EAAA,EAAD,CAAU6zB,OAAK,EAACn0B,OAAQosE,EAAa3F,OAAO1hE,QAAS7E,SAAUpS,KAAKo/E,wBAKnF7vC,EADO0vC,EACA,kBAAC,GAAD,CAAW54C,OAAK,IAChB24C,EACA,kBAAC,GAAD,CAAW34C,OAAK,IAChB7G,EACA,kBAAC,GAAD,CAAW6G,OAAK,IAChB1Z,EAAO3W,QACP,kBAACw5B,GAAA,EAAD,CAAUnJ,OAAK,EAACjV,OAAQzE,EAAO3W,QAAS5D,SAAUpS,KAAKm/E,mBAEvD,kBAAC3sE,EAAA,EAAD,CAAU6zB,OAAK,EAACn0B,OAAQA,EAAQE,SAAUpS,KAAKo/E,mBAI9D,MACMC,EAAkC,mBAArB7mE,EAAQ,UAAsD,qBAArBA,EAAQ,SAC9D8mE,GAAed,IAAoC,qBAArBhmE,EAAQ,UAAwD,iBAArBA,EAAQ,UAAoD,iBAArBA,EAAQ,UAExH8U,EAAQxW,EAAWT,IAAI1V,GAAK2X,IAAazM,IAAIqG,EAAQvR,IAAI0V,IAAIkoE,GAC/D,kBAAC,GAAD,CACIh6E,IAAKg6E,EAAEr+E,GACPwX,QAAS6mE,EACTjrE,SAAU,KACVnQ,YAAaA,EACbE,OAAQA,KAGhB,OACI,6BACK+gD,GAAY,kBAAC,GAAD,CAASp7B,KAAMA,IAC5B,yBACI9lB,UAAWkN,IAAW,UAAW,gBAAiB,yBAA0B,CACxE,kBAAmB+P,GAAai+D,GAAYkB,EAC5C,iBAAkB/vC,EAClB,cAAeynC,EACf,mBAAoB7kE,EACpB,8BAA+B6tE,EAE/B,iCAAkChC,IAAoB7rE,EACtD,sBAAuBgO,IAAci+D,EACrC,iBAAkBj+D,IAAci+D,EAChC,sBAAuBj+D,GAAai+D,IAAakB,EACjD,8BAA+Bn/D,GAAai+D,GAAYkB,EACxD,yBAA0BD,IAE9BE,YAAav/E,KAAK6K,gBAClB20E,WAAYx/E,KAAKy/E,eACjBpvE,YAAarQ,KAAKmK,gBAClBoG,QAASvQ,KAAKo4E,gBACdsH,eAAgB1/E,KAAK2/E,mBACrBj3D,cAAe1oB,KAAK2nB,uBACnB02D,GAAuB,kBAAC,GAAD,MACxB,yBAAKn7E,UAAU,gBACX,yBAAKA,UAAU,mBACX,kBAAC,KAAD,CAAeA,UAAU,yBAE7B,yBAAKA,UAAWkN,IAAW,kBAAmB,CAAE,MAASmtC,KACpDhO,EACD,yBACIrsC,UAAWkN,IACP,kBAAmB,CACf,iBAAkBivE,EAClB,qBAAsBA,GAAcrI,IAE5C1vE,MAlDV,IAmDW+3E,IAAgBl/D,IAAc2+D,GAAkBH,IAC7C,yBAAKz7E,UAAU,iBACVid,IAAcw+D,GACX,kBAAC7xD,GAAA,EAAD,CAAeH,OAAQA,EAAQ+rD,YAAa4F,EAAcl4D,UAAQ,EAACgK,UAAQ,IAE9EuuD,GAAe,kBAAC,GAAD,CAASjG,YAAa4F,KAG7CO,GACG,kBAAC,GAAD,CACI3sE,OAAQA,EACRiU,UAAW5M,EACXhJ,QAASvQ,KAAK4/E,mBAGtB,yBAAK18E,UAAWkN,IACZ,QACA,iBACA,CAAE,iBAAiB,GACnB,CAAE,cAAe2uE,KAEjB,yBAAK77E,UAAU,iBACVoqB,IAWR+xD,GAAcZ,GAEnB,yBAAKv7E,UAAU,0BAEnB,yBAAKA,UAAU,wBAkBvC68E,GAAc3hE,aAAe,CACzBjb,YAAa08E,IACb1/D,WAAW,EACXi+D,UAAU,EACVC,qBAAqB,EACrByB,UAAU,GAGCC,U,OCvSAE,OA9Ef,cAA8Bp+E,IAAMC,UAChClC,YAAY4C,GACR0B,MAAM1B,GADS,KAgBnB09E,uBAAyB97E,IAAW,MACxB+7E,EAAehnE,KAAfgnE,WAERngF,KAAKyC,SAAS,CAAE09E,gBAnBD,KAsBnBC,gBAAkB/7E,IACdA,EAAM6B,iBACN7B,EAAM4B,mBAxBS,KA2BnBo6E,WAAah8E,IACTA,EAAM6B,iBACN7B,EAAM4B,kBACN7D,IAAgBkG,aAAa,CACzB,QAAS,uBACT8B,UAAU,IAGdpK,KAAKy8D,6BAA6Bp4D,EAAMi8E,aAAa16C,QAnCtC,KAsCnB26C,gBAAkBl8E,IACdA,EAAM6B,iBACN7B,EAAM4B,kBACN7D,IAAgBkG,aAAa,CACzB,QAAS,uBACT8B,UAAU,KA3CC,KA+CnBqyD,6BAA+B72B,IACN,IAAjBA,EAAMlxB,QAEVtS,IAAgBkG,aAAa,CACzB,QAAS,wBACTs9B,WApDW,MAGPu6C,EAAehnE,KAAfgnE,WAERngF,KAAK+B,MAAQ,CAAEo+E,cAGnBn9E,oBACImW,KAASnM,GAAG,uBAAwBhN,KAAKkgF,wBAG7CjzE,uBACIkM,KAAS/L,IAAI,uBAAwBpN,KAAKkgF,wBA2C9Cj9E,SAEI,OADuBjD,KAAK+B,MAApBo+E,WAIJ,yBACIj9E,UAAU,oBACVs9E,YAAaxgF,KAAKogF,gBAClBK,YAAazgF,KAAKugF,gBAClBG,OAAQ1gF,KAAKqgF,YACb,yBAAKn9E,UAAU,6BACX,yBAAKA,UAAU,0BACX,yBAAKA,UAAU,2BAAf,mBACA,yBAAKA,UAAU,8BAAf,mBAXQ,O,OC9DhC,MAAMy9E,GAAiB9+E,IAAM++E,cAAc,CACvC1uE,OAAQ,EACRiU,UAAW,IAGAw6D,UCLAn9E,oBACX,0BAAMC,EAAE,iFACR,iBCHWD,gBACX,0BAAMC,EAAE,mEACR,e,OCsSWo9E,OHhSR,SAAqB/+E,GACxB,MAAMg/E,UAAyBj/E,IAAMC,UACjCmB,SACI,OAAO,kBAAC09E,GAAeI,SAAhB,KAA0Bx2E,GAAS,kBAACzI,EAAD,eAAWoQ,OAAQ3H,EAAQA,EAAM2H,OAAS,EAAGiU,UAAW5b,EAAOA,EAAM4b,UAAW,GAAOnmB,KAAKwC,UAK9I,OAFAs+E,EAAiB/8E,YAAjB,sBAA8CC,YAAelC,GAA7D,KAEOg/E,EGwRID,CAvRf,cAA6Bh/E,IAAMC,UAAW,eAAD,iCACzCC,MAAQ,CACJ0sB,SAAS,GAF4B,KAKzCuyD,0BAA4B,CAACxiE,EAAMjc,EAAQmV,KAAa,MAC5CxF,EAAWlS,KAAKwC,MAAhB0P,OACAya,EAAqCjV,EAArCiV,OAAQnU,EAA6Bd,EAA7Bc,QAASyoE,EAAoBvpE,EAApBupE,gBACjB5zE,EAA0B9K,EAA1B8K,KAAM6zE,EAAoB3+E,EAApB2+E,WAAYj+D,EAAQ1gB,EAAR0gB,IAClBk+D,EAAS3oE,EAAT2oE,KAER,IAAIhjE,EAAQ,GAUZ,GATIzG,IAEIyG,EADA8iE,EACQr5B,aAAgBq5B,EAAiB,MAEjChlE,YAAa/J,GAAQ,IAGrCiM,EAAQA,GAASijE,KAAOC,UAAU,OAE9Bh0E,EACI6zE,EACAI,YAAU,CACNnjE,QACAzG,QAASrK,EACTk0E,GAAIH,KAAOC,UAAU,QAGzBG,YAAan0E,EAAMuK,GAAiBC,GAE5B,kBAACK,EAAA,EAAD,CACI3T,IAAI,QACJ4T,aAAW,QACXC,MAAM,UACNlV,UAAU,4BACVqN,QAAS,KAAQqH,EAAcC,KAC/B,kBAAC/G,EAAA,EAAD,aAKb,GAAImS,EACP,GAAsB,yCAAlBzE,EAAK,SAAqD,CAC1D,MAAM4S,EAAS6vD,GAAoCt0D,EAAO3W,QACpD6d,EAAO5d,IAAUpK,IAAIulB,GAE3BqwD,YAAkBN,EAAM,CAAEzpE,UAASuL,MAAKmO,SAAQnT,WAAY4V,GAAQA,EAAK6tD,mBAEzEC,YAAiB1+D,EAAK,CAAEiI,UAAU,EAAO02D,KAAK,EAAOC,cAAc,KAjDtC,KAsDzCt8E,YAtDyC,sCAsD3B,WAAMlB,GAAN,yDAAAqO,EAAA,qDACVrO,EAAM6B,iBACN7B,EAAM4B,kBAFI,EAI0B,EAAKzD,MAAjC0P,EAJE,EAIFA,OAAQiU,EAJN,EAIMA,UAAW3H,EAJjB,EAIiBA,KAJjB,KAMFA,EAAK,SANH,OAOD,gCAPC,OAeD,qCAfC,OAgBD,yCAhBC,OAmDD,iDAnDC,QA8FD,qCA9FC,QAqID,yCArIC,QA+JD,gCA/JC,+BAQF8iE,YAAU,CACNnjE,MAAOijE,KAAOC,UAAU,WACxB3pE,QAAS0pE,KAAOC,UAAU,wBAC1BE,GAAIH,KAAOC,UAAU,QAXvB,+BAmBMh5D,EAAS7J,EAAT6J,KAEF3Q,EAAUY,IAAazM,IAAIqG,EAAQiU,GArBvC,wDAwBMwG,EAAqCjV,EAArCiV,OAAQnU,EAA6Bd,EAA7Bc,QAASyoE,EAAoBvpE,EAApBupE,gBACpBzoE,EAzBH,wDA2BEspE,EAAU,KACVX,EAAO,KACW,yCAAlB3iE,EAAK,SA7BP,oBA8BE2iE,EAAO3oE,EAAQ2oE,KA9BjB,qDAiCEW,EAAU,CAAE,QAAS,2BAA4BC,gBAAiBZ,EAAKa,YAjCzE,wBAmCEF,EAAU,CAAE,QAAS,2BAA4Bz5D,QAnCnD,eAsCF,EAAK5lB,SAAS,CAAEgsB,SAAS,IAtCvB,UAuCmBrsB,IAAgBC,KAAK,CACtC,QAAS,yBACT4U,QAAS/E,EACTgF,WAAYiP,EACZ27D,YACDpyD,QAAQ,KACP,EAAKjtB,SAAS,CAAEgsB,SAAS,MA7C3B,eAuCIlsB,EAvCJ,OAgDF,EAAKy+E,0BAA0BxiE,EAAMjc,EAAQmV,GAhD3C,gCAqDM2Q,EAAS7J,EAAT6J,KAEF3Q,EAAUY,IAAazM,IAAIqG,EAAQiU,GAvDvC,4DA0DF,EAAK1jB,SAAS,CAAEgsB,SAAS,IA1DvB,UA2D0BrsB,IAAgBC,KAAK,CAC7C,QAAS,qBACVqtB,QAAQ,KACP,EAAKjtB,SAAS,CAAEgsB,SAAS,MA9D3B,WA2DIwzD,EA3DJ,OAiEuBA,EAAjBC,aAjEN,4DAoEFC,YAAuBF,EAAD,sCAAgB,WAAOG,EAAUC,EAAeC,GAAhC,iBAAA5vE,EAAA,4DAClCI,QAAQ86B,IAAI,mBAAoBw0C,GAChC,EAAK3/E,SAAS,CAAEgsB,SAAS,IACrB1b,EAAQ,KAHsB,SAIb3Q,IAAgBC,KAAK,CACtC,QAAS,yBACT4U,QAAS/E,EACTgF,WAAYiP,EACZ27D,QAAS,CAAE,QAAS,uCAAwCz5D,OAAM+5D,cACnE9rE,MAAMzF,IACLkC,EAAQlC,IACT6e,QAAQ,KACP,EAAKjtB,SAAS,CAAEgsB,SAAS,MAZK,OAI5BlsB,EAJ4B,OAe9BwQ,GACAD,QAAQ86B,IAAI,yBAA0B76B,GACtCuvE,GAAWA,EAAQvvE,IACZxQ,IACPuQ,QAAQ86B,IAAI,0BAA2BrrC,GACvC8/E,GAAiBA,IACjB,EAAKrB,0BAA0BxiE,EAAMjc,EAAQmV,IArBf,yCAAhB,2DApEpB,oCA+FMuL,EAA0BzE,EAA1ByE,IAAK/iB,EAAqBse,EAArBte,GAAqBse,EAAjB+jE,aAEjB,EAAK9/E,SAAS,CAAEgsB,SAAS,IACrBkpB,GAAW,EAlGb,UAmGmBv1C,IAAgBC,KAAK,CACtC,QAAS,kBACT4U,QAAS/E,EACTgF,WAAYiP,EACZq8D,UAAWtiF,IACZoW,MAAMzF,IACL8mC,GAAW,IACZjoB,QAAQ,KACP,EAAKjtB,SAAS,CAAEgsB,SAAS,MA3G3B,WAmGIlsB,EAnGJ,QA8GEo1C,EA9GF,iBA+GEgqC,YAAiB1+D,EAAK,CAAEiI,UAAU,EAAO02D,KAAK,EAAMC,cAAc,IA/GpE,6BAiHUt/E,EAAO,SAjHjB,OAkHW,qBAlHX,QAwHW,oCAxHX,gCAmHkB0gB,EAAsB1gB,EAAtB0gB,IAAKw/D,EAAiBlgF,EAAjBkgF,aAEbd,YAAiB1+D,EAAK,CAAEiI,UAAU,EAAO02D,KAAMa,EAAcZ,cAAc,IArHrF,oCAyHkB5+D,EAAQ1gB,EAAR0gB,IAGRnQ,QAAQ86B,IAAI,iBAAkBrrC,GAC9BmgF,YAAoBz/D,EAAK,CAAE1gB,SAAQ2P,SAAQiU,YAAWw8D,SAAUziF,IA7H1E,oEAuIM0iF,EAA2BpkE,EAA3BokE,gBAAiBlnE,EAAU8C,EAAV9C,MAEnBhE,EAAUY,IAAazM,IAAIqG,EAAQiU,GAzIvC,wDA4IMwG,EAA4BjV,EAA5BiV,OAAQs0D,EAAoBvpE,EAApBupE,gBACZ7vD,EAASzE,EAAO3W,QACI,IAApBirE,IACA7vD,EAAS6vD,GAGPptD,EAAO5d,IAAUpK,IAAIulB,GAlJzB,4DAqJIyxD,EArJJ,WAqJiBhvD,EAAKjC,SArJtB,YAqJkClW,GAEhCknE,EACAE,YAAQD,GAERE,aAAe,CAAE7nB,aAAc2nB,IA1JjC,oCAiKM5/D,EAAQzE,EAARyE,IAER0+D,YAAiB1+D,EAAK,CAAEiI,UAAU,EAAO02D,KAAK,EAAMC,cAAc,IAnKhE,+DAtD2B,sDA+NzCxV,QAAQ7tD,GACJ,OAAQA,EAAK,UACT,IAAK,8BACD,OAAO,KAEX,IAAK,mCACL,IAAK,uCAGL,IAAK,+CACD,OAAO,KAEX,IAAK,mCACD,OAAO,kBAACwkE,GAAD,CAAmB9/E,UAAU,yBAExC,IAAK,uCAGD,OAF4Bsb,EAApBokE,iBAEmB,kBAACK,GAAD,CAAiB//E,UAAU,yBAE1D,IAAK,8BACD,OAAO,kBAAC8/E,GAAD,CAAmB9/E,UAAU,0BAKhDD,SAAU,MAAD,EACkBjD,KAAKwC,MAApB6K,EADH,EACGA,KAAMmR,EADT,EACSA,KACNiQ,EAAYzuB,KAAK+B,MAAjB0sB,QAEFxB,EAAOjtB,KAAKqsE,QAAQ7tD,GAE1B,OACI,kBAAC+C,GAAA,EAAD,CAAUre,UAAU,kBAAkBse,QAAM,EAACjR,QAASvQ,KAAKuF,aACtD8H,EACA4f,EACAwB,GACG,kBAAC2Q,GAAD,CACIl8B,UAAU,2BACVi8B,QAAQ,kB,OClQjB+jD,OAlBf,cAA0BrhF,IAAMC,UAC5BmB,SAAU,MACEkgF,EAAQnjF,KAAKwC,MAAb2gF,IACR,OAAKA,GACAA,EAAIzuE,OAGL,yBAAKxR,UAAU,gBACVigF,EAAI9sE,IAAI,CAAC1V,EAAGqU,IAAO,kBAAC,GAAD,CAAgBzQ,IAAKyQ,EAAG3H,KAAM1M,EAAE0M,KAAMmR,KAAM7d,EAAE6d,SALzD,O,OC8CV4kE,OAhDf,cAA0BvhF,IAAMC,UAAW,eAAD,oBACtCC,MAAQ,GAER,gCAAgCS,EAAOT,GAAQ,MACnC6d,EAA8B7d,EAA9B6d,WAAYqf,EAAkBl9B,EAAlBk9B,cACZ/sB,EAAsB1P,EAAtB0P,OAAQiU,EAAc3jB,EAAd2jB,UAGhB,OAAIvG,IAAe1N,GAAU+sB,IAAkB9Y,EACpC,CACHvG,WAAY1N,EACZ+sB,cAAe9Y,EACfzO,QAAS,CACLxF,SACAiU,cAKL,KAGXljB,SAAU,MACEogF,EAAWrjF,KAAKwC,MAAhB6gF,OACA3rE,EAAY1X,KAAK+B,MAAjB2V,QAER,IAAK2rE,EAAQ,OAAO,KACpB,GAAwB,8BAApBA,EAAO,SAA0C,OAAO,KALvD,MAOGC,EAASD,EAATC,KACR,OAAKA,EAAK5uE,OAGN,yBAAKxR,UAAU,gBACX,kBAAC,GAAeqgF,SAAhB,CAAyBh5E,MAAOmN,GAC3B4rE,EAAKjtE,IAAI,CAAC1V,EAAGqU,IAAO,kBAAC,GAAD,CAAazQ,IAAKyQ,EAAGmuE,IAAKxiF,OALlC,O,8CCVjC,MAAM6iF,WAAgB3hF,IAAMC,UAAW,eAAD,iCAClC0gB,SAAW,KAAO,MAAD,EACwFxiB,KAAKwC,MAAlG0P,EADK,EACLA,OAAQiU,EADH,EACGA,UAAWrM,EADd,EACcA,KAAmB2pE,GADjC,EACoBtgF,YADpB,EACiCsgF,kBAAkBC,EADnD,EACmDA,sBAAuBv7D,EAD1E,EAC0EA,UAEjFzQ,EAAUY,IAAazM,IAAIqG,EAAQiU,GACzC,IAAKzO,EAAS,OAAO,KAJR,MAMLc,EAAYd,EAAZc,QACR,IAAKA,EAAS,OAAO,KAPR,MASLkY,EAAalY,EAAbkY,SACR,IAAKA,EAAU,OAAO,KAVT,MAaTizD,EAaAjzD,EAbAizD,UACAxlE,EAYAuS,EAZAvS,MACAiN,EAWAsF,EAXAtF,YAEA3S,GASAiY,EAVAzN,IAUAyN,EATAjY,OACA4S,EAQAqF,EARArF,UACAxmB,EAOA6rB,EAPA7rB,MACAme,EAMA0N,EANA1N,MACAnc,EAKA6pB,EALA7pB,SACAwqB,EAIAX,EAJAW,WACA/F,EAGAoF,EAHApF,WACAnpB,EAEAuuB,EAFAvuB,QACAqc,EACAkS,EADAlS,KAGJ,GAAIrc,EACA,MAAO,CACH,KACA,kBAACyhF,GAAA,EAAD,CACI1xE,OAAQA,EACRiU,UAAWA,EACXhkB,QAASA,EACTgmB,UAAWA,EACX9kB,OAAQC,KAAkBugF,WAKtC,GAAIxyD,EACA,MAAO,CACH,KACA,kBAACyyD,GAAA,EAAD,CAAW5xE,OAAQA,EAAQiU,UAAWA,EAAWjD,UAAWmO,EAAYlJ,UAAWA,KAI3F,GAAImD,EACA,MAAO,CACH,KACA,kBAACy4D,GAAA,EAAD,CAAW7xE,OAAQA,EAAQiU,UAAWA,EAAWqF,UAAWF,EAAYnD,UAAWA,KAI3F,GAAInF,EACA,MAAO,CAAC,KAAM,kBAAC,KAAD,CAAO9Q,OAAQA,EAAQiU,UAAWA,EAAWnD,MAAOA,EAAOmF,UAAWA,KAGxF,GAAIthB,EACA,MAAO,CAAC,KAAM,kBAACkxE,GAAA,EAAD,CAAU7lE,OAAQA,EAAQiU,UAAWA,EAAWtf,SAAUA,EAAUshB,UAAWA,KAGjG,GAAIkD,EAAW,CAEX,GADqB9C,YAAO8C,EAAUA,YAClBA,EAAUrR,UAC1B,MAAO,CACH,KACA,kBAACgqE,GAAA,EAAD,CAAWC,SAAS,EAAM/xE,OAAQA,EAAQiU,UAAWA,EAAWkF,UAAWA,EAAWlD,UAAWA,KAK7G,GAAItjB,GACIA,EAAMmV,UACN,MAAO,CAAC,KAAM,kBAAC89D,GAAA,EAAD,CAAOmM,SAAS,EAAM/xE,OAAQA,EAAQiU,UAAWA,EAAWthB,MAAOA,EAAOsjB,UAAWA,KAI3G,GAAI1P,EAAO,CACP,MAAMgP,EAAYO,YAAQvP,EAAMC,MAAOoB,GACjCoqE,GACQ,YAAT1lE,GAA+B,UAATA,GAA6B,uBAATA,GAA0C,qBAATA,KAC3EmlE,GAAaxlE,GAASiN,GAAeA,EAAY/d,KAAKqH,OAAS,IAChE+S,IACCA,EAAUxW,QAAUwW,EAAU1N,QAAUhZ,KAAKoQ,IAAIsW,EAAUxW,MAAOwW,EAAU1N,QAAU8O,KAC3F,IAAIs7D,EAAc,EACdR,IACAQ,GAAeR,EAAUjvE,QAEzByJ,IACAgmE,GAAehmE,EAAMzJ,QAErB0W,IACA+4D,GAAe/4D,EAAY/d,KAAKqH,QAGpC,MAAM0vE,EAAkBF,GAAcC,EAAc,GAE9C78E,EACF48E,GAAcE,EACR,CACIC,MAAO,QACPC,WAAY,GAEhB,GAEV,MAAO,CACHJ,EACI,kBAACrM,GAAA,EAAD,CACI10E,YAAaihF,EAAkBV,EAAwBD,EACvDn8E,MAAOA,EACP4K,OAAQA,EACRiU,UAAWA,EACX1N,MAAOA,EACP0P,UAAWA,IAEf,KACH+7D,EAAkH,KAArG,kBAACrM,GAAA,EAAD,CAAOoM,SAAS,EAAM/xE,OAAQA,EAAQiU,UAAWA,EAAW1N,MAAOA,EAAO0P,UAAWA,KAI3G,MAAO,CAAC,KAAM,OA3HgB,KA8HlCo8D,uBA9HkC,sCA8HT,WAAMlgF,GAAN,yBAAAqO,EAAA,wDACrBrO,EAAM6B,iBACN7B,EAAM4B,kBAFe,EAIS,EAAKzD,MAA3B0P,EAJa,EAIbA,OAAQiU,EAJK,EAILA,UAEVzO,EAAUY,IAAazM,IAAIqG,EAAQiU,GANpB,yCAOA,MAPA,UASb3N,EAAYd,EAAZc,QATa,yCAUA,MAVA,UAYbkY,EAAalY,EAAbkY,SAZa,0CAaC,MAbD,QAiBrBo+C,GAFgBp+C,EAARzN,KAfa,0CA9HS,sDAkJlC20D,aAAc,MAAD,EACwB53E,KAAKwC,MAA9B0P,EADC,EACDA,OAAQiU,EADP,EACOA,UAAW9T,EADlB,EACkBA,EAErBqF,EAAUY,IAAazM,IAAIqG,EAAQiU,GACzC,IAAKzO,EAAS,OAAO,KAJZ,MAMDc,EAAYd,EAAZc,QACR,IAAKA,EAAS,OAAO,KAPZ,MASDkY,EAAalY,EAAbkY,SACR,IAAKA,EAAU,OAAO,KAVb,MAYD8zD,EAAoC9zD,EAApC8zD,qBAAsBb,EAAcjzD,EAAdizD,UAZrB,IAaHv4D,EAAuBsF,EAAvBtF,YAAajN,EAAUuS,EAAVvS,MAEnB,GAA6B,kBAAzBiN,EAAY,SACZA,EAAcqB,aAAiBrB,QAC5B,GAA2B,kBAAhBA,GAA4Bu4D,IAA0C,YAA5BA,EAAUvnE,eAA2D,cAA5BunE,EAAUvnE,eAAgC,SAIxGqoE,aAAwD,cAA5Bd,EAAUvnE,cAAgC,EAAI,EAAGgP,EAAa,IAAjGs5D,GAJ+G,EAInIr3E,KAJmI,EAIzHiM,UAClB8R,EAAcqB,aAAiB,CAAE,QAAS,gBAAiBpf,KAAM+d,EAAa9R,SAAUorE,IAG5F,MAAMC,EACF,oCACKhB,GAAa,yBAAKzgF,UAAU,sBAAsBygF,GAClDxlE,GAAS,yBAAKjb,UAAU,kBAAkBib,GAC1CiN,GAAe,yBAAKloB,UAAU,wBAAwBkoB,IA7BtD,EAgCqCprB,KAAKwiB,WAhC1C,mBAgCFoiE,EAhCE,KAgCeC,EAhCf,KAiCHC,EAAqBN,EAAuB,GAC9C,kBAACjnE,EAAA,EAAD,CACI2E,QAAQ,WACR9J,MAAM,UACN/G,QAAS,CACL0zE,gBAAiB,kBACjBjzE,SAAU,4BAEdsmB,WAAS,EACT7nB,QAASvQ,KAAKukF,uBACdrhF,UAAU,mBACV,kBAAC8hF,GAAA,EAAD,KACI,0BAAMvhF,EAAE,w1BAEX4O,EAAE,gBAIX,OACI,oCACKuyE,EACAD,EACAE,EACAC,GAKb7hF,SAAU,MACEw7E,EAASz+E,KAAKwC,MAAdi8E,KAER,OACI,oCACI,yBAAKv7E,UAAU,YACX,yBAAKA,UAAU,WACf,yBAAKA,UAAU,oBAAoBlD,KAAK43E,eAE3C6G,IAiBjB+E,GAAQplE,aAAe,CACnBtE,KAAM+O,IACN1lB,YAAa08E,IACb4D,iBAAkBwB,IAClBvB,sBAAuBwB,KAGZjzE,qBAAkBuxE,I,OChOjC,MAAM2B,WAAgBrjF,YAClBlC,YAAY4C,GAAQ,IAAD,EACf0B,MAAM1B,GADS,YAmGnB01E,6BAA+B9zE,IACtBpE,KAAK+B,MAAMoQ,UAEhBnS,KAAKyC,SAAS,CAAE0P,UAAU,KAtGX,KAyGnBizE,2BAA6BhhF,IAAW,MAAD,EACLpE,KAAKwC,MAA3B0P,EAD2B,EAC3BA,OAAQiU,EADmB,EACnBA,UACRo3B,EAAUv9C,KAAK+B,MAAfw7C,MAEJrrC,IAAW9N,EAAO8N,QAAUiU,IAAc/hB,EAAO+hB,YAC7Co3B,EACAv9C,KAAKyC,SAAS,CAAE86C,OAAO,GAAS,KAC5BvyC,WAAW,KACPhL,KAAKyC,SAAS,CAAE86C,OAAO,KACxB,KAGPv9C,KAAKyC,SAAS,CAAE86C,OAAO,MArHhB,KA0HnBy6B,iCAAmC5zE,IAAW,MAAD,EACXpE,KAAKwC,MAA3B0P,EADiC,EACjCA,OAAQiU,EADyB,EACzBA,UADyB,EAEPnmB,KAAK+B,MAA/BoQ,EAFiC,EAEjCA,SAAU8lE,EAFuB,EAEvBA,YAEd9lE,IAEAD,IAAW9N,EAAO8N,QAAUiU,IAAc/hB,EAAO+hB,UAC7C8xD,EACAj4E,KAAKyC,SAAS,CAAEw1E,aAAa,GAAS,KAClCjtE,WAAW,KACPhL,KAAKyC,SAAS,CAAEw1E,aAAa,KAC9B,KAGPj4E,KAAKyC,SAAS,CAAEw1E,aAAa,IAE1BA,GACPj4E,KAAKyC,SAAS,CAAEw1E,aAAa,MA3IlB,KA+InBhO,8BAAgC7lE,IAAW,MAAD,EACRpE,KAAKwC,MAA3B0P,EAD8B,EAC9BA,OAAQiU,EADsB,EACtBA,UACRhU,EAAa/N,EAAb+N,SAEJD,IAAW9N,EAAO8N,QAAUiU,IAAc/hB,EAAO+hB,WACjDnmB,KAAKyC,SAAS,CAAE0P,WAAU8lE,aAAa,KApJ5B,KAwJnB51D,uBAAyBje,IAAW,MACxB6S,EAAwB7S,EAAxB6S,QAASC,EAAe9S,EAAf8S,WADc,EAEDlX,KAAKwC,MAA3B0P,EAFuB,EAEvBA,OAAQiU,EAFe,EAEfA,UAEZjU,IAAW+E,GACXkP,IAAcjP,IAElBlX,KAAKqlF,qBAAuBjhF,EAC5B4G,WAAWhL,KAAKslF,wCAAyC,MAhK1C,KAmKnB9O,sBAAwBpyE,IAAW,MACvB6S,EAAwB7S,EAAxB6S,QAASC,EAAe9S,EAAf8S,WADa,EAEAlX,KAAKwC,MAA3B0P,EAFsB,EAEtBA,OAAQiU,EAFc,EAEdA,UAEZjU,IAAW+E,GACXkP,IAAcjP,IAElBlX,KAAKulF,oBAAsBnhF,EAC3B4G,WAAWhL,KAAKslF,wCAAyC,MA3K1C,KA8KnBA,wCAA0C,KAAO,MACrCD,EAA8CrlF,KAA9CqlF,qBAAsBE,EAAwBvlF,KAAxBulF,oBAI9B,GAHAvlF,KAAKqlF,qBAAuB,KAC5BrlF,KAAKulF,oBAAsB,MAEtBF,IAAyBE,EAAqB,OALP,QAOdvlF,KAAKwC,MAA3B0P,EAPoC,EAOpCA,OAAQiU,EAP4B,EAO5BA,UAEhB,IAAIrhB,GAAU,EACd,GAAIugF,EAAsB,CAAC,MACfnH,EAAiBl+E,KAAK+B,MAAtBm8E,aACFsH,EAAkBC,aAAgBvzE,EAAQiU,GAC5Cq/D,IAAoBtH,IACpBp5E,GAAU,EACV9E,KAAKyC,SAAS,CAAEy7E,aAAcsH,KAIlC1gF,IAEJ4gF,aAAoBxzE,EAAQiU,GAC5BnmB,KAAKya,YAAY,KACbkrE,aAAmBzzE,EAAQiU,OArMhB,KAyMnBg5D,iBAAmB/tD,IACfhB,YAASgB,GAAQ,IA1MF,KA6MnBguD,iBAAmBltE,IACfkU,YAASlU,EAAQ,MAAM,IA9MR,KAiNnBkmE,gBAAkB,KACd,IAAKp4E,KAAK4lF,UAAW,OAErB,MAAM5hD,EAAYl3B,OAAOm3B,eAAe4qB,WACxC,IAAKkmB,aAAiB/wC,GAClB,OALgB,QAQUhkC,KAAKwC,MAA3B0P,EARY,EAQZA,OAAQiU,EARI,EAQJA,UAEVhU,GAAYmG,IAAawwC,cAAc7zC,IAA3B,iBAAyC/C,EAAzC,sBAA6DiU,IAC/E6uD,YAAc9iE,EAAQiU,EAAWhU,IA5NlB,KA+NnBusE,gBAAkB7tE,IACdA,EAAE3K,iBACF2K,EAAE5K,kBAFiB,QAIWjG,KAAKwC,MAA3B0P,EAJW,EAIXA,OAAQiU,EAJG,EAIHA,UAEK3K,YAAgBtJ,GAEjCyiD,YAAaziD,EAAQiU,GAKFwvD,aAAsBzjE,EAAQiU,IAEjDG,YAAgBpU,EAAQ,CAACiU,KA9Od,KAkPnBgC,UAAY9jB,IACJA,IACAA,EAAM6B,iBACN7B,EAAM4B,mBAHO,QAMajG,KAAKwC,MAA3B0P,EANS,EAMTA,OAAQiU,EANC,EAMDA,UAEhBgC,aAAUjW,EAAQiU,IA1PH,KA6PnBw5D,mBAAqB,KACjB3/E,KAAKyC,SAAS,CAAEw1E,aAAa,KA9Pd,KAiQnB9tE,gBAAkB,KACdnK,KAAK4lF,WAAY,GAlQF,KAqQnB/6E,gBAAkB,KACd7K,KAAK4lF,WAAY,GAtQF,KAyQnBnG,eAAiB,KACbz/E,KAAK6lF,UAAW,GA1QD,KA6QnBjG,iBAAmB,KAAO,MAAD,EACS5/E,KAAKwC,MAA3B0P,EADa,EACbA,OAAQiU,EADK,EACLA,UAChB2/D,YAAU5zE,EAAQiU,IA/QH,KAkRnBwB,sBAlRmB,sCAkRK,WAAMtjB,GAAN,mBAAAqO,EAAA,wDAChBrO,IACAA,EAAM6B,iBACN7B,EAAM4B,oBAGc,EAAKlE,MAArB6lB,YANY,gBAShB,EAAKnlB,SAAS,CAAEmlB,aAAa,IATb,4BAWZtP,IAAawwC,cAAchvC,KAAO,GAXtB,iDAeVvS,EAAOlD,EAAM4F,QACbxC,EAAMpD,EAAM6F,QACZsqE,EACFnwE,EAAMuD,QAAmC,MAAzBvD,EAAMuD,OAAOuwE,SAAmB9zE,EAAMuD,OAAO0vD,KAAOjzD,EAAMuD,OAAO0vD,KAAO,KAE5F,EAAK70D,SAAS,CACVmlB,aAAa,EACb4sD,WACAjtE,OACAE,QAxBY,0CAlRL,2DA+SnBogB,uBAAyBxjB,IACjBA,GACAA,EAAM4B,kBAGVjG,KAAKyC,SAAS,CAAEmlB,aAAa,KApTd,QAGe5nB,KAAKwC,MAA3B0P,EAHO,EAGPA,OAAQiU,EAHD,EAGCA,UAChBnmB,KAAK+B,MAAQ,CACT2V,QAASY,IAAazM,IAAIqG,EAAQiU,GAClC+3D,aAAcuH,aAAgBvzE,EAAQiU,GACtChU,UAAU,EACV8lE,aAAa,EACb16B,OAAO,EAEP31B,aAAa,EACb4sD,SAAU,KACVjtE,KAAM,EACNE,IAAK,GAIbmW,sBAAsBC,EAAWC,GAAY,MAAD,EAC8C9d,KAAKwC,MAAnF0P,EADgC,EAChCA,OAAQiU,EADwB,EACxBA,UAAW0Y,EADa,EACbA,aAAcw/C,EADD,EACCA,oBAAqBD,EADtB,EACsBA,SAAUj+D,EADhC,EACgCA,UADhC,EAE4BngB,KAAK+B,MAAjE6lB,EAFgC,EAEhCA,YAAazV,EAFmB,EAEnBA,SAAU8lE,EAFS,EAETA,YAAa16B,EAFJ,EAEIA,MAAO2gC,EAFX,EAEWA,aAEnD,OAAIrgE,EAAU3L,SAAWA,IAKrB2L,EAAUsI,YAAcA,IAKxBtI,EAAUghB,eAAiBA,IAK3BhhB,EAAUwgE,sBAAwBA,IAKlCxgE,EAAUugE,WAAaA,IAKvBvgE,EAAUsC,YAAcA,IAKxBrC,EAAU8J,cAAgBA,IAK1B9J,EAAU3L,WAAaA,IAKvB2L,EAAUm6D,cAAgBA,IAK1Bn6D,EAAUy/B,QAAUA,GAKpBz/B,EAAUogE,eAAiBA,WASnCl7E,oBACIsV,IAAatL,GAAG,iCAAkChN,KAAKg4E,kCACvD1/D,IAAatL,GAAG,8BAA+BhN,KAAKiqE,+BACpD3xD,IAAatL,GAAG,2BAA4BhN,KAAKolF,4BACjD9sE,IAAatL,GAAG,6BAA8BhN,KAAKk4E,8BACnD5/D,IAAatL,GAAG,uBAAwBhN,KAAKqiB,wBAC7C/J,IAAatL,GAAG,sBAAuBhN,KAAKw2E,uBAGhDvpE,uBACIqL,IAAalL,IAAI,iCAAkCpN,KAAKg4E,kCACxD1/D,IAAalL,IAAI,8BAA+BpN,KAAKiqE,+BACrD3xD,IAAalL,IAAI,2BAA4BpN,KAAKolF,4BAClD9sE,IAAalL,IAAI,6BAA8BpN,KAAKk4E,8BACpD5/D,IAAalL,IAAI,uBAAwBpN,KAAKqiB,wBAC9C/J,IAAalL,IAAI,sBAAuBpN,KAAKw2E,uBAuNjDvzE,SAAU,IACAm7E,EAAap+E,KAAKwC,MAAlB47E,SADD,QAE8Ep+E,KAAKwC,MAAhF6P,EAFH,EAEGA,EAAGH,EAFN,EAEMA,OAAQiU,EAFd,EAEcA,UAAWk4D,EAFzB,EAEyBA,oBAAqBl+D,EAF9C,EAE8CA,UAAWikC,EAFzD,EAEyDA,SAAU/gD,EAFnE,EAEmEA,OAFnE,EAYDrD,KAAK+B,MARLm8E,EAJC,EAIDA,aACA/rE,EALC,EAKDA,SACA8lE,EANC,EAMDA,YACA16B,EAPC,EAODA,MACAi3B,EARC,EAQDA,SACA5sD,EATC,EASDA,YACArgB,EAVC,EAUDA,KACAE,EAXC,EAWDA,IAKEiQ,EAAUY,IAAazM,IAAIqG,EAAQiU,GACzC,IAAKzO,EAAS,OAAO,gDAjBhB,MAmBGc,EAAwFd,EAAxFc,QAASgnB,EAA+E9nB,EAA/E8nB,YAAaxW,EAAkEtR,EAAlEsR,KAAMzP,EAA4D7B,EAA5D6B,oBAAqB+kE,EAAuC5mE,EAAvC4mE,aAAc3xD,EAAyBjV,EAAzBiV,OAAQjT,EAAiBhC,EAAjBgC,aAEzEs9D,EAAax3C,IAAgB/e,YAAcvO,GAC3CylE,EACF,kBAAC,GAAD,CACIz0E,UAAU,cACVqB,IAAG,UAAK2N,EAAL,YAAeiU,EAAf,SACHjU,OAAQA,EACRiU,UAAWA,IAGbs4D,EACF,kBAAC,GAAD,CACIv7E,UAAWkN,IAAW,YAAa,CAC/B,cAAe21E,aAAa7zE,EAAQiU,KAExCjU,OAAQA,EACRiU,UAAWA,EACX8wD,YAAaj3E,KAAK0+E,kBAIpBl0D,EAAUotD,aAAWlgE,GACrBrK,EAAOkhD,aAAQ72C,EAAW8S,EAAU,KAAOmtD,EAAYtlE,EAAG,CAAEH,SAAQiU,cACpEq4D,EAAsB,OAATnxE,GAAiBA,EAAKqH,OAAS,EAC5CiqE,EAAcC,aAAmB1sE,EAAQiU,GACzC04D,EAAY50D,QAAQ1Q,GACpBulE,EAAgBt+D,aAActO,MAAamO,aAASnO,KAAY8kE,IAAgBvjD,aAAYvhB,IAAW8kE,EACvG+H,GAAaD,GAAiB3+D,GAAcw+D,GAAeE,EAC3Dt8D,EAAQC,aAAS9K,EAAS1X,KAAKmoB,UAAW,CAAE42D,WAAUP,aAAY7G,aAAY8G,SAC9EO,EAAYv+D,YAAcvO,GAC1B+sE,EAAYz+D,aAActO,GAMhC,IAAIq9B,EAAO,KACX,GAAI6uC,EACA,GAAI/9D,aAASnO,IAAWosE,EACpB,OAAQA,EAAa3F,OAAO,UACxB,IAAK,iCACDppC,EAAO,kBAACC,GAAA,EAAD,CAAUnJ,OAAK,EAAC4Q,UAAWqnC,EAAa3F,OAAOuG,YAAa9sE,SAAUpS,KAAKm/E,mBAClF,MAEJ,IAAK,2BACD5vC,EAAO,kBAACC,GAAA,EAAD,CAAUnJ,OAAK,EAACjV,OAAQktD,EAAa3F,OAAOnpD,eAAgBpd,SAAUpS,KAAKm/E,mBAClF,MAEJ,IAAK,8BACD5vC,EAAO,kBAAC/8B,EAAA,EAAD,CAAU6zB,OAAK,EAACn0B,OAAQosE,EAAa3F,OAAO1hE,QAAS7E,SAAUpS,KAAKo/E,wBAKnF7vC,EADO0vC,EACA,kBAAC,GAAD,CAAW54C,OAAK,IAChB24C,EACA,kBAAC,GAAD,CAAW34C,OAAK,IAChB7G,EACA,kBAAC,GAAD,CAAW6G,OAAK,IAChB1Z,EAAO3W,QACP,kBAACw5B,GAAA,EAAD,CAAUnJ,OAAK,EAACjV,OAAQzE,EAAO3W,QAAS5D,SAAUpS,KAAKm/E,mBAEvD,kBAAC3sE,EAAA,EAAD,CAAU6zB,OAAK,EAACn0B,OAAQA,EAAQE,SAAUpS,KAAKo/E,mBAI9D,MAAM93E,EAAQ0+E,aAAgB9zE,EAAQiU,GAChCk5D,EAAkC,mBAArB7mE,EAAQ,UAAsD,qBAArBA,EAAQ,SAC9D8mE,GACDd,IACwB,qBAArBhmE,EAAQ,UACa,iBAArBA,EAAQ,UACa,iBAArBA,EAAQ,UACa,mBAArBA,EAAQ,UAAiCA,EAAQC,QAAUiB,GAA0C,8BAA1BA,EAAa,SAiBhG,OACI,6BACK0qC,GAAY,kBAAC,GAAD,CAASp7B,KAAMA,IAC5B,yBACI9lB,UAAWkN,IAAW,UAAW,CAC7B,kBAAmB+P,GAAai+D,GAAYkB,EAC5C,iBAAkB/vC,EAClB,cAAeynC,EACf,mBAAoB7kE,EACpB,sBAAuB8lE,IAAgB9lE,EACvC,sBAAuBgO,IAAci+D,EACrC,iBAAkBj+D,IAAci+D,EAChC,sBAAuBj+D,GAAai+D,IAAakB,EACjD,8BAA+Bn/D,GAAai+D,GAAYkB,EACxD,yBAA0BD,IAE9BE,YAAav/E,KAAK6K,gBAClB20E,WAAYx/E,KAAKy/E,eACjBpvE,YAAarQ,KAAKmK,gBAClBoG,QAASvQ,KAAKo4E,gBACdsH,eAAgB1/E,KAAK2/E,mBACrBj3D,cAAe1oB,KAAK2nB,uBACnB02D,GAAuB,kBAAC,GAAD,MACxB,yBAAKn7E,UAAU,gBACX,yBAAKA,UAAU,mBACX,kBAAC,KAAD,CAAeA,UAAU,yBAE7B,yBAAKA,UAAWkN,IAAW,kBAAmB,CAAE,MAASmtC,KACpDhO,EACD,6BACI,yBACIrsC,UAAWkN,IAAW,kBAAmB,CACrC,iBAAkBivE,EAClB,qBAAsBA,GAAcrI,IAExC1vE,MAAOA,GACN+3E,IAAgBl/D,IAAc2+D,GAAkBH,IAC7C,yBAAKz7E,UAAU,iBACVid,IAAcw+D,GACX,kBAAC7xD,GAAA,EAAD,CAAeH,OAAQA,EAAQ+rD,YAAa4F,EAAcl4D,UAAQ,EAACgK,UAAQ,IAE9EuuD,GAAe,kBAAC,GAAD,CAASjG,YAAa4F,KAG7CO,GACG,kBAAC,GAAD,CACI3sE,OAAQA,EACRiU,UAAW5M,EACXhJ,QAASvQ,KAAK4/E,mBAGrBr9D,EACD,yBACIrf,UAAWkN,IAAW,eAAgB,CAClC,sBAAwC,IAAjB8tE,EACvB,sBAAwC,IAAjBA,EACvB,sBAAwC,IAAjBA,KAE1B7wE,GAEJmd,GACG,kBAAC,GAAD,CACItY,OAAQA,EACRiU,UAAWA,EACXgC,UAAWnoB,KAAKmoB,UAChBs2D,KAAM9G,IAGb0H,GAAcZ,GAElB/kE,GACG,kBAAC,GAAD,CACIxH,OAAQA,EACRiU,UAAWA,EACXk9D,OAAQ3pE,KAIpB,yBAAKxW,UAAU,0BAEnB,yBAAKA,UAAU,sBAGvB,kBAAC,GAAD,CACIgP,OAAQA,EACRiU,UAAWA,EACXM,eAAgB,CAAEhf,MAAKF,QACvBmV,KAAMkL,EACN9K,QAAS9c,KAAK6nB,uBACd2sD,SAAUA,EACVnxE,OAAQA,MAiB5B8hF,GAAQ/mE,aAAe,CACnBygB,aAAc,KACd1e,WAAW,EACXi+D,UAAU,EACVC,qBAAqB,EACrBj6B,UAAU,GAWC1sC,OAFCzF,YAAgB,CAAC,cAAe,SAAU,CAAEg0E,SAAS,GAArDh0E,CAA6DkzE,I,OC3jB7E,MAAMe,GAAiB,CACnBj1E,MAAO,GACP8I,OAAQ,GACRosE,aAAc,MACdnwC,OAAQ,cAGZ,MAAMowC,WAAuBvkF,IAAMC,UAC/BlC,YAAY4C,GAAQ,IAAD,EACf0B,MAAM1B,GADS,YAsDnBw1E,iCAAmC5zE,IAAW,MAAD,EACXpE,KAAKwC,MAA3B0P,EADiC,EACjCA,OAAQiU,EADyB,EACzBA,UADyB,EAEPnmB,KAAK+B,MAA/BoQ,EAFiC,EAEjCA,SAAU8lE,EAFuB,EAEvBA,YAEd9lE,IAEAD,IAAW9N,EAAO8N,QAAUiU,IAAc/hB,EAAO+hB,UAC7C8xD,EACAj4E,KAAKyC,SAAS,CAAEw1E,aAAa,GAAS,KAClCjtE,WAAW,KACPhL,KAAKyC,SAAS,CAAEw1E,aAAa,KAC9B,KAGPj4E,KAAKyC,SAAS,CAAEw1E,aAAa,IAE1BA,GACPj4E,KAAKyC,SAAS,CAAEw1E,aAAa,MAvElB,KA2EnB0H,mBAAqB,KACjB3/E,KAAKyC,SAAS,CAAEw1E,aAAa,KA5Ed,KA+EnB9vD,UAAY9jB,IACJA,IACAA,EAAM6B,iBACN7B,EAAM4B,mBAHO,QAMajG,KAAKwC,MAA3B0P,EANS,EAMTA,OAAQiU,EANC,EAMDA,UAEhBgC,aAAUjW,EAAQiU,IAvFH,KA0FnBwB,sBA1FmB,sCA0FK,WAAMtjB,GAAN,mBAAAqO,EAAA,wDAChBrO,IACAA,EAAM6B,iBACN7B,EAAM4B,oBAGc,EAAKlE,MAArB6lB,YANY,gBAShB,EAAKnlB,SAAS,CAAEmlB,aAAa,IATb,4BAWZtP,IAAawwC,cAAchvC,KAAO,GAXtB,iDAeVvS,EAAOlD,EAAM4F,QACbxC,EAAMpD,EAAM6F,QACZsqE,EACFnwE,EAAMuD,QAAmC,MAAzBvD,EAAMuD,OAAOuwE,SAAmB9zE,EAAMuD,OAAO0vD,KAAOjzD,EAAMuD,OAAO0vD,KAAO,KAE5F,EAAK70D,SAAS,CACVmlB,aAAa,EACb4sD,WACAjtE,OACAE,QAxBY,0CA1FL,2DAuHnBogB,uBAAyBxjB,IACjBA,GACAA,EAAM4B,kBAGVjG,KAAKyC,SAAS,CAAEmlB,aAAa,KA5Hd,QAGe5nB,KAAKwC,MAA3B0P,EAHO,EAGPA,OAAQiU,EAHD,EAGCA,UAChBnmB,KAAK+B,MAAQ,CACT2V,QAASY,IAAazM,IAAIqG,EAAQiU,GAClC8xD,aAAa,EACbrwD,aAAa,GAIrBhK,sBAAsBC,EAAWC,GAAY,MAAD,EAC4B9d,KAAKwC,MAAjE0P,EADgC,EAChCA,OAAQiU,EADwB,EACxBA,UAAW0Y,EADa,EACbA,aAAcw/C,EADD,EACCA,oBAAqBhsE,EADtB,EACsBA,EADtB,EAEHrS,KAAK+B,MAAlCk2E,EAFgC,EAEhCA,YAAarwD,EAFmB,EAEnBA,YAErB,OAAI/J,EAAUxL,IAAMA,IAIhBwL,EAAU3L,SAAWA,IAIrB2L,EAAUsI,YAAcA,IAIxBtI,EAAUghB,eAAiBA,IAI3BhhB,EAAUwgE,sBAAwBA,IAIlCvgE,EAAUm6D,cAAgBA,GAI1Bn6D,EAAU8J,cAAgBA,OAOlC5kB,oBACIsV,IAAatL,GAAG,iCAAkChN,KAAKg4E,kCAG3D/qE,uBACIqL,IAAalL,IAAI,iCAAkCpN,KAAKg4E,kCA4E5D/0E,SAAU,MAAD,EACwDjD,KAAKwC,MAA1D0P,EADH,EACGA,OAAQiU,EADX,EACWA,UAAWk4D,EADtB,EACsBA,oBAAqBj6B,EAD3C,EAC2CA,SAD3C,EAE2CpkD,KAAK+B,MAA7Ck2E,EAFH,EAEGA,YAAarwD,EAFhB,EAEgBA,YAAargB,EAF7B,EAE6BA,KAAME,EAFnC,EAEmCA,IAElCiQ,EAAUY,IAAazM,IAAIqG,EAAQiU,GACzC,IAAKzO,EAAS,OAAO,KALhB,MAOGc,EAAkBd,EAAlBc,QAASwQ,EAAStR,EAATsR,KACjB,IAAKxQ,EAAS,OAAO,KACrB,GAAyB,yBAArBA,EAAQ,SAAqC,OAAO,KATnD,MAWGC,EAAUD,EAAVC,MAEFpL,EAAOg5E,aAAyB3uE,GAAS,GAE/C,OACI,6BACK0sC,GAAY,kBAAC,GAAD,CAASp7B,KAAMA,IAC5B,yBACI9lB,UAAWkN,IAAW,kBAAmB,CAAE,sBAAuB6nE,IAClEyH,eAAgB1/E,KAAK2/E,mBACrBj3D,cAAe1oB,KAAK2nB,uBACnB02D,GAAuB,kBAAC,GAAD,MACxB,yBAAKn7E,UAAU,2BACX,yBAAKA,UAAU,2BACX,6BAAMmK,KAGboL,GACG,kBAACo/D,GAAA,EAAD,CACI3lE,OAAQA,EACRiU,UAAWA,EACX1N,MAAOA,EACPtV,YAAa,GACbmE,MAAO4+E,GACP/9D,UAAWnoB,KAAKmoB,aAI5B,kBAAC,GAAD,CACIjW,OAAQA,EACRiU,UAAWA,EACXM,eAAgB,CAAEhf,MAAKF,QACvBmV,KAAMkL,EACN9K,QAAS9c,KAAK6nB,uBACd2sD,SAAU,KACVnxE,OAAQ,WAa5B+iF,GAAehoE,aAAe,CAC1B+B,WAAW,EACXi+D,UAAU,EACVC,qBAAqB,GASVjpE,OANCC,YACZic,cACArf,cACAsf,cAGWnc,CAAQgxE,I,OCvIRn0E,qBA/Ef,cAA0BpQ,IAAMC,UAC5BlC,YAAY4C,GACR0B,MAAM1B,GADS,KA2CnBmoC,0BAA4BvmC,IAAW,MAC3BkiF,EAAgBntE,KAAhBmtE,YAERtmF,KAAKyC,SAAS,CAAE6jF,iBA9CD,KAiDnBxtD,qBAAuB10B,IAAW,MACV8N,EAAW9N,EAAvB20B,WAER/4B,KAAKyC,SAAS,CAAEyP,YApDD,KAuDnBq0E,2BAA6BniF,IAAW,MAC5BoiF,EAAiBrtE,KAAjBqtE,aAERxmF,KAAKyC,SAAS,CAAE+jF,kBA1DD,MAGPt0E,EAAsCiH,KAAtCjH,OAAQs0E,EAA8BrtE,KAA9BqtE,aAAcF,EAAgBntE,KAAhBmtE,YAC9BtmF,KAAK+B,MAAQ,CACTmQ,SACAs0E,eACAF,eAIR1oE,sBAAsBC,EAAWC,EAAWoK,GACxC,OAAIpK,EAAU5L,SAAWlS,KAAK+B,MAAMmQ,SAIhC4L,EAAU0oE,eAAiBxmF,KAAK+B,MAAMykF,eAItC1oE,EAAUwoE,cAAgBtmF,KAAK+B,MAAMukF,aAIrCzoE,EAAUxL,IAAMrS,KAAKwC,MAAM6P,IAOnCrP,oBACImW,KAASnM,GAAG,qBAAsBhN,KAAK84B,sBACvC3f,KAASnM,GAAG,2BAA4BhN,KAAKumF,4BAC7CptE,KAASnM,GAAG,0BAA2BhN,KAAK2qC,2BAGhD19B,uBACIkM,KAAS/L,IAAI,qBAAsBpN,KAAK84B,sBACxC3f,KAAS/L,IAAI,2BAA4BpN,KAAKumF,4BAC9CptE,KAAS/L,IAAI,0BAA2BpN,KAAK2qC,2BAqBjD1nC,SAAU,MAAD,EACgBjD,KAAKwC,MAAlB6P,EADH,EACGA,EADH,KACM8D,MACmCnW,KAAK+B,OAA3CmQ,EAFH,EAEGA,OAFH,EAEWs0E,aAFX,EAEyBF,YAC9B,OAAIp0E,EAAe,KAIf,yBAAKhP,UAAU,eACX,yBAAKA,UAAU,uBAEX,yBAAKA,UAAU,oBAAoBmP,EAAE,oC,4BCtD1Co0E,OAlBf,cAA+B5kF,IAAMC,UACjCmB,SAAU,MACEsN,EAAYvQ,KAAKwC,MAAjB+N,QAER,OACI,yBAAKrN,UAAU,sBACX,kBAACgV,EAAA,EAAD,CAAY4J,eAAe,EAAMzR,YAAaE,GAC1C,kBAAC,KAAD,U,iBCmQLm2E,OAtQf,cAA2B7kF,IAAMC,UAC7BlC,YAAY4C,GACR0B,MAAM1B,GADS,KAwBnBmkF,iCAAmCviF,IAAW,MAClC6lC,EAAS7lC,EAAT6lC,KACM28C,EAAgB5mF,KAAK+B,MAA3BkoC,KAER,GAAI28C,GAAe38C,EAAKo3B,YAAculB,EAAYvlB,UAAW,OAE7DrhE,KAAKyC,SAAS,CACVwnC,KAAM62B,KAAa72B,KACnB3c,MAAOttB,KAAK6mF,SAAS/lB,KAAa72B,QAGtC,MAAMtzB,EAAQ/K,IAAUgL,WAChB0qD,EAAar3B,EAAbq3B,SACRwlB,YAAoBnwE,EAAO2qD,EAASA,WArCrB,KAwCnBylB,gCAAkC3iF,IAAW,MACjC6lC,EAAS7lC,EAAT6lC,KAUR,GARAjqC,KAAKyC,SAAS,CACVwnC,OACA3c,MAAOttB,KAAK6mF,SAAS58C,GACrB+8C,iBAAkB,EAClB1jC,aAAa,EACb2jC,YAAY,KAGXh9C,EAAM,OAEX,MAAMtzB,EAAQ/K,IAAUgL,WAChB0qD,EAAar3B,EAAbq3B,SACRwlB,YAAoBnwE,EAAO2qD,EAASA,WAvDrB,KA0DnB3oD,WAAaxW,IACcnC,KAAK+B,MAApBklF,YAEH9kF,GAELC,IAAgBkG,aAAa,CACzB,QAAS,0BACTnG,aAjEW,KAqEnB+kF,mBAAqBC,IAAc,MACvB75D,EAAUttB,KAAK+B,MAAfurB,MAEFnrB,EAAUmrB,EAAMvO,KAAKpe,GAAKA,EAAEwB,QAAQjC,KAAOinF,GACjD,IAAKhlF,EAAS,OAEd,MAAMwU,EAAQ/K,IAAUgL,WACxBwwE,YAAmBzwE,EAAOxU,EAAS,MAEnC,IAAIklF,EAAiB,EACjBrnF,KAAKsnF,UAAYtnF,KAAKsnF,SAAStuE,UAC/BquE,EAAiBtmF,KAAKgP,MAAM/P,KAAKsnF,SAAStuE,QAAQzK,YAAcg5E,OAG5CvnF,KAAKwnF,oBAAoBL,EAAW75D,EAAO+5D,GACnDjmF,QAAQT,IACpBymF,YAAmBzwE,EAAOhW,EAAG,SArFlB,KAyFnB6mF,oBAAsB,CAACL,EAAW7lB,EAAU+lB,KACxC,IAAK/lB,EAAU,MAAO,GAEtB,MAAMmmB,EAAU,GACV9jE,EAAQ29C,EAASlrC,UAAUz1B,GAAKA,EAAEwB,QAAQjC,KAAOinF,GACvD,IAAe,IAAXxjE,EAAc,MAAO,GAEzB,MAAMw/D,EAAMpiF,KAAKgP,MAAM4T,EAAQ0jE,GACzBK,EAAS/jE,EAAQ0jE,EAEjBM,EAAUxE,EAAM,EAChByE,EAAUzE,EAAM,EAChB0E,EAAaH,EAAS,EACtBI,EAAaJ,EAAS,EA6B5B,OA3BIC,GAAW,IACPE,GAAc,GACdJ,EAAQ3xE,KAAKuxE,EAAiBM,EAAUE,GAE5CJ,EAAQ3xE,KAAKuxE,EAAiBM,EAAUD,GACpCI,EAAaT,GACbI,EAAQ3xE,KAAKuxE,EAAiBM,EAAUG,IAI5CD,GAAc,GACdJ,EAAQ3xE,KAAKuxE,EAAiBlE,EAAM0E,GAEpCC,EAAaT,GACbI,EAAQ3xE,KAAKuxE,EAAiBlE,EAAM2E,GAGpCF,EAAU7mF,KAAKgnF,KAAKzmB,EAAS5sD,OAAS2yE,KAClCQ,GAAc,GACdJ,EAAQ3xE,KAAKuxE,EAAiBO,EAAUC,GAE5CJ,EAAQ3xE,KAAKuxE,EAAiBO,EAAUF,GACpCI,EAAaT,GACbI,EAAQ3xE,KAAKuxE,EAAiBO,EAAUE,IAIzCL,EAAQpxE,IAAIrB,GAAKssD,EAAStsD,KAnIlB,KAsInBg2D,iBAAmB3mE,IACf,MAAM8iF,EAAYxhF,OAAOtB,EAAM4jC,cAAcwmB,QAAQ04B,WAC/ChlF,EAAUnC,KAAKgoF,WAAWb,GAC3BhlF,GAEAnC,KAAK4lF,YAEN5lF,KAAKioF,qBAAuBd,IAC5BnnF,KAAKioF,mBAAqB,MAE9BjoF,KAAKyC,SAAS,CAAEN,YAChBC,IAAgBkG,aAAa,CACzB,QAAS,6BACTnG,YAEJnC,KAAKknF,mBAAmBC,KArJT,KAwJnBh9E,gBAAkB9F,IACd,MAAM8iF,EAAYxhF,OAAOtB,EAAM4jC,cAAcwmB,QAAQ04B,WAC/ChlF,EAAUnC,KAAKgoF,WAAWb,GAChC,IAAKhlF,EAAS,OAEdnC,KAAKioF,mBAAqBd,EAC1B,MAAM1mF,EAAMyoB,KAAKzoB,MAqBjB,OAnBAT,KAAKyC,SAAS,CAAEN,UAASk/D,UAAW5gE,EAAK6iD,aAAa,EAAO2jC,YAAY,IACzEj8E,WAAW,KACehL,KAAK+B,MAAnBs/D,YACU5gE,IACdT,KAAKyC,SAAS,CAAE6gD,aAAa,EAAM2jC,YAAY,IAC/C7kF,IAAgBkG,aAAa,CACzB,QAAS,6BACTnG,cAGT,KAEHnC,KAAKknF,mBAAmBC,GAExBnnF,KAAK4lF,WAAY,EACjB/+E,SAASkG,iBAAiB,UAAW/M,KAAK+J,eAE1C1F,EAAM6B,iBACN7B,EAAM4B,mBACC,GAnLQ,KAsLnB8D,cAAgB,KAEZ/J,KAAKyC,SAAS,CAAEN,QADA,KACSk/D,UAAW,EAAG/d,aAAa,IACpDlhD,IAAgBkG,aAAa,CACzB,QAAS,6BACTnG,QAJY,OAMhBnC,KAAK4lF,WAAY,EACjB/+E,SAASsG,oBAAoB,UAAWnN,KAAK+J,gBA9L9B,KAiMnB88E,SAAW58C,IACP,MAAM3c,EAAQ,GACd,IAAK2c,EAAM,OAAO3c,EAElB,MAAM46D,EAAO,IAAIpzE,IACTwsD,EAA4Br3B,EAA5Bq3B,SAAU6mB,EAAkBl+C,EAAlBk+C,cAgBlB,OAfI7mB,GACAA,EAASA,SAASlgE,QAAQT,IACtB2sB,EAAMxX,KAAKnV,GACXunF,EAAK1tE,IAAI7Z,EAAEwB,QAAQjC,GAAIS,EAAEwB,QAAQjC,MAGrCioF,GACAA,EAAc7mB,SAASlgE,QAAQT,IACtBunF,EAAKjzE,IAAItU,EAAEwB,QAAQjC,MACpBotB,EAAMxX,KAAKnV,GACXunF,EAAK1tE,IAAI7Z,EAAEwB,QAAQjC,GAAIS,EAAEwB,QAAQjC,OAKtCotB,GAnNPttB,KAAKsnF,SAAWzlF,IAAMya,YAEtBtc,KAAK+B,MAAQ,CACTkoC,KAAM,KACN3c,MAAO,GACP05D,iBAAkB,EAClB1jC,aAAa,EACb2jC,YAAY,GAIpBjkF,oBACI89D,KAAa9zD,GAAG,gCAAiChN,KAAK+mF,iCACtDjmB,KAAa9zD,GAAG,iCAAkChN,KAAK2mF,kCAG3D15E,uBACI6zD,KAAa1zD,IAAI,gCAAiCpN,KAAK+mF,iCACvDjmB,KAAa1zD,IAAI,iCAAkCpN,KAAK2mF,kCAoM5DqB,WAAWb,GAAY,MACX75D,EAAUttB,KAAK+B,MAAfurB,MAEF86D,EAAe96D,EAAM8I,UAAUz1B,GAAKA,EAAEwB,QAAQjC,KAAOinF,GAC3D,OAAyB,IAAlBiB,EAAsB96D,EAAM86D,GAAgB,KAGvDnlF,SAAU,MAAD,EACyCjD,KAAK+B,MAA3CkoC,EADH,EACGA,KAAM3c,EADT,EACSA,MAAOnrB,EADhB,EACgBA,QAASmhD,EADzB,EACyBA,YAC9B,IAAKrZ,EAAM,OAAO,KAClB,IAAK3c,EAAO,OAAO,KACnB,IAAKA,EAAM5Y,OAAQ,OAAO,KAE1B,MAAMoc,EAAWxD,EAAMjX,IAAI1V,GACvB,yBACIuC,UAAU,0BACVqB,IAAK5D,EAAEwB,QAAQjC,GACfmoF,kBAAiB1nF,EAAEwB,QAAQjC,GAC3BoH,MAAO,CAAE2J,MAAOs2E,KAA2BxtE,OAAQwtE,MACnDh3E,QAAS,IAAMvQ,KAAK2Y,WAAWhY,GAC/BoQ,aAAc/Q,KAAKgrE,iBACnB36D,YAAarQ,KAAKmK,iBAClB,kBAACy5E,GAAA,EAAD,CACIr/E,IAAK5D,EAAEwB,QAAQjC,GACfgD,UAAU,kCACVf,QAASxB,EACTi9C,UAAU,EACVvyC,MAAM,EACNlI,YAAamlF,KACbC,SAAO,EACPllF,OAAQC,KAAkBklF,UAKtC,OACI,yBAAKvrE,IAAKjd,KAAKsnF,SAAUpkF,UAAU,mCAC9B4tB,EACA7G,QAAQ9nB,IAAYmhD,GAAe,kBAAC1hD,GAAA,EAAD,CAAgBO,QAASA,O,oOC1O7E,MAAMsmF,GAAqBC,OAAOC,OAAO,CACrCC,iBAAkB,mBAClBC,iBAAkB,mBAClBC,kBAAmB,oBACnBC,mBAAoB,qBACpBC,qBAAsB,uBACtB9c,KAAM,SAyqDK+c,OAtqDf,cAA2BpnF,IAAMC,UAC7BlC,YAAY4C,GAAQ,IAAD,EACf0B,MAAM1B,GADS,YA+LnB0mF,kCAAoC9kF,IAAW,MACnC8N,EAAsB9N,EAAtB8N,OAAQiU,EAAc/hB,EAAd+hB,UAEhB,GADkCnmB,KAAKwC,MAA/B0P,SACcA,EAAQ,OAHY,MAKlCi3E,EAAYnpF,KAAK+B,MAAjBonF,QACR,IAAKA,EAAQz0E,OAAQ,OANqB,MAQzB+Y,EAASztB,KAAK0tB,QAAvB1U,QACJyU,EAAKK,aAAeL,EAAKD,UAAYC,EAAKqF,cAIzCq2D,EAAQ57D,KAAK5sB,GAAKA,EAAEsW,UAAY/E,GAAUvR,EAAET,KAAOimB,KAExDnmB,KAAKopF,yBAA2B,CAC5Bl3E,SACAiU,eAhNW,KAoNnBkjE,iCAAmCjlF,IAAW,MAClC8N,EAAsB9N,EAAtB8N,OAAQiU,EAAc/hB,EAAd+hB,UAEhB,GADkCnmB,KAAKwC,MAA/B0P,SACcA,EAAQ,OAHW,MAKjCk3E,EAA6BppF,KAA7BopF,yBACR,IAAKA,EAA0B,OAE/B,GAAIl3E,IAAWk3E,EAAyBl3E,OAAQ,OAChD,GAAIiU,IAAcijE,EAAyBjjE,UAAW,OATb,MAWxBsH,EAASztB,KAAK0tB,QAAvB1U,QACRyU,EAAKD,UAAYC,EAAKqF,aAAerF,EAAKK,aAC1C9tB,KAAKopF,yBAA2B,MAjOjB,KAoOnB5gB,wBAA0BpkE,IAAW,MACzB6S,EAAmC7S,EAAnC6S,QAASC,EAA0B9S,EAA1B8S,WAAYwxD,EAActkE,EAAdskE,UADG,EAEL1oE,KAAKwC,MAAxB0P,EAFwB,EAExBA,OAAQqJ,EAFgB,EAEhBA,OAChB,GAAIrJ,IAAW+E,GACVsE,EAEL,GAAImtD,EAAW,CACX,MAAMhxD,EAAUY,IAAazM,IAAIoL,EAASC,GAEpCuW,EAAOztB,KAAK0tB,QAAQ1U,QAE1B,IAAIswE,EAAiB5xE,EAAQ8nB,cAAgBk2C,aAAiBh+D,GAAW+wE,GAAmBG,iBAAmBH,GAAmBvc,KAC9Hz+C,EAAKD,UAAYC,EAAKK,cAAgBL,EAAKqF,eAC3Cw2D,EAAiBb,GAAmBG,kBAGxC,MAAMW,EAAW7xE,EAAQ8nB,YAAc,CAAEgqD,mBAAmB,GAAU,GAEhEL,EAAU,CAACzxE,GACjB1X,KAAKypF,oBAAqB,EAC1BzpF,KAAK0pF,OAAOP,EAASI,EAAU,KAC3BvpF,KAAKypF,oBAAqB,EAC1BzpF,KAAK2pF,qBAAqBL,EAAgBtpF,KAAK+C,YAGnD,MAAM4T,EAAQ/K,IAAUgL,WACxBoZ,YAAoBrZ,EAAOwyE,GAC3BnpF,KAAKihC,aAAakoD,OACf,CACHnpF,KAAK4pF,cAAc,CAAC1yE,IAEpB,MAAMqL,EAAQjK,IAAakK,SAAStQ,GAChCqQ,IAAUA,EAAM4iD,OAAOzwD,QACvB4/C,gBArQO,KA0QnBhwD,UAAYD,MA1QO,KAqRnBwlF,6BArRmB,sCAqRY,WAAMzlF,GAAN,qBAAAsO,EAAA,yDACvB,EAAKixD,iBADkB,iBAEfwlB,EAAY,EAAKpnF,MAAjBonF,QAECn0E,EAAIm0E,EAAQz0E,OAAS,EAJP,YAIUM,GAAK,GAJf,oBAKb0C,EAAUyxE,EAAQn0E,IACpB8gE,aAAmBp+D,EAAQT,QAASS,EAAQxX,IAN7B,uBAOfw0D,YAAYh9C,EAAQT,QAASS,EAAQxX,IAPtB,0BAIkB8U,IAJlB,wCAcN5S,IAAgBC,KAAK,CACtC,QAAS,qBACT4U,QAAS,EAAKzU,MAAM0P,OACpBwJ,MAAO,GACP8T,eAAgBvZ,IAAUC,UAC1BuZ,gBAAiB,EACjBxD,OAAQ,EACRpW,MAAO,IACP0F,OAAQ,CAAE,QAAS,+BAtBI,QAcrBhZ,EAdqB,OAyBlByS,EAAI,EAzBc,aAyBXA,EAAIzS,EAAO8sB,SAAS3a,QAzBT,oBA0BjBgD,EAAUnV,EAAO8sB,SAASra,IAC5B8gE,aAAmBp+D,EAAQT,QAASS,EAAQxX,IA3BzB,wBA4BnBw0D,YAAYh9C,EAAQT,QAASS,EAAQxX,IA5BlB,2BAyBiB8U,IAzBjB,0DArRZ,2DAwTnBuxE,2BAxTmB,sCAwTU,WAAMniF,GAAN,iBAAAsO,EAAA,wDACjB+a,EAASrpB,EAATqpB,KADiB,oDAGH,iBAAlBA,EAAK,SAHgB,uDAKjB07D,EAAY,EAAKpnF,MAAjBonF,UACOA,EAAQz0E,OAAS,GANP,kEAQnB9I,IAAUmgC,OAAV,qBAAiB,oCAAAr5B,EAAA,0DACW,EAAKlQ,MAA3B0P,EADW,EACXA,OAAQiU,EADG,EACHA,WACZjU,EAFe,sBAGTqM,EAAOR,KAAUlS,IAAIqG,IAHZ,iBAKHsM,EAASD,EAATC,KALG,KAMHA,EAAK,SANF,OAOF,oBAPE,OAQF,mBARE,OAgBF,uBAhBE,QAwBF,uBAxBE,yCASGpc,IAAgBC,KAAK,CACvB,QAAS,oBACT2T,QAASwI,EAAKxI,QACdG,OAAO,IAZR,6DAiBG/T,IAAgBC,KAAK,CACvB,QAAS,uBACTwc,eAAgBL,EAAKK,eACrB1I,OAAO,IApBR,6DAyBG/T,IAAgBC,KAAK,CACvB,QAAS,uBACTkd,cAAef,EAAKe,cACpBpJ,OAAO,IA5BR,4CAiCX,EAAKipE,iBAAiBltE,EAAQ,EAAGiU,EAAW,GAjCjC,2CARE,0CAxTV,2DAuWnB8zC,0BAA4B71D,IACJA,EAAZg9C,UAEJphD,KAAK8pF,gBAAgB1oF,QAAQT,GAAKA,KAClCX,KAAK8pF,gBAAkB,KA3WZ,KA+WnBC,wBAA0B3lF,IAAW,MACzB8N,EAAsB9N,EAAtB8N,OAAQiU,EAAc/hB,EAAd+hB,UACR6jE,EAAiBhqF,KAAK+B,MAAtBioF,aAER,GAAIhqF,KAAKwC,MAAM0P,SAAWA,EACtB,OAGJ,MAAMmnC,EAAW2wC,EAAat1E,OAAS,EAAIs1E,EAAaA,EAAat1E,OAAS,GAAK,KAC/E2kC,GAAYA,EAASnnC,SAAWA,GAAUmnC,EAASlzB,YAAcA,GAIrE6jE,EAAal0E,KAAK,CAAE5D,SAAQiU,eA5Xb,KA+XnB8nD,0BAA4B7pE,IACxB,MAAMqpB,EAAOztB,KAAK0tB,QAAQ1U,QAEpBkhC,EAAmBzsB,EAAKK,aACxBoB,EAAgBzB,EAAKD,UAC3BxtB,KAAKyC,SAAS,CAAEwnF,cAAc,GAAQ,KAC9Bx8D,EAAKD,YAAc0B,IACnBzB,EAAKD,WAAazsB,KAAKopB,IAAI+vB,EAAmBzsB,EAAKK,kBAtY5C,KA2YnBo8D,0BAA4BC,IACxB,MAAM18D,EAAOztB,KAAK0tB,QAAQ1U,QAE1BhZ,KAAKk6C,iBAAmBzsB,EAAKK,aAC7B9tB,KAAKkvB,cAAgBzB,EAAKD,WA/YX,KAkZnB48D,uBAAyBD,IACrB,MAAM18D,EAAOztB,KAAK0tB,QAAQ1U,QAK1BhZ,KAAKyC,SAAS,CAAEwnF,cAAc,GAAS,KAC/Bx8D,EAAKD,YAAcxtB,KAAKkvB,gBACxBzB,EAAKD,WAAazsB,KAAKopB,IAAInqB,KAAKk6C,iBAAmBzsB,EAAKK,kBA1ZjD,KA+ZnBu8D,wBAA0BjmF,IACtBpE,KAAKyC,SAAS,CACV6nF,gBAAiBhyE,IAAawwC,cAAchvC,KAAO,KAjaxC,KAqanBqiB,2BAA6B/3B,IACNpE,KAAKwC,MAAhB0P,SAEO9N,EAAO8N,QAClBlS,KAAKyC,SAAS,CAAE25B,aAAch4B,EAAOi4B,cAza1B,KA6anBha,uBAAyBje,IAAW,MACxB8N,EAAWlS,KAAKwC,MAAhB0P,OACAi3E,EAAYnpF,KAAK+B,MAAjBonF,QACAlyE,EAAwB7S,EAAxB6S,QAASC,EAAe9S,EAAf8S,WAEjB,GAAIhF,IAAW+E,IAEsC,IAAjDkyE,EAAQ/yD,UAAUz1B,GAAKA,EAAET,KAAOgX,GAAoB,CACpD,MAAMQ,EAAUY,IAAazM,IAAIoL,EAASC,GAC1C,IAAKQ,EAAS,OAEd,MAAMf,EAAQ/K,IAAUgL,WACxBoZ,YAAoBrZ,EAAO,CAACe,MAzbjB,KA6bnB6yE,6BAA+BnmF,IAAW,MAC9BsT,EAA4BtT,EAA5BsT,QAASgnB,EAAmBt6B,EAAnBs6B,eAEjB,GADmB1+B,KAAKwC,MAAhB0P,SACOwF,EAAQT,QAAS,OAahC,MAAMqyE,EAAiB5xE,EAAQ8nB,YACzBipD,GAAmBG,iBACnBH,GAAmBO,qBAEzBhpF,KAAKwqF,eAAe9rD,EAAgBhnB,EAAS,KACrC4xE,IAAmBb,GAAmBO,sBACtChpF,KAAK2pF,qBAAqBL,EAAgBtpF,KAAK+C,UAGnD/C,KAAKyqF,sBAGT,MAAM9zE,EAAQ/K,IAAUgL,WACxBoZ,YAAoBrZ,EAAO,CAACe,IAC5B1X,KAAKihC,aAAa,CAACvpB,KA3dJ,KA8dnBiL,mBAAqBve,IACjB,IAAKpE,KAAK2jE,iBAAkB,OADD,MAGnBjsD,EAAYtT,EAAZsT,QAER,GADmB1X,KAAKwC,MAAhB0P,SACOwF,EAAQT,QAAS,OAGhC,GAAa,IADIS,EAATsR,KACQ,OAEhB,MAAMyE,EAAOztB,KAAK0tB,QAAQ1U,QAE1B,IAAIswE,EAAiB5xE,EAAQ8nB,cAAgBk2C,aAAiBh+D,GAAW+wE,GAAmBG,iBAAmBH,GAAmBvc,KAC9Hz+C,EAAKD,UAAYC,EAAKK,cAAgBL,EAAKqF,eAC3Cw2D,EAAiBb,GAAmBG,kBAGxC,MAAMW,EAAW7xE,EAAQ8nB,YAAc,CAAEgqD,mBAAmB,GAAU,GAEhEL,EAAU,CAACzxE,GACjB1X,KAAKypF,oBAAqB,EAC1BzpF,KAAK0qF,eAAevB,EAASI,EAAU,KACnCvpF,KAAKypF,oBAAqB,EAC1BzpF,KAAK2pF,qBAAqBL,EAAgBtpF,KAAK+C,YAGnD,MAAM4T,EAAQ/K,IAAUgL,WACxBoZ,YAAoBrZ,EAAOwyE,GAC3BnpF,KAAKihC,aAAakoD,IA1fH,KA6fnBzmE,uBAAyBte,IAAW,MACxB8N,EAAWlS,KAAKwC,MAAhB0P,OACA+E,EAAuC7S,EAAvC6S,QAASwiD,EAA8Br1D,EAA9Bq1D,aAAcr/C,EAAgBhW,EAAhBgW,YAC3BlI,IAAW+E,GAEVwiD,GAELz5D,KAAK4pF,cAAcxvE,IApgBJ,KA4sBnBuwE,sBA5sBmB,sCA4sBK,WAAOpoF,EAAQsT,GAAf,mBAAAnD,EAAA,qDACdk4E,EAAiB,EACnBC,EAAW,EAAKC,kBAAkBvoF,EAAQwoF,KAErC/1E,EAAI,EAJO,YAIJA,EAAI41E,IAAmBC,EAJnB,iCAKD,EAAK/7D,aALJ,OAKhBvsB,EALgB,OAMhBsoF,EAAW,EAAKC,kBAAkBvoF,EAAQwoF,KAN1B,OAI6B/1E,IAJ7B,yDA5sBL,6DAstBnB81E,kBAAoB,CAACvoF,EAAQsT,MACpBtT,KACAA,EAAO8sB,SAAS3a,QAEdnS,EAAO8sB,SAAS3a,QAAUmB,GA1tBlB,KA6tBnBiZ,WA7tBmB,qBA6tBN,0CAAApc,EAAA,wDACDR,EAAW,EAAK1P,MAAhB0P,OACAi3E,EAAY,EAAKpnF,MAAjBonF,QACAj5C,EAAc,EAAdA,UAEHh+B,EALI,qDAMLg+B,EAAUzhB,QANL,qDAQLyhB,EAAU86C,oBARL,kCASQ,EAAKC,wBATb,oDAYH37D,EAAgB65D,GAAWA,EAAQz0E,OAAS,EAAIy0E,EAAQ,GAAGjpF,GAAK,EAChE2V,EAAQszE,EAAQz0E,OAASq2E,IAA2C,EAAtBA,IAA0BA,IAE1ExoF,EAAS,KACP2oF,EAhBG,UAgBiBh5E,EAhBjB,YAgB2Bod,IAChC,EAAK67D,aAAal2E,IAAIi2E,GAjBjB,iBAkBL3oF,EAAS,EAAK4oF,aAAat/E,IAAlB,UAAyBqG,EAAzB,YAAmCod,IAlBvC,+BAoBL4gB,EAAUzhB,SAAU,EApBf,UAqBU,EAAK28D,WAAWl5E,EAAQod,EAAe,EAAGzZ,GACpD6Z,QAAQ,KACLwgB,EAAUzhB,SAAU,IAvBvB,QAqBLlsB,EArBK,kBA2BL2tC,IAAc,EAAKA,UA3Bd,0DA+BJ3tC,EAAO8sB,SAAS3a,QACjB,EAAKy2E,aAAa3wE,IAAI0wE,EAAgB3oF,GAG1C+V,IAAayX,SAASxtB,EAAO8sB,UAC7B9sB,EAAO8sB,SAAS63C,UAEhB,EAAKmkB,WAAW9oF,EAAO8sB,SAAUttB,IACzBQ,EAAO8sB,SAAS3a,OAAS,IACzB,EAAKi1E,qBAAqBlB,GAAmBO,qBAAsB,EAAKjmF,UACxEiI,WAAW,KAAO,MACGsgF,EAAmB,EAAKvpF,MAAjConF,QACJmC,EAAe52E,QAAgC,EAAtBq2E,KACzB,EAAKtoF,SAAS,CACV0mF,QAASmC,EAAel9D,MAAM,EAAyB,EAAtB28D,QAG1C,MAEFxoF,EAAO8sB,SAAS3a,QACjB,EAAKu2E,0BAIPt0E,EAAQ/K,IAAUgL,WACxBoZ,YAAoBrZ,EAAOpU,EAAO8sB,UAClC,EAAK4R,aAAa1+B,EAAO8sB,UAzDhB,kBA2DF9sB,GA3DE,0CA7tBM,KA2xBnB0oF,sBA3xBmB,qBA2xBK,8CAAAv4E,EAAA,wDACZR,EAAW,EAAK1P,MAAhB0P,OACAi3E,EAAY,EAAKpnF,MAAjBonF,QACAj5C,EAAc,EAAdA,UAEHh+B,EALe,oDAOdq5E,EAAejxD,YAAgBpoB,GAPjB,oDAUhBwM,EAAWmB,KAAgBjB,YAAY2sE,GAVvB,kCAYC75D,YAAgBxf,GAZjB,QAYhBwM,EAZgB,kBAcfA,EAAS6b,6BAdM,0DAkBpB2V,EAAU86C,qBAAsB,EAlBZ,UAoBS5oF,IAAgBC,KAAK,CAC9C,QAAS,uBACTwc,eAAgBH,EAAS6b,+BAtBT,WAoBdixD,EApBc,8DA0BhBt7C,EAAUzhB,QA1BM,0DA4Bda,EAAgB65D,EAAQz0E,OAAS,GAAKy0E,EAAQ,GAAGlyE,UAAYu0E,EAAetrF,GAAKipF,EAAQ,GAAGjpF,GAAK,EACjG2V,EAA0B,IAAlByZ,EAA2C,EAAtBy7D,IAA0BA,IAE7D76C,EAAUzhB,SAAU,EA/BA,UAgCC,EAAK28D,WAAWI,EAAetrF,GAAIovB,EAAe,EAAGzZ,GACzE6Z,QAAQ,KACLwgB,EAAUzhB,SAAU,IAlCJ,WAgCdlsB,EAhCc,OAqChB2tC,IAAc,EAAKA,UArCH,0DAyCpB53B,IAAayX,SAASxtB,EAAO8sB,UAC7B9sB,EAAO8sB,SAAS63C,UAChB,EAAKmkB,WAAW9oF,EAAO8sB,SAAUttB,IACzBQ,EAAO8sB,SAAS3a,OAAS,GACzB,EAAKi1E,qBAAqBlB,GAAmBO,qBAAsB,EAAKjmF,UAG5E,EAAK4nF,sBAAsBpoF,EAAQsT,KAGjCc,EAAQ/K,IAAUgL,WACxBoZ,YAAoBrZ,EAAOpU,EAAO8sB,UAClC,EAAK4R,aAAa1+B,EAAO8sB,UArDL,kBAuDb9sB,GAvDa,0CA3xBL,KAq1BnB0vC,eAr1BmB,qBAq1BF,wCAAAv/B,EAAA,wDACLR,EAAW,EAAK1P,MAAhB0P,OACAi3E,EAAY,EAAKpnF,MAAjBonF,QACAj5C,EAAc,EAAdA,UAEKnyB,KAAUlS,IAAIqG,GALd,qDAQTg+B,EAAUzhB,QARD,qDAST,EAAKk1C,iBATI,0DAWPr0C,EAAgB65D,GAAWA,EAAQz0E,OAAS,EAAIy0E,EAAQA,EAAQz0E,OAAS,GAAGxU,GAAK,EACjF2V,EAAQszE,EAAQz0E,OAASq2E,IAA2C,EAAtBA,IAA0BA,IAE9E76C,EAAUzhB,SAAU,EAdP,UAeQ,EAAK28D,WAAWl5E,EAAQod,EAAwB,EAARzZ,EAAWA,GACnE6Z,QAAQ,KACLwgB,EAAUzhB,SAAU,IAjBf,WAePlsB,EAfO,OAoBT2tC,IAAc,EAAKA,UApBV,0DAwBbkC,aAAwB7vC,EAAQ,EAAKR,MAAMonF,SAE3C7wE,IAAayX,SAASxtB,EAAO8sB,UAC7B9sB,EAAO8sB,SAAS63C,UAChB,EAAKuiB,oBAAqB,EAC1B,EAAKiB,eAAenoF,EAAO8sB,SAAU,GAAI,KACrC,EAAKo6D,oBAAqB,EACtBlnF,EAAO8sB,SAAS3a,OAAS,GACzB1J,WAAW,KAAO,MACGsgF,EAAmB,EAAKvpF,MAAjConF,QACJmC,EAAe52E,OAA+B,EAAtBq2E,KACxB,EAAKtoF,SAAS,CACV0mF,QAASmC,EAAel9D,MAAMk9D,EAAe52E,OAA+B,EAAtBq2E,MACvD,KACC,EAAKpB,qBAAqBlB,GAAmBO,qBAAsB,EAAKjmF,aAGjF,KAIL4T,EAAQ/K,IAAUgL,WACxBoZ,YAAoBrZ,EAAOpU,EAAO8sB,UAClC,EAAK4R,aAAa1+B,EAAO8sB,UA/CZ,kBAiDN9sB,GAjDM,0CAr1BE,KAm9BnBkoF,kBAAoB,KAChB,IAAKzqF,KAAKqvB,SAAU,OAAO,KAE3B,MAAMA,EAAW,GACXo8D,EAAc,IAAI32E,IAClBwY,EAAQo+D,YAAY1rF,KAAK0tB,QAAS1tB,KAAK25C,UAC7C,IAAK,IAAI3kC,EAAI,EAAGA,EAAIsY,EAAM5Y,OAAQM,IAAK,CACnC,MAAM22E,EAAiB3rF,KAAKqvB,SAAS/B,EAAMtY,IAC3C,GAAI22E,EAAgB,CAChB,MADgB,EACAA,EACkCnpF,MAA1C0P,EAFQ,EAERA,OAAQiU,EAFA,EAEAA,UAAWrP,EAFX,EAEWA,WAC3B,GAAIqP,EAAW,CACX,MAAM5hB,EAAG,UAAM2N,EAAN,YAAgBiU,GACzBslE,EAAYjxE,IAAIjW,EAAKA,GACrB8qB,EAASvZ,KAAK,CAAE5D,SAAQiU,mBACrB,GAAIrP,EACP,IAAK,IAAIm5B,EAAI,EAAGA,EAAIn5B,EAAWpC,OAAQu7B,IAAK,CACxC,MAAM1rC,EAAG,UAAM2N,EAAN,YAAgB4E,EAAWm5B,IACpCw7C,EAAYjxE,IAAIjW,EAAKA,GACrB8qB,EAASvZ,KAAK,CAAE5D,SAAQiU,UAAWrP,EAAWm5B,OAM9D,OAAK27C,YAAU5rF,KAAK6rF,UAAWJ,GASxB,MARHrpF,IAAgBkG,aAAa,CAAE,QAAS,6BAA8B+mB,SAAUo8D,IAGhFzrF,KAAK6rF,UAAYJ,EAEVp8D,IAl/BI,KAw/BnBy8D,oBAAsBC,IAAiB,MAAD,EACP/rF,KAAKwC,MAAxB0P,EAD0B,EAC1BA,OACR,GAFkC,EAClBqJ,OACJ,OAGZ,GAAsB,OADIvb,KAAlBkvB,cAGJ,OAKJ,MAAM3M,EAAQjK,IAAakK,SAAStQ,GACpC,IAAKqQ,EAAO,OACZ,IAAKA,EAAM4iD,OAAQ,OACnB,GAAI5iD,EAAM4iD,OAAOzwD,QAAU,EAAG,OAE9B,MAAM2a,EAAW,GACX/B,EAAQo+D,YAAY1rF,KAAK0tB,QAAS1tB,KAAK25C,UAC7C,IAAK,IAAI3kC,EAAI,EAAGA,EAAIsY,EAAM5Y,OAAQM,IAAK,CACnC,MAAM22E,EAAiB3rF,KAAKqvB,SAAS/B,EAAMtY,IAC3C,GAAI22E,EAAgB,CAChB,MADgB,EACAA,EACkCnpF,MAA1C0P,EAFQ,EAERA,OAAQiU,EAFA,EAEAA,UAAWrP,EAFX,EAEWA,WAC3B,GAAIqP,EACAkJ,EAASvZ,KAAK,CAAE5D,SAAQiU,mBACrB,GAAIrP,EACP,IAAK,IAAIm5B,EAAI,EAAGA,EAAIn5B,EAAWpC,OAAQu7B,IACnC5gB,EAASvZ,KAAK,CAAE5D,SAAQiU,UAAWrP,EAAWm5B,MAM9D,IAAK5gB,EAAU,OACf,GAAIA,EAAS3a,QAAU,EAAG,OAE1B,MAAMs3E,EAAQ38D,EAAS,GAAGlJ,UACpB8lE,EAAQ58D,EAASA,EAAS3a,OAAS,GAAGyR,UAE5C,IAAIjmB,EAAK,EACT,IAAK,IAAI8U,EAAI,EAAGA,EAAIuN,EAAM4iD,OAAOzwD,OAAQM,IAAK,CAC1C,MAAMmwD,EAAS5iD,EAAM4iD,OAAOnwD,GAC5B,GAAImwD,EAAOjlE,IAAM8rF,GAAS7mB,EAAOjlE,IAAM+rF,EAAO,CAC1C/rF,EAAKilE,EAAOjlE,GACZ,OAIR,IAAKA,EAAI,CACL,MAAMgsF,EAAc3pE,EAAM4iD,OAAO5iD,EAAM4iD,OAAOzwD,OAAS,GAAGxU,GACpDisF,EAAc5pE,EAAM4iD,OAAO,GAAGjlE,GAEhCisF,EAAcH,EACd9rF,EAAKisF,EACED,EAAcD,IACrB/rF,EAAKgsF,GAxDqB,MA4D1B1iB,EAAiClxD,IAAjCkxD,cAAeL,EAAkB7wD,IAAlB6wD,cAEvB,GAAIjpE,KAAQipE,GAAiBA,EAAcj3D,SAAWA,GAAUi3D,EAAcjpE,KAAOA,GAAK,CAGtF,GAAI6rF,GAAgBviB,GAAiBA,EAAct3D,SAAWA,GAAUs3D,EAActpE,GAAKA,EAEvF,OAIJkC,IAAgBkG,aAAa,CAAE,QAAS,mCAAoC4J,SAAQiU,UAAWjmB,MA/jCpF,KAqkCnBksF,2BAA6B,KAAO,MAAD,EACsBpsF,KAAK+B,MAAlDynF,EADuB,EACvBA,kBAAmBQ,EADI,EACJA,aAAcb,EADV,EACUA,QACnC17D,EAAOztB,KAAK0tB,QAAQ1U,QAEtByU,EAAKD,UAAYC,EAAKK,cAAgBL,EAAKqF,aAAeC,KACtD/yB,KAAK2jE,kBAAoB6lB,IACrBxpF,KAAKkvB,gBAAkBzB,EAAKD,WAAaxtB,KAAKkvB,eAAiBlvB,KAAKqsF,cAAgBlD,EACpFnpF,KAAKyC,SAAS,CACV+mF,mBAAmB,EACnBQ,aAAc,KAEVA,EAAat1E,QACrB1U,KAAKyC,SAAS,CACV+mF,mBAAmB,KAK1BA,GACDxpF,KAAKyC,SAAS,CAAE+mF,mBAAmB,IAI3CxpF,KAAKqsF,YAAclD,GA5lCJ,KA+lCnBt6D,aAAe,KACX,MAAMpB,EAAOztB,KAAK0tB,QAAQ1U,QASpB+yE,EAAe/rF,KAAKkvB,cAAgBzB,EAAKD,UAE/CxtB,KAAKyqF,oBAEAzqF,KAAKssF,2BACNtsF,KAAK8rF,oBAAoBC,GAG7B/rF,KAAKosF,6BAEsB,OAAvBpsF,KAAKkvB,gBACD68D,GAAgBt+D,EAAKD,WAAauF,MAClC/yB,KAAK8uB,cAGJi9D,GAAiBt+D,EAAKD,UAAYC,EAAKK,cAAgBL,EAAKqF,aAAeC,MAC5E/yB,KAAKiyC,kBAIbjyC,KAAKkvB,cAAgBzB,EAAKD,WA7nCX,KAgoCnBm8D,qBAAuB,CAACL,EAAgBvmF,EAAUuQ,KAAc,MAAD,EAC7BtT,KAAKwC,MADwB,KACnD0P,OADmD,EAC3CiU,UACkCpjB,GAAY,CAC1DyqB,UAAW,EACXsF,aAAc,EACdhF,aAAc,IALyC,EAEnDN,UAFmD,EAExCsF,aAFwC,EAE1BhF,aAejC,OAAQw7D,GACJ,KAAKb,GAAmBG,iBACpB5oF,KAAKusF,iBACL,MAEJ,KAAK9D,GAAmBK,kBACpB9oF,KAAKwsF,kBACL,MAEJ,KAAK/D,GAAmBI,iBACpB7oF,KAAKysF,iBACL,MAEJ,KAAKhE,GAAmBM,mBACpB/oF,KAAK0sF,iBAAiBp5E,GACtB,MAEJ,KAAKm1E,GAAmBO,qBACpBhpF,KAAK2sF,mBAAmB5pF,GACxB,MAEJ,KAAK0lF,GAAmBvc,QAtqCb,KA4qCnBygB,mBAAqB5pF,IAAa,MACtByqB,EAA0CzqB,EAA1CyqB,UAAWsF,EAA+B/vB,EAA/B+vB,aACbrF,GAD4C1qB,EAAjB+qB,aACpB9tB,KAAK0tB,QAAQ1U,SAY1ByU,EAAKD,UAAYA,GAAaC,EAAKqF,aAAeA,IA1rCnC,KAosCnB25D,eAAiB,KAAO,MAAD,EACWzsF,KAAKwC,MAA3B0P,EADW,EACXA,OACAi3E,GAFW,EACHhjE,UACInmB,KAAK+B,MAAjBonF,SACF17D,EAAOztB,KAAK0tB,QAAQ1U,QAEb+E,KAAUlS,IAAIqG,GAW3B,IAAI06E,GAAW,EACf,IAAK,IAAI53E,EAAI,EAAGA,EAAIm0E,EAAQz0E,OAAQM,IAAK,CACrC,IAAI63E,EAAgB7sF,KAAK8sF,SAASjhF,IAAImJ,GAClCmP,EAAOwpD,eAAqBkf,GAChC,GAAI1oE,GACI0oE,EAAcrqF,MAAM67E,oBAAqB,CACzC5wD,EAAKD,UAAYrJ,EAAKwJ,UAhBN,EAiBhBi/D,GAAW,EACX,OAaPA,GACD5sF,KAAKusF,kBA1uCM,KA8uCnBG,iBAAmBp5E,IAAY,MAEnB6S,EAAsB7S,EAAtB6S,UAAW8F,EAAW3Y,EAAX2Y,OACXk9D,EAAYnpF,KAAK+B,MAAjBonF,QACF17D,EAAOztB,KAAK0tB,QAAQ1U,QAE1B,IAAI4zE,GAAW,EACf,IAAK,IAAI53E,EAAI,EAAGA,EAAIm0E,EAAQz0E,OAAQM,IAAK,CACrC,MAAM63E,EAAgB7sF,KAAK8sF,SAASjhF,IAAImJ,GAClC+4C,EAAO4f,eAAqBkf,GAClC,GAAI9+B,GACI8+B,EAAcrqF,MAAM2jB,YAAcA,EAAW,CAC7CsH,EAAKD,UAAYugC,EAAKpgC,UAAY1B,EAClC2gE,GAAW,EACX,SA5vCG,KAkwCnBJ,gBAAkB,KAAO,MAAD,EACUxsF,KAAKwC,MAA3B0P,EADY,EACZA,OAAQiU,EADI,EACJA,UACRgjE,EAAYnpF,KAAK+B,MAAjBonF,QACF17D,EAAOztB,KAAK0tB,QAAQ1U,QAW1B,IAAI4zE,GAAW,EACf,IAAK,IAAI53E,EAAI,EAAGA,EAAIm0E,EAAQz0E,OAAQM,IAAK,CACrC,MAAM63E,EAAgB7sF,KAAK8sF,SAASjhF,IAAImJ,GAClC+4C,EAAO4f,eAAqBkf,GAClC,GAAI9+B,IACI8+B,EAAcrqF,MAAM2jB,YAAcA,GAC/B0mE,EAAcrqF,MAAMsU,aAAqE,IAAvD+1E,EAAcrqF,MAAMsU,WAAWqF,QAAQgK,IAAmB,CAC3FsH,EAAKK,aAAeigC,EAAKjgC,aAEzBL,EAAKD,UAAYugC,EAAKpgC,UAGtBF,EAAKD,UAAYugC,EAAKpgC,UAAYF,EAAKK,aAAe,EAAMigC,EAAKjgC,aAAe,EAEpF8+D,GAAW,EACX,OAKPA,GACD5sF,KAAKo/E,iBAAiBltE,EAAQA,EAAQiU,EAAWA,IAryCtC,KAqzCnBomE,eAAiB,KAAO,MAAD,EACWvsF,KAAKwC,MAC7BirB,GAFa,EACXvb,OADW,EACHiU,UACHnmB,KAAK0tB,QAAQ1U,SAUJyU,EAAKqF,aAAerF,EAAKK,eACzBL,EAAKD,YACvBC,EAAKD,UAAYC,EAAKqF,aAAerF,EAAKK,eAn0C/B,KAu1CnBs9D,WAAa,CAACl5E,EAAQod,EAAerD,EAAQpW,KAAW,MAC5C0F,EAAWvb,KAAKwC,MAAhB+Y,OAER,GAAIA,EAAQ,CACR,GAAsB,IAAlB+T,GAAkC,IAAXrD,GAAgBpW,IAAUk1E,IAAqB,CACtE,MAAMxoE,EAAQjK,IAAakK,SAAStQ,GACpC,GAAIqQ,GAASA,EAAM4iD,QAAU5iD,EAAM4iD,OAAOzwD,OAAS,EAC/C,OAAO0B,QAAQ+wB,QAAQ,CACnB,QAAS,WACT9X,SAAU,IAAI9M,EAAM4iD,UAKhC,OAAO/iE,IAAgBC,KAAK,CACxB,QAAS,qBACT4U,QAAS/E,EACTud,gBAAiBH,EACjBrD,SACApW,QACA0F,SACAiU,eAAgB,KAChB9T,MAAO,OAIf,OAAOtZ,IAAgBC,KAAK,CACxB,QAAS,iBACT4U,QAAS/E,EACTud,gBAAiBH,EACjBrD,SACApW,WAt3CW,KA03CnBk3E,cA13CmB,qBA03CH,oCAAAr6E,EAAA,uDACkB,EAAKlQ,MAA3B0P,EADI,EACJA,OAAQiU,EADJ,EACIA,UACRgjE,EAAY,EAAKpnF,MAAjBonF,QAEF5qE,EAAOR,KAAUlS,IAAIqG,GAEJi3E,EAAQ57D,KAAK5sB,GAAKA,EAAEsW,UAAY/E,GAAUqM,GAAQA,EAAKge,cAAgBhe,EAAKge,aAAar8B,KAAOS,EAAET,IAErH,EAAKqsF,iBAEL,EAAKnN,iBAAiBltE,EAAQA,EAAQ,EAAGiU,GAVjC,yCA13CG,KAw4CnB6mE,oBAAsB3oF,IAClBA,EAAM6B,iBACN7B,EAAM4B,kBAFqB,MAInBiM,EAAWlS,KAAKwC,MAAhB0P,OACH07C,YAAqB17C,IAErB7N,EAAMi8E,cACNj8E,EAAMi8E,aAAa2M,MAAM1/D,KAAK5sB,GAAW,UAANA,IAExCyB,IAAgBkG,aAAa,CACzB,QAAS,uBACT8B,UAAU,EACVk2E,aAAcj8E,EAAMi8E,gBAr5CT,KAy5CnB4M,sBAAwB7oF,IAAU,MACtB2lF,EAAiBhqF,KAAK+B,MAAtBioF,aAER,GAAIA,EAAat1E,OAAS,EAAG,CACzB,MAAMy4E,EAAYnD,EAAaoD,MAC/B,GAAID,EAAW,CAAC,MACJj7E,EAAsBi7E,EAAtBj7E,OAAQiU,EAAcgnE,EAAdhnE,UACZjU,IAAWlS,KAAKwC,MAAM0P,QACtBkU,YAASlU,EAAQiU,SAIzBnmB,KAAK+sF,iBAl6CT/sF,KAAKmrF,aAAe,IAAIr2E,IACxB9U,KAAKkwC,UAAY,CACblnB,KAAM,IAAIE,KACVuF,SAAS,EACTC,WAAW,EACXs8D,qBAAqB,GAGzBhrF,KAAK+B,MAAQ,CACT6d,WAAY,EACZqf,cAAe,KACfgrD,cAAc,EACdd,QAAS,GACT/sD,cAAc,EACdkuD,iBAAiB,EACjB+C,mBAAoB,EACpB7D,mBAAmB,EACnBQ,aAAc,IAGlBhqF,KAAK0tB,QAAU7rB,IAAMya,YACrBtc,KAAK25C,SAAW93C,IAAMya,YACtBtc,KAAKstF,oBAAsBzrF,IAAMya,YAEjCtc,KAAK8pF,gBAAkB,GACvB9pF,KAAK8sF,SAAW,IAAIh4E,IAEpB9U,KAAKyqF,kBAAoBllE,YAASvlB,KAAKyqF,kBAAmB,KAC1DzqF,KAAK8rF,oBAAsBvmE,YAASvlB,KAAK8rF,oBAAqB,KAGlEnoB,iBAAkB,MACNzxD,EAAWlS,KAAKwC,MAAhB0P,OACAi3E,EAAYnpF,KAAK+B,MAAjBonF,QAEF5qE,EAAOR,KAAUlS,IAAIqG,GAC3B,IAAKqM,EAAM,OAAO,EALL,MAOLge,EAAiBhe,EAAjBge,aACR,OAAKA,GAEE4sD,EAAQz0E,OAAS,GAAKy0E,EAAQA,EAAQz0E,OAAS,GAAGxU,IAAMq8B,EAAar8B,GAGhF,gCAAgCsC,EAAOT,GACnC,OAAIS,EAAM0P,SAAWnQ,EAAM6d,YAAcpd,EAAM2jB,YAAcpkB,EAAMk9B,cACxD,CACHrf,WAAYpd,EAAM0P,OAClB+sB,cAAez8B,EAAM2jB,UACrBiW,cAAc,EACdkuD,iBAAiB,EACjB+C,mBAAoB7qF,EAAM0P,SAAWnQ,EAAM6d,WAAa,EAAI7d,EAAMsrF,mBAClE7D,kBACIhnF,EAAM0P,SAAWnQ,EAAM6d,aAAe7d,EAAMynF,mBAAqBznF,EAAMioF,aAAat1E,OAAS,GACjGs1E,aAAcxnF,EAAM0P,SAAWnQ,EAAM6d,WAAa,GAAK7d,EAAMioF,cAI9D,KAGXh3D,wBAAwBnwB,EAAWC,GAC/B,MAAM2qB,EAAOztB,KAAK0tB,QAAQ1U,QAGpBjW,EAAW,CACbyqB,UAH8CC,EAA1CD,UAIJsF,aAJ8CrF,EAA/BqF,aAKfhF,aAL8CL,EAAjBK,cASjC,OADA9tB,KAAK+C,SAAWA,EACTA,EAGXH,mBAAmBC,EAAWC,EAAWC,GAAW,MAAD,EACjB/C,KAAKwC,MAA3B0P,EADuC,EACvCA,OAAQiU,EAD+B,EAC/BA,UACcnmB,KAAK+B,MAA3BynF,kBAEKxpF,KAAK0tB,QAAQ1U,QAWtBnW,EAAUqP,SAAWA,GAAUrP,EAAUsjB,YAAcA,GACvDnmB,KAAKo/E,iBAAiBltE,EAAQrP,EAAUqP,OAAQiU,EAAWtjB,EAAUsjB,WAI7EvI,sBAAsBC,EAAWC,GAAY,MAAD,EACV9d,KAAKwC,MAA3B0P,EADgC,EAChCA,OAAQiU,EADwB,EACxBA,UADwB,EAEsDnmB,KAAK+B,MAA3FkoF,EAFgC,EAEhCA,aAAcd,EAFkB,EAElBA,QAAS/+E,EAFS,EAETA,SAAUgyB,EAFD,EAECA,aAAckuD,EAFf,EAEeA,gBAAiBd,EAFhC,EAEgCA,kBAExE,OAAI3rE,EAAU3L,SAAWA,IAKrB2L,EAAUsI,YAAcA,IAKxBrI,EAAU0rE,oBAAsBA,IAKhC1rE,EAAUmsE,eAAiBA,KAK1BsD,YAAczvE,EAAUqrE,QAASA,KAKlCrrE,EAAU1T,WAAaA,IAKvB0T,EAAUse,eAAiBA,GAK3Bte,EAAUwsE,kBAAoBA,QAStCtnF,oBAAqB,MAAD,EACchD,KAAKwC,MAA3B0P,EADQ,EACRA,OAAQiU,EADA,EACAA,UAChBnmB,KAAKo/E,iBAAiBltE,EAAQ,KAAMiU,EAAW,MAE/ChN,KAASnM,GAAG,0BAA2BhN,KAAKi6D,2BAC5C9gD,KAASnM,GAAG,2BAA4BhN,KAAKumF,4BAC7CxoE,KAAU/Q,GAAG,2BAA4BhN,KAAKm8B,4BAC9C7jB,IAAatL,GAAG,6BAA8BhN,KAAKqqF,yBACnD/xE,IAAatL,GAAG,8BAA+BhN,KAAKqqF,yBACpD/xE,IAAatL,GAAG,wBAAyBhN,KAAK+pF,yBAC9CzxE,IAAatL,GAAG,kCAAmChN,KAAKkpF,mCACxD5wE,IAAatL,GAAG,iCAAkChN,KAAKqpF,kCACvD/wE,IAAatL,GAAG,6BAA8BhN,KAAK6pF,8BACnDvxE,IAAatL,GAAG,mBAAoBhN,KAAK2iB,oBACzCrK,IAAatL,GAAG,uBAAwBhN,KAAK0iB,wBAC7CpK,IAAatL,GAAG,uBAAwBhN,KAAKqiB,wBAC7C/J,IAAatL,GAAG,wBAAyBhN,KAAKwoE,yBAC9ClwD,IAAatL,GAAG,6BAA8BhN,KAAKuqF,8BACnDjyE,IAAatL,GAAG,0BAA2BhN,KAAKuqF,8BAChDv+E,IAAYgB,GAAG,0BAA2BhN,KAAKiuE,2BAC/CjiE,IAAYgB,GAAG,0BAA2BhN,KAAKkqF,2BAC/Cl+E,IAAYgB,GAAG,uBAAwBhN,KAAKoqF,wBAGhDn9E,uBACIkM,KAAS/L,IAAI,0BAA2BpN,KAAKi6D,2BAC7C9gD,KAAS/L,IAAI,2BAA4BpN,KAAKumF,4BAC9CxoE,KAAU3Q,IAAI,2BAA4BpN,KAAKm8B,4BAC/C7jB,IAAalL,IAAI,6BAA8BpN,KAAKqqF,yBACpD/xE,IAAalL,IAAI,8BAA+BpN,KAAKqqF,yBACrD/xE,IAAalL,IAAI,wBAAyBpN,KAAK+pF,yBAC/CzxE,IAAalL,IAAI,kCAAmCpN,KAAKkpF,mCACzD5wE,IAAalL,IAAI,iCAAkCpN,KAAKqpF,kCACxD/wE,IAAalL,IAAI,6BAA8BpN,KAAK6pF,8BACpDvxE,IAAalL,IAAI,mBAAoBpN,KAAK2iB,oBAC1CrK,IAAalL,IAAI,uBAAwBpN,KAAK0iB,wBAC9CpK,IAAalL,IAAI,uBAAwBpN,KAAKqiB,wBAC9C/J,IAAalL,IAAI,wBAAyBpN,KAAKwoE,yBAC/ClwD,IAAalL,IAAI,6BAA8BpN,KAAKuqF,8BACpDjyE,IAAalL,IAAI,0BAA2BpN,KAAKuqF,8BACjDv+E,IAAYoB,IAAI,0BAA2BpN,KAAKiuE,2BAChDjiE,IAAYoB,IAAI,0BAA2BpN,KAAKkqF,2BAChDl+E,IAAYoB,IAAI,uBAAwBpN,KAAKoqF,wBA2U3ChL,iBAAiBltE,EAAQwtB,EAAgBvZ,EAAW4oB,GAAoB,IAAD,mKACnExwB,EAAOR,KAAUlS,IAAIqG,GACrBs7E,EAAezvE,KAAUlS,IAAI6zB,GAEnC,EAAKwQ,UAAY,CACblnB,KAAM,IAAIE,KACVuF,SAAS,EACTC,WAAW,EACXs8D,qBAAqB,GAEjB96C,EAAc,EAAdA,UAER,EAAKhhB,cAAgB,KACrB,EAAK46D,gBAAkB,GAEjB2D,EAAiB,MAEnBlvE,EAjBqE,wBAkBjEmhB,IAAmBxtB,GAAW,EAAK1P,MAAM+Y,QACzCnZ,IAAgBC,KAAK,CACjB,QAAS,WACT4U,QAAS/E,IAIX8sB,GAAU7Y,GAAa5H,EAAKsf,aAAe,EAC7CvO,EAAgB,EAChB0P,GAAUzgB,EAAKmvE,2BACfp+D,EAAgB/Q,EAAKmvE,2BACdvnE,EACPmJ,EAAgBnJ,EACTsnE,IACPn+D,EAAgBm+D,EAAetnE,WAE7B8F,EAAS+S,GAAU7Y,GAAasnE,GAAkB,EAAI1C,IAAsB,EAC5El1E,EAAQmpB,GAAU7Y,GAAasnE,EAAiB,EAAI1C,IAAsBA,IAEhF76C,EAAUzhB,SAAU,EArCiD,UAsChD,EAAK28D,WAAW7sE,EAAKre,GAAIovB,EAAerD,EAAQpW,GACpES,MAAMvD,IACI,CACH,QAAS,WACTsc,SAAU,GACVO,YAAa,KAElBF,QAAQ,KACPwgB,EAAUzhB,SAAU,IA9C6C,WAsC/DlsB,EAtC+D,OAiDjE2tC,IAAc,EAAKA,UAjD8C,sDAqDrE53B,IAAayX,SAASxtB,EAAO8sB,UAC7B9sB,EAAO8sB,SAAS63C,UAEZmmB,EAAqB,EAAKtrF,MAAMsrF,mBAChCn7E,IAAWwtB,EAzDsD,oBA0DjE2tD,EAAqB1nF,OAAOs2E,YACxB19D,GAAQA,EAAKsf,aAAe,GA3DiC,iBA4DpD7oB,EAAIzS,EAAO8sB,SAAS3a,OAAS,EA5DuB,aA4DpBM,GAAK,GA5De,oBA6DjD9U,EAAOqC,EAAO8sB,SAASra,GAAvB9U,MAEHqC,EAAO8sB,SAASra,GAAGwqB,aACpBt/B,EAAKqe,EAAKmvE,4BACVxtF,EAAKmtF,GAjEgD,iBAmErDA,EAAqBntF,EAnEgC,4DA4DZ8U,IA5DY,wBAyEjEq4E,EAAqBA,IAAuB1nF,OAAOs2E,UAAY,EAAIoR,EAzEF,WA4EjE/D,EAAiBb,GAAmBG,iBACpCziE,EACAmjE,EAAiBb,GAAmBK,kBAC7B9pD,GAAUquD,EACjB/D,EAAiBb,GAAmBI,iBAC7B4E,IACPnE,EAAiBb,GAAmBM,oBAGxC,EAAKuD,2BAA4B,EACjC,EAAK1mF,QAAQynF,EAAoB9qF,EAAO8sB,SAAU,KAC9C,EAAKs6D,qBAAqBL,EAAgB,EAAKvmF,SAAU0qF,GACrDtnE,GACAwnE,YAAiBz7E,EAAQiU,GAE7BhmB,sBAAsB,KAClB,EAAKmsF,2BAA4B,IAGrC,EAAK3B,sBAAsBpoF,EAAQsT,KAIjCc,EAAQ/K,IAAUgL,WACxBoZ,YAAoBrZ,EAAOpU,EAAO8sB,UAClC,EAAK4R,aAAa1+B,EAAO8sB,UAEzBxY,YAAiBF,EAAO,CAACzE,IACzB07E,YAAiBj3E,EAAOzE,GAEpBwtB,IAAmBxtB,GAAW,EAAK1P,MAAM+Y,OA1GwB,oBA4GjEsyE,YAAa37E,IACT,EAAK1P,MAAM1C,QA7GkD,uBA8GrDukE,EAAoB,EAAK7hE,MAAM1C,QAA/BukE,kBACe7oD,YAAgBtJ,IAAWuhB,aAAYvhB,IA/GD,wBAgHjDoyD,EAAyBD,EAAzBC,UAAWC,EAAcF,EAAdE,UAhHsC,UAkHnDC,aAAoBtyD,EAAQoyD,EAAWC,GAlHY,gCAuHrEr0B,EAAUzhB,SAAU,EACpB,EAAK7oB,QAAQ,EAAG,GAAI,KAChBsqC,EAAUzhB,SAAU,IAzH6C,QA6HrEiR,IAAmBxtB,GAAW,EAAK1P,MAAM+Y,QACrCiyE,IACAprF,IAAgBC,KAAK,CACjB,QAAS,YACT4U,QAASyoB,IAGPouD,EAAgBC,YAAiB,EAAKhrF,SAAU,EAAK42C,WAErDjiC,EAAU,EAAK2X,SAASy+D,EAAcnqE,UAC9B,EACoBjM,EAAQlV,MAA9B0P,EADC,EACDA,OAAQiU,EADP,EACOA,UAEhBpI,KAAUiR,kBAAkB0Q,EAAgB,CAAExtB,SAAQiU,YAAW8F,OAAQ6hE,EAAc7hE,WA1I1B,4CAgJ7EgV,aAAa5R,GACT,IAAKA,EAAU,OACf,GAAwB,IAApBA,EAAS3a,OAAc,OAC3B,IAAK2a,EAAS,GAAGpY,QAAS,OAE1B,MAAM+2E,EAAa,KACf5rF,IAAgBC,KAAK,CACjB,QAAS,eACT4U,QAASoY,EAAS,GAAGpY,QACrBmD,YAAaiV,EAAShZ,IAAI1V,GAAKA,EAAET,OAIrC4M,OAAOmhF,SACPD,IAEAhuF,KAAK8pF,gBAAgBh0E,KAAKk4E,GAIlCE,0BAA0B7+D,GAEtB,IAAK,IAAIra,EAAIqa,EAAS3a,OAAS,EAAGM,GAAK,EAAGA,IAAK,CAC3C,IAAI0C,EAAU2X,EAASra,GACvB,GAAI0C,GAAWA,EAAQc,QACnB,OAAQd,EAAQc,QAAQ,UACpB,IAAK,eAAgB,CAAC,IAAD,EACDxY,KAAKmuF,gBAAgBz2E,GADpB,mBACZxX,EADY,KAEjB,GAFiB,KAER,CACKyrB,YAAajU,EAAQc,QAAQC,MAAMC,OACpCouB,MACLl7B,IAAUwiF,oBAAoBluF,EAAIwX,GAG1C,MAEJ,IAAK,iBAAkB,CAAC,IAAD,EACH1X,KAAKquF,kBAAkB32E,GADpB,mBACdxX,EADc,KAEnB,GAFmB,KAEV,CACKwX,EAAQc,QAAQrW,QAAQA,QACzB2kC,MACLl7B,IAAUwiF,oBAAoBluF,EAAIwX,GAG1C,SAsMpB9R,QAAQynF,EAAoBlE,EAAS5yD,GACjCv2B,KAAKyC,SAAS,CAAE4qF,qBAAoBlE,WAAW5yD,GAGnDi0D,eAAe8D,EAAc52E,EAAS6e,GAClC,IAAK7e,EAED,YADI6e,GAAUA,KAIlB,IAAI4yD,EAAU,IAAInpF,KAAK+B,MAAMonF,SAC7B,MAAMxlE,EAAQwlE,EAAQ/yD,UAAUz1B,GAAKA,EAAET,KAAOouF,IAC/B,IAAX3qE,EACAwlE,EAAQ14C,OAAO9sB,EAAO,EAAGjM,GAEzByxE,EAAUnpF,KAAK+B,MAAMonF,QAGzBnpF,KAAKyC,SAAS,CAAE0mF,WAAW5yD,GAG/BmzD,OAAOP,EAASI,EAAUhzD,GACC,IAAnB4yD,EAAQz0E,OAKZ1U,KAAKyC,SAAS,CACV0mF,QAASA,EAAQ7tE,OAAOtb,KAAK+B,MAAMonF,SAASr1D,KAAK,CAACphB,EAAG06B,IAC7C16B,EAAExS,GAAKktC,EAAEltC,IACD,EACDwS,EAAExS,GAAKktC,EAAEltC,GACT,EAGJ,IAEZq2B,GAdKA,GAAUA,IAiBtB80D,WAAWlC,EAAS5yD,GACO,IAAnB4yD,EAAQz0E,OAKZ1U,KAAKyC,SAAS,CACV0mF,QAASA,EAAQ7tE,OAAOtb,KAAK+B,MAAMonF,UACpC5yD,GANCA,GAAYA,IASpBm0D,eAAevB,EAASI,EAAUhzD,GACP,IAAnB4yD,EAAQz0E,OAKZ1U,KAAKyC,S,wVAAL,EACI0mF,QAASnpF,KAAK+B,MAAMonF,QAAQ7tE,OAAO6tE,IAChCI,GACJhzD,GAPKA,GAAUA,IAUtBqzD,cAAcxvE,EAAamc,GAAW,MAC1B4yD,EAAYnpF,KAAK+B,MAAjBonF,QACR,GAAuB,IAAnBA,EAAQz0E,OAER,YADI6hB,GAAUA,KAIlB,MAAMlgB,EAAM,IAAIvB,IAAIsF,EAAY/D,IAAI1V,GAAK,CAACA,EAAGA,KAC7CX,KAAKyC,SAAS,CAAE0mF,QAASA,EAAQ5tE,OAAO5a,IAAM0V,EAAIpB,IAAItU,EAAET,MAAQq2B,GAydpEg4D,iBAAiB72E,EAASkyD,EAAa4kB,EAASC,GAC5C,IAAK/2E,EAAS,OAAO,EADsC,MAGnDT,EAA8DS,EAA9DT,QAAS+R,EAAqDtR,EAArDsR,KAAMwW,EAA+C9nB,EAA/C8nB,YAAa7S,EAAkCjV,EAAlCiV,OAAiB2xD,GAAiB5mE,EAA1Bc,QAA0Bd,EAAjB4mE,cAErD,QAAIkQ,MAIAC,MAIAhuE,YAAcxJ,IAKd2yD,IACC8L,aAAiB9L,IACmB,mBAAjCA,EAAYpxD,QAAQ,UACa,qBAAjCoxD,EAAYpxD,QAAQ,WACnBk2E,aAAa/hE,EAAQi9C,EAAYj9C,SAClC6S,IAAgBoqC,EAAYpqC,aAC3Bnf,aAASpJ,KAAa03E,aAAkBrQ,EAAc1U,EAAY0U,eACnEt1D,EAAO4gD,EAAY5gD,KAAO4lE,OAItCC,gBAAgBn3E,EAASkyD,EAAa4kB,GAClC,GAAIA,EACA,OAAO,EAGX,MAAMxlE,EAAO,IAAIE,KAAoB,IAAfxR,EAAQsR,MACxB8lE,EAAWllB,EAAc,IAAI1gD,KAAwB,IAAnB0gD,EAAY5gD,MAAeA,EAEnE,OACIA,EAAKsvD,gBAAkBwW,EAASxW,eAChCtvD,EAAK+lE,aAAeD,EAASC,YAC7B/lE,EAAK2pD,YAAcmc,EAASnc,UAQpC1vE,SAAU,MAAD,EACsBjD,KAAKwC,MAAxB0P,EADH,EACGA,OAAQqJ,EADX,EACWA,OADX,EAEqFvb,KAAK+B,MAAvFonF,EAFH,EAEGA,QAASkE,EAFZ,EAEYA,mBAAoBjxD,EAFhC,EAEgCA,aAAckuD,EAF9C,EAE8CA,gBAAiBd,EAF/D,EAE+DA,kBAMpE,GAFAxpF,KAAK8sF,SAASjoD,QAEVzI,EACAp8B,KAAKqvB,SAAW,SACb,CACHrvB,KAAKqvB,SAAW,GAChB,IAAK,IAAIra,EAAI,EAAGA,EAAIm0E,EAAQz0E,OAAQM,IAAK,CACrC,MAAM0C,EAAUyxE,EAAQn0E,GAChBiC,EAAuDS,EAAvDT,QAAS+3E,EAA8Ct3E,EAA9Cs3E,eAAgB90E,EAA8BxC,EAA9BwC,IAAK1B,EAAyBd,EAAzBc,QAAyBd,EAAhB8nB,YAC/C,IAAIyvD,GAAa,EACjB,GAAuB,MAAnBD,GAA2B90E,GAA6B,iBAArB1B,EAAQ,UAAoD,iBAArBA,EAAQ,UA8C/E,GAAuB,MAAnBw2E,IAA2B90E,IAA6B,oBAArB1B,EAAQ,UAAuD,iBAArBA,EAAQ,UAA8B,CAC1H,MAAM02E,EAAQ,CAACx3E,GACf,IAAK,IAAIu4B,EAAIj7B,EAAI,EAAGi7B,EAAIj7B,EAAIm6E,KAAwBl/C,EAAIk5C,EAAQz0E,QACxDy0E,EAAQl5C,GAAG++C,iBAAmBA,EADkC/+C,IAEhEi/C,EAAMp5E,KAAKqzE,EAAQl5C,IAM3B,GAAIi/C,EAAMx6E,OAAS,EAAG,CAClB,MAAM/T,EAAI+W,EACJkyD,EAAc50D,EAAI,EAAIm0E,EAAQn0E,EAAI,GAAK,KACvCo6E,EAAcp6E,EAAIk6E,EAAMx6E,OAASy0E,EAAQz0E,OAASy0E,EAAQn0E,EAAIk6E,EAAMx6E,QAAU,KAE9E0vC,EAAWpkD,KAAK6uF,gBAAgBluF,EAAGipE,EAAmB,IAAN50D,GAEhDy5E,EAAgBpB,IAAuB1sF,EAAET,GACzCmvF,IAAoBD,GAAc/B,IAAuB+B,EAAYlvF,GACrEigB,EAAYngB,KAAKuuF,iBAAiB5tF,EAAGipE,EAAmB,IAAN50D,EAASy5E,GAC3Da,EAAgBtvF,KAAKuuF,iBAAiBa,EAAazuF,GAAG,EAAO0uF,GAE7DjR,GAAYgR,GACX1Z,aAAiB0Z,IACgB,mBAAjCA,EAAY52E,QAAQ,UACa,qBAAjC42E,EAAY52E,QAAQ,WACnBk2E,aAAa/tF,EAAEgsB,OAAQyiE,EAAYziE,SACnCtM,aAAS1f,EAAEsW,WAAa03E,aAAkBhuF,EAAE29E,aAAc8Q,EAAY9Q,eACvE39E,EAAE6+B,cAAgB4vD,EAAY5vD,aAC9B8vD,EAEPtvF,KAAKqvB,SAASvZ,KACV,kBAAC,GAAD,CACIvR,IAAG,kBAAa0S,EAAb,2BAAuC+3E,EAAvC,iBAA8D5qC,EAA9D,kBAAgFjkC,EAAhF,iBAAkGi+D,GACrGnhE,IAAKmW,GAAM87D,EAAM9tF,QAAQ,CAACT,EAAGgjB,KAAY3jB,KAAK8sF,SAAStyE,IAAIxF,EAAI2O,EAAOyP,KACtElhB,OAAQ+E,EACRH,WAAYo4E,EAAM74E,IAAI1V,GAAKA,EAAET,IAC7BigB,UAAWA,EACXi+D,SAAUA,EACVC,oBAAqB6Q,EAAM74E,IAAI1V,GAAKA,EAAET,IAAIqtB,KAAK5sB,GAAKA,EAAET,KAAOmtF,GAC7DjpC,SAAUA,EACV/gD,OAAQkY,EAAS,SAAW,UAEpCvG,GAAMk6E,EAAMx6E,OAAS,EACrBu6E,GAAa,QA1F+F,CAChH,MAAMC,EAAQ,CAACx3E,GACf,IAAK,IAAIu4B,EAAIj7B,EAAI,EAAGi7B,EAAIj7B,EAAIm6E,KAAwBl/C,EAAIk5C,EAAQz0E,QACxDy0E,EAAQl5C,GAAG++C,iBAAmBA,EADkC/+C,IAEhEi/C,EAAMp5E,KAAKqzE,EAAQl5C,IAM3B,GAAIi/C,EAAMx6E,OAAS,EAAG,CAClB,MAAM/T,EAAI+W,EACJkyD,EAAc50D,EAAI,EAAIm0E,EAAQn0E,EAAI,GAAK,KACvCo6E,EAAcp6E,EAAIk6E,EAAMx6E,OAASy0E,EAAQz0E,OAASy0E,EAAQn0E,EAAIk6E,EAAMx6E,QAAU,KAE9E0vC,EAAWpkD,KAAK6uF,gBAAgBluF,EAAGipE,EAAmB,IAAN50D,GAEhDy5E,EAAgBpB,IAAuB1sF,EAAET,GACzCmvF,IAAoBD,GAAc/B,IAAuB+B,EAAYlvF,GACrEigB,EAAYngB,KAAKuuF,iBAAiB5tF,EAAGipE,EAAmB,IAAN50D,EAASy5E,GAC3Da,EAAgBtvF,KAAKuuF,iBAAiBa,EAAazuF,GAAG,EAAO0uF,GAE7DjR,GAAYgR,GACX1Z,aAAiB0Z,IACgB,mBAAjCA,EAAY52E,QAAQ,UACa,qBAAjC42E,EAAY52E,QAAQ,WACnBk2E,aAAa/tF,EAAEgsB,OAAQyiE,EAAYziE,SACnCtM,aAAS1f,EAAEsW,WAAa03E,aAAkBhuF,EAAE29E,aAAc8Q,EAAY9Q,eACvE39E,EAAE6+B,cAAgB4vD,EAAY5vD,aAC9B8vD,EAEPtvF,KAAKqvB,SAASvZ,KACV,kBAAC,GAAD,CACIvR,IAAG,kBAAa0S,EAAb,2BAAuC+3E,EAAvC,iBAA8D5qC,EAA9D,kBAAgFjkC,EAAhF,iBAAkGi+D,GACrGnhE,IAAKmW,GAAM87D,EAAM9tF,QAAQ,CAACT,EAAGgjB,KAAY3jB,KAAK8sF,SAAStyE,IAAIxF,EAAI2O,EAAOyP,KACtElhB,OAAQ+E,EACRH,WAAYo4E,EAAM74E,IAAI1V,GAAKA,EAAET,IAC7BigB,UAAWA,EACXi+D,SAAUA,EACVC,oBAAqB6Q,EAAM74E,IAAI1V,GAAKA,EAAET,IAAIqtB,KAAK5sB,GAAKA,EAAET,KAAOmtF,GAC7DjpC,SAAUA,EACV/gD,OAAQkY,EAAS,SAAW,UAEpCvG,GAAMk6E,EAAMx6E,OAAS,EACrBu6E,GAAa,GAkDrB,IAAKA,EAAY,CAOb,MAAMtuF,EAAI+W,EACJkyD,EAAc50D,EAAI,EAAIm0E,EAAQn0E,EAAI,GAAK,KACvCo6E,EAAcp6E,EAAIm0E,EAAQz0E,OAAS,EAAIy0E,EAAQn0E,EAAI,GAAK,KAExDovC,EAAWpkD,KAAK6uF,gBAAgBluF,EAAGipE,EAAmB,IAAN50D,GAEtD,IAAIupE,EAAI,KACR,GAAI7I,aAAiB/0E,GACjB49E,EACI,kBAAC,GAAD,CACIh6E,IAAG,kBAAa5D,EAAEsW,QAAf,eAA6BtW,EAAET,GAA/B,iBAA0CkkD,GAC7CnnC,IAAKmW,GAAMpzB,KAAK8sF,SAAStyE,IAAIxF,EAAGoe,GAChClhB,OAAQvR,EAAEsW,QACVkP,UAAWxlB,EAAET,GACbm+E,oBAAqBgP,IAAuB1sF,EAAET,GAC9CkkD,SAAUA,EACV/gD,OAAQkY,EAAS,SAAW,aAGjC,CACH,MAAMkzE,EAAgBpB,IAAuB1sF,EAAET,GACzCmvF,EAAoBD,GAAe/B,IAAuB+B,EAAYlvF,GACtEigB,EAAYngB,KAAKuuF,iBAAiB5tF,EAAGipE,EAAmB,IAAN50D,EAASy5E,GAC3Da,EAAgBtvF,KAAKuuF,iBAAiBa,EAAazuF,GAAG,EAAO0uF,GAE7DjR,GAAYgR,GACX1Z,aAAiB0Z,IACgB,mBAAjCA,EAAY52E,QAAQ,UACa,qBAAjC42E,EAAY52E,QAAQ,WACnBk2E,aAAa/tF,EAAEgsB,OAAQyiE,EAAYziE,SACpCtM,aAAS1f,EAAEsW,WAAa03E,aAAkBhuF,EAAE29E,aAAc8Q,EAAY9Q,eACtE39E,EAAE6+B,cAAgB4vD,EAAY5vD,aAC9B8vD,EAEP/Q,EACI,kBAAC,GAAD,CACIh6E,IAAG,kBAAa5D,EAAEsW,QAAf,eAA6BtW,EAAET,GAA/B,iBAA0CkkD,EAA1C,kBAA4DjkC,EAA5D,iBAA8Ei+D,GACjFnhE,IAAKmW,GAAMpzB,KAAK8sF,SAAStyE,IAAIxF,EAAGoe,GAChClhB,OAAQvR,EAAEsW,QACVkP,UAAWxlB,EAAET,GACb2+B,aAAcl+B,EAAEg+B,cAChBxe,UAAWA,EACXi+D,SAAUA,EACVC,oBAAqBgP,IAAuB1sF,EAAET,GAC9CkkD,SAAUA,EACV/gD,OAAQkY,EAAS,SAAW,SAKxCvb,KAAKqvB,SAASvZ,KAAKyoE,KAK/B,OACI,yBACIr7E,UAAWkN,IAAW,gBAAiB,CACnC,iCAAkCk6E,IAEtC9J,YAAaxgF,KAAKgtF,qBAClB,yBAAK/vE,IAAKjd,KAAK0tB,QAASxqB,UAAU,wBAAwBoxB,SAAUt0B,KAAK6uB,cACrE,yBAAK3rB,UAAU,sBACf,yBAAK+Z,IAAKjd,KAAK25C,SAAUz2C,UAAU,uBAC9BlD,KAAKqvB,WAGd,kBAAC,GAAD,CAAWnd,OAAQA,IACnB,kBAAC,GAAD,MACCs3E,GACG,kBAAC,GAAD,CAAkBvsE,IAAKjd,KAAKstF,oBAAqB/8E,QAASvQ,KAAKktF,wBAEnE,kBAAC,GAAD,MACA,kBAAC,GAAD,S,OCnkDDj7E,qBAnHf,cAAmCpQ,IAAMC,UACrClC,YAAY4C,GACR0B,MAAM1B,GADS,KAuCnBkgB,uBAAyBte,IAAW,MACxB8N,EAAWlS,KAAKwC,MAAhB0P,OAER,GAAIA,IADgB9N,EAAZ6S,QACgB,OAExB,MAAMsL,EAAQjK,IAAakK,SAAStQ,GAC9Bq9E,EAAchtE,GAASA,EAAM4iD,OAAOzwD,OAAS6N,EAAM4iD,OAAOzwD,OAAS,EAEzE1U,KAAKyC,SAAS,CACV8sF,iBAhDW,KAoDnB/mB,wBAA0BpkE,IAAW,MACzB8N,EAAWlS,KAAKwC,MAAhB0P,OAER,GAAIA,IADgB9N,EAAZ6S,QACgB,OAExB,MAAMsL,EAAQjK,IAAakK,SAAStQ,GAC9Bq9E,EAAchtE,GAASA,EAAM4iD,OAAOzwD,OAAS6N,EAAM4iD,OAAOzwD,OAAS,EAEzE1U,KAAKyC,SAAS,CACV8sF,iBA7DW,KAiEnBtlB,8BAAgC7lE,IAC5BpE,KAAKyC,SAAS,CACV+sF,cAAel3E,IAAawwC,cAAchvC,QAnE/B,KAuEnB/U,YAAc,KACgB/E,KAAK+B,MAAvBytF,cACY,GAChB52E,cAGJ07C,eA1EA,MAAM/xC,EAAQjK,IAAakK,SAAShgB,EAAM0P,QAE1ClS,KAAK+B,MAAQ,CACTytF,cAAel3E,IAAawwC,cAAchvC,KAC1Cy1E,YAAahtE,GAASA,EAAM4iD,OAAOzwD,OAAS6N,EAAM4iD,OAAOzwD,OAAS,GAI1EkJ,sBAAsBC,EAAWC,EAAWoK,GAAc,MAAD,EACdloB,KAAK+B,MAApCytF,EAD6C,EAC7CA,cAD6C,EAC9BD,YAEvB,OAAIzxE,EAAU0xE,gBAAkBA,IAI5B1xE,EAAUyxE,aACH,GAMfvsF,oBACIsV,IAAatL,GAAG,6BAA8BhN,KAAKiqE,+BACnD3xD,IAAatL,GAAG,8BAA+BhN,KAAKiqE,+BACpD3xD,IAAatL,GAAG,wBAAyBhN,KAAKwoE,yBAC9ClwD,IAAatL,GAAG,uBAAwBhN,KAAK0iB,wBAGjDzV,uBACIqL,IAAalL,IAAI,6BAA8BpN,KAAKiqE,+BACpD3xD,IAAalL,IAAI,8BAA+BpN,KAAKiqE,+BACrD3xD,IAAalL,IAAI,wBAAyBpN,KAAKwoE,yBAC/ClwD,IAAalL,IAAI,uBAAwBpN,KAAK0iB,wBA4ClDzf,SAAU,MACEoP,EAAMrS,KAAKwC,MAAX6P,EADH,EAEkCrS,KAAK+B,MAApCytF,EAFH,EAEGA,cAAeD,EAFlB,EAEkBA,YAEvB,IAAIpxE,EAAQ9L,EAAE,kBAOd,OANoB,IAAhBk9E,EACApxE,EAAQ9L,EAAE,iBACHk9E,EAAc,IACrBpxE,EAAK,UAAMoxE,EAAN,YAAqBl9E,EAAE,oBAI5B,yBAAKnP,UAAWkN,IAAW,iBAAkB,CAAE,2BAA4Bo/E,EAAgB,KACvF,kBAACt3E,EAAA,EAAD,CACIhV,UAAU,sCACVqN,QAASvQ,KAAK+E,aACd,kBAAC,GAAD,OAEJ,yBAAK7B,UAAU,0BACX,kBAAC,GAAD,CAAegwC,MAAOs8C,IACtB,yBAAKtsF,UAAWkN,IAAW,gBAAiB,SACxC,0BAAMlN,UAAU,yBAAyBib,S,OCpBlDlM,qBAlFf,cAA6BpQ,IAAMC,UAAW,eAAD,iCAEzCC,MAAQ,GAFiC,KA2BzC0tF,yBAA2BrrF,IACWpE,KAAKwC,MAA/B0P,SACW9N,EAAX8N,QAIRlS,KAAKyC,SAAS,CACVitF,QAAQ,KAlCyB,KAsCzCC,0BAA4BvrF,IACxBpE,KAAKyC,SAAS,CACVitF,QAAQ,KAxCyB,KA4CzCE,eA5CyC,qBA4CxB,4BAAAl9E,EAAA,qDACLR,EAAW,EAAK1P,MAAhB0P,OAERkzD,YAAoBlzD,EAAQ,MAHf,yCAxCjB,gCAAgC1P,EAAOT,GAAQ,MACnC6d,EAAe7d,EAAf6d,WACA1N,EAAW1P,EAAX0P,OACR,OAAI0N,IAAe1N,EACR,CACH0N,WAAY1N,EACZw9E,QAAQ,GAIT,KAGX1sF,oBACIsV,IAAatL,GAAG,yBAA0BhN,KAAKyvF,0BAC/Cn3E,IAAatL,GAAG,0BAA2BhN,KAAK2vF,2BAGpD1iF,uBACIqL,IAAalL,IAAI,yBAA0BpN,KAAKyvF,0BAChDn3E,IAAalL,IAAI,0BAA2BpN,KAAK2vF,2BA0BrD1sF,SAAU,MAAD,EACiBjD,KAAKwC,MAAnB0P,EADH,EACGA,OAAQG,EADX,EACWA,EAEhB,IADmBrS,KAAK+B,MAAhB2tF,OACK,OAAO,KAEpB,MAAMG,EAAgBpa,YAAevjE,GAAUG,EAAE,oBAAsBA,EAAE,sBAEzE,OACI,yBAAKnP,UAAU,mBACX,yBAAKA,UAAU,2BACX,yBAAKA,UAAU,sBACf,yBAAKA,UAAU,0BACX,kBAAC,GAAD,CAAsBgP,OAAQA,IAC9B,kBAAC,GAAD,CAAcA,OAAQA,EAAQqJ,OAAQ,CAAE,QAAS,gCACjD,kBAAC,GAAD,CAAem0B,QAASmgD,EAAepsB,UAAWzjE,KAAK4vF,uB,0CCqFhEx6E,OALCC,YACZpD,cACAqD,IAGWF,CA5If,cAAoCvT,IAAMC,UAAW,eAAD,oBAChDC,MAAQ,CACJimC,SAAU,MAFkC,KAKhDmlB,gBAAkB9oD,IACdrE,KAAKkwB,WAAW7rB,EAAM4jC,gBANsB,KAShD/X,WAAa8X,IACThoC,KAAKyC,SAAS,CAAEulC,cAV4B,KAahDjjC,YAAc,KACV/E,KAAKyC,SAAS,CAAEulC,SAAU,QAdkB,KAiBhDzwB,eAAiB,KACbvX,KAAK+E,cADc,MAGXsN,EAAMrS,KAAKwC,MAAX6P,EAEFmF,EAAOxX,KAAK8vF,gBAAgBhvB,KAAaivB,YAC1Cv4E,IAEL/E,EAAK+E,GAELxX,KAAKyX,sBAAsBpF,EAAE,iBA3Be,KA8BhDy9E,gBAAkBC,IACd,IAAKA,EAAY,MAAO,GADI,MAGpBp5C,EAASo5C,EAATp5C,KACR,IAAKA,EAAM,MAAO,GAElB,MAAM9kB,EAAoBjd,IAAY/I,IAAI,YAE1C,OAAQgmB,EAAoBA,EAAkBtnB,MAAQ,yBAA2B,eAAiBosC,GAtCtD,KAyChDl/B,sBAAwBC,IAAY,MAAD,EACY1X,KAAKwC,MAAxCmV,EADuB,EACvBA,gBAAiBC,EADM,EACNA,cAEnBC,EAAWF,EAAgBD,EAAS,CACtCI,iBAAkBC,IAClBC,kBAAkB,EAClBC,OAAQ,CACJ,kBAACC,EAAA,EAAD,CACI3T,IAAI,QACJ4T,aAAW,QACXC,MAAM,UACNlV,UAAU,4BACVqN,QAAS,IAAMqH,EAAcC,IAC7B,kBAAC/G,EAAA,EAAD,WAtDgC,KA4DhDk/E,YAAc,KACVhwF,KAAK+E,cAEL,MAAMyS,EAAOxX,KAAK8vF,gBAAgBhvB,KAAaivB,YAC/C,IAAKv4E,EAAM,OAEXpV,IAAgBkG,aAAa,CACzB,QAAS,yBACTynF,WAAY,OAGhB,MAAMl3E,EAAsB,CACxB,QAAS,mBACTxL,KAAM,CACF,QAAS,gBACTA,KAAMmK,EACN8B,SAAU,MAEdM,0BAA0B,EAC1BC,aAAa,GAGjBvC,YAAQuB,IAGZ5V,SAAU,MAAD,EACoBjD,KAAKwC,MAAtB6P,EADH,EACGA,EAAGnP,EADN,EACMA,UACH8kC,EAAahoC,KAAK+B,MAAlBimC,SAER,OACI,oCACI,kBAAC9vB,EAAA,EAAD,CACIhV,UAAWA,EACXiV,aAAW,QACXuE,KAAMuN,QAAQ+d,GACdz3B,QAASvQ,KAAKmtD,iBACd,kBAACrZ,GAAD,OAEJ,kBAAC5K,GAAA,EAAD,CACIhpC,GAAG,mBACH8nC,SAAUA,EACVtrB,KAAMuN,QAAQ+d,GACdmB,mBAAoB,KACpBC,sBAAoB,EACpB6mD,qBAAqB,EACrB5mD,qBAAqB,EACrBtiB,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,SAEhBnK,QAAS9c,KAAK+E,aACd,kBAACqiB,GAAA,EAAD,CAAU7W,QAASvQ,KAAKuX,gBACpB,kBAACmK,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACK,GAAA,EAAD,CAAcC,QAAS3P,EAAE,eAE7B,kBAAC+U,GAAA,EAAD,CAAU7W,QAASvQ,KAAKgwF,aACpB,kBAACtuE,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACK,GAAA,EAAD,CAAcC,QAAS3P,EAAE,yB,OC2OlCJ,qBArWf,cAA+BpQ,IAAMC,UACjClC,YAAY4C,GACR0B,MAAM1B,GADS,KAkDnB0tF,iCAAmC9rF,IAAW,MAClC2rF,EAAejvB,KAAfivB,WAER/vF,KAAKyC,SAAS,CAAEstF,gBArDD,KAwDnBI,6BAA+B/rF,IAAW,MAC9B2rF,EAAe3rF,EAAf2rF,WAQR,GANA/vF,KAAKyC,SAAS,CAAEstF,cAAc,KAC1B/kF,WAAW,KACPhL,KAAK6uB,gBACN,KAGHkhE,EAAY,CACZ,MAAMp5E,EAAQ/K,IAAUgL,WACxBw5E,YAAsBz5E,EAAOo5E,KAnElB,KAuEnBhrF,YAAc,KACV3C,IAAgBkG,aAAa,CACzB,QAAS,yBACTynF,WAAY,QA1ED,KA8EnBn8C,WAAa,KAAO,MACRm8C,EAAe/vF,KAAK+B,MAApBguF,WACR,IAAKA,EAAY,OAFF,MAIPM,EAAiBN,EAAjBM,aAERjuF,IAAgBC,KAAK,CACjB,QAAS,mBACTiuF,OAAQP,EAAW7vF,GACnBmwF,cAAeA,IAGnBrwF,KAAK+E,eA1FU,KA6FnBmiF,mBAAqBC,IAAc,MAGzBhlF,EAFiBnC,KAAK+B,MAApBguF,WACAzuB,SACiBviD,KAAKpe,GAAKA,EAAEwB,QAAQjC,KAAOinF,GACpD,IAAKhlF,EAAS,OAEd,MAAMwU,EAAQ/K,IAAUgL,WACxBwwE,YAAmBzwE,EAAOxU,EAAS,MAEXnC,KAAKwnF,oBAAoBL,GACjC/lF,QAAQT,IACpBymF,YAAmBzwE,EAAOhW,EAAG,SAxGlB,KA4GnB6mF,oBAAsBL,IAAc,MACxB4I,EAAe/vF,KAAK+B,MAApBguF,WACR,IAAKA,EAAY,MAAO,GAFO,MAIvBzuB,EAAayuB,EAAbzuB,SACR,IAAKA,EAAU,MAAO,GAEtB,MAAMmmB,EAAU,GACV9jE,EAAQ29C,EAASlrC,UAAUz1B,GAAKA,EAAEwB,QAAQjC,KAAOinF,GACvD,IAAe,IAAXxjE,EAAc,MAAO,GAEzB,MACMw/D,EAAMpiF,KAAKgP,MAAM4T,EADE,GAEnB+jE,EAAS/jE,EAFU,EAInBgkE,EAAUxE,EAAM,EAChByE,EAAUzE,EAAM,EAChB0E,EAAaH,EAAS,EACtBI,EAAaJ,EAAS,EA6B5B,OA3BIC,GAAW,IACPE,GAAc,GACdJ,EAAQ3xE,KAXS,EAWe6xE,EAAUE,GAE9CJ,EAAQ3xE,KAba,EAaW6xE,EAAUD,GACtCI,EAdiB,GAejBL,EAAQ3xE,KAfS,EAee6xE,EAAUG,IAI9CD,GAAc,GACdJ,EAAQ3xE,KApBa,EAoBWqtE,EAAM0E,GAEtCC,EAtBqB,GAuBrBL,EAAQ3xE,KAvBa,EAuBWqtE,EAAM2E,GAGtCF,EAAU7mF,KAAKgnF,KAAKzmB,EAAS5sD,OA1BR,KA2BjBmzE,GAAc,GACdJ,EAAQ3xE,KA5BS,EA4Be8xE,EAAUC,GAE9CJ,EAAQ3xE,KA9Ba,EA8BW8xE,EAAUF,GACtCI,EA/BiB,GAgCjBL,EAAQ3xE,KAhCS,EAgCe8xE,EAAUE,IAI3CL,EAAQpxE,IAAIrB,GAAKssD,EAAStsD,KA3JlB,KAiMnBjL,cAAgB,KAEZ/J,KAAKyC,SAAS,CAAEN,QADA,OAEhBC,IAAgBkG,aAAa,CACzB,QAAS,6BACTnG,QAJY,OAMhBnC,KAAK4lF,WAAY,EACjB/+E,SAASsG,oBAAoB,UAAWnN,KAAK+J,gBAzM9B,KA4MnBihE,iBAAmB3mE,IACf,MAAM8iF,EAAYxhF,OAAOtB,EAAM4jC,cAAcwmB,QAAQ04B,WAC/ChlF,EAAUnC,KAAKgoF,WAAWb,GAC3BhlF,GAEAnC,KAAK4lF,YAEV5lF,KAAKyC,SAAS,CAAEN,YAChBC,IAAgBkG,aAAa,CACzB,QAAS,6BACTnG,YAEJnC,KAAKknF,mBAAmBC,KAxNT,KA2NnBh9E,gBAAkB9F,IACd,MAAM8iF,EAAYxhF,OAAOtB,EAAM4jC,cAAcwmB,QAAQ04B,WAC/ChlF,EAAUnC,KAAKgoF,WAAWb,GAChC,GAAKhlF,EAcL,OAZAnC,KAAKyC,SAAS,CAAEN,YAChBC,IAAgBkG,aAAa,CACzB,QAAS,6BACTnG,YAEJnC,KAAKknF,mBAAmBC,GAExBnnF,KAAK4lF,WAAY,EACjB/+E,SAASkG,iBAAiB,UAAW/M,KAAK+J,eAE1C1F,EAAM6B,iBACN7B,EAAM4B,mBACC,GA5OQ,KA+OnB4oB,aAAe,KACX,MAAMrW,EAAUxY,KAAKuwF,WAAWv3E,QAChC,IAAKR,EACD,OAGJ,MAAMg4E,EAAYh4E,EAAQsa,aAAeta,EAAQsV,aAC3CN,EAAYgjE,GAAmC,IAAtBh4E,EAAQgV,UACjCijE,EAAeD,GAAch4E,EAAQgV,UAAYhV,EAAQsV,eAAkBtV,EAAQsa,aACnF7O,EAASusE,GAAah4E,EAAQgV,UAAY,GAAMhV,EAAQgV,UAAYhV,EAAQsV,aAAgBtV,EAAQsa,aAE1G9yB,KAAKyC,SAAS,CACV+qB,YACAijE,eACAxsE,YA7PW,KAiQnBysE,iBAAmB,CAAC7nF,EAAQ8nF,KAAiB,MACjC33E,EAAYhZ,KAAKuwF,WAAjBv3E,QACR,IAAKA,EAAS,OAAO,EAErB,MAAM43E,EAAc53E,EAAQ63E,wBACtBppF,EAAMkpF,EAAYlpF,IAAMmpF,EAAYnpF,IACpCqpF,EAASH,EAAYG,OAASF,EAAYE,OAEhD,QAAIrpF,EAAMmpF,EAAY72E,WAKlB+2E,GAAWF,EAAY72E,SA3Q3B/Z,KAAKuwF,WAAa1uF,IAAMya,YAExBtc,KAAK+B,MAAQ,CACTguF,WAAYjvB,KAAaivB,WACzB5I,UAAW,EACXljE,QAAQ,EACRuJ,WAAW,EACXijE,cAAc,GAItB7yE,sBAAsBC,EAAWC,EAAWoK,GAAc,MAAD,EACYloB,KAAK+B,MAA9DguF,EAD6C,EAC7CA,WAAY5tF,EADiC,EACjCA,QAAS8hB,EADwB,EACxBA,OAAQuJ,EADgB,EAChBA,UAAWijE,EADK,EACLA,aAEhD,OAAIV,IAAejyE,EAAUiyE,aAIzB5tF,IAAY2b,EAAU3b,UAItB8hB,IAAWnG,EAAUmG,SAIrBuJ,IAAc1P,EAAU0P,WAIxBijE,IAAiB3yE,EAAU2yE,gBAOnCztF,oBACI89D,KAAa9zD,GAAG,yBAA0BhN,KAAKmwF,8BAC/CrvB,KAAa9zD,GAAG,6BAA8BhN,KAAKkwF,kCAGvDjjF,uBACI6zD,KAAa1zD,IAAI,yBAA0BpN,KAAKmwF,8BAChDrvB,KAAa1zD,IAAI,6BAA8BpN,KAAKkwF,kCAwIxDlI,WAAWb,GAAY,MACX4I,EAAe/vF,KAAK+B,MAApBguF,WACR,IAAKA,EAAY,OAAO,KAFN,MAIVzuB,EAAayuB,EAAbzuB,SAEF8mB,EAAe9mB,EAASlrC,UAAUz1B,GAAKA,EAAEwB,QAAQjC,KAAOinF,GAC9D,OAAyB,IAAlBiB,EAAsB9mB,EAAS8mB,GAAgB,KAyF1DnlF,SAAU,MACEoP,EAAMrS,KAAKwC,MAAX6P,EADH,EAE4DrS,KAAK+B,MAA9DguF,EAFH,EAEGA,WAAY5tF,EAFf,EAEeA,QAAS8hB,EAFxB,EAEwBA,OAAQuJ,EAFhC,EAEgCA,UAAWijE,EAF3C,EAE2CA,aAChD,IAAKV,EAAY,OAAO,KAHnB,MAKG5xE,EAAkC4xE,EAAlC5xE,MAAOmjD,EAA2ByuB,EAA3BzuB,SAAU+uB,EAAiBN,EAAjBM,aAEnB/iE,EAAQg0C,EAASjrD,IAAI1V,GACvB,yBACIuC,UAAU,0BACVqB,IAAK5D,EAAEwB,QAAQjC,GACfmoF,kBAAiB1nF,EAAEwB,QAAQjC,GAC3B6Q,aAAc/Q,KAAKgrE,iBACnB36D,YAAarQ,KAAKmK,iBAClB,kBAACy5E,GAAA,EAAD,CACIr/E,IAAK5D,EAAEwB,QAAQjC,GACfgD,UAAU,kCACVf,QAASxB,EACTi9C,UAAU,EACVvyC,MAAM,EACNlI,YAAamlF,KACbC,SAAO,EACPllF,OAAQC,KAAkBytF,YAC1BC,eAAgBhxF,KAAK0wF,mBAEzB,yBAAKxtF,UAAU,iCAAiCvC,EAAEqB,SAI1D,OACI,kBAAC,IAAD,CACIkB,UAAWkN,IACP,qBACA,CAAE,4BAA6B6T,GAC/B,CAAE,gCAAiCuJ,GACnC,CAAE,mCAAoCijE,IAE1C/zE,MAAI,EACJC,QAASC,IACTC,mBAAoB,EACpBC,QAAS9c,KAAK+E,YACdgY,kBAAgB,gCAChB1L,QAAS,CAAEy5C,MAAO,6BAClB,kBAAC,IAAD,CACI5nD,UAAWkN,IAAW,2BAA4B,CAAE,8BAA+B6Z,QAAQ9nB,KAC3FwwD,mBAAiB,GACjB,kBAACz6C,EAAA,EAAD,CACIC,aAAW,QACX5H,QAASvQ,KAAK+E,aACd,kBAAC+L,EAAA,EAAD,OAEJ,kBAACmR,GAAA,EAAD,CAAYC,QAAQ,KAAKhiB,GAAG,gCAAgCgD,UAAU,sCAAsCif,QAAM,GAC7GhE,GAEL,kBAAC,GAAD,OAEJ,kBAAC,KAAD,CACIlB,IAAKjd,KAAKuwF,WACVl/E,QAAS,CAAE9F,KAAM6E,IAAW,kCAAmC,sBAC/DmvE,YAAav/E,KAAK6K,gBAClB20E,WAAYx/E,KAAKy/E,eACjBnrD,SAAUt0B,KAAK6uB,cACdvB,GAEL,kBAAChQ,EAAA,EAAD,CAAepa,UAAWkN,IAAW,6BAA8B,CAAE,8BAA+B6Z,QAAQ9nB,MACxG,kBAACob,EAAA,EAAD,CAAQra,UAAU,mCAAmCs7C,kBAAgB,EAACt8B,QAAQ,YAAY9J,MAAOi4E,EAAe,YAAc,UAAW9/E,QAASvQ,KAAK4zC,YACnIvhC,EAAfg+E,EAAiB,iBAAsB,iBAG/C,kBAACzuF,GAAA,EAAD,CAAgBO,QAASA,Q,OC1V3B8P,qBApBf,cAAoCpQ,IAAMC,UAAW,eAAD,oBAEhDyD,YAAc,KACV0rF,gBAGJhuF,SAAU,MACEoP,EAAMrS,KAAKwC,MAAX6P,EAER,OACI,yBAAKnP,UAAU,4BAA4BqN,QAASvQ,KAAKuF,aACrD,yBAAKrC,UAAU,sBAAsBmP,EAAE,cAAgB,W,OCiPxD6+E,OAnPf,cAA4BpvF,YACxBlC,YAAY4C,GACR0B,MAAM1B,GADS,KA0DnB2uF,mCAAqC/sF,IACjCpE,KAAKyC,SAAS,CACV2uF,gBAAiB,QA5DN,KAgEnBC,yBAA2BjtF,IAAW,MAC1BtE,EAAYsE,EAAZtE,QAERE,KAAKyC,SAAS,CACVw4D,kBAAmBn7D,KApER,KAwEnBwxF,2BAA6BltF,IAAW,MAC5Bu7C,EAAc3/C,KAAK+B,MAAnB49C,UACR,IAAKA,EAAW,OAFmB,MAI3B94C,EAAa84C,EAAb94C,SACR,IAAKA,EAAU,OALoB,MAOjB8E,EAAS9E,EAAnBA,SACR,IAAK8E,EAAM,OARwB,MAU3B9C,EAAWzE,EAAXyE,OAER,GAAI8C,EAAKzL,KAAO2I,EAAhB,CAIA,GAAI7I,KAAKuxF,eACDvxF,KAAKuxF,cAAc5xC,YAAcA,EAAW,CAE5C,GADa,IAAIz2B,KAASlpB,KAAKuxF,cAAczwF,KAClC,IAIP,YAHAkK,WAAW,KACPhL,KAAKya,eACN,KAMfza,KAAKya,gBApGU,KAuGnBilC,oCAAsCt7C,IAAW,MACrCu7C,EAAc3/C,KAAK+B,MAAnB49C,UACR,IAAKA,EAAW,OAF4B,MAIpC94C,EAAa84C,EAAb94C,SACR,IAAKA,EAAU,OAL6B,MAOpCmT,EAAcnT,EAAdmT,UACR,IAAKA,EAAW,OAR4B,MAUpCrO,EAASqO,EAATrO,KACR,IAAKA,EAAM,OAXiC,MAapC9C,EAAWzE,EAAXyE,OAEJ8C,EAAKzL,KAAO2I,IAIhB7I,KAAKuxF,cAAgB,CACjB5xC,YACA7+C,KAAM,IAAIooB,MAEdlpB,KAAKya,gBA9HU,KAiInB+2E,6BAA+BptF,IAAW,MAC9Bu7C,EAAcv7C,EAAdu7C,UAER3/C,KAAKuxF,cAAgB,CACjB5xC,YACA7+C,KAAM,IAAIooB,MAEdlpB,KAAKyC,SAAS,CACVk9C,eAzIW,KA6InB8xC,oCAAsCrtF,IAClCpE,KAAKya,eA9IU,KAiJnBqe,qBAAuB10B,IAAW,MACtB62D,EAAsBj7D,KAAK+B,MAA3Bk5D,kBACY/oD,EAA+D9N,EAA3E20B,WAAmC5S,EAAwC/hB,EAAvDyqC,cAAmCuiD,EAAoBhtF,EAA7BtE,QAEtDE,KAAKyC,SAAS,CACVyP,SACAiU,YACAirE,kBACAn2B,kBAAmBm2B,GAAmBA,EAAgBH,gBAAkB,KAAMh2B,KAzJnE,KA6JnBsxB,eAAiB,KACbvsF,KAAK0xF,aAAanF,kBA9JH,KAiKnBQ,cAAgB,KACZ/sF,KAAK0xF,aAAa3E,iBAlKH,KAqKnBP,gBAAkB,KACdxsF,KAAK0xF,aAAalF,mBAnKlBxsF,KAAK+B,MAAQ,CACTmQ,OAAQiH,KAAS0oB,YACjB1b,UAAWhN,KAAS21B,eACpB0gD,cAAe,EACf7vC,UAAW,KACXgyC,aAAc,KACd12B,kBAAmB,KACnBm2B,gBAAiB,MAIzBxzE,sBAAsBC,EAAWC,GAAY,MAAD,EACoD9d,KAAK+B,MAAzFmQ,EADgC,EAChCA,OAAQiU,EADwB,EACxBA,UAAWqpE,EADa,EACbA,cAAe7vC,EADF,EACEA,UAAWsb,EADb,EACaA,kBAAmBm2B,EADhC,EACgCA,gBACxE,OAAItzE,EAAU5L,SAAWA,IAGrB4L,EAAUqI,YAAcA,IAGxBrI,EAAU0xE,gBAAkBA,IAG5B1xE,EAAU6hC,YAAcA,IAGxB7hC,EAAUm9C,oBAAsBA,GAGhCn9C,EAAUszE,kBAAoBA,MAOtCpuF,oBACImW,KAASnM,GAAG,oCAAqChN,KAAKyxF,qCACtDt4E,KAASnM,GAAG,qBAAsBhN,KAAK84B,sBACvC3f,KAASnM,GAAG,yBAA0BhN,KAAKqxF,0BAC3CtzE,KAAU/Q,GAAG,6BAA8BhN,KAAKwxF,8BAChDzzE,KAAU/Q,GAAG,mCAAoChN,KAAKmxF,oCACtDvlF,IAAUoB,GAAG,2BAA4BhN,KAAKsxF,4BAC9C1lF,IAAUoB,GAAG,oCAAqChN,KAAK0/C,qCAG3DzyC,uBACIkM,KAAS/L,IAAI,oCAAqCpN,KAAKyxF,qCACvDt4E,KAAS/L,IAAI,qBAAsBpN,KAAK84B,sBACxC3f,KAAS/L,IAAI,yBAA0BpN,KAAKqxF,0BAC5CtzE,KAAU3Q,IAAI,6BAA8BpN,KAAKwxF,8BACjDzzE,KAAU/Q,GAAG,mCAAoChN,KAAKmxF,oCACtDvlF,IAAUwB,IAAI,2BAA4BpN,KAAKsxF,4BAC/C1lF,IAAUwB,IAAI,oCAAqCpN,KAAK0/C,qCAkH5Dz8C,SAAS,QAiCwEjD,KAAK+B,MAA1EmQ,EAjCH,EAiCGA,OAAQiU,EAjCX,EAiCWA,UAAWirE,EAjCtB,EAiCsBA,gBAAiBzxC,EAjCvC,EAiCuCA,UAAWsb,EAjClD,EAiCkDA,kBAEvD,IAAI3zD,EAAQ,KACRkhB,EAAM,KACV,GAAIm3B,EAAW,CAAC,MACJ94C,EAAa84C,EAAb94C,SACR,GAAIA,EAAU,CAAC,MACHmT,EAA8BnT,EAA9BmT,UAAqBrO,EAAS9E,EAAnBA,SACf8E,IACA6c,EAAMD,YAAO5c,KAGZ6c,GAAOxO,IACRwO,EAAMD,YAAOvO,EAAUrO,OAI/BrE,EAAQ,CACJqhB,gBAAiBH,EAAG,cAAUA,EAAV,KAAmB,MAI/C,OACI,yBAAKtlB,UAAU,iBAAiBoE,MAAOA,GACnC,yBAAKpE,UAAU,sBACf,yBAAKA,UAAU,0BACX,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAQgP,OAAQA,IAChB,kBAAC,GAAD,CAAc+K,IAAKA,GAAQjd,KAAK0xF,aAAez0E,EAAM/K,OAAQA,EAAQiU,UAAWA,EAAWrmB,QAASsxF,IACpG,kBAAC,GAAD,CAAQl/E,OAAQA,EAAQpS,QAASsxF,KAEpCn2B,GAAqB,kBAAC,GAAD,MACtB,kBAAC,GAAD,CAAgB/oD,OAAQA,IACxB,kBAAC,GAAD,MACA,kBAAC,GAAD,S,gBCpPhB,MAAM0/E,GAAc,IAAI98E,IAiCTM,OAPCC,YACZic,cACAugE,KAKWz8E,CA/Bf,cAAsBvT,IAAM4sC,cACxBxrC,SAAU,MAAD,EACwBjD,KAAKwC,MAA1BsvF,EADH,EACGA,aAAcpjB,EADjB,EACiBA,GACtB,IAAKA,EAAI,OAAO,KAFX,MAIGqjB,EAAwBrjB,EAAxBqjB,YAAaC,EAAWtjB,EAAXsjB,OACrB,IAAKD,EAAa,OAElBH,GAAY/sD,QACZ,MAAMotD,EAASF,EAAY17E,IAAI,CAAC1V,EAAGgjB,IAAU4qD,aAAa5tE,EAAG+tE,EAAI/qD,EAAO1G,IAAS20E,GAAYp3E,IAAI7Z,EAAGsc,MAEpG,OACI,6BAASA,IAAK60E,EAAcI,IAAKF,EAAS,MAAQ,OAC7CC,MCrBFzuF,gBACX,0BAAMC,EAAE,4bACR,Q,OCCJ,MAAM0uF,WAAqBtwF,IAAMC,UAC7BlC,YAAY4C,GACR0B,MAAM1B,GADS,KAkCnB+C,YAAclB,IACVA,EAAM4B,mBAnCS,KAsCnB4oB,aAAe,KACX,MAAM5K,EAASjkB,KAAKm7C,UAAUniC,QAC9B,IAAKiL,EAAQ,OAEb,MAAMxc,EAA2B,IAArBwc,EAAOuJ,WAAmBvJ,EAAO6O,aAAe7O,EAAO6J,aAC7DgjE,EAAS7sE,EAAOuJ,UAAYvJ,EAAO6J,eAAiB7J,EAAO6O,cAAgB7O,EAAO6O,aAAe7O,EAAO6J,aAE9G9tB,KAAKyC,SAAS,CACVgF,MACAqpF,YA5CJ9wF,KAAK+B,MAAQ,CACT0F,KAAK,EACLqpF,QAAQ,GAGZ9wF,KAAKm7C,UAAYt5C,IAAMya,YAG3BsB,sBAAsBC,EAAWC,EAAWoK,GAAc,MAC9C7a,EAASrN,KAAKwC,MAAd6K,KAD6C,EAE7BrN,KAAK+B,MAArB0F,EAF6C,EAE7CA,IAAKqpF,EAFwC,EAExCA,OAEb,OAAIjzE,EAAUxQ,OAASA,IACnByQ,EAAUrW,MAAQA,GAClBqW,EAAUgzE,SAAWA,GAK7B9tF,oBACIhD,KAAK6uB,eAGTjsB,mBAAmBC,EAAWC,EAAWC,GAAW,MACxCsK,EAASrN,KAAKwC,MAAd6K,KAEJxK,EAAUwK,OAASA,GACnBrN,KAAK6uB,eAqBb5rB,SAAU,MACEoK,EAASrN,KAAKwC,MAAd6K,KADH,EAEmBrN,KAAK+B,MAArB0F,EAFH,EAEGA,IAAKqpF,EAFR,EAEQA,OAEb,OACI,yBAAK5tF,UAAU,gBAAgBqN,QAASvQ,KAAKuF,aACzC,yBACI0X,IAAKjd,KAAKm7C,UACVj4C,UAAWkN,IACP,oBACA,wBAAyB,CACrB,4BAA6B3I,EAC7B,+BAAgCqpF,EAChC,8BAA+BrpF,IAAQqpF,IAE/Cx8D,SAAUt0B,KAAK6uB,cACf,yBAAK3rB,UAAU,sBAAsBmK,MAWzD8kF,GAAa/zE,aAAe,GAEb+zE,U,SCuKAC,OA9Of,cAA4CvwF,IAAMC,UAC9ClC,YAAY4C,GACR0B,MAAM1B,GADS,KAgEnB6vF,+BAAiCjuF,IAAW,MAChC6G,EAAc7G,EAAd6G,UACHA,GAEYjL,KAAK+B,MAAd4J,KACCzL,KAAO+K,EAAUpC,QAE1BzG,IAAgBkG,aAAa,CACzB,QAAS,uCACTkQ,QAAS,QAzEE,KAwFnBi4D,wBAA0BrsE,IAAW,MACzByE,EAAWzE,EAAXyE,OADwB,EAER7I,KAAKwC,MAArB+f,EAFwB,EAExBA,MAAOzI,EAFiB,EAEjBA,KACPnO,EAAS3L,KAAK+B,MAAd4J,KAER,GAAIA,GAAQA,EAAKzL,KAAO2I,EAAQ,CAAC,MAAD,EAC+BypF,YAAc/vE,EAAOzI,GADpD,mBACrB7I,EADqB,KACd8I,EADc,KACNpO,EADM,KACA+zD,EADA,KACUiR,EADV,KAG5B3wE,KAAKyC,SAAS,CACVwO,QACA8I,SACApO,OACA6c,IAAKD,YAAO5c,GACZglE,oBACAjR,eAtGO,KA2GnB6yB,iCAAmCnuF,IAAW,MAClCyE,EAAWzE,EAAXyE,OACAmR,EAAcha,KAAK+B,MAAnBiY,UAEJA,GAAaA,EAAUrO,KAAKzL,KAAO2I,GACnC7I,KAAKya,eA7GTza,KAAKqvE,SAAWxtE,IAAMya,YAEtBtc,KAAK+B,MAAQ,GAGjB,gCAAgCS,EAAOT,GAAQ,MACnCwgB,EAA8B/f,EAA9B+f,MAAOzI,EAAuBtX,EAAvBsX,KAAuBtX,EAAjB6W,QAAiB7W,EAARygB,IAE9B,GAAIV,IAAUxgB,EAAMywF,UAAW,CAC3B,MAAMx4E,EAAYy4E,YAAmBlwE,GAC/B0F,EAAgByqE,YAAuBnwE,GAFlB,MAI8B+vE,YAAc/vE,EAAOzI,GAJnD,mBAItB7I,EAJsB,KAIf8I,EAJe,KAIPpO,EAJO,KAID+zD,EAJC,KAISiR,EAJT,KAK3BhlE,EAAOC,IAAUC,IAAIF,EAAKzL,KAAOyL,EACjC,IAAI6c,EAAMD,YAAO5c,GACbtI,EAAS,KACb,IAAKmlB,GAAOmoD,EAAmB,CAAC,MACpB9rE,EAAU0d,EAAV1d,MACJA,IACA2jB,EAAG,6BAAyB7c,EAAKzL,GAA9B,iBAAyCyL,EAAKmO,KAA9C,sBAAgEjV,EAAM8tF,YAIjF,MAAO,CACHH,UAAWjwE,EAEXqwE,MAAO,EACPC,WAAW,EACX5hF,QACA8I,SACApO,OACA6c,MACAnlB,SACAstE,oBACAjR,WACA1lD,YACAiO,iBAIR,OAAO,KAGXjlB,oBACI4I,IAAUoB,GAAG,wBAAyBhN,KAAKywE,yBAC3C7kE,IAAUoB,GAAG,wBAAyBhN,KAAKywE,yBAC3C7kE,IAAUoB,GAAG,4BAA6BhN,KAAKywE,yBAC/C7kE,IAAUoB,GAAG,iCAAkChN,KAAKuyF,kCACpD3mF,IAAUoB,GAAG,qCAAsChN,KAAKuyF,kCACxDvmF,IAAYgB,GAAG,+BAAgChN,KAAKqyF,gCAGxDplF,uBACIrB,IAAUwB,IAAI,wBAAyBpN,KAAKywE,yBAC5C7kE,IAAUwB,IAAI,wBAAyBpN,KAAKywE,yBAC5C7kE,IAAUwB,IAAI,4BAA6BpN,KAAKywE,yBAChD7kE,IAAUwB,IAAI,iCAAkCpN,KAAKuyF,kCACrD3mF,IAAUwB,IAAI,qCAAsCpN,KAAKuyF,kCACzDvmF,IAAYoB,IAAI,+BAAgCpN,KAAKqyF,gCAgBzDzvF,mBAAmBC,EAAWC,EAAWC,GAAW,MACxCylB,EAAQxoB,KAAK+B,MAAbymB,IAER,GAAI1lB,EAAU0lB,MAAQA,EAAK,CACvB,MAAMrhB,EAASnH,KAAKqvE,SAASr2D,QAC7B,IAAK7R,EAAQ,OAEbA,EAAOi9B,QAgCfnhC,SAAU,MAAD,EAC2BjD,KAAKwC,MAA7B+f,EADH,EACGA,MAAOlJ,EADV,EACUA,QAAS4J,EADnB,EACmBA,IACxB,IAAKV,EAAO,OAAO,KAFd,QAcDviB,KAAK+B,MATLkP,EALC,EAKDA,MACA8I,EANC,EAMDA,OACApO,EAPC,EAODA,KACA6c,EARC,EAQDA,IACAk3C,EATC,EASDA,SACA1lD,EAVC,EAUDA,UACAiO,EAXC,EAWDA,cACA4qE,EAZC,EAYDA,UACAliB,EAbC,EAaDA,kBAEJ,IAAKhlE,EAAM,OAAO,KAElB,MAAMyc,EAAUH,EAAgB,2BAA6BA,EAAcI,KAAO,KAC5EyqE,EAAevqE,YAAOvO,GAE5B,IAAIm3D,EAAalgE,EACbmgE,EAAcr3D,EAClB,MAAMugE,EAAQyY,IAA8BhyF,KAAKoQ,IAAIggE,EAAYC,GAC3DsI,EAAIvI,EAAaC,EAAc2hB,IAA8BhyF,KAAKgP,MAAMohE,EAAamJ,GACrFX,EAAIvI,EAAcD,EAAa4hB,IAA8BhyF,KAAKgP,MAAMqhE,EAAckJ,GAC5FnJ,EAAauI,EACbtI,EAAcuI,EAEd,IAAInhE,EAAU,KACd,MAAMnV,EAASmlB,EAAM,4BAAQA,IAAKA,EAAKhK,KAAMkhD,IAAc,KACrDluD,EAAQwhF,aAASh5E,EAAWiO,EAAekpD,EAAYC,GAE7D,OAAQ7uD,EAAM,UACV,IAAK,QACD/J,EACI,yBAAKtV,UAAU,gCACX,kBAACwM,EAAA,EAAD,CACIuN,IAAKjd,KAAKqvE,SACVnsE,UAAU,oCACV2F,OAAQ8C,EAAKzL,GACb+Q,MAAOkgE,EACPp3D,OAAQq3D,EACR6hB,OAAQtiB,EAAqBmiB,GAAgB1qE,EAAW,KACxDhgB,OAAQ,KACJpI,KAAKyC,SAAS,CAAEowF,WAAW,MAG9BxvF,IAEHwvF,IAAcliB,GAAqBn/D,GAG7C,MAEJ,IAAK,YAaDgH,EACI,yBAAKtV,UAAU,gCACX,2BACI+Z,IAAKjd,KAAKqvE,SACVnsE,UAAU,oCACVqN,QAASvQ,KAAKkzF,mBACdr1C,MAAI,EACJi1B,UAAQ,EACR7hE,MAAOkgE,EACPp3D,OAAQq3D,EACRhpE,OAAQ,KACJpI,KAAKyC,SAAS,CAAEowF,WAAW,MAG9BxvF,IAEHwvF,GAAarhF,GAGvB,MAEJ,QACIgH,EACI,yBAAKtV,UAAU,6BAA6BslB,IAAKA,EAAK8B,IAAI,GAAG/Z,QAASvQ,KAAKkzF,qBAKvF,OACI,yBAAKhwF,UAAU,wBACVsV,GACCm4D,GAAqB,kBAAC7wB,GAAA,EAAD,CAAcn0C,KAAMA,EAAMuvC,OAAQ,IACxD7hC,KAAa85E,aAAY95E,EAAQhM,QAAU8lF,aAAY95E,EAAQ+5E,SAAWnwE,IACvE,kBAAC,GAAD,CACI5V,KACI,oCACI,kBAACgmF,GAAA,EAAD,CAAShmF,KAAMgM,EAAQhM,KAAM+lF,OAAQ/5E,EAAQ+5E,SAC7C,kBAAC5mE,GAAA,EAAD,CAAUvJ,IAAKA,U,OCtMhCqwE,OAjCf,cAAgCzxF,IAAMC,UAAW,eAAD,oBAC5CyD,YAAclB,IACVA,EAAM4B,kBADa,QAGWjG,KAAKwC,MAA3BsP,EAHW,EAGXA,SAAUvB,EAHC,EAGDA,QAEduB,GAEJvB,EAAQlM,IAGZpB,SAAU,MAAD,EACkDjD,KAAKwC,MAApDsP,EADH,EACGA,SAAUyhF,EADb,EACaA,KAAM3jD,EADnB,EACmBA,SAAU1sC,EAD7B,EAC6BA,UAAWoE,EADxC,EACwCA,MAEvCi3B,EAAKnuB,IACP0B,EAAW,+BAAiC,sBAC5C,CAAEyhF,KAAMA,GACRrwF,GAGJ,OACI,yBAAKA,UAAWq7B,EAAIj3B,MAAOA,EAAOiJ,QAASvQ,KAAKuF,aAC3CqqC,K,OCEF4jD,OAzBf,cAAoC3xF,IAAMC,UACtCmB,SAAU,MAAD,EAC8BjD,KAAKwC,MAAhC2b,EADH,EACGA,MAAOa,EADV,EACUA,SAAU1X,EADpB,EACoBA,MAEzB,OACI,yBAAKpE,UAAU,2BAA2BoE,MAAOA,GAC7C,yBAAKpE,UAAU,oCACX,8BAAOib,GACN8L,QAAQjL,IACL,qCAEKA,O,OCkBdy0E,OAnCf,cAAsC5xF,IAAMC,UAAW,eAAD,oBAClDyD,YAAclB,IACVA,EAAM4B,kBADa,QAGWjG,KAAKwC,MAA3B+N,EAHW,EAGXA,QAHW,EAGFuB,UAIjBvB,EAAQlM,IAGZpB,SAAU,MAAD,EAC0CjD,KAAKwC,MAA5Cqf,EADH,EACGA,QAAS+tB,EADZ,EACYA,SAAU99B,EADtB,EACsBA,SAAUqM,EADhC,EACgCA,MAErC,OACI,yBACIjb,UAAWkN,IAAW,6BAA8B,CAChD,qCAAsCyR,EACtC,sCAAuC/P,IAE3CqM,MAAOA,EACP5N,QAASvQ,KAAKuF,aACbqqC,KCbjB,MAAM8jD,WAAkC7xF,IAAMC,UAAW,eAAD,oBACpDC,MAAQ,GAD4C,KA6EpD4xF,aAAevvF,IAAW,MACdyE,EAAW7I,KAAKwC,MAAhBqG,OACA8C,EAASvH,EAATuH,KAEJA,EAAKzL,KAAO2I,GAEZ8C,EAAK2kC,MAAMsjD,0BACX5zF,KAAK6zF,mBApFuC,KAwFpDpjB,wBAA0BrsE,IAAW,MACzByE,EAAW7I,KAAK+B,MAAhB8G,OAEJA,IAAWzE,EAAOyE,QAClB7I,KAAKyC,SAAS,CACVqP,SAAU4hF,GAA0BI,aAAajrF,MA7FT,KAsGpDtD,YAAclB,IACVA,EAAM4B,kBADa,MAGXsK,EAAYvQ,KAAKwC,MAAjB+N,QACavQ,KAAK+B,MAAlB+P,UAGRvB,EAAQlM,IA1GZ,gCAAgC7B,EAAOT,GAAQ,MACnC8G,EAAWrG,EAAXqG,OAGR,OAAIA,IAFwB9G,EAApBgyF,gBAGG,CACHA,gBAAiBlrF,EACjBA,SACAiJ,SAAU4hF,GAA0BI,aAAajrF,IAIlD,KAGXjG,mBAAmBC,EAAWC,EAAWC,GACjCF,EAAUgG,SAAW7I,KAAKwC,MAAM0P,QAChClS,KAAK6zF,kBAIbA,kBAAkB,MAENhrF,EAAW7I,KAAKwC,MAAhBqG,OAER,GADa+C,IAAUm7B,QAAQl+B,GAG3B,OAGJ,MAAM8C,EAAOC,IAAUC,IAAIhD,GAC3B,IAAK8C,EAED,OAZU,MAeN2kC,EAAU3kC,EAAV2kC,MACR,IAAKA,EAAO,OACZ,IAAKA,EAAMsjD,yBAA0B,OAGrC,MAAMj9E,EAAQ/K,IAAUgL,WACxBhL,IAAUooF,aAAar9E,EAAOhL,EAAM,KAAM,KAEtC3L,KAAKyC,SAAS,CACVqP,SAAU4hF,GAA0BI,aAAajrF,OAK7D7F,oBACIhD,KAAK6zF,kBAELjoF,IAAUoB,GAAG,aAAchN,KAAK2zF,cAEhC/nF,IAAUoB,GAAG,4BAA6BhN,KAAKywE,yBAC/C7kE,IAAUoB,GAAG,uBAAwBhN,KAAKywE,yBAC1C7kE,IAAUoB,GAAG,2BAA4BhN,KAAKywE,yBAC9C7kE,IAAUoB,GAAG,wBAAyBhN,KAAKywE,yBAC3C7kE,IAAUoB,GAAG,uBAAwBhN,KAAKywE,yBAC1C7kE,IAAUoB,GAAG,wBAAyBhN,KAAKywE,yBAG/CxjE,uBACIrB,IAAUwB,IAAI,aAAcpN,KAAK2zF,cAEjC/nF,IAAUwB,IAAI,4BAA6BpN,KAAKywE,yBAChD7kE,IAAUwB,IAAI,uBAAwBpN,KAAKywE,yBAC3C7kE,IAAUwB,IAAI,2BAA4BpN,KAAKywE,yBAC/C7kE,IAAUwB,IAAI,wBAAyBpN,KAAKywE,yBAC5C7kE,IAAUwB,IAAI,uBAAwBpN,KAAKywE,yBAC3C7kE,IAAUwB,IAAI,wBAAyBpN,KAAKywE,yBAsChDxtE,SAAU,MAAD,EACgDjD,KAAKwC,MAAlD2b,EADH,EACGA,MAAOyxB,EADV,EACUA,SAAoBqkD,EAD9B,EACoBniF,SACjBA,EAAa9R,KAAK+B,MAAlB+P,SAER,OACI,kBAAC,GAAD,CAAyBA,SAAUA,GAAYmiF,EAAe91E,MAAOA,EAAO5N,QAASvQ,KAAKuF,aACrFqqC,GAAY,kBAAC,KAAD,QAtHvB8jD,GAkGKI,aAAejrF,IACVohB,QAAQre,IAAUm7B,QAAQl+B,IAgC3B6qF,U,OCyIAt+E,OALCC,YACZpD,cACA4/E,KAGWz8E,CA3Pf,cAAqCvT,IAAMC,UACvClC,YAAY4C,GACR0B,MAAM1B,GADS,KAuBnB8B,UAAYD,IACR,GAAIuY,IAAaizB,OAAOn7B,OAAS,EAC7B,OAGJ,GAAIrQ,EAAMyrC,YACN,OANa,QASS9vC,KAAK+B,MAAvB4hB,EATS,EASTA,MAAOsuE,EATE,EASFA,OACf,IAAKA,EAAQ,OAAO,KACpB,IAAe,IAAXtuE,EAAc,OAAO,KAEzB,MAAM6pD,EAAQykB,EAAOtuE,GACfpB,EAAQ2xE,aAAc1mB,GAC5B,GAAKjrD,EAAL,CAGA,OADgBle,EAARE,KAEJ,IAAK,SAID,OAHAvE,KAAK+E,cACLV,EAAM4B,uBACN5B,EAAM6B,iBAGV,IAAK,YAID,OAHAlG,KAAK8wE,aACLzsE,EAAM4B,uBACN5B,EAAM6B,iBAGV,IAAK,aAID,OAHAlG,KAAKm0F,iBACL9vF,EAAM4B,uBACN5B,EAAM6B,iBAKqB,UAAnBqc,EAAM,UAElBngB,IAAgBkG,aAAa,CAAE,QAAS,4BAA6BjE,YAhE1D,KA2FnB8vF,eAAiB9vF,IACTA,GACAA,EAAM4B,kBAFY,QAKIjG,KAAK+B,MAAvB4hB,EALc,EAKdA,MAAOsuE,EALO,EAKPA,OACT9gC,EAAYxtC,EAAQ,EAE1B,GAAK3jB,KAAKo0F,iBAAiBzwE,EAAOsuE,GAElC,OAAOjyF,KAAKq0F,UAAUljC,IArGP,KA+GnB2f,WAAazsE,IACLA,GACAA,EAAM4B,kBAFQ,QAKQjG,KAAK+B,MAAvB4hB,EALU,EAKVA,MAAOsuE,EALG,EAKHA,OACT9gC,EAAYxtC,EAAQ,EAE1B,GAAK3jB,KAAKs0F,aAAa3wE,EAAOsuE,GAE9B,OAAOjyF,KAAKq0F,UAAUljC,IAzHP,KA4HnBkjC,UAAY1wE,IAAU,MACVsuE,EAAWjyF,KAAK+B,MAAhBkwF,OAER,QAAItuE,EAAQ,OACRA,GAASsuE,EAAOv9E,UAEpB1U,KAAKyC,SACD,CACIkhB,QACAywE,iBAAkBp0F,KAAKo0F,iBAAiBzwE,EAAOsuE,GAC/CqC,aAAct0F,KAAKs0F,aAAa3wE,EAAOsuE,KAI/CsC,YAA4B5wE,EAAOsuE,IAC5B,KA3IQ,KA8InBltF,YAAc,KACVyvF,YAA4B,MADZ,QAGUx0F,KAAK+B,MAAvB4hB,EAHQ,EAGRA,MAAOsuE,EAHC,EAGDA,QACA,IAAXtuE,GACA8wE,YAAkC9wE,EAAOsuE,IAnJ9B,KAuJnB5rE,cAAgB,KAAO,MACX9D,EAAUviB,KAAKwC,MAAf+f,MAEF1J,EAAsB67E,aAAqBnyE,EAAO,MACnD1J,GAELvB,YAAQuB,IA7JO,KAgKnB87E,WAAa,KAAO,MACRpyE,EAAUviB,KAAKwC,MAAf+f,MAERqyE,YAAUryE,EAAO,OAnKF,KAsKnBsyE,uBAAyBxwF,IACrBrE,KAAK80F,gBAAkBzwF,EAAM4jC,eAvKd,KA0KnB8sD,mBAAqB1wF,IAAU,MACnBywF,EAAoB90F,KAApB80F,gBACR90F,KAAK80F,gBAAkB,KAEnBzwF,EAAM4jC,gBAAkB6sD,GAE5B90F,KAAK+E,eA7KL/E,KAAK+B,MAAQ,CACT4hB,OAAQ,EACRywE,kBAAkB,EAClBE,cAAc,EACdrC,OAAQ,IAGZjyF,KAAKwM,gBAAkB,IAAIG,IAAgB3M,KAAKsE,WAGpDtB,oBACIhD,KAAKuV,cAELjJ,IAAgBC,IAAIvM,KAAKwM,iBAG7BS,uBACIX,IAAgBI,OAAO1M,KAAKwM,iBAgDhC+I,cAAe,MAAD,EACYvV,KAAKwC,MAAnBksE,EADE,EACFA,GAAInsD,EADF,EACEA,MAEN0vE,EAAS+C,aAAetmB,EAAIumB,MAC5BtxE,EAAQsuE,EAAO77D,UAAUz1B,GAAKuzF,aAAcvzF,KAAO4hB,GAEzDviB,KAAKyC,SAAS,CACVwvF,SACAtuE,QACAywE,iBAAkBp0F,KAAKo0F,iBAAiBzwE,EAAOsuE,GAC/CqC,aAAct0F,KAAKs0F,aAAa3wE,EAAOsuE,KAG3CsC,YAA4B5wE,EAAOsuE,GAGvCmC,iBAAiBzwE,EAAOsuE,GACpB,IAAe,IAAXtuE,EAAc,OAAO,EAGzB,OADkBA,EAAQ,EACPsuE,EAAOv9E,OAgB9B4/E,aAAa3wE,EAAOsuE,GAChB,IAAe,IAAXtuE,EAAc,OAAO,EAGzB,OADkBA,EAAQ,GACN,EAuExB1gB,SAAU,MAAD,EACejD,KAAKwC,MAAjBsX,EADH,EACGA,KAAMzH,EADT,EACSA,EADT,EAEqDrS,KAAK+B,MAAvD4hB,EAFH,EAEGA,MAAOsuE,EAFV,EAEUA,OAAQqC,EAFlB,EAEkBA,aAAcF,EAFhC,EAEgCA,iBACrC,IAAKnC,EAAQ,OAAO,KACpB,IAAe,IAAXtuE,EAAc,OAAO,KAEzB,MAAM6pD,EAAQykB,EAAOtuE,GACfpB,EAAQ2xE,aAAc1mB,GACtBn0D,EAAU67E,aAAgB1nB,GAC1BvqD,EAAMkyE,aAAY3nB,GATnB,EAWyB8kB,YAAc/vE,EAAOzI,GAX9C,mBAWiBnO,GAXjB,gBAaL,IAAIwS,EAAQ,GACW,UAAnBoE,EAAM,WACNpE,EAAQ9L,EAAE,gBAES,UAAnBkQ,EAAM,SACNpE,EAAQ9L,EAAE,eACgB,cAAnBkQ,EAAM,WACbpE,EAAQ9L,EAAE,cAEd,MAAM+iF,EAAWnD,EAAOv9E,OAExB,OACI,yBAAKxR,UAAWkN,IAAW,4BAA6B,yBACpD,yBAAKlN,UAAU,uBACX,kBAAC,GAAD,CACIib,MAAOA,EACPa,SAAUo2E,EAAW,GAAKzxE,GAAS,EAAIy9D,KAAOiU,aAAa,KAAM1xE,EAAQ,EAAGyxE,GAAY,KACxF9tF,MAAO,CAAEg9E,WAAY,OAEzB,kBAAC,GAAD,CAA2BnmE,MAAO9L,EAAE,QAASxJ,OAAQ8C,EAAKzL,GAAIqQ,QAASvQ,KAAK20F,aAC5E,kBAAC,GAAD,CAAyBx2E,MAAO9L,EAAE,WAAY9B,QAASvQ,KAAKqmB,eACxD,kBAAC,GAAD,OAEJ,kBAAC,GAAD,CAAyBlI,MAAO9L,EAAE,SAAU9B,QAASvQ,KAAK+E,aACtD,kBAAC+L,EAAA,EAAD,QAGR,yBAAK5N,UAAU,uBAAuBmN,YAAarQ,KAAK60F,uBAAwBtkF,QAASvQ,KAAK+0F,oBAC1F,yBAAK7xF,UAAU,4BACX,kBAAC,GAAD,CAAmB4O,UAAWwiF,EAAcf,MAAI,EAAChjF,QAASvQ,KAAK8wE,YAC3D,kBAAC,GAAD,QAGR,yBAAK5tE,UAAU,+BACX,kBAAC,GAAD,CAA+Bqf,MAAOA,EAAOzI,KAAMA,EAAMT,QAASA,EAAS4J,IAAKA,KAEpF,yBAAK/f,UAAU,6BACX,kBAAC,GAAD,CAAmB4O,UAAWsiF,EAAkBb,MAAI,EAAChjF,QAASvQ,KAAKm0F,gBAC/D,kBAAC,GAAD,CAAoB7sF,MAAO,CAAEg3B,UAAW,2B,gBC+FrDrsB,qBAvUf,cAA4BpQ,IAAMC,UAC9BlC,YAAY4C,GAAQ,IAAD,EACf0B,MAAM1B,GADS,YA2EnB8yF,uCAAyClxF,IAAW,MACxCoU,EAAYpU,EAAZoU,QACR,IAAKA,EAED,YADAxY,KAAKyC,SAAS,CAAE8f,MAAO,KAAMlJ,QAAS,KAAM4J,IAAK,OAHN,MAOvCV,EAAqC/J,EAArC+J,MAAOlJ,EAA8Bb,EAA9Ba,QAAS4J,EAAqBzK,EAArByK,IAAKurD,EAAgBh2D,EAAhBg2D,YAEzBxuE,KAAKwC,MAAMgsE,cAAgBA,GAE/BxuE,KAAKyC,SAAS,CAAE8f,QAAOlJ,UAAS4J,SAtFjB,KAyFnBsyE,6BAzFmB,sCAyFY,WAAMnxF,GAAN,yBAAAsO,EAAA,wDACnBuQ,EAAQ7e,EAAR6e,IACFxR,EAAS+jF,KAAiBC,aAFL,EAGU,EAAKjzF,MAAlCgsE,EAHmB,EAGnBA,YAAkBknB,EAHC,EAGNzyE,IAEjBxR,IAAW+8D,EALY,qDAOvBA,IAAevrD,EAAI0H,WAAW+qE,GAPP,oBAQjBC,EAAO,IAAI5qE,IAAI9H,GAAK0yE,KACtB1yE,EAAI9G,QAAQ,OAAS8G,EAAIvO,OAAS,EATf,wBAUnB,EAAK8Y,UAAU,UAVI,+BAaZmoE,IAAQ,EAAKC,aAAaD,EAAM,UAbpB,mDAmB3B7mB,GAAgB7rD,GAnBW,0CAzFZ,2DA0MnB3e,UAAYD,IACR,KAAIuY,IAAaizB,OAAOn7B,OAAS,KAI7BrQ,EAAMyrC,YAIV,OAAQzrC,EAAME,KACV,IAAK,SAMD,GALAF,EAAM4B,kBACN5B,EAAM6B,iBAEYlG,KAAK+B,MAAfwgB,MAIJ,YADAiyE,YAA4B,MAIhCx0F,KAAK+E,cACL,QAhOO,KAyOnB8wF,WAAa,KAAO,MAAD,EACgB71F,KAAK+B,MAA5B0vE,EADO,EACPA,QADO,EACE+e,UAEbxwF,KAAKwtB,UAAU,UAIfikD,EACArvE,IAAgBkG,aAAa,CACzB,QAAS,gCAKjBtI,KAAK+E,eAvPU,KA0PnB8pB,aAAe,KACX,MAAM3f,EAAUlP,KAAK81F,iBAAiB98E,QACtChZ,KAAKyC,SAAS,CACV+tF,UAAWthF,EAAQse,UAAY,KAGnCxtB,KAAKyqF,qBA7PLzqF,KAAKwM,gBAAkB,IAAIG,IAAgB3M,KAAKsE,WAChDtE,KAAK+1F,WAAal0F,IAAMya,YACxBtc,KAAK81F,iBAAmBj0F,IAAMya,YAE9Btc,KAAK+B,MAAQ,GAEb/B,KAAKyqF,kBAAoBllE,YAASvlB,KAAKyqF,kBAAmB,KAG9D,gCAAgCjoF,EAAOT,GACnC,OAAIS,EAAMgsE,cAAgBzsE,EAAMi0F,gBACrB,CACHA,gBAAiBxzF,EAAMgsE,YACvBiD,QAAS+jB,KAAiB/jB,UAC1B+e,WAAW,EACXjuE,MAAO,KACPlJ,QAAS,KACT4J,IAAK,MAIN,KAGXrF,sBAAsBC,EAAWC,EAAWoK,GAAc,MAC9CsmD,EAAgBxuE,KAAKwC,MAArBgsE,YAD6C,EAEDxuE,KAAK+B,MAAjDyuF,EAF6C,EAE7CA,UAAW/e,EAFkC,EAElCA,QAASlvD,EAFyB,EAEzBA,MAAOlJ,EAFkB,EAElBA,QAAS4J,EAFS,EAETA,IAE5C,OAAIurD,IAAgB3wD,EAAU2wD,cAI1BgiB,IAAc1yE,EAAU0yE,YAIxB/e,IAAY3zD,EAAU2zD,UAItBlvD,IAAUzE,EAAUyE,QAIpBlJ,IAAYyE,EAAUzE,SAItB4J,IAAQnF,EAAUmF,QAO1BjgB,oBACIhD,KAAKi2F,SAAU,EACfj2F,KAAK6uB,eACL7uB,KAAKk2F,cAAcl2F,KAAKwC,MAAMgrE,MAAO,UAErClhE,IAAgBC,IAAIvM,KAAKwM,iBACzBgpF,KAAiBxoF,GAAG,6BAA8BhN,KAAKu1F,8BACvDC,KAAiBxoF,GAAG,uCAAwChN,KAAKs1F,wCAGrEroF,uBACIjN,KAAKi2F,SAAU,EACf3pF,IAAgBI,OAAO1M,KAAKwM,iBAC5BgpF,KAAiBpoF,IAAI,6BAA8BpN,KAAKu1F,8BACxDC,KAAiBpoF,IAAI,uCAAwCpN,KAAKs1F,wCAuCtEY,cAAc1oB,EAAO56C,GACjB,IAAK46C,EAAO,OAAO,EAEnB,IAAKokB,GAAa,OAAO,EAEzB,MAAM30E,EAAM20E,GAAY/lF,IAAI2hE,GAC5B,IAAKvwD,EAAK,OAAO,EAEjB,MAAM/N,EAAUy+D,KAASwoB,YAAYl5E,GACrC,OAAOjd,KAAKo2F,gBAAgBlnF,EAAS0jB,GAGzCwjE,gBAAgBlnF,EAAS0jB,GACrB,IAAK1jB,EAAS,OAAO,EAErB,MAAMmnF,EAAU,GAChB,IAAIC,GAAW,EACXC,EAAiBrnF,EACrB,IACIqnF,EAAiBA,EAAe1+B,YAEI,YAA5B0+B,EAAel/B,SACfg/B,EAAQvgF,KAAKygF,GACsB,YAA5BA,EAAel/B,WACtBi/B,GAAW,GAGfA,GAAW,SAETA,GASV,OAPAD,EAAQj1F,QAAQT,GAAMA,EAAE+b,MAAO,GAE/BxN,EAAQurC,eAAe,CACnB+yB,MAAO,SACP56C,cAGG,EAGXgjE,aAAaD,EAAM/iE,GACf,IAAK+iE,EAAM,OAAO,EAElB,MAAMzmF,EAAUrI,SAASI,eAAe0uF,EAAK/kD,OAAO,IAEpD,OAAO5wC,KAAKo2F,gBAAgBlnF,EAAS0jB,GAGzCpF,UAAUoF,GACN,MAAM1jB,EAAUlP,KAAK81F,iBAAiB98E,QAEtC,OAAQ4Z,GACJ,IAAK,SACDpF,GAAUte,GACV,MAEJ,QACIA,EAAQyjB,SAAS,CACblrB,IAAK,EACLmrB,cAMhBhwB,mBAAmBC,EAAWC,EAAWC,GAAW,MAAD,EACX/C,KAAKwC,MAAjCgsE,EADuC,EACvCA,YAAoBvrD,GADmB,EAC1BuqD,MAD0B,EACnBvqD,KAEtB0yE,EAAO,IAAI5qE,IAAI9H,GAAK0yE,KACtB9yF,EAAU2rE,cAAgBA,IACtB3rE,EAAUogB,MAAQA,EACdA,EAAI9G,QAAQ,OAAS8G,EAAIvO,OAAS,EAClC1U,KAAKwtB,UAAU,QACRmoE,EACP31F,KAAK41F,aAAaD,EAAM,QAExB31F,KAAKwtB,UAAU,QAGfmoE,EACA31F,KAAK41F,aAAaD,EAAM,QAExB31F,KAAKwtB,UAAU,UAIvBxtB,KAAK6uB,gBA+Bb9pB,cACIkqE,YAAsB,MA6B1Bwb,oBACI,IAAKzqF,KAAKi2F,QAAS,OADH,MAGRznB,EAAgBxuE,KAAKwC,MAArBgsE,YACR,IAAKA,EAAa,OAJF,MAMRujB,EAAgBvjB,EAAhBujB,YAEFE,EAAS,IAAIn9E,IACbwY,EAAQo+D,YAAY1rF,KAAK81F,iBAAkB91F,KAAK+1F,YAEtD,IAAK,IAAI/gF,EAAI,EAAGA,EAAIsY,EAAM5Y,OAAQM,IAAK,CACnC,MAAMw4D,EAAQukB,EAAYzkE,EAAMtY,IAChCi9E,EAAOz3E,IAAIgzD,EAAOA,GAEEgpB,aAAehpB,GACvBpsE,QAAQT,GAAKsxF,EAAOz3E,IAAI7Z,EAAGA,IAG3CyB,IAAgBkG,aAAa,CACzB,QAAS,2BACT2pF,WAIRhvF,SAAU,MACEurE,EAAgBxuE,KAAKwC,MAArBgsE,YADH,EAE+CxuE,KAAK+B,MAAxCyuF,GAFZ,EAEG/e,QAFH,EAEY+e,WAAWjuE,EAFvB,EAEuBA,MAAOlJ,EAF9B,EAE8BA,QAAS4J,EAFvC,EAEuCA,IAC5C,OAAKurD,EAGD,kBAACioB,GAAA,EAAUlT,SAAX,CAAoBh5E,MAAOikE,GACvB,yBAAKvxD,IAAKjd,KAAK81F,iBAAkB5yF,UAAU,iBAAiBoxB,SAAUt0B,KAAK6uB,cACvE,yBAAK3rB,UAAU,6BAA6BqN,QAASvQ,KAAK61F,YACtD,kBAAC,GAAD,CACI3yF,UAAU,6BACVoE,MAAO,CAAEma,WAAY,cACrBlR,QAASvQ,KAAK61F,YACd,kBAAC,GAAD,CACIvuF,MAAO,CACHyc,WAAY,2BACZua,UAAWkyD,EAAY,gBAAkB,oBAKzD,yBAAKttF,UAAU,iCACX,6BACI,kBAAC,GAAD,CAAS+Z,IAAKjd,KAAK+1F,eAG3B,yBAAK7yF,UAAU,+BACX,kBAAC,GAAD,CAAmBA,UAAU,8BAA8BqN,QAASvQ,KAAK+E,aACrE,kBAAC+L,EAAA,EAAD,SAIXyR,GAAS,kBAAC,GAAD,CAAwBA,MAAOA,EAAOzI,KAAM48E,IAAer9E,QAASA,EAAS4J,IAAKA,KA7B3E,Q,OCtQlB0zE,OAxCf,cAAwB90F,IAAMC,UAC1BlC,YAAY4C,GACR0B,MAAM1B,GAGVS,SAAU,MAAD,EACyBjD,KAAKwC,MAA3B0P,EADH,EACGA,OAAQiU,EADX,EACWA,UAEVzO,EAAUY,IAAazM,IAAIqG,EAAQiU,GACzC,IAAKzO,EAAS,OAAO,KAJhB,MAMGsR,EAAiBtR,EAAjBsR,KAAM2D,EAAWjV,EAAXiV,OAERiqE,EAAWlkB,aAAY1pD,GAEvB6tE,EAAclqE,EAAO3W,QAAU,kBAACw5B,GAAA,EAAD,CAAUpe,OAAQzE,EAAO3W,UAAc,kBAACxD,EAAA,EAAD,CAAUN,OAAQA,IAE9F,OACI,yBAAKhP,UAAU,cACX,yBAAKA,UAAU,sBACV2zF,EACD,yBAAK3zF,UAAU,sBACX,yBAAKA,UAAU,kBACX,kBAAC4pB,GAAA,EAAD,CAAeH,OAAQA,KAE3B,yBAAKzpB,UAAU,uBACX,8BAAO0zF,S,OC6TpB3kF,qBAhVf,cAAiCpQ,IAAMC,UACnClC,YAAY4C,GACR0B,MAAM1B,GADS,KA0EnB6vF,+BAAiCjuF,IAAW,MAChC6G,EAAc7G,EAAd6G,UACHA,GAEYjL,KAAK+B,MAAd4J,KACCzL,KAAO+K,EAAUpC,QAE1BzG,IAAgBkG,aAAa,CACzB,QAAS,iCACTkQ,QAAS,QAnFE,KAkGnBi4D,wBAA0BrsE,IAAW,MAAD,EACIpE,KAAKwC,MAAjC0P,EADwB,EACxBA,OAAQiU,EADgB,EAChBA,UAAWrM,EADK,EACLA,KAE3B,GAAI5H,IAAW9N,EAAO8N,QAAUiU,IAAc/hB,EAAO+hB,UAAW,CAAC,IAAD,EACH2wE,YAAa5kF,EAAQiU,EAAWrM,GAD7B,mBACvD7I,EADuD,KAChD8I,EADgD,KACxCpO,EADwC,KAClC+zD,EADkC,KACxBiR,EADwB,KAG5DhlE,EAAOC,IAAUC,IAAIF,EAAKzL,KAAOyL,EACjC,IAAI6c,EAAMD,YAAO5c,GACbtI,EAAS,MACRmlB,GAAOmoD,GACJomB,aAAe7kF,EAAQiU,KACvBqC,EAAG,6BAAyB7c,EAAKzL,GAA9B,iBAAyCyL,EAAKmO,KAA9C,sBAAgE4lD,IAI3E1/D,KAAKyC,SAAS,CACVwO,QACA8I,SACApO,OACA6c,MACAnlB,SACAstE,oBACAjR,eAxHO,KA6HnB6yB,iCAAmCnuF,IAAW,MAAD,EACXpE,KAAKwC,MAA3B0P,EADiC,EACjCA,OAAQiU,EADyB,EACzBA,UAEhB,GAAIjU,IAAW9N,EAAO8N,QAAUiU,IAAc/hB,EAAO+hB,UAAW,CAC5D,MAAMnM,EAAYg9E,YAAkB9kF,EAAQiU,GAC5CnmB,KAAKyC,SAAS,CACVuX,gBAnIO,KAwInBqI,uBAAyBje,IAAW,MAAD,EACQpE,KAAKwC,MAApC0P,EADuB,EACvBA,OAAQiU,EADe,EACfA,UAAWrM,EADI,EACJA,KAAMzH,EADF,EACEA,EACzB4E,EAAwB7S,EAAxB6S,QAASC,EAAe9S,EAAf8S,WAEjB,GAAIhF,IAAW+E,GAAWkP,IAAcjP,EAAY,CAChD,MAAMQ,EAAUY,IAAazM,IAAIqG,EAAQiU,GACnC9Y,EAAOkhD,aAAQ72C,EAAS,KAAMrF,GAFY,EAIWykF,YAAa5kF,EAAQiU,EAAWrM,GAJ3C,mBAIzC7I,EAJyC,KAIlC8I,EAJkC,KAI1BpO,EAJ0B,KAIpB+zD,EAJoB,KAIViR,EAJU,KAKhD,IAAInoD,EAAMD,YAAO5c,GACbtI,EAAS,MACRmlB,GAAOmoD,GACJomB,aAAe7kF,EAAQiU,KACvBqC,EAAG,6BAAyB7c,EAAKzL,GAA9B,iBAAyCyL,EAAKmO,KAA9C,sBAAgE4lD,IAI3E1/D,KAAKyC,SAAS,CACVwO,QACA8I,SACApO,OACA6c,MACAnlB,SACAstE,oBACAjR,WACAryD,WAjKO,KAsKnB6lF,mBAAqB7uF,IACbA,GAAOA,EAAM4B,mBAvKF,KA0KnBV,YAAclB,IACVA,EAAM6B,iBACN7B,EAAM4B,kBAFa,MAKX5C,EAAWrD,KAAK+B,MAAhBsB,OACHA,GAELA,EAAO4zF,kBA/KPj3F,KAAK+B,MAAQ,GAEb/B,KAAKqvE,SAAWxtE,IAAMya,YAG1B,gCAAgC9Z,EAAOT,GAAQ,MACnCmQ,EAA+B1P,EAA/B0P,OAAQiU,EAAuB3jB,EAAvB2jB,UAAWrM,EAAYtX,EAAZsX,KAAMzH,EAAM7P,EAAN6P,EAEjC,GAAIH,IAAWnQ,EAAM6d,YAAcuG,IAAcpkB,EAAMk9B,cAAe,CAClE,MAAMjlB,EAAYg9E,YAAkB9kF,EAAQiU,GACtC8B,EAAgBivE,YAAsBhlF,EAAQiU,GAE9CzO,EAAUY,IAAazM,IAAIqG,EAAQiU,GACnC9Y,EAAOkhD,aAAQ72C,EAAS,KAAMrF,GAL8B,MAOTykF,YAAa5kF,EAAQiU,EAAWrM,GAPvB,mBAO7D7I,EAP6D,KAOtD8I,EAPsD,KAO9CpO,EAP8C,KAOxC+zD,EAPwC,KAO9BiR,EAP8B,KAQlEhlE,EAAOC,IAAUC,IAAIF,EAAKzL,KAAOyL,EACjC,IAAI6c,EAAMD,YAAO5c,GACbtI,EAAS,KAUb,OATKmlB,GAAOmoD,GACJomB,aAAe7kF,EAAQiU,KACvBqC,EAAG,6BAAyB7c,EAAKzL,GAA9B,iBAAyCyL,EAAKmO,KAA9C,sBAAgE4lD,IAOpE,CACH9/C,WAAY1N,EACZ+sB,cAAe9Y,EAEfysE,MAAO,EACPC,WAAW,EACX5hF,QACA8I,SACApO,OACA6c,MACAnlB,SACAstE,oBACAjR,WACAryD,OACA2M,YACAiO,gBACAuC,QAnBgB9S,EAAZc,QACAkY,UAsBZ,OAAO,KAGX1tB,oBACI4I,IAAUoB,GAAG,wBAAyBhN,KAAKywE,yBAC3C7kE,IAAUoB,GAAG,wBAAyBhN,KAAKywE,yBAC3C7kE,IAAUoB,GAAG,4BAA6BhN,KAAKywE,yBAC/C7kE,IAAUoB,GAAG,iCAAkChN,KAAKuyF,kCACpD3mF,IAAUoB,GAAG,qCAAsChN,KAAKuyF,kCACxDj6E,IAAatL,GAAG,uBAAwBhN,KAAKqiB,wBAC7CrW,IAAYgB,GAAG,+BAAgChN,KAAKqyF,gCAGxDplF,uBACIrB,IAAUwB,IAAI,wBAAyBpN,KAAKywE,yBAC5C7kE,IAAUwB,IAAI,wBAAyBpN,KAAKywE,yBAC5C7kE,IAAUwB,IAAI,4BAA6BpN,KAAKywE,yBAChD7kE,IAAUwB,IAAI,iCAAkCpN,KAAKuyF,kCACrD3mF,IAAUwB,IAAI,qCAAsCpN,KAAKuyF,kCACzDj6E,IAAalL,IAAI,uBAAwBpN,KAAKqiB,wBAC9CrW,IAAYoB,IAAI,+BAAgCpN,KAAKqyF,gCAgBzDzvF,mBAAmBC,EAAWC,EAAWC,GAAW,MACxCylB,EAAQxoB,KAAK+B,MAAbymB,IAER,GAAI1lB,EAAU0lB,MAAQA,EAAK,CACvB,MAAMrhB,EAASnH,KAAKqvE,SAASr2D,QAC7B,IAAK7R,EAAQ,OAEbA,EAAOi9B,QAyFfnhC,SAAU,MAAD,EACyBjD,KAAKwC,MAA3B0P,EADH,EACGA,OAAQiU,EADX,EACWA,UADX,EAcDnmB,KAAK+B,MAXLkP,EAHC,EAGDA,MACA8I,EAJC,EAIDA,OACApO,EALC,EAKDA,KACA6c,EANC,EAMDA,IACAmoD,EAPC,EAODA,kBACAjR,EARC,EAQDA,SACAryD,EATC,EASDA,KACA4a,EAVC,EAUDA,cACAjO,EAXC,EAWDA,UACAwQ,EAZC,EAYDA,QACAqoE,EAbC,EAaDA,UAGJ,IAAKlnF,EAAM,OAAO,KAElB,MAAMyc,EAAUH,EAAgB,2BAA6BA,EAAcI,KAAO,KAC5EyqE,EAAevqE,YAAOvO,EAAYA,EAAUrO,KAAO,MAEnDwrF,EAAUC,aAAellF,EAAQiU,GACjCkxE,EAAUN,aAAe7kF,EAAQiU,GACjCmxE,EAAcC,aAAmBrlF,EAAQiU,GAE/C,IAAIgrD,EAAalgE,EACbmgE,EAAcr3D,EAClB,MAAMugE,EAAQyY,IAA8BhyF,KAAKoQ,IAAIggE,EAAYC,GAC3DsI,EAAIvI,EAAaC,EAAc2hB,IAA8BhyF,KAAKgP,MAAMohE,EAAamJ,GACrFX,EAAIvI,EAAcD,EAAa4hB,IAA8BhyF,KAAKgP,MAAMqhE,EAAckJ,GAC5FnJ,EAAauI,EACbtI,EAAcuI,EAEd,IAAInhE,EAAU,KACd,MAAMnV,EAASmlB,EAAM,4BAAQA,IAAKA,EAAKhK,KAAMkhD,IAAc,KACrDluD,EAAQwhF,aAASh5E,EAAWiO,EAAekpD,EAAYC,GAE7D,GAAIimB,EACA7+E,EACI,yBAAKtV,UAAU,gCACX,kBAACwM,EAAA,EAAD,CACIuN,IAAKjd,KAAKqvE,SACVnsE,UAAU,oCACV2F,OAAQ8C,EAAKzL,GACb+Q,MAAOkgE,EACPp3D,OAAQq3D,EACR6hB,OAAQtiB,EAAqBmiB,GAAgB1qE,EAAW,KACxDhgB,OAAQ,KACJpI,KAAKyC,SAAS,CAAEowF,WAAW,MAG9BxvF,IAEHwvF,IAAcliB,GAAqBn/D,QAG1C,GAAI8lF,EAeP9+E,EACI,yBAAKtV,UAAU,gCACX,2BACI+Z,IAAKjd,KAAKqvE,SACVnsE,UAAU,oCACVqN,QAASvQ,KAAKkzF,mBACdr1C,MAAI,EACJi1B,UAAQ,EACR7hE,MAAOkgE,EACPp3D,OAAQq3D,EACRhpE,OAAQ,KACJpI,KAAKyC,SAAS,CAAEowF,WAAW,MAG9BxvF,IAEHwvF,GAAarhF,QAGpB,GAAIgZ,GAAWA,EAAQgtE,UAAW,CAAC,IACrBv0E,EAAQuH,EAAnBgtE,UAEN,OAAQhtE,EAAQm5D,WACZ,IAAK,OAGL,IAAK,aAGL,IAAK,UACD,MAEJ,IAAK,SACD1gE,GAAG,kBAAenW,OAAOm7C,SAASn9B,UAClC,MAEJ,IAAK,UACD7H,GAAO,mHACP,MAEJ,IAAK,QACDA,GAAO,uDAWfzK,EACI,yBAAKtV,UAAU,gCACX,4BAAQslB,IAAKvF,EAAKhS,MAAOkgE,EAAYp3D,OAAQq3D,EAAaqmB,YAAa,EAAGC,iBAAiB,EAAMC,UAAU,KAAKrwF,MAAO,CAAEurD,WAAY,iBAI7Ir6C,EACI,yBAAKtV,UAAU,6BAA6BslB,IAAKA,EAAK8B,IAAI,GAAG/Z,QAASvQ,KAAKkzF,qBAInF,OACI,oCACI,yBAAKhwF,UAAU,wBACVsV,GACCm4D,GAAqB,kBAAC7wB,GAAA,EAAD,CAAcn0C,KAAMA,EAAMuvC,OAAQ,KAE5D7tC,GAAQA,EAAKqH,OAAS,IAAM2iF,IAAYF,GAAW,kBAAC,GAAD,CAAc9pF,KAAMA,Q,OCgjBzE4E,qBAr1Bf,cAA0BpQ,IAAMC,UAC5BlC,YAAY4C,GAAQ,IAAD,EACf0B,MAAM1B,GADS,YAuFnB8B,UAAYD,IAAU,MACV6N,EAAWlS,KAAKwC,MAAhB0P,OACA62D,EAAqB/oE,KAAK+B,MAA1BgnE,iBAER,GAAInsD,IAAaizB,OAAOn7B,OAAS,EAC7B,OAGJ,GAAIrQ,EAAMyrC,YACN,OAGJ,MAAMhpC,EAAoBD,SAASC,mBAAqBD,SAASE,sBAAwBF,SAASG,wBAGlG,OADgB3C,EAARE,KAEJ,IAAK,SAKD,OAHAvE,KAAK+E,cACLV,EAAM4B,uBACN5B,EAAM6B,iBAGV,IAAK,YACD,IAAKY,EAID,OAHA9G,KAAKm0F,iBACL9vF,EAAM4B,uBACN5B,EAAM6B,iBAGV,MAEJ,IAAK,aACD,IAAKY,EAID,OAHA9G,KAAK8wE,aACLzsE,EAAM4B,uBACN5B,EAAM6B,iBAOF6wF,aAAe7kF,EAAQ62D,IAEnC3mE,IAAgBkG,aAAa,CAAE,QAAS,4BAA6BjE,WApI1D,KAwInBge,uBAAyBje,IAAW,MACxB6S,EAAkD7S,EAAlD6S,QAASC,EAAyC9S,EAAzC8S,WAAY+e,EAA6B7xB,EAA7B6xB,YAAaC,EAAgB9xB,EAAhB8xB,YAClChkB,EAAWlS,KAAKwC,MAAhB0P,OAFuB,EAGUlS,KAAK+B,MAAtCgnE,EAHuB,EAGvBA,iBAAkB6uB,EAHK,EAGLA,WAE1B,GAAI1lF,IAAW+E,EAAS,OAExB,MAAMS,EAAUY,IAAazM,IAAIoL,EAASC,GAC1C,GAAKQ,EAAL,CAKA,GAHAmgF,YAAuB,CAACngF,IAELogF,aAAe7hE,KAAiB6hE,aAAe5hE,GAClD,CACZ,GACIl2B,KAAKmpF,QAAQz0E,QAAU,IACtB1U,KAAK+3F,kBACF5hE,YAAQjf,EAAYlX,KAAKmpF,QAAQ,GAAGjpF,GAAIF,KAAKmpF,QAAQnpF,KAAKmpF,QAAQz0E,OAAS,GAAGxU,KACpF,CACE,IAAI83F,GAAW,EACX7O,EAAU,GACd,IAAK,IAAIn0E,EAAI,EAAGA,EAAIhV,KAAKmpF,QAAQz0E,OAAQM,IACjChV,KAAKmpF,QAAQn0E,GAAG9U,GAAKgX,EACrBiyE,EAAQrzE,KAAK9V,KAAKmpF,QAAQn0E,KAErBgjF,IACDA,GAAW,EACX7O,EAAQrzE,KAAK4B,IAEjByxE,EAAQrzE,KAAK9V,KAAKmpF,QAAQn0E,KAGlChV,KAAKmpF,QAAUA,EAGnB,MAAMxlE,EAAQ3jB,KAAKmpF,QAAQ/yD,UAAUz1B,GAAKA,EAAET,KAAO6oE,GACnD/oE,KAAKyC,SAAS,CACV6xF,aAAct0F,KAAKs0F,aAAa3wE,GAChCywE,iBAAkBp0F,KAAKo0F,iBAAiBzwE,GACxCi0E,WAAYA,EAAa,IAKjC,IADuBE,aAAe7hE,IAAgB6hE,aAAe5hE,GAClD,CACf,IAAI+hE,EAAaj4F,KAAKmpF,QAGtB,GAFAnpF,KAAKmpF,QAAUnpF,KAAKmpF,QAAQ5tE,OAAO5a,GAAKA,EAAET,KAAOgX,GAE7C6xD,IAAqB7xD,EAAY,CACjC,MAAMghF,EAAY,IAAIpjF,IACtBojF,EAAU19E,IAAItD,EAAYA,GAE1BlX,KAAKm4F,gBAAgBF,EAAYC,GACjCl4F,KAAKyC,SAAS,CACVm1F,WAAY72F,KAAKoQ,IAAIymF,EAAa,EAAG,SAEtC,CACH,MAAMj0E,EAAQ3jB,KAAKmpF,QAAQ/yD,UAAUz1B,GAAKA,EAAET,KAAO6oE,GACnD/oE,KAAKyC,SAAS,CACV6xF,aAAct0F,KAAKs0F,aAAa3wE,GAChCywE,iBAAkBp0F,KAAKo0F,iBAAiBzwE,GACxCi0E,WAAY72F,KAAKoQ,IAAIymF,EAAa,EAAG,SArMlC,KA2MnBl1E,uBAAyBte,IAAW,MACxB6S,EAAuC7S,EAAvC6S,QAASmD,EAA8BhW,EAA9BgW,YAAaq/C,EAAiBr1D,EAAjBq1D,aACtBvnD,EAAWlS,KAAKwC,MAAhB0P,OAFuB,EAGUlS,KAAK+B,MAAtCgnE,EAHuB,EAGvBA,iBAAkB6uB,EAHK,EAGLA,WAE1B,IAAKn+B,EAAc,OACnB,GAAIvnD,IAAW+E,EAAS,OAExB,MAAMihF,EAAY99E,EAAYomB,OAAO,CAAC43D,EAAaC,KAC/CD,EAAY59E,IAAI69E,EAAWA,GACpBD,GACR,IAAItjF,KAEDmjF,EAAaj4F,KAAKmpF,QACxB,IAAImP,EAAeL,EAAWvjF,OAE9B1U,KAAKmpF,QAAUnpF,KAAKmpF,QAAQ5tE,OAAO5a,IAAMu3F,EAAUjjF,IAAItU,EAAET,KACzDo4F,GAAgBt4F,KAAKmpF,QAAQz0E,OAE7B1U,KAAKyC,SAAS,CAAEm1F,WAAY72F,KAAKoQ,IAAIymF,EAAaU,EAAc,KAE3Dt4F,KAAKmpF,QAAQz0E,OAKdwjF,EAAUjjF,IAAI8zD,IACd/oE,KAAKm4F,gBAAgBF,EAAYC,GALjCK,YAAsB,OAjOX,KA0OnB51E,mBAAqBve,IAAW,MACpB8N,EAAWlS,KAAKwC,MAAhB0P,OADmB,EAEclS,KAAK+B,MAAtCgnE,EAFmB,EAEnBA,iBAAkB6uB,EAFC,EAEDA,WAElBlgF,EAAYtT,EAAZsT,QACR,IAAKA,EAAS,OACd,IAAKogF,aAAepgF,EAAQc,SAAU,OAEtC,GAAId,EAAQT,UAAY/E,EAAQ,OAChC,IAAKlS,KAAK+3F,iBAAkB,OAE5B/3F,KAAKmpF,QAAU,CAACzxE,GAAS4D,OAAOtb,KAAKmpF,SACrC,MAAMxlE,EAAQ3jB,KAAKmpF,QAAQ/yD,UAAUz1B,GAAKA,EAAET,KAAO6oE,GAEnD/oE,KAAKyC,SAAS,CACV6xF,aAAct0F,KAAKs0F,aAAa3wE,GAChCywE,iBAAkBp0F,KAAKo0F,iBAAiBzwE,GACxCi0E,WAAYA,EAAa,KA3Pd,KA+PnBhpE,UAAY,CAAC1c,EAAQiU,KACjB,MAAMzO,EAAUY,IAAazM,IAAIqG,EAAQiU,GACzC,IAAKzO,EAAS,OAAO,KAFU,MAIvBc,EAAYd,EAAZc,QACR,IAAKA,EAAS,OAAO,KAErB,OAAQA,EAAQ,UACZ,IAAK,yBACD,MAAO,CACH,QAAS,iCAGjB,IAAK,eAKL,IAAK,eACD,MAAO,CACH,QAAS,qCAGjB,QACI,OAAO,OAvRA,KA4RnBggF,YA5RmB,qBA4RL,4CAAA9lF,EAAA,0DACoB,EAAKlQ,MAA3B0P,EADE,EACFA,OAAQiU,EADN,EACMA,UAEV5K,EAAS,EAAKqT,UAAU1c,EAAQiU,GAElC5jB,EAAS,CACT,QAAS,WACT8sB,SAAU,GACVO,YAAa,IAEbrU,EAVM,gCAWSnZ,IAAgBC,KAAK,CAChC,QAAS,qBACT4U,QAAS/E,EACTwJ,MAAO,GACP8T,eAAgB,EAChBC,gBAAiBtJ,EACjB8F,QAASwsE,IACT5iF,MAAO,EAAI4iF,IACXl9E,OAAQA,IAnBN,OAWNhZ,EAXM,iBAuBV6vC,aAAwB7vC,EAAQ,EAAK4mF,SACrC7wE,IAAayX,SAASxtB,EAAO8sB,UAE7B,EAAK85D,QAAU5mF,EAAO8sB,SACtB,EAAK0oE,iBAA8C,IAA3Bx1F,EAAO8sB,SAAS3a,OAEhCq0D,EAAqB,EAAKhnE,MAA1BgnE,iBACFplD,EAAQ,EAAKwlE,QAAQ/yD,UAAUz1B,GAAKA,EAAET,KAAO6oE,GAEnD,EAAKtmE,SAAS,CACV6xF,aAAc,EAAKA,aAAa3wE,GAChCywE,iBAAkB,EAAKA,iBAAiBzwE,MAG7B,IAAXA,EArCM,iBAsCN,EAAKwlE,QAAU,CAAC7wE,IAAazM,IAAIqG,EAAQ62D,IACzC2vB,YAA0B,EAAG,EAAKvP,SAvC5B,2BAyCNuP,YAA0B/0E,EAAO,EAAKwlE,SAEhC5tE,EAAS,EAAKqT,UAAU1c,EAAQiU,GA3ChC,mDA8CAivE,EAAW,KACbliD,EAAQ,EA/CN,WAgDE,EAAK6kD,oBAAoB7kD,EAAQkiD,GAhDnC,kCAiDmBhzF,IAAgBC,KAAK,CACtC,QAAS,qBACT4U,QAAS/E,EACTwJ,MAAO,GACP8T,eAAgB,EAChBC,gBAAiB,EAAK05D,QAAQz0E,OAAS,EAAI,EAAKy0E,QAAQ,GAAGjpF,GAAK,EAChE+rB,QAAS,GACTpW,MAAO,IACP0F,OAAQA,IAzDV,QAiDIhZ,EAjDJ,OA2DF2wC,GAAS3wC,EAAO8sB,SAAS3a,OAEzB09B,aAAwB7vC,EAAQ,EAAK4mF,SACrC7wE,IAAayX,SAASxtB,EAAO8sB,UAE7B,EAAK85D,QAAU5mF,EAAO8sB,SAAS/T,OAAO,EAAK6tE,SAC3C,EAAK4O,iBAA8C,IAA3Bx1F,EAAO8sB,SAAS3a,OAEhCq0D,EAAqB,EAAKhnE,MAA1BgnE,iBACFplD,EAAQ,EAAKwlE,QAAQ/yD,UAAUz1B,GAAKA,EAAET,KAAO6oE,GAEnD,EAAKtmE,SAAS,CACV6xF,aAAc,EAAKA,aAAa3wE,GAChCywE,iBAAkB,EAAKA,iBAAiBzwE,GACxCo0E,iBAAkB,EAAKA,iBACvBH,WAAYr1F,EAAOqtB,cA1ErB,0DA5RK,KA4WnB7qB,YAAc,KACVwzF,YAAsB,MADN,MAGRxvB,EAAqB/oE,KAAK+B,MAA1BgnE,iBACFplD,EAAQ3jB,KAAKmpF,QAAQ/yD,UAAUz1B,GAAKA,EAAET,KAAO6oE,IACpC,IAAXplD,GACAg1E,YAAgCh1E,EAAO3jB,KAAKmpF,UAlXjC,KAsXnBwL,WAAa,KAAO,MACRziF,EAAWlS,KAAKwC,MAAhB0P,OACA62D,EAAqB/oE,KAAK+B,MAA1BgnE,iBAEFrxD,EAAUY,IAAazM,IAAIqG,EAAQ62D,GACzC,IAAKrxD,EAAS,OALC,MAOPc,EAAYd,EAAZc,QACR,IAAKA,EAAS,OAEd,IAAI+J,EAAQ,KACZ,OAAQ/J,EAAQ,UACZ,IAAK,mBAGD+J,EAFsB/J,EAAd6S,UAGR,MAEJ,IAAK,yBAGD9I,EAFkB/J,EAAVC,MAGR,MAEJ,IAAK,kBAGD8J,EAFqB/J,EAAb3R,SAGR,MAEJ,IAAK,eAGD0b,EAFkB/J,EAAVC,MAGR,MAEJ,IAAK,cAAe,CAAC,MACTiY,EAAalY,EAAbkY,SACR,IAAKA,EAAU,OAFC,MAIRrF,EAAsCqF,EAAtCrF,UAAWxkB,EAA2B6pB,EAA3B7pB,SAAU4R,EAAiBiY,EAAjBjY,MAAO5T,EAAU6rB,EAAV7rB,MAEpC,GAAIwmB,EAAW,CACX9I,EAAQ8I,EACR,MAGJ,GAAIxkB,EAAU,CACV0b,EAAQ1b,EACR,MAGJ,GAAI4R,EAAO,CACP8J,EAAQ9J,EACR,MAGJ,GAAI5T,EAAO,CACP0d,EAAQ1d,EACR,MAEJ,MAEJ,IAAK,eAGD0d,EAFkB/J,EAAV3T,MAGR,MAIR+vF,YAAUryE,EAAO7K,IA7bF,KAgcnB2O,cAAgB,KAAO,MACXnU,EAAWlS,KAAKwC,MAAhB0P,OACA62D,EAAqB/oE,KAAK+B,MAA1BgnE,iBAERziD,YAAgBpU,EAAQ,CAAC62D,KApcV,KAucnBxiD,aAAe,KACXvmB,KAAK44F,oBAxcU,KA2cnBxE,iBAAmBzwE,IACf,IAAe,IAAXA,EAAc,OAAO,EAGzB,OADkBA,EAAQ,EACP3jB,KAAKmpF,QAAQz0E,QA/cjB,KAkdnBy/E,eAAiB9vF,IACTA,GACAA,EAAM4B,kBAFY,MAKd8iE,EAAqB/oE,KAAK+B,MAA1BgnE,iBAEF5X,EADQnxD,KAAKmpF,QAAQ/yD,UAAUz1B,GAAKA,EAAET,KAAO6oE,GACzB,EAE1B,OAAO/oE,KAAKq0F,UAAUljC,EAAW,KACzBA,IAAcnxD,KAAKmpF,QAAQz0E,OAAS,GACpC1U,KAAK64F,kBA7dE,KAkenBA,aAlemB,qBAkeJ,wCAAAnmF,EAAA,0DACmB,EAAKlQ,MAA3B0P,EADG,EACHA,OAAQiU,EADL,EACKA,UACR4iD,EAAqB,EAAKhnE,MAA1BgnE,iBAEFxtD,EAAS,EAAKqT,UAAU1c,EAAQiU,GAElC5jB,EAAS,CACT,QAAS,WACT8sB,SAAU,GACVO,YAAa,IAEbrU,EAXO,gCAYQnZ,IAAgBC,KAAK,CAChC,QAAS,qBACT4U,QAAS/E,EACTwJ,MAAO,GACP8T,eAAgB,EAChBC,gBAAiBs5C,EACjB98C,OAAQ,EACRpW,MAAO4iF,IACPl9E,OAAQA,IApBL,OAYPhZ,EAZO,cAwBX6vC,aAAwB7vC,EAAQ,EAAK4mF,SACrC7wE,IAAayX,SAASxtB,EAAO8sB,UAE7B,EAAK85D,QAAU,EAAKA,QAAQ7tE,OAAO/Y,EAAO8sB,UAEpC1L,EAAQ,EAAKwlE,QAAQ/yD,UAAUz1B,GAAKA,EAAET,KAAO6oE,GAEnD,EAAKtmE,SAAS,CACV6xF,aAAc,EAAKA,aAAa3wE,GAChCywE,iBAAkB,EAAKA,iBAAiBzwE,GACxCi0E,WAAYr1F,EAAOqtB,cAlCZ,0CAleI,KAwgBnB0kE,aAAe3wE,IACX,IAAe,IAAXA,EAAc,OAAO,EAGzB,OADkBA,EAAQ,GACN,GA5gBL,KA+gBnBmtD,WAAazsE,IACLA,GACAA,EAAM4B,kBAFQ,MAKV8iE,EAAqB/oE,KAAK+B,MAA1BgnE,iBAEF5X,EADQnxD,KAAKmpF,QAAQ/yD,UAAUz1B,GAAKA,EAAET,KAAO6oE,GACzB,EAE1B,OAAO/oE,KAAKq0F,UAAUljC,EAAW,KACX,IAAdA,GACAnxD,KAAK84F,cA1hBE,KA+hBnBA,SA/hBmB,qBA+hBR,wCAAApmF,EAAA,0DACuB,EAAKlQ,MAA3B0P,EADD,EACCA,OAAQiU,EADT,EACSA,UACR4iD,EAAqB,EAAKhnE,MAA1BgnE,iBAEFxtD,EAAS,EAAKqT,UAAU1c,EAAQiU,GAElC5jB,EAAS,CACT,QAAS,WACT8sB,SAAU,GACVO,YAAa,IAEbrU,EAXG,gCAYYnZ,IAAgBC,KAAK,CAChC,QAAS,qBACT4U,QAAS/E,EACTwJ,MAAO,GACP8T,eAAgB,EAChBC,gBAAiBs5C,EACjB98C,QAASwsE,IACT5iF,MAAO4iF,IAAoB,EAC3Bl9E,OAAQA,IApBT,OAYHhZ,EAZG,cAwBP6vC,aAAwB7vC,EAAQ,EAAK4mF,SACrC7wE,IAAayX,SAASxtB,EAAO8sB,UAE7B,EAAK0oE,iBAA8C,IAA3Bx1F,EAAO8sB,SAAS3a,OACxC,EAAKy0E,QAAU5mF,EAAO8sB,SAAS/T,OAAO,EAAK6tE,SAErCxlE,EAAQ,EAAKwlE,QAAQ/yD,UAAUz1B,GAAKA,EAAET,KAAO6oE,GAEnD,EAAKtmE,SAAS,CACV6xF,aAAc,EAAKA,aAAa3wE,GAChCywE,iBAAkB,EAAKA,iBAAiBzwE,GACxCo0E,iBAAkB,EAAKA,iBACvBH,WAAYr1F,EAAOqtB,cApChB,0CA/hBQ,KAukBnBykE,UAAY,CAAC1wE,EAAO4S,MACZ5S,EAAQ,OACRA,GAAS3jB,KAAKmpF,QAAQz0E,UAE1B1U,KAAKyC,SACD,CACIsmE,iBAAkB/oE,KAAKmpF,QAAQxlE,GAAOzjB,GACtCo0F,aAAct0F,KAAKs0F,aAAa3wE,GAChCywE,iBAAkBp0F,KAAKo0F,iBAAiBzwE,IAE5C4S,GAGJmiE,YAA0B/0E,EAAO3jB,KAAKmpF,UAC/B,IArlBQ,KAwlBnBgP,gBAAkB,CAACF,EAAYC,KAAe,MAClCnvB,EAAqB/oE,KAAK+B,MAA1BgnE,iBAEFplD,EAAQs0E,EAAW7hE,UAAUz1B,GAAKA,EAAET,KAAO6oE,GACjD,IAAIgwB,EAAS,EACb,IAAK,IAAI/jF,EAAI2O,EAAQ,EAAG3O,GAAK,EAAGA,IAC5B,GAAIkjF,IAAcA,EAAUjjF,IAAIgjF,EAAWjjF,GAAG9U,IAAK,CAC/C64F,EAASd,EAAWjjF,GAAG9U,GACvB,MAGR,IAAK64F,EACD,IAAK,IAAI/jF,EAAI2O,EAAQ,EAAG3O,EAAIijF,EAAWvjF,OAAQM,IAC3C,GAAIkjF,IAAcA,EAAUjjF,IAAIgjF,EAAWjjF,GAAG9U,IAAK,CAC/C64F,EAASd,EAAWjjF,GAAG9U,GACvB,MAKZ,IAAK64F,EAAQ,OAEb,MAAM5nC,EAAYnxD,KAAKmpF,QAAQ/yD,UAAUz1B,GAAKA,EAAET,KAAO64F,GAEvD,OAAO/4F,KAAKq0F,UAAUljC,EAAW,KACX,IAAdA,EACAnxD,KAAK84F,WACE3nC,IAAcnxD,KAAKmpF,QAAQz0E,OAAS,GAC3C1U,KAAK64F,kBApnBE,KAynBnBD,iBAAmB,KACf54F,KAAKyC,SAAS,CAAEu2F,0BAA0B,KA1nB3B,KA6nBnBC,kBAAoB,KAChBj5F,KAAKyC,SAAS,CAAEu2F,0BAA0B,KA9nB3B,KAioBnBplD,WAAa,KACT5zC,KAAKyC,SAAS,CAAEu2F,0BAA0B,IAD3B,MAGP9mF,EAAWlS,KAAKwC,MAAhB0P,OAHO,EAI4BlS,KAAK+B,MAAxCgnE,EAJO,EAIPA,iBAAkBmwB,EAJX,EAIWA,aAEpBxhF,EAAUY,IAAazM,IAAIqG,EAAQ62D,GACzC,IAAKrxD,EAAS,OAPC,MASPiP,EAA+DjP,EAA/DiP,6BAA8BC,EAAiClP,EAAjCkP,8BACjBD,GAAgCC,IAGrDxkB,IAAgBC,KAAK,CACjB,QAAS,iBACT4U,QAAS/E,EACTkI,YAAa,CAAC2uD,GACdowB,OAAQvyE,GAAgCsyE,KAlpB7B,KAspBnBE,yBAA2B/0F,IACvBrE,KAAKyC,SAAS,CAAEy2F,aAAc70F,EAAMuD,OAAOia,WAvpB5B,KA0pBnBw3E,mBAAqB,KAGjB,IAAIC,EAAiB,uBACrB,OAHuBt5F,KAAK+B,MAApB8wD,YAIJ,IAAK,uBACDymC,EAAiB,oBACjB,MAEJ,IAAK,oBACDA,EAAiB,qBACjB,MAEJ,IAAK,qBACDA,EAAiB,uBAKzBt5F,KAAKyC,SAAS,CACVowD,WAAYymC,KA9qBD,KAkrBnBjyB,eAAiB,CAACn1D,EAAQiU,KACtB,MAAMzO,EAAUY,IAAazM,IAAIqG,EAAQiU,GACzC,IAAKzO,EAAS,OAAO,EAFe,MAI5Ba,EAA8Bb,EAA9Ba,iBAAkBC,EAAYd,EAAZc,QAC1B,IAAKA,EAAS,OAAO,EAErB,OAAQA,EAAQ,UACZ,IAAK,yBACD,OAAO,EAEX,QACI,OAAOD,IA9rBA,KAmsBnBs8E,uBAAyBxwF,IACrBrE,KAAK80F,gBAAkBzwF,EAAM4jC,eApsBd,KAusBnB8sD,mBAAqB1wF,IAAU,MACnBywF,EAAoB90F,KAApB80F,gBACR90F,KAAK80F,gBAAkB,KAEnBzwF,EAAM4jC,gBAAkB6sD,GAE5B90F,KAAK+E,eA1sBL/E,KAAKwM,gBAAkB,IAAIG,IAAgB3M,KAAKsE,WAChDtE,KAAKmpF,QAAU,GAJA,QAMenpF,KAAKwC,MAA3B0P,EANO,EAMPA,OAAQiU,EAND,EAMCA,UAEhBnmB,KAAK+B,MAAQ,CACT8wD,WAAY,uBACZjzC,WAAY1N,EACZ+sB,cAAe9Y,EACf4iD,iBAAkB5iD,EAClBmuE,cAAc,EACdF,kBAAkB,EAClB4E,0BAA0B,EAC1BE,cAAc,GAItBt7E,sBAAsBC,EAAWC,GAAY,MAAD,EACV9d,KAAKwC,MAA3B0P,EADgC,EAChCA,OAAQiU,EADwB,EACxBA,UADwB,EAUpCnmB,KAAK+B,MAPL8wD,EAHoC,EAGpCA,WACAkW,EAJoC,EAIpCA,iBACAiwB,EALoC,EAKpCA,yBACAjB,EANoC,EAMpCA,iBACAzD,EAPoC,EAOpCA,aACAF,EARoC,EAQpCA,iBACAwD,EAToC,EASpCA,WAGJ,OAAI95E,EAAU+0C,aAAeA,IAIzBh1C,EAAU3L,SAAWA,IAIrB2L,EAAUsI,YAAcA,IAIxBrI,EAAUirD,mBAAqBA,IAI/BjrD,EAAUy7E,kBAAoBnF,IAI9Bt2E,EAAUw2E,eAAiBA,IAI3Bx2E,EAAUi6E,mBAAqBA,IAI/Bj6E,EAAU85E,aAAeA,GAIzB95E,EAAUk7E,2BAA6BA,SAO/Ch2F,oBACIhD,KAAKw4F,cAELlsF,IAAgBC,IAAIvM,KAAKwM,iBACzB8L,IAAatL,GAAG,uBAAwBhN,KAAK0iB,wBAC7CpK,IAAatL,GAAG,mBAAoBhN,KAAK2iB,oBACzCrK,IAAatL,GAAG,uBAAwBhN,KAAKqiB,wBAGjDpV,uBACIX,IAAgBI,OAAO1M,KAAKwM,iBAC5B8L,IAAalL,IAAI,uBAAwBpN,KAAK0iB,wBAC9CpK,IAAalL,IAAI,mBAAoBpN,KAAK2iB,oBAC1CrK,IAAalL,IAAI,uBAAwBpN,KAAKqiB,wBA4nBlDpf,SAAU,MAAD,EACiBjD,KAAKwC,MAAnB0P,EADH,EACGA,OAAQG,EADX,EACWA,EADX,EAWDrS,KAAK+B,MARL8wD,EAHC,EAGDA,WACAkW,EAJC,EAIDA,iBACAiwB,EALC,EAKDA,yBACAE,EANC,EAMDA,aACAnB,EAPC,EAODA,iBACAzD,EARC,EAQDA,aACAF,EATC,EASDA,iBACAwD,EAVC,EAUDA,WAGJ,IAAIj0E,GAAS,EACTi0E,GAAcG,IACdp0E,EAAQ3jB,KAAKmpF,QAAQ/yD,UAAUz1B,GAAKA,EAAET,KAAO6oE,IAEjD,MAAMqsB,EAAWr0F,KAAKoQ,IAAInR,KAAKmpF,QAAQz0E,OAAQkjF,GAGvChxE,EADQtO,IAAazM,IAAIqG,EAAQ62D,GACjCniD,6BAEFwgD,EAAewO,aAAoB1jE,EAAQ62D,GAC3C1B,EAAiBrnE,KAAKqnE,eAAen1D,EAAQ62D,GAEnD,IAAIywB,EAA4B,GAE5BA,EADAzC,aAAe7kF,EAAQ62D,GACK12D,EAAE,yBACvBklF,aAAmBrlF,EAAQ62D,GACN12D,EAAE,uBAEFA,EAAE,yBAElC,MAAMonF,EAAqBT,EACvB,kBAAC,IAAD,CACIr8E,QAASC,IACTC,mBAAoB,EACpBH,KAAMs8E,EACNl8E,QAAS9c,KAAKi5F,kBACdl8E,kBAAgB,qBAChB,kBAAC,IAAD,CAAa7c,GAAG,qBAAqBmS,EAAE,YACvC,kBAAC,KAAD,KACI,kBAAC2hC,GAAA,EAAD,KAAoBwlD,GACnB5yE,GACG,kBAAC06B,GAAA,EAAD,CACIhpB,MAAOjmB,EAAE,gBACTkvC,QACI,kBAAC5/B,GAAA,EAAD,CAAUvJ,MAAM,UAAU7N,MAAM,YAAYmH,SAAU1R,KAAKo5F,2BAE/Dv3E,QAASq3E,KAIrB,kBAAC57E,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQhN,QAASvQ,KAAKi5F,kBAAmB7gF,MAAM,WAC1C/F,EAAE,WAEP,kBAACkL,EAAA,EAAD,CAAQhN,QAASvQ,KAAK4zC,WAAYx7B,MAAM,WACnC/F,EAAE,SAIf,KA9DC,EAgEmCykF,YAAa5kF,EAAQ62D,EAAkB2wB,KAhE1E,mBAgEiB/tF,GAhEjB,gBAkEC9C,GAlED,KAkEU8C,EAAOA,EAAKzL,GAAK,GAChC,IAAIie,EAAQ9L,EAAE,eASd,OARI+kF,aAAellF,EAAQ62D,GACvB5qD,EAAQ,GACD44E,aAAe7kF,EAAQ62D,GAC9B5qD,EAAQ9L,EAAE,eACHklF,aAAmBrlF,EAAQ62D,KAClC5qD,EAAQ9L,EAAE,cAIV,yBAAKnP,UAAWkN,IAAW,eAAgByiD,IACvC,yBAAK3vD,UAAU,uBACX,kBAAC,GAAD,CAAWgP,OAAQA,EAAQiU,UAAW4iD,IACtC,kBAAC,GAAD,CACI5qD,MAAOA,EACPa,SAAUo2E,EAAW,GAAKzxE,GAAS,EAAIy9D,KAAOiU,aAAa,KAAMD,EAAWzxE,EAAOyxE,GAAY,OAEnG,kBAAC,GAAD,CAA2Bj3E,MAAO9L,EAAE,QAASxJ,OAAQA,EAAQiJ,SAAUslF,aAAellF,EAAQ62D,GAAmBx4D,QAASvQ,KAAK20F,aAC/H,kBAAC,GAAD,CACIx2E,MAAO9L,EAAE,WACTP,UAAWu1D,EACX92D,QAASvQ,KAAKqmB,eACd,kBAAC,GAAD,OAEJ,kBAAC,GAAD,CAAyBlI,MAAO9L,EAAE,UAAWP,UAAWs1D,EAAc72D,QAASvQ,KAAKumB,cAChF,kBAACe,GAAD,OAEJ,kBAAC,GAAD,CAAyBnJ,MAAO9L,EAAE,SAAU9B,QAASvQ,KAAK+E,aACtD,kBAAC+L,EAAA,EAAD,QAGR,yBAAK5N,UAAU,uBAAuBmN,YAAarQ,KAAK60F,uBAAwBtkF,QAASvQ,KAAK+0F,oBAC1F,yBAAK7xF,UAAU,4BACX,kBAAC,GAAD,CAAmB4O,UAAWsiF,EAAkBb,MAAI,EAAChjF,QAASvQ,KAAKm0F,gBAC/D,kBAAC,GAAD,QAIR,yBAAKjxF,UAAU,+BACX,kBAAC,GAAD,CACIgP,OAAQA,EACRiU,UAAW4iD,EACXjvD,KAAM4/E,IACNnpF,QAASvQ,KAAKm0F,kBAItB,yBAAKjxF,UAAU,6BACX,kBAAC,GAAD,CAAmB4O,UAAWwiF,EAAcf,MAAI,EAAChjF,QAASvQ,KAAK8wE,YAC3D,kBAAC,GAAD,CAAoBxpE,MAAO,CAAEg3B,UAAW,uBAIpD,yBAAKp7B,UAAU,wBACdu2F,M,OCtwBFE,OA3Gf,cAAwC93F,IAAMC,UAC1ClC,YAAY4C,GACR0B,MAAM1B,GADS,KA2CnBo3F,uBAAyBx1F,IAAW,MAAD,EACLpE,KAAKwC,MAAvB0P,EADuB,EACvBA,OAAQuG,EADe,EACfA,MAEhB,GAAIvG,IAAW9N,EAAO8N,QAAUuG,EAAMyH,IAAIhgB,KAAOkE,EAAOyE,OAAQ,CAC5D,MAAM8C,EAAOC,IAAUC,IAAIzH,EAAOyE,SAAW7I,KAAK+B,MAAM4J,KACxD3L,KAAKyC,SAAS,CACVkJ,WAjDO,KAsDnBkuF,uBAAyBz1F,IAAW,MAAD,EACLpE,KAAKwC,MAAvB0P,EADuB,EACvBA,OAAQuG,EADe,EACfA,MAGhB,GAFeqc,YAAc5iB,KAEd9N,EAAOgtB,QAAU3Y,EAAMyH,IAAIhgB,KAAOkE,EAAOyE,OAAQ,CAC5D,MAAM8C,EAAOC,IAAUC,IAAIzH,EAAOyE,SAAW7I,KAAK+B,MAAM4J,KACxD3L,KAAKyC,SAAS,CACVkJ,WA7DO,KAkEnBunF,mBAAqB7uF,IACbA,GAAOA,EAAM4B,kBADS,MAGlB6W,EAAY9c,KAAKwC,MAAjBsa,QAERA,GAAWA,EAAQzY,IAvEJ,KA0EnBy1F,iBAAmBz1F,IACXA,GAAOA,EAAM4B,kBADO,MAGhB8zF,EAAe/5F,KAAKwC,MAApBu3F,WAERA,GAAcA,EAAW11F,IA/EV,QAGWrE,KAAKwC,MAAvB0P,EAHO,EAGPA,OAAQuG,EAHD,EAGCA,MAHD,IAKJ9M,EAAS8M,EAAdyH,IACNvU,EAAOC,IAAUC,IAAIF,EAAKzL,KAAOyL,EAEjC3L,KAAK+B,MAAQ,CACT6d,WAAY1N,EACZ6V,UAAWtP,EACXxH,MAAO+oF,KACPjgF,OAAQigF,KACRruF,KAAMA,GAId,gCAAgCnJ,EAAOT,GAAQ,MACnCmQ,EAAkB1P,EAAlB0P,OAAQuG,EAAUjW,EAAViW,MAEhB,OAAIvG,IAAWnQ,EAAM6d,YAAcnH,IAAU1W,EAAMgmB,UACxC,CACHnI,WAAY1N,EACZ6V,UAAWtP,EACXxH,MAAO+oF,KACPjgF,OAAQigF,KACRruF,KAAM8M,EAAMyH,KAIb,KAGXld,oBACI4I,IAAUoB,GAAG,uBAAwBhN,KAAK45F,wBAC1ChuF,IAAUoB,GAAG,uBAAwBhN,KAAK65F,wBAG9C5sF,uBACIrB,IAAUwB,IAAI,uBAAwBpN,KAAK45F,wBAC3ChuF,IAAUwB,IAAI,uBAAwBpN,KAAK65F,wBA0C/C52F,SAAU,MACE0I,EAAS3L,KAAK+B,MAAd4J,KACR,IAAKA,EAAM,OAAO,KAElB,MAAMm7B,EAAOl7B,IAAUm7B,QAAQp7B,EAAKzL,KAAOyL,EAAKm7B,KAC1Cte,EAAM5c,IAAUquF,WAAWnzD,GAEjC,OACI,yBAAK5jC,UAAU,uBAAuBqN,QAASvQ,KAAKkzF,oBAChD,yBAAKhwF,UAAU,6BAA6BslB,IAAKA,EAAK8B,IAAI,GAAG/Z,QAASvQ,KAAK85F,mBAC3E,kBAACh6C,GAAA,EAAD,CAAcn0C,KAAMA,OClErBuuF,OA7Bf,cAA+Br4F,IAAMC,UACjCmB,SAAU,MAAD,EAC2BjD,KAAKwC,MAA7B0P,EADH,EACGA,OAAQ8W,EADX,EACWA,KAAM1hB,EADjB,EACiBA,MAEtB,OACI,yBAAKpE,UAAU,aAAaoE,MAAOA,GAC/B,yBAAKpE,UAAU,sBACX,kBAACsP,EAAA,EAAD,CAAUN,OAAQA,EAAQ8L,mBAAmB,IAC7C,yBAAK9a,UAAU,sBACX,yBAAKA,UAAU,kBACX,kBAAC4pB,GAAA,EAAD,CAAeH,OAAQ,CAAE,QAAS,oBAAqB1V,QAAS/E,MAEnE8W,GACG,yBAAK9lB,UAAU,uBACX,8BAAO8lB,S,6NC8axB/W,qBAvaf,cAAiCpQ,IAAMC,UACnClC,YAAY4C,GAAQ,IAAD,EACf0B,MAAM1B,GADS,YA8EnB6yB,cAAgBhxB,IACZ,KAAIuY,IAAaizB,OAAOn7B,OAAS,KAI7BrQ,EAAMyrC,YAIV,OAAQzrC,EAAME,KACV,IAAK,SAID,OAHAvE,KAAK+E,cACLV,EAAM6B,sBACN7B,EAAM4B,kBAGV,IAAK,YAID,OAHAjG,KAAK8wE,aACLzsE,EAAM4B,uBACN5B,EAAM6B,iBAGV,IAAK,aAID,OAHAlG,KAAKm0F,iBACL9vF,EAAM4B,uBACN5B,EAAM6B,mBAvGC,KA6GnBsyF,YA7GmB,qBA6GL,8BAAA9lF,EAAA,wDACFR,EAAW,EAAK1P,MAAhB0P,OAEHsO,aAActO,GAHT,iEAKW9P,IAAgBC,KAAK,CACtC,QAAS,uBACT2T,QAAS8e,YAAc5iB,GACvB+Z,OAAQ,EACRpW,MAAO,MATD,OAKJtT,EALI,OAYV,EAAK4mF,QAAU5mF,EAAO43F,OACtB,EAAKpC,iBAA4C,IAAzBx1F,EAAO43F,OAAOzlF,OAExB,EAEd,EAAKjS,SAAS,CACV8pC,aAHU,EAIV+nD,aAAc,EAAKA,aAJT,GAKVF,iBAAkB,EAAKA,iBALb,GAMVwD,WAAYr1F,EAAOqtB,cAGvBwqE,YAAiCloF,EATnB,EASkC,EAAKi3E,SAxB3C,0CA7GK,KAwInBpkF,YAAc,KACVqtB,YAA6B,OAzId,KA4InBuiE,WAAa,KAAO,MACRziF,EAAWlS,KAAKwC,MAAhB0P,OADO,EAEsBlS,KAAK+B,MAAlCwqC,EAFO,EAEPA,aAAcqrD,EAFP,EAEOA,WAEhBr5E,EAAOR,KAAUlS,IAAIqG,GAC3B,IAAKqM,EAAM,OAEX,IAAIoF,GAAS,EACTi0E,IACAj0E,EAAQ4oB,GAGZ,MAAM9zB,EACFkL,EAAQ,GAAKA,EAAQ3jB,KAAKmpF,QAAQz0E,OAAS2lF,aAAgBr6F,KAAKmpF,QAAQxlE,IAAUuW,YAAiBhoB,GACvG,IAAKuG,EAAO,OACZ,IAAKA,EAAMyH,IAAK,OAEhB,MAAMvU,EAAOC,IAAUC,IAAI4M,EAAMyH,IAAIhgB,KAAOuY,EAAMyH,IAC7CvU,GAEL2uF,YAAe3uF,EAAMA,EAAKzL,GAAK,OAAQqe,EAAM,IAAM3S,IAAU2uF,oBAAoBroF,EAAQvG,EAAKzL,MAhK/E,KAmKnBmmB,cAAgB,KAAO,MACXnU,EAAWlS,KAAKwC,MAAhB0P,OADU,EAEmBlS,KAAK+B,MAAlCwqC,EAFU,EAEVA,aAER,IAAI5oB,GAAS,EAJK,EAEIi0E,aAIlBj0E,EAAQ4oB,GAGZ,IAAIiuD,EAAY,KAGhB,GADkBx6F,KAAKmpF,SAAWxlE,GAAS,GAAKA,EAAQ3jB,KAAKmpF,QAAQz0E,OACtD,CACX,MAAM+D,EAAQ4hF,aAAgBr6F,KAAKmpF,QAAQxlE,IAC3C,IAAKlL,EAAO,OAFD,IAIA9M,EAAS8M,EAAdyH,IACN,IAAKvU,EAAM,OAEX6uF,EAAY,CACR,QAAS,cACTt6F,GAAIyL,EAAKzL,QAEV,CACH,MAAMu6F,EAAYvgE,YAAiBhoB,GACnC,IAAKuoF,EAAW,OAFb,MAIU9uF,EAAS8uF,EAAdv6E,IACR,IAAKvU,EAAM,OAEX,MAAMm7B,EAAOl7B,IAAUm7B,QAAQp7B,EAAKzL,IACpC,IAAK4mC,EAAM,OAEX0zD,EAAY,CACR,QAAS,gBACTnyE,KAAMye,EACN6P,KAAM,IAId,IAAK6jD,EAAW,OAEhB,MAAM3hF,EAAsB,CACxB,QAAS,oBACTJ,MAAO+hF,EACPxgF,UAAW,KACXC,uBAAwB,GACxBhJ,MAAO+oF,KACPjgF,OAAQigF,KACR3gF,QAAS,CACL,QAAS,gBACThM,KAAM,GACNiM,SAAU,MAEdY,IAAK,GAGT5C,YAAQuB,IA5NO,KA+NnB0N,aA/NmB,qBA+NJ,8CAAA7T,EAAA,wDACHR,EAAW,EAAK1P,MAAhB0P,OADG,EAOP,EAAKnQ,MAJLwqC,EAHO,EAGPA,aACAqrD,EAJO,EAIPA,WACAtD,EALO,EAKPA,aACAF,EANO,EAMPA,iBAGAzwE,GAAS,EACTi0E,IACAj0E,EAAQ4oB,GAGN9zB,EAAQkL,EAAQ,GAAKA,EAAQ,EAAKwlE,QAAQz0E,OAAS2lF,aAAgB,EAAKlR,QAAQxlE,IAAUuW,YAAiBhoB,GAdtG,oDAiBHhS,EAAOuY,EAAPvY,GAjBG,oEAoBLkC,IAAgBC,KAAK,CACvB,QAAS,qBACTq4F,iBAAkBx6F,IAtBX,WAyBX,EAAKipF,QAAQ14C,OAAO9sB,EAAO,GACtB,EAAKwlE,QAAQz0E,OA1BP,wBA2BP,EAAK3P,cA3BE,8BA+BX,EAAKtC,SAAS,CACVm1F,WAAYA,EAAa,KAGzBtD,EAnCO,wBAoCDnjC,EAAY5kB,EAAe,EApC1B,kBAsCA,EAAK8nD,UAAUljC,EAAW,CAAEymC,WAAYA,EAAa,GAAK,KAC3C,IAAdzmC,GACA,EAAK2nC,cAxCN,YA6CP1E,EA7CO,wBA8CDjjC,EAAY5kB,EA9CX,kBAgDA,EAAK8nD,UAAUljC,EAAW,CAAEymC,WAAYA,EAAa,GAAK,KACzDzmC,IAAc,EAAKg4B,QAAQz0E,OAAS,GACpC,EAAKmkF,kBAlDN,0CA/NI,KAuRnBzE,iBAAmBzwE,IACf,IAAe,IAAXA,EAAc,OAAO,EAGzB,OADkBA,EAAQ,EACP3jB,KAAKmpF,QAAQz0E,QA3RjB,KA8RnBy/E,eAAiB9vF,IACTA,GACAA,EAAM4B,kBAFY,MAMhBkrD,EADmBnxD,KAAK+B,MAAtBwqC,aACyB,EAEjC,OAAOvsC,KAAKq0F,UAAUljC,EAAW,GAAK,KAC9BA,IAAcnxD,KAAKmpF,QAAQz0E,OAAS,GACpC1U,KAAK64F,kBAxSE,KA6SnBA,aA7SmB,qBA6SJ,sBAAAnmF,EAAA,wHA7SI,KAiTnB4hF,aAAe3wE,IACX,IAAe,IAAXA,EAAc,OAAO,EAGzB,OADkBA,EAAQ,GACN,GArTL,KAwTnBmtD,WAAazsE,IACLA,GACAA,EAAM4B,kBAFQ,MAMZkrD,EADmBnxD,KAAK+B,MAAtBwqC,aACyB,EAEjC,OAAOvsC,KAAKq0F,UAAUljC,EAAW,GAAK,KAChB,IAAdA,GACAnxD,KAAK84F,cAlUE,KAuUnBA,SAvUmB,qBAuUR,sBAAApmF,EAAA,wHAvUQ,KA2UnB2hF,UAAY,CAAC1wE,EAAOg3E,EAAKpkE,KACrB,GAAI5S,EAAQ,EAAG,OAAO,EACtB,GAAIA,GAAS3jB,KAAKmpF,QAAQz0E,OAAQ,OAAO,EAEzC1U,KAAKyC,S,wVAAL,EAEQ8pC,aAAc5oB,GACXg3E,EAHX,CAIQrG,aAAct0F,KAAKs0F,aAAa3wE,GAChCywE,iBAAkBp0F,KAAKo0F,iBAAiBzwE,KAE5C4S,GAX8B,MAc1BrkB,EAAWlS,KAAKwC,MAAhB0P,OAGR,OADAkoF,YAAiCloF,EAAQyR,EAAO3jB,KAAKmpF,UAC9C,GAzVPnpF,KAAKmpF,QAAU,GACfnpF,KAAKwM,gBAAkB,IAAIG,IAAgB3M,KAAKq1B,eAJjC,QAMYr1B,KAAKwC,MAAxB0P,EANO,EAMPA,OAAQrJ,EAND,EAMCA,OAEhB7I,KAAK+B,MAAQ,CACT6d,WAAY1N,EACZ0oF,WAAY/xF,EACZ0jC,aAAc,EACd+nD,cAAc,EACdF,kBAAkB,EAClB4E,0BAA0B,GAIlCp7E,sBAAsBC,EAAWC,GAAY,MAAD,EACV9d,KAAKwC,MAA3B0P,EADgC,EAChCA,OAAQiU,EADwB,EACxBA,UADwB,EASpCnmB,KAAK+B,MANL84F,EAHoC,EAGpCA,cACAzG,EAJoC,EAIpCA,iBACAE,EALoC,EAKpCA,aACAyD,EANoC,EAMpCA,iBACAH,EAPoC,EAOpCA,WACAoB,EARoC,EAQpCA,yBAGJ,OAAIn7E,EAAU3L,SAAWA,IAIrB2L,EAAUsI,YAAcA,IAIxBrI,EAAU+8E,gBAAkBA,IAI5B/8E,EAAUy7E,kBAAoBnF,IAI9Bt2E,EAAUw2E,eAAiBA,IAI3Bx2E,EAAUi6E,mBAAqBA,IAI/Bj6E,EAAU85E,aAAeA,GAIzB95E,EAAUk7E,2BAA6BA,QAO/Ch2F,oBAAqB,MACTkP,EAAWlS,KAAKwC,MAAhB0P,OACFuG,EAAQyhB,YAAiBhoB,GAC/BioB,YAA8BjoB,EAAQ,CAACuG,IAEvCzY,KAAKw4F,YAAY//E,GAEjBnM,IAAgBC,IAAIvM,KAAKwM,iBAG7BS,uBACIX,IAAgBI,OAAO1M,KAAKwM,iBAoRhCvJ,SAAU,MAAD,EACiBjD,KAAKwC,MAAnB0P,EADH,EACGA,OAAQG,EADX,EACWA,EADX,EAODrS,KAAK+B,MAJLwqC,EAHC,EAGDA,aACA+nD,EAJC,EAIDA,aACAF,EALC,EAKDA,iBACAwD,EANC,EAMDA,WAGJ,IAAIj0E,GAAS,EACTi0E,IACAj0E,EAAQ4oB,GAGZ,MAAMuuD,EAAYn3E,GAAS,GAAKA,EAAQ3jB,KAAKmpF,QAAQz0E,OAC/CqmF,EAAeD,EAAYT,aAAgBr6F,KAAKmpF,QAAQxlE,IAAU,KAClEq3E,EAAkBD,EAAeA,EAAa76E,IAAM,KAEpDzH,GADmBuiF,EAAkBA,EAAgBl0D,MAAQl7B,IAAUm7B,QAAQi0D,EAAgB96F,IAAM,MAC1E66F,EAAe7gE,YAAiBhoB,GAC3D+oF,EAAmBH,EAAY96F,KAAKmpF,QAAQxlE,GAAS,KAC9ChY,EAAS8M,EAAdyH,IACFwT,EAAOrT,aAASnO,GAEtB,OACI,yBAAKhP,UAAWkN,IAAW,eAAgB,yBACvC,yBAAKlN,UAAU,uBACX,kBAAC,GAAD,CAAkBgP,OAAQA,EAAQ8W,KAAMkyE,aAAwBD,KAChE,kBAAC,GAAD,CACI98E,MAAO9L,EAAE,eACT2M,SAAU44E,EAAa,GAAKj0E,GAAS,EAAIy9D,KAAOiU,aAAa,KAAM1xE,EAAQ,EAAGi0E,GAAc,OAEhG,yBAAKtwF,MAAO,CAAE2J,MAAO,MACrB,kBAAC,GAAD,CAA2BkN,MAAO9L,EAAE,QAASxJ,OAAQ8C,EAAKzL,GAAIqQ,QAASvQ,KAAK20F,aAC5E,kBAAC,GAAD,CAA2Bx2E,MAAO9L,EAAE,WAAYxJ,OAAQ8C,EAAKzL,GAAIqQ,QAASvQ,KAAKqmB,eAC3E,kBAAC,GAAD,OAEHqN,GACG,kBAAC,GAAD,CAAyBvV,MAAO9L,EAAE,UAAW9B,QAASvQ,KAAKumB,cACvD,kBAACe,GAAD,OAGR,kBAAC,GAAD,CAAyBnJ,MAAO9L,EAAE,SAAU9B,QAASvQ,KAAK+E,aACtD,kBAAC+L,EAAA,EAAD,QAGR,yBAAK5N,UAAU,uBAAuBqN,QAASvQ,KAAKm0F,gBAChD,yBAAKjxF,UAAU,4BACX,kBAAC,GAAD,CAAmB4O,UAAWwiF,EAAcf,MAAI,EAAChjF,QAASvQ,KAAK8wE,YAC3D,kBAAC,GAAD,QAIR,yBAAK5tE,UAAU,+BACX,kBAAC,GAAD,CAA2BgP,OAAQA,EAAQuG,MAAOA,EAAOqE,QAAS9c,KAAK+E,YAAag1F,WAAY/5F,KAAKm0F,kBAGzG,yBAAKjxF,UAAU,6BACX,kBAAC,GAAD,CAAmB4O,UAAWsiF,EAAkBb,MAAI,EAAChjF,QAASvQ,KAAKm0F,gBAC/D,kBAAC,GAAD,CAAoB7sF,MAAO,CAAEg3B,UAAW,2B,cCpXrDrsB,qBApDf,cAA0BpQ,IAAMC,UAAW,eAAD,oBAEtCiD,YAAcxC,IAAW,MACbua,EAAY9c,KAAKwC,MAAjBsa,QAERA,GAAWA,GAAQ,IAGvB7Z,SAAU,MAAD,EACiBjD,KAAKwC,MAAnBgsB,EADH,EACGA,OAAQnc,EADX,EACWA,EAChB,IAAKmc,EAAQ,OAAO,KAFf,IAICrQ,EAA+BqQ,EAA/BrQ,MAAOzG,EAAwB8W,EAAxB9W,QAAS6pE,EAAe/yD,EAAf+yD,GAAIpe,EAAW30C,EAAX20C,OAM1B,MAJyB,kBAArBzrD,EAAQ,WACRA,EAAU+U,aAAiB/U,EAASrF,EAAG,KAIvC,kBAAC,IAAD,CACIqK,MAAM,EACNC,QAASC,IACTC,mBAAoB,EACpBC,QAAS9c,KAAK+E,YACdsM,QAAS,CAAEy5C,MAAO,iBAClB,kBAAC,IAAD,KAAc3sC,GACd,kBAAC,KAAD,KACI,kBAAC61B,GAAA,EAAD,KACKt8B,IAGT,kBAAC4F,EAAA,EAAD,KACM6lD,GACE,kBAAC5lD,EAAA,EAAD,CAAQhN,QAAS,IAAMvQ,KAAK+E,aAAY,GAAQqT,MAAM,WACjD+qD,GAGPoe,GACE,kBAAChkE,EAAA,EAAD,CAAQhN,QAAS,IAAMvQ,KAAK+E,aAAY,GAAOqT,MAAM,WAChDmpE,Q,OC8EdtvE,qBAhHf,cAAgCpQ,IAAMC,UAAW,eAAD,oBAC5CC,MAAQ,CACJo5F,YAAY,EACZ35D,YAAY,GAH4B,KAM5C45D,uBAAyB,KAAO,MACpBD,EAAen7F,KAAK+B,MAApBo5F,WAERn7F,KAAKyC,SAAS,CACV04F,YAAaA,KAVuB,KAc5CE,uBAAyB,KAAO,MACpB75D,EAAexhC,KAAK+B,MAApBy/B,WAERxhC,KAAKyC,SAAS,CACV++B,YAAaA,KAIrBv+B,SAAU,MAAD,EAC0BjD,KAAKwC,MAA5BmqB,EADH,EACGA,OAAQ7P,EADX,EACWA,QAASzK,EADpB,EACoBA,EACzB,IAAKsa,EAAQ,OAAO,KAFf,QAI8B3sB,KAAK+B,MAAhCo5F,EAJH,EAIGA,WAAY35D,EAJf,EAIeA,WAEpB,IAAIrjB,EAAQ,KACR9Q,EAAO,KACX,MAAMiM,EAAW,GACjB,IAAIgiF,EAAa,KACjB,OAAQ3uE,EAAO,UACX,IAAK,oBAAqB,CAAC,MACf3W,EAAY2W,EAAZ3W,QAERmI,EAAQijE,KAAOiU,aAAa,iBAAkBxsC,aAAiB7yC,EAAS3D,IACxEhF,EAAO+zE,KAAOiU,aAAa,iBAAkBxsC,aAAiB7yC,EAAS3D,IACvEhF,EAAOwqC,aAAwBxqC,EAAMiM,GACrCgiF,EAAala,KAAOC,UAAU,gBAC9B,MAEJ,IAAK,oBAAqB,CAAC,MACfpqE,EAAY0V,EAAZ1V,QAEFgxC,EAAWszC,YAAgBtkF,GAC7BgxC,GACA9pC,EAAQijE,KAAOC,UAAU,wBACrBp5B,EAASuzC,SACTnuF,EAAO+zE,KAAOiU,aAAa,2BAA4BptC,EAASuzC,SAChEnuF,EAAOwqC,aAAwBxqC,EAAMiM,IAErCjM,EAAO+zE,KAAOC,UAAU,uCAG5BljE,EAAQijE,KAAOC,UAAU,mBAErBh0E,EADAoT,YAAcxJ,GACPmqE,KAAOC,UAAU,0BAEjBD,KAAOC,UAAU,yBAGhCia,EAAala,KAAOC,UAAU,cAC9B,OAIR,OACI,kBAAC,IAAD,CACI1kE,QAASC,IACTC,mBAAoB,EACpBH,MAAM,EACNI,QAAS,IAAMA,GAAQ,EAAO,MAC9BC,kBAAgB,gBAChB,kBAAC,IAAD,CAAa7c,GAAG,gBACXie,GAEL,kBAAC,KAAD,KACI,kBAAC61B,GAAA,EAAD,KACKvnB,aAAiB,CAAE,QAAS,gBAAiBpf,OAAMiM,cAElC,sBAApBqT,EAAO,UACL,yBAAKzpB,UAAU,uBACX,kBAACo+C,GAAA,EAAD,CACIC,QAAS,kBAAC5/B,GAAA,EAAD,CAAUE,QAASs5E,EAAYzpF,SAAU1R,KAAKo7F,uBAAwBhjF,MAAM,YACrFkgB,MAAOjmB,EAAE,sBAEb,kBAACivC,GAAA,EAAD,CACIC,QAAS,kBAAC5/B,GAAA,EAAD,CAAUE,QAAS2f,EAAY9vB,SAAU1R,KAAKq7F,uBAAwBjjF,MAAM,YACrFkgB,MAAOjmB,EAAE,sBAKzB,kBAACiL,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQhN,QAAS,IAAMuM,GAAQ,EAAO,MAAO1E,MAAM,WAC9C/F,EAAE,WAEP,kBAACkL,EAAA,EAAD,CAAQhN,QAAS,IAAMuM,GAAQ,EAAM6P,GAA8B,sBAApBA,EAAO,SAAmC,CAAEwuE,aAAY35D,cAAe,MAAOppB,MAAM,aAC9HkjF,QClBVrpF,qBAnFf,cAAiCpQ,IAAMC,UAAW,eAAD,oBAC7CC,MAAQ,GADqC,KAsB7C05F,mBAAqB,KAAO,MAChBtC,EAAWn5F,KAAK+B,MAAhBo3F,OAERn5F,KAAKyC,SAAS,CAAE02F,QAASA,KAtB7B,gCAAgC32F,EAAOT,GAAQ,MACnCmQ,EAAW1P,EAAX0P,OACA0N,EAAe7d,EAAf6d,WAI8B87E,EAFzB39E,KAAUlS,IAAIqG,GAEnB0U,6BAER,OAAIhH,IAAe1N,EACR,CACH0N,WAAY1N,EACZwpF,0BACAvC,OAAQuC,GAIT,KASXz4F,SAAU,MAAD,EAC0BjD,KAAKwC,MAA5B0P,EADH,EACGA,OAAQ4K,EADX,EACWA,QAASzK,EADpB,EACoBA,EADpB,EAEuCrS,KAAK+B,MAAzC25F,EAFH,EAEGA,wBAAyBvC,EAF5B,EAE4BA,OAEjC,OACI,kBAAC,IAAD,CACIx8E,QAASC,IACTF,MAAM,EACNG,mBAAoB,EACpBC,QAAS,IAAMA,GAAQ,EAAOq8E,GAC9Bp8E,kBAAgB,uBAChB,kBAAC,IAAD,CAAa7c,GAAG,uBAAuBqS,YAAkBL,GAAQ,EAAOG,IACxE,kBAAC,KAAD,KACI,yBAAKnP,UAAU,yBACX,kBAACsP,EAAA,EAAD,CAAUN,OAAQA,IAClB,6BACI,kBAAC8hC,GAAA,EAAD,CAAmB9zC,GAAG,6BAAtB,wCAIIw7F,GACI,kBAACp6C,GAAA,EAAD,CACIC,QACI,kBAAC5/B,GAAA,EAAD,CAAUE,QAASs3E,EAAQznF,SAAU1R,KAAKy7F,mBAAoBrjF,MAAM,YAExEkgB,MACI9X,aAActO,GAAd,0BACyBK,YAAkBL,GAAQ,EAAOG,IACpD,yBAEV/K,MAAO,CAAEg9E,WAAY,QAO7C,kBAAChnE,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQhN,QAAS,IAAMuM,GAAQ,EAAOq8E,GAAS/gF,MAAM,WAChD/F,EAAE,WAEP,kBAACkL,EAAA,EAAD,CAAQhN,QAAS,IAAMuM,GAAQ,EAAMq8E,GAAS/gF,MAAM,WAC/C/F,EAAE,YCsBZJ,qBA3Ff,cAAmCpQ,IAAMC,UAAW,eAAD,oBAC/CC,MAAQ,GADuC,KAgC/C05F,mBAAqB,KAAO,MAChBtC,EAAWn5F,KAAK+B,MAAhBo3F,OAERn5F,KAAKyC,SAAS,CAAE02F,QAASA,KAhC7B,gCAAgC32F,EAAOT,GAAQ,MACnCmQ,EAAuB1P,EAAvB0P,OAAQ4E,EAAetU,EAAfsU,WACR8I,EAA+B7d,EAA/B6d,WAAYk3D,EAAmB/0E,EAAnB+0E,eAEpB,IAAI4kB,GAA0B,EAJY,2BAK1C,YAAsB5kF,EAAtB,+CAAkC,CAAC,IAA1BqP,EAAyB,QAC9B,MAAMzO,EAAUY,IAAazM,IAAIqG,EAAQiU,GACzC,IAAKzO,EAAS,CACVgkF,GAA0B,EAC1B,MAEJ,IAAKhkF,EAAQkP,6BAA8B,CACvC80E,GAA0B,EAC1B,QAbkC,kFAiB1C,OAAI97E,IAAe1N,GAAU4kE,IAAmBhgE,EACrC,CACH8I,WAAY1N,EACZ4kE,eAAgBhgE,EAChB4kF,0BACAvC,OAAQuC,GAIT,KASXz4F,SAAU,MAAD,EACsCjD,KAAKwC,MAAxC0P,EADH,EACGA,OAAQ4E,EADX,EACWA,WAAYgG,EADvB,EACuBA,QAASzK,EADhC,EACgCA,EADhC,EAEuCrS,KAAK+B,MAAzC25F,EAFH,EAEGA,wBAAyBvC,EAF5B,EAE4BA,OAE3BjmD,EAAQp8B,EAAaA,EAAWpC,OAAS,EAE/C,IAAIu7C,EAAwB59C,EAAJ,IAAV6gC,EAAgB,gCAAqC,+BAKnE,OAJIn8B,aAAa7E,KAAYuO,YAAcvO,KACvC+9C,EAAwB59C,EAAJ,IAAV6gC,EAAgB,oCAAyC,oCAInE,kBAAC,IAAD,CACIv2B,QAASC,IACTC,mBAAoB,EACpBH,MAAM,EACNI,QAAS,IAAMA,GAAQ,EAAOq8E,GAC9Bp8E,kBAAgB,uBAChB,kBAAC,IAAD,CAAa7c,GAAG,uBAAuBkhF,KAAOiU,aAAa,sBAAuBjU,KAAOua,mBAAmB,WAAYzoD,KACxH,kBAAC,KAAD,KACI,kBAACc,GAAA,EAAD,KACKic,IAEFl5C,aAAa7E,IAAWwpF,GACvB,kBAACp6C,GAAA,EAAD,CACIC,QAAS,kBAAC5/B,GAAA,EAAD,CAAUE,QAASs3E,EAAQznF,SAAU1R,KAAKy7F,mBAAoBrjF,MAAM,YAC7EkgB,MACI9X,aAActO,GACRgC,EAAQ7B,EAAG,gBAAiBE,YAAkBL,GAAQ,EAAOG,IAC7DA,EAAE,mBAKxB,kBAACiL,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQhN,QAAS,IAAMuM,GAAQ,EAAOq8E,GAAS/gF,MAAM,WAChD/F,EAAE,WAEP,kBAACkL,EAAA,EAAD,CAAQhN,QAAS,IAAMuM,GAAQ,EAAMq8E,GAAS/gF,MAAM,WAC/C/F,EAAE,Y,oEC+BZJ,qBAxGf,cAAkCpQ,IAAMC,UAAW,eAAD,oBAE9CC,MAAQ,GAFsC,KAI9CuI,aAAeuG,IACX7Q,KAAKoiF,SAAWvxE,EAAEjJ,OAAO2C,OALiB,KAQ9CqxF,wBAA0B,KAAO,MACrBC,EAAiB77F,KAAK+B,MAAtB85F,aAER77F,KAAKyC,SAAS,CAAEo5F,cAAeA,KAXW,KAc9CC,gBAAkB/oF,IAAU,MAChBV,EAAMrS,KAAKwC,MAAX6P,EAER,IAAKU,EAAO,OAAO,KAEnB,GAAsB,0BAAlBA,EAAM2E,QACN,OAAOrF,EAAE,mBACN,GAAIU,EAAM2E,QAAQiT,WAAW,mCAAoC,CACpE,MAAM2/C,EAAMv3D,EAAM2E,QAAQ9R,QAAQ,kCAAmC,IACrE,IACI,MAAM9E,EAAOuG,SAASijE,GAChBz6D,EAAa/O,EAAO,GACpBsgF,KAAOua,mBAAmB,UAAW76F,GACrCsgF,KAAOua,mBAAmB,UAAW56F,KAAKgP,MAAMjP,EAAO,KAE7D,OAAOsgF,KAAOiU,aAAa,gBAAiBxlF,GAC9C,MAAOgB,GACL,OAAOkC,EAAM2E,SAIrB,OAAO3E,EAAM2E,SAGjBzU,SAAU,MAAD,EACgCjD,KAAKwC,MAAlCT,EADH,EACGA,MAAOgR,EADV,EACUA,MAAO+J,EADjB,EACiBA,QAASzK,EAD1B,EAC0BA,EAC/B,IAAKtQ,EAAO,OAAO,KAFd,QAI6B/B,KAAK+B,MAA/B85F,EAJH,EAIGA,aAAcptE,EAJjB,EAIiBA,QACCstE,EAAiBh6F,EAAhCi6F,cAEFC,EAAej8F,KAAK87F,gBAAgB/oF,GAE1C,OACI,kBAAC,IAAD,CACI2J,MAAM,EACNC,QAASC,IACTC,mBAAoB,EACpBC,QAAS,IAAMA,GAAQ,GACvBzL,QAAS,CAAEy5C,MAAO,iBAClB,kBAAC,IAAD,KAAcz4C,EAAE,6BAChB,kBAAC,KAAD,KACI,kBAAC2hC,GAAA,EAAD,KACK3hC,EAAE,uCAEP,kBAAC4uC,GAAA,EAAD,CAAa/9C,UAAU,aAAak1B,WAAS,GACzC,kBAAC8jE,GAAA,EAAD,CAAYC,QAAQ,qBAAqBppF,MAAOkX,QAAQlX,IAASV,EAAE,kBACnE,kBAAC+pF,GAAA,EAAD,CACIhkE,WAAS,EACT5a,WAAS,EACTw2C,aAAa,MACb9zD,GAAG,qBACHse,KAAMq9E,EAAe,OAAS,WAC9B/pF,SAAU2c,EACV1b,MAAOkX,QAAQlX,GACfrB,SAAU1R,KAAKsK,aACf+xF,aACI,kBAACC,GAAA,EAAD,CAAgBhpF,SAAS,OACrB,kBAAC4E,EAAA,EAAD,CACIC,aAAW,6BACX5H,QAASvQ,KAAK47F,wBACdh6E,KAAK,OACJi6E,EAAe,kBAAC,KAAD,MAAiB,kBAAC,KAAD,UAKhDE,GAAgB,kBAACQ,GAAA,EAAD,CAAgBr8F,GAAG,sBAAsB67F,GAC1D,kBAACQ,GAAA,EAAD,CAAgBr8F,GAAG,sBAAsB6S,OAAK,GAAEkpF,GAAgB,OAGxE,kBAAC3+E,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQhN,QAAS,IAAMuM,GAAQ,GAAQ1E,MAAM,WACxC/F,EAAE,WAEP,kBAACkL,EAAA,EAAD,CAAQhN,QAAS,IAAMuM,GAAQ,EAAM9c,KAAKoiF,UAAWhqE,MAAM,WACtD/F,EAAE,YC9BZJ,qBAlEf,cAA8BpQ,IAAMC,UAAW,eAAD,oBAC1C06F,oBAAsB,CAACtqF,EAAQG,KAC3B,MAAMkM,EAAOR,KAAUlS,IAAIqG,GAC3B,IAAKqM,EAAM,OAAO,KAClB,IAAKA,EAAKC,KAAM,OAAO,KAEvB,OAAQD,EAAKC,KAAK,UACd,IAAK,qBACD,MAAM,wCAAN,OAA+CD,EAAKJ,MAApD,KAEJ,IAAK,qBAAsB,CACvB,MAAMwB,EAAaE,KAAgBhU,IAAI0S,EAAKC,KAAKe,eACjD,OAAII,EACOA,EAAW4oC,WAAX,iDACyChqC,EAAKJ,MAD9C,oDAEuCI,EAAKJ,MAF5C,KAKJ,KAEX,IAAK,kBACL,IAAK,iBACD,MAAM,6CAAN,OAAoD5L,YAAkBL,GAAQ,EAAOG,GAArF,KAIR,OAAO,MAGXpP,SAAU,MAAD,EAC0BjD,KAAKwC,MAA5B0P,EADH,EACGA,OAAQ4K,EADX,EACWA,QAASzK,EADpB,EACoBA,EAEzB,OACI,kBAAC,IAAD,CACIsK,QAASC,IACTF,MAAM,EACNG,mBAAoB,EACpBC,QAAS,IAAMA,GAAQ,GACvBC,kBAAgB,uBAChB,kBAAC,IAAD,CAAa7c,GAAG,uBAAuBqS,YAAkBL,GAAQ,EAAOG,IACxE,kBAAC,KAAD,KACI,yBAAKnP,UAAU,yBACX,kBAACsP,EAAA,EAAD,CAAUN,OAAQA,IAClB,kBAAC8hC,GAAA,EAAD,CAAmB9zC,GAAG,6BACjBF,KAAKw8F,oBAAoBtqF,EAAQG,MAI9C,kBAACiL,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQhN,QAAS,IAAMuM,GAAQ,GAAQ1E,MAAM,WACxC/F,EAAE,WAEP,kBAACkL,EAAA,EAAD,CAAQhN,QAAS,IAAMuM,GAAQ,GAAO1E,MAAM,UAAUoF,WAAS,GAC1DnL,EAAE,Y,OCfZJ,qBAvCf,cAA6BpQ,IAAMC,UAC/BmB,SAAU,MAAD,EACgCjD,KAAKwC,MAAlC2+E,EADH,EACGA,KAAM3yD,EADT,EACSA,OAAQ1R,EADjB,EACiBA,QAASzK,EAD1B,EAC0BA,EAC/B,IAAK8uE,EAAM,OAAO,KAFb,MAIG/vD,EAAW5C,EAAX4C,OAER,OACI,kBAAC,IAAD,CACI1U,MAAM,EACNC,QAASC,IACTC,mBAAoB,EACpBC,QAASjM,GAAKiM,EAAQjM,GAAG,GACzBQ,QAAS,CAAEy5C,MAAO,iBAClB,kBAAC,IAAD,KAAcz4C,EAAE,YAChB,kBAAC,KAAD,KACI,kBAAC2hC,GAAA,EAAD,KACKotC,KAAOiU,aAAa,yBAA0BztC,aAAgBx2B,MAGvE,kBAAC9T,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQhN,QAASM,GAAKiM,EAAQjM,GAAG,GAAQuH,MAAM,WAC1C/F,EAAE,WAEP,kBAACkL,EAAA,EAAD,CAAQhN,QAASM,GAAKiM,EAAQjM,GAAG,GAAOuH,MAAM,WACzC/F,EAAE,Y,OCWZJ,qBArCf,cAA4BpQ,IAAMC,UAC9BmB,SAAU,MAAD,EACuBjD,KAAKwC,MAAzBygB,EADH,EACGA,IAAKnG,EADR,EACQA,QAASzK,EADjB,EACiBA,EACtB,OAAK4Q,EAGD,kBAAC,IAAD,CACIvG,MAAM,EACNC,QAASC,IACTC,mBAAoB,EACpBC,QAASjM,GAAKiM,EAAQjM,GAAG,GACzBQ,QAAS,CAAEy5C,MAAO,iBAClB,kBAAC,IAAD,KAAcz4C,EAAE,iBAChB,kBAAC,KAAD,CAAe/K,MAAO,CAAEm1F,aAAc,eAClC,kBAACzoD,GAAA,EAAD,KACKotC,KAAOiU,aAAa,gBAAiBpyE,KAG9C,kBAAC3F,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQhN,QAASM,GAAKiM,EAAQjM,GAAG,GAAQuH,MAAM,WAC1C/F,EAAE,WAEP,kBAACkL,EAAA,EAAD,CAAQhN,QAASM,GAAKiM,EAAQjM,GAAG,GAAOuH,MAAM,WACzC/F,EAAE,WApBF,Q,OCwFVJ,qBAtFf,cAA+BpQ,IAAMC,UAAW,eAAD,oBAC3CC,MAAQ,CACJ26F,QAAQ,EACRC,QAAQ,GAH+B,KAM3CC,mBAAqB,KAAO,MAChBF,EAAW18F,KAAK+B,MAAhB26F,OAER18F,KAAKyC,SAAS,CAAEi6F,QAASA,KATc,KAY3CG,mBAAqB,KAAO,MAChBF,EAAW38F,KAAK+B,MAAhB46F,OAER38F,KAAKyC,SAAS,CAAEk6F,QAASA,KAG7B15F,SAAU,MAAD,EAC+BjD,KAAKwC,MAAjCygB,EADH,EACGA,IAAKuL,EADR,EACQA,OAAQ1R,EADhB,EACgBA,QAASzK,EADzB,EACyBA,EAC9B,IAAK4Q,EAAK,OAAO,KAFZ,QAIsBjjB,KAAK+B,MAAxB26F,EAJH,EAIGA,OAAQC,EAJX,EAIWA,OAERp6F,EAAWisB,EAAXjsB,OACR,IAAKA,EAAQ,OAAO,KAPf,MASG0oB,EAA8C1oB,EAA9C0oB,OAAQ6xE,EAAsCv6F,EAAtCu6F,YAAaC,EAAyBx6F,EAAzBw6F,qBAE7B,IAAIC,EAAQ5b,KAAOiU,aAAa,iBAAkBpqE,EAAQ28B,aAAgB3xC,IAAUC,YACpF,MAAM+mF,EAAY,GAClBD,EAAQnlD,aAAwBmlD,EAAOC,GACvC,MAAMC,EACF,kBAAC57C,GAAA,EAAD,CACIC,QAAS,kBAAC5/B,GAAA,EAAD,CAAUvJ,MAAM,UAAUyJ,QAAS66E,EAAQhrF,SAAU1R,KAAK48F,qBACnEtkE,MAAO7L,aAAiB,CAAE,QAAS,gBAAiBpf,KAAM2vF,EAAO1jF,SAAU2jF,GAAa5qF,KAIhG,IAAI8qF,EAAU,KACd,GAAIJ,EAAsB,CACtB,IAAIK,EAAQhc,KAAOiU,aAAa,iBAAkBxsC,aAAiBi0C,EAAazqF,IAChF,MAAMgrF,EAAY,GAClBD,EAAQvlD,aAAwBulD,EAAOC,GACvCF,EACI,kBAAC77C,GAAA,EAAD,CACIC,QAAS,kBAAC5/B,GAAA,EAAD,CAAUvJ,MAAM,UAAUyJ,QAAS86E,EAAQjrF,SAAU1R,KAAK68F,qBACnEvkE,MAAO7L,aAAiB,CAAE,QAAS,gBAAiBpf,KAAM+vF,EAAO9jF,SAAU+jF,GAAahrF,KAKpG,OACI,kBAAC,IAAD,CACIqK,MAAM,EACNC,QAASC,IACTC,mBAAoB,EACpBC,QAASjM,GAAKiM,EAAQjM,GAAG,GACzBQ,QAAS,CAAEy5C,MAAO,iBAClB,kBAAC,IAAD,KAAcz4C,EAAE,iBAChB,kBAAC,KAAD,CAAe/K,MAAO,CAAEwsD,QAAS,OAAQC,cAAe,SAAU0oC,aAAc,eAC5E,kBAACzoD,GAAA,EAAD,KACKotC,KAAOiU,aAAa,gBAAiBpyE,IAEzCi6E,EACAC,GAEL,kBAAC7/E,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQhN,QAASM,GAAKiM,EAAQjM,GAAG,GAAQuH,MAAM,WAC1C/F,EAAE,WAEP,kBAACkL,EAAA,EAAD,CAAQhN,QAASM,GAAKiM,EAAQjM,GAAG,EAAM,CAAE6rF,SAAQC,WAAWvkF,MAAM,WAC7D/F,EAAE,c,OCsBZJ,qBAhGf,cAA+BpQ,IAAMC,UAAW,eAAD,oBAC3CC,MAAQ,GADmC,KAkB3C05F,mBAAqB,KAAO,MAChBtC,EAAWn5F,KAAK+B,MAAhBo3F,OAERn5F,KAAKyC,SAAS,CAAE02F,QAASA,KAlB7B,gCAAgC32F,EAAOT,GAAQ,MACnCmQ,EAAsB1P,EAAtB0P,OAAQiU,EAAc3jB,EAAd2jB,UACRvG,EAA8B7d,EAA9B6d,WAAYqf,EAAkBl9B,EAAlBk9B,cAEpB,OAAIrf,IAAe1N,GAAU+sB,IAAkB9Y,EACpC,CACHvG,WAAY1N,EACZ4kE,eAAgB3wD,EAChBgzE,QAAS34E,aAActO,IAIxB,KASXjP,SAAU,MAAD,EAC0BjD,KAAKwC,MAA5B0P,EADH,EACGA,OAAQ4K,EADX,EACWA,QAASzK,EADpB,EACoBA,EACjB8mF,EAAWn5F,KAAK+B,MAAhBo3F,OAEF56E,EAAOR,KAAUlS,IAAIqG,GAC3B,IAAKqM,EAAM,OAAO,KAElB,IAAIlR,EAAO,GACX,OAAQkR,EAAKC,KAAK,UACd,IAAK,kBACL,IAAK,iBACDnR,EAAOgF,EAAE,uBACT,MAEJ,IAAK,qBACDhF,EAAOgF,EAAE,mBACT,MAEJ,IAAK,qBAEGhF,EADAoT,YAAcvO,GACPG,EAAE,0BAEFA,EAAE,mBAMrB,OACI,kBAAC,IAAD,CACIsK,QAASC,IACTC,mBAAoB,EACpBH,MAAM,EACNI,QAAS,IAAMA,GAAQ,EAAOq8E,GAC9Bp8E,kBAAgB,gBAChB,kBAAC,IAAD,CAAa7c,GAAG,gBAAgBmS,EAAE,YAClC,kBAAC,KAAD,KACI,kBAAC2hC,GAAA,EAAD,KACK3mC,GAEL,oCAEQmT,aAActO,IACV,kBAACovC,GAAA,EAAD,CACIC,QACI,kBAAC5/B,GAAA,EAAD,CAAUE,QAASs3E,EAAQznF,SAAU1R,KAAKy7F,mBAAoBrjF,MAAM,YAExEkgB,MAAK,uBAAkB/lB,YAAkBL,GAAQ,EAAOG,QAM5E,kBAACiL,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQhN,QAAS,IAAMuM,GAAQ,EAAOq8E,GAAS/gF,MAAM,WAChD/F,EAAE,WAEP,kBAACkL,EAAA,EAAD,CAAQhN,QAAS,IAAMuM,GAAQ,EAAMq8E,GAAS/gF,MAAM,WAC/C/F,EAAE,Y,iBCxBZirF,OApEf,cAAgCz7F,IAAMC,UAClClC,YAAY4C,GACR0B,MAAM1B,GADS,KAgBnB+6F,YAAc,KACV,MAAM98F,EAAM,IAAIyoB,KACVs0E,EAAUx9F,KAAKy9F,OAASh9F,EACxB8J,EAAQ,IAAOizF,EAAUx9F,KAAKwC,MAAMumC,QAAW,IAOrD,GALA/oC,KAAKyC,SAAS,CACV+6F,QAASA,EAAU,EAAIA,EAAU,EACjCjzF,MAAOA,EAAQ,IAAM,IAAMA,IAG3B9J,GAAOT,KAAKy9F,QACRz9F,KAAK09F,QAAS,CACdprB,cAActyE,KAAK09F,SACnB19F,KAAK09F,QAAU,KAFD,MAINC,EAAc39F,KAAKwC,MAAnBm7F,UACJA,GACAA,MA9BZ39F,KAAK+B,MAAQ,CACTy7F,QAASx9F,KAAKwC,MAAMumC,QAAU,IAC9Bx+B,MAAO,GAIfvH,oBACIhD,KAAKM,UAAY,IAAI4oB,KACrBlpB,KAAKy9F,OAASz9F,KAAKM,UACnBN,KAAKy9F,OAAOG,gBAAgB59F,KAAKy9F,OAAOI,kBAAoB79F,KAAKwC,MAAMumC,SACvE/oC,KAAK09F,QAAU1oC,YAAYh1D,KAAKu9F,YAAa,KA0BjDtwF,uBACQjN,KAAK09F,UACLprB,cAActyE,KAAK09F,SACnB19F,KAAK09F,QAAU,MAIvBz6F,SAAU,MAAD,EACsBjD,KAAK+B,MAAxBwI,EADH,EACGA,MAAOizF,EADV,EACUA,QAEf,OACI,yBAAKt6F,UAAU,sBACX,yBAAKA,UAAU,2BACX,kBAAC,KAAD,CAAYkV,MAAM,YAAYolF,EAAU,KAAMM,YAElD,yBAAK56F,UAAU,+BACX,kBAAC66F,GAAA,EAAD,CAAkBjkF,KAAM,GAAIvP,MAAO,IAAMA,EAAO2X,QAAQ,e,OCX7DjQ,qBAvCf,cAAiCpQ,IAAMC,UAEnCmB,SAAU,MAAD,EAC6BjD,KAAKwC,MAA/B2jB,EADH,EACGA,UAAWrJ,EADd,EACcA,QAASzK,EADvB,EACuBA,EAEtBhF,EAAmBgF,EAAZ8T,EAAc,oBAAyB,yBAEpD,OACI,kBAAC,IAAD,CACIxJ,QAASC,IACTC,mBAAoB,EACpBH,MAAM,EACNI,QAAS,IAAMA,GAAQ,GACvBC,kBAAgB,gBAChB,kBAAC,IAAD,CAAa7c,GAAG,gBAAgBmS,EAAE,YAClC,kBAAC,KAAD,KACI,kBAAC2hC,GAAA,EAAD,KACK3mC,IAGT,kBAACiQ,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQhN,QAAS,IAAMuM,GAAQ,GAAQ1E,MAAM,WACxC/F,EAAE,WAEP,kBAACkL,EAAA,EAAD,CAAQhN,QAAS,IAAMuM,GAAQ,GAAO1E,MAAM,WACvC/F,EAAE,Y,wjBCunBZ+C,OALCC,YACZC,IACArD,cAGWmD,CA9nBf,cAAsBvT,IAAM4sC,cAAe,eAAD,iCACtC1sC,MAAQ,CACJq/B,UAAW,KACXhF,aAAc,KACd5V,eAAgB,KAChBw3E,WAAY,KACZv4B,aAAc,KACd5H,MAAO,KACPogC,aAAc,KACdC,cAAe,KACfC,gBAAiB,KACjBC,mBAAoB,KACpBC,wBAAyB,MAZS,KA6CtCC,0BAA4Bl6F,IAAW,MAC3BuoB,EAAWvoB,EAAXuoB,OAER3sB,KAAKyC,SAAS,CAAE47F,wBAAyB,CAAE1xE,aAhDT,KAmDtC4xE,iCAAmCn6F,IAAW,MAClCrC,EAAsBqC,EAAtBrC,MAAOy8F,EAAep6F,EAAfo6F,WAEfx+F,KAAKyC,SAAS,CAAE27F,mBAAoB,CAAEr8F,QAAOy8F,iBAtDX,KAyDtCC,4BAA8Br6F,IAAW,MAC7B+8E,EAAiB/8E,EAAjB+8E,KAAM3yD,EAAWpqB,EAAXoqB,OAEVA,GAAUA,EAAOvQ,YACjBje,KAAKk+F,cAAgB,CAAE/c,OAAM3yD,UAC7BxuB,KAAK0+F,uBAAuB,MAAM,IAElC1+F,KAAKyC,SAAS,CAAEy7F,cAAe,CAAE/c,OAAM3yD,aAhET,KAoEtCmwE,2BAA6Bv6F,IAAW,MAC5B6e,EAAgB7e,EAAhB6e,IAAKuL,EAAWpqB,EAAXoqB,OAETA,IAAWA,EAAOozD,KAClB5hF,KAAKi+F,aAAe,CAAEh7E,MAAKuL,UAC3BxuB,KAAK4+F,sBAAsB,MAAM,IAEjC5+F,KAAKyC,SAAS,CAAEw7F,aAAc,CAAEh7E,MAAKuL,aA3EP,KA+EtCqwE,8BAAgCz6F,IAAW,MAC/B6e,EAAgB7e,EAAhB6e,IAAKuL,EAAWpqB,EAAXoqB,OAEbxuB,KAAKyC,SAAS,CAAE07F,gBAAiB,CAAEl7E,MAAKuL,aAlFN,KAqFtCswE,uBAAyB16F,IAAW,MAAD,EACYpE,KAAKwC,MAAxCmV,EADuB,EACvBA,gBAAiBC,EADM,EACNA,cACjBF,EAAoBtT,EAApBsT,QAASO,EAAW7T,EAAX6T,OAEjBN,EAAgBD,EAAS,CACrBI,iBAAkBC,IAClBC,kBAAkB,EAClBC,OAAQA,EAAOL,MA5Fe,KAgGtCmnF,oBAAsB36F,IAAW,MACrBoqB,EAAWpqB,EAAXoqB,OAERxuB,KAAKyC,SAAS,CAAEo7D,MAAO,CAAErvC,aAnGS,KAsGtCwwE,2BAA6B56F,IAAW,MAC5B8N,EAAsB9N,EAAtB8N,OAAQiU,EAAc/hB,EAAd+hB,UAEZ9F,aAASnO,IACTlS,KAAKylE,aAAe,CAChBvzD,SACAiU,aAEJnmB,KAAKi/F,4BAA2B,GAAM,IAEtCj/F,KAAKyC,SAAS,CACVgjE,aAAc,CACVvzD,SACAiU,gBAnHsB,KAyHtC+4E,yBAA2B96F,IAAW,MAC1B8N,EAAsB9N,EAAtB8N,OAAQiU,EAAc/hB,EAAd+hB,UAEZ9F,aAASnO,IACTlS,KAAKg+F,WAAa,CACd9rF,SACAiU,aAEJnmB,KAAKm/F,0BAAyB,GAAM,IAEpCn/F,KAAKyC,SAAS,CACVu7F,WAAY,CACR9rF,SACAiU,gBAtIsB,KA4ItCi5E,6BAA+Bh7F,IAAW,MAC9B8N,EAAuB9N,EAAvB8N,OAAQ4E,EAAe1S,EAAf0S,WAEhB9W,KAAKyC,SAAS,CACV+jB,eAAgB,CACZtU,SACA4E,iBAlJ0B,KAuJtC+0B,wBAA0BznC,IAAW,MACzB8N,EAAW9N,EAAX8N,OAERlS,KAAKyC,SAAS,CAAE2+B,UAAY,CAAElvB,aA1JI,KA6JtCiqB,2BAA6B/3B,IAAW,MAC5B8N,EAAW9N,EAAX8N,OAERlS,KAAKyC,SAAS,CAAE25B,aAAe,CAAElqB,aAhKC,KAmKtCmtF,2BAA6B,CAAC98F,EAAQ42F,KAAY,MACtC9mF,EAAMrS,KAAKwC,MAAX6P,EAGR,IADyBrS,KAAK+B,MAAtBq6B,aACW,OAInB,GAFAp8B,KAAKyC,SAAS,CAAE25B,aAAc,QAEzB75B,EAAQ,OAEb,MAAM2P,EAASiH,KAAS0oB,YAClBnqB,EAAUrF,EAAE,sBACZitF,EAAU,CACZ,QAAS,oBACTroF,QAAS/E,EACTgyD,uBAAuB,EACvBi1B,UAGJn5F,KAAKyX,sBAAsBvF,EAAQ,2BAA4BwF,EAAS,CAAC4nF,KAtLvC,KAyLtCC,oBAzLsC,sCAyLhB,WAAOh9F,EAAQi9F,GAAO,GAAtB,2BAAA9sF,EAAA,0DACI,EAAK3Q,OAAS,EAA5Bq/B,EADU,EACVA,UADU,oDAIVlvB,EAAWkvB,EAAXlvB,OACFqM,EAAOR,KAAUlS,IAAIqG,GALT,oDAQlB,EAAKkvB,UAAY,KACjB,EAAK3+B,SAAS,CAAE2+B,UAAW,OAEtB7+B,EAXa,mDAelB,OAFMmV,EAAU,EAAK+nF,yBAAyBvtF,GACxCupC,EAAW,GACTl9B,EAAKC,KAAK,UACd,IAAK,qBACGkhF,YAAaxtF,IACbupC,EAAS3lC,KAAK,CAAE,QAAS,YAAamB,QAAS/E,IAEnDupC,EAAS3lC,KAAK,CAAE,QAAS,oBAAqBmB,QAAS/E,EAAQgyD,uBAAuB,IAE1F,IAAK,qBACGy7B,aAAUztF,GACVupC,EAAS3lC,KAAK,CACV,QAAS,sBACTmB,QAAS/E,EACT8D,QAASC,IAAUC,UACnBwuD,OAAQ,CACJ,QAAS,0BACTC,WAAW,KAGZ+6B,YAAaxtF,IACpBupC,EAAS3lC,KAAK,CAAE,QAAS,YAAamB,QAAS/E,IAGvD,IAAK,kBACL,IAAK,iBACDupC,EAAS3lC,KAAK,CAAE,QAAS,oBAAqBmB,QAAS/E,EAAQgyD,uBAAuB,IAvC5E,IA2Cds7B,EA3Cc,iBA4Cd,EAAK/nF,sBAAsBvF,EAAQ,wBAAyBwF,EAAS+jC,GA5CvD,kCA+CDzmC,EAAI,EA/CH,aA+CMA,EAAIymC,EAAS/mC,QA/CnB,kCAgDAtS,IAAgBC,KAAKo5C,EAASzmC,IAhD9B,QA+C2BA,IA/C3B,mHAzLgB,2DAiPtC4qF,6BAA+B,CAACr9F,EAAQ42F,KAAY,MACxC3yE,EAAmBxmB,KAAK+B,MAAxBykB,eACR,IAAKA,EAAgB,OAF0B,MAIvCtU,EAAuBsU,EAAvBtU,OAAQ4E,EAAe0P,EAAf1P,WAEhB8B,cACA5Y,KAAKyC,SAAS,CAAE+jB,eAAgB,OAE3BjkB,GAELH,IAAgBC,KAAK,CACjB,QAAS,iBACT4U,QAAS/E,EACTkI,YAAatD,EACbqiF,YAhQ8B,KAoQtCsG,yBAA2BvtF,IAAW,MAC1BG,EAAMrS,KAAKwC,MAAX6P,EAEFkM,EAAOR,KAAUlS,IAAIqG,GAC3B,IAAKqM,EAAM,OAAOlM,EAAE,mBACpB,IAAKkM,EAAKC,KAAM,OAAOnM,EAAE,mBAEzB,OAAQkM,EAAKC,KAAK,UACd,IAAK,qBACD,OAAOnM,EAAE,mBAEb,IAAK,qBAAsB,CACvB,MAAMsN,EAAaE,KAAgBhU,IAAI0S,EAAKC,KAAKe,eACjD,OAAII,EACOA,EAAW4oC,WAAa,eAAiB,aAG7Cl2C,EAAE,mBAEb,IAAK,kBACL,IAAK,iBACD,OAAOA,EAAE,mBAIjB,OAAOA,EAAE,oBA7RyB,KAgStCoF,sBAAwB,CAACvF,EAAQ2tF,EAAkBnoF,EAAS+jC,KAAc,MAAD,EACvBz7C,KAAKwC,MAA3C6P,EAD6D,EAC7DA,EAAGsF,EAD0D,EAC1DA,gBAAiBC,EADyC,EACzCA,cAC5B,IAAKioF,EAAkB,OAEvB,MAAMt7F,EAAG,UAAMs7F,EAAN,mBAAiC3tF,GACpC+F,EAAM,sCAAG,4BAAAvF,EAAA,8DAEEsC,EAAI,EAFN,YAESA,EAAIymC,EAAS/mC,QAFtB,gCAGGtS,IAAgBC,KAAKo5C,EAASzmC,IAHjC,OAE8BA,IAF9B,sCAMP4C,EAAcC,GACdzV,IAAgBkG,aAAa,CAAE,QAASu3F,EAAkB3tF,SAAQmqB,YAAY,IAPvE,uEAAH,qDAUN8mC,EAAS,KACXvrD,EAAcC,GACdzV,IAAgBkG,aAAa,CAAE,QAASu3F,EAAkB3tF,SAAQmqB,YAAY,KAGlFljB,KAAS2mF,mBAAmBv7F,EAAKoB,OAAOs2E,UAAWhkE,EAAQkrD,GAE3D/gE,IAAgBkG,aAAa,CAAE,QAASu3F,EAAkB3tF,SAAQmqB,YAAY,IAC9E,MAAMxkB,EAAWF,EAAgBD,EAAS,CACtCqoF,SAAS,EACTx7F,MACAyT,kBAAkB,EAClBC,OAAQ,CACJ,kBAACC,EAAA,EAAD,CACI3T,IAAI,WACJ6T,MAAM,UACNlV,UAAU,mBACV,kBAAC,GAAD,CACI6lC,QAAShxB,IACT4lF,UAAW,KACP1lF,IACAkB,KAAS6mF,sBAAsBz7F,OAG3C,kBAACgZ,EAAA,EAAD,CACIhZ,IAAI,OACJ6T,MAAM,UACN0B,KAAK,QACLvJ,QAAS,KACL4yD,IACAhqD,KAAS6mF,sBAAsBz7F,KAElC8N,EAAE,aA/UmB,KAqVtC8sF,yBAA2B,CAAC58F,EAAQ42F,KAAY,IACtC6E,EAAeh+F,KAAK+B,MAApBi8F,WAEN,KADAA,EAAaA,GAAch+F,KAAKg+F,YACf,OAH0B,QAKbA,EAAtB9rF,EALmC,EAKnCA,OAAQiU,EAL2B,EAK3BA,UAEhBvN,cACA5Y,KAAKyC,SAAS,CAAEu7F,WAAY,OAC5Bh+F,KAAKg+F,WAAa,KAEbz7F,GAEL09F,aAAiB/tF,EAAQiU,GAAW,GAAQgzE,IAlWV,KAqWtC8F,2BArWsC,sCAqWT,WAAM18F,GAAN,uBAAAmQ,EAAA,wDAEzB+yD,GADMA,EAAiB,EAAK1jE,MAAtB0jE,eACyB,EAAKA,aAFX,oDAKjBvzD,GALiB,EAKKuzD,GAAtBvzD,OAAQiU,EALS,EAKTA,UAEhBvN,cACA,EAAKnW,SAAS,CAAEgjE,aAAc,OAC9B,EAAKA,aAAe,KAEfljE,EAXoB,uDAarBkzE,YAAevjE,GAbM,qBAcjBiU,EAdiB,kCAeX+5E,aAAmBhuF,EAAQiU,GAfhB,uCAiBjBmuC,cAjBiB,UAmBX6rC,aAAiBjuF,GAnBN,uCAsBrBoiD,cAEMjsC,EAAOtK,KAAUmrD,cAAch3D,GAxBhB,UAyBf9P,IAAgBkG,aAAa,CAC/B,QAAS,gCACT4J,SACA+2D,WAAW,MAAM5gD,EAAP,GAAgB,CAAEshD,UAAU,MA5BrB,0CArWS,2DAsYtCy2B,oBAAsB79F,IAClBvC,KAAKyC,SAAS,CAAEo7D,MAAO,QAvYW,KA0YtC+gC,sBAAwB,CAACv6F,EAAO9B,KAC5B,MAAM07F,EAAej+F,KAAK+B,MAAMk8F,cAAgBj+F,KAAKi+F,aAKrD,GAHAj+F,KAAKyC,SAAS,CAAEw7F,aAAc,OAC9Bj+F,KAAKi+F,aAAe,MAEf17F,EAAQ,OAN0B,MAQ/B0gB,EAAiBg7E,EAAjBh7E,IAAK1S,EAAY0tF,EAAZ1tF,QACb,GAAK0S,EAEL,GAAI1S,EACAA,EAAQlM,OACL,CACH,MAAM6qE,EAAYpiE,OAAO4P,OACzBwyD,EAAUC,OAAS,KACnBD,EAAUjnB,SAAWhlC,IA1ZS,KA8ZtCy7E,uBAAyB,CAACr6F,EAAO9B,KAC7B,MAAM27F,EAAgBl+F,KAAK+B,MAAMm8F,eAAiBl+F,KAAKk+F,cAKvD,GAHAl+F,KAAKyC,SAAS,CAAEy7F,cAAe,OAC/Bl+F,KAAKk+F,cAAgB,MAEhB37F,EAAQ,OAN2B,MAQhC4+E,EAAiB+c,EAAjB/c,KAAM3yD,EAAW0vE,EAAX1vE,OACd,IAAK2yD,EAAM,OACX,IAAK3yD,EAAQ,OAV2B,MAYhCvL,EAAiBuL,EAAjBvL,IAAKvL,EAAY8W,EAAZ9W,QACRuL,GACAvL,GC1cN,SAA2BuL,EAAKvL,GACnC,IAAI2oF,EAAoB,GACxB,IACIA,EAAoB97D,KAAKC,MAAMH,aAAaC,QAAQ,cAAgB,GACtE,MAAOzzB,IAET,MAAMyvF,EAAWD,EAAkB,GAAK3oF,EAAQxX,IAChD,IAAIy1F,EAAO2K,GAAsB,GAC7BC,EAAU,mBAAqBC,mBAAmB,+BACtD,IAAKF,EAAU,CACX,MAAMG,EAAQ,uDACR13C,EAAQ,IAAI23C,WAAW,GAC7B,IAAK,IAAI1rF,EAAI,EAAGA,EAAI,GAAIA,IACpBlI,OAAO6zF,OAAOC,gBAAgB73C,GAC9B4sC,GAAQ8K,EAAM13C,EAAM,GAAK03C,EAAM/rF,QAGnC2rF,EAAkB,GAAK3oF,EAAQxX,IAAMy1F,EACrCtxD,aAAaK,QAAQ,WAAYH,KAAKI,UAAU07D,IAEpDE,GAAW5K,EACX,MAAMhyE,EAAQV,EAAI9G,QAAQ,KAC1B,GAAIwH,EAAQ,EACRV,GAAO,IAAMs9E,MACV,CACH,MAAMM,EAAU59E,EAAImJ,UAAU,EAAGzI,EAAQ,GACrCk9E,EAAQ1kF,QAAQ,MAAQ,GAAK0kF,EAAQ1kF,QAAQ,MAAQ,EACrD8G,GAAO,IAAMs9E,EAETM,EAAQnsF,OAAS,EACjBuO,GAAO,IAAMs9E,EAEbt9E,GAAOs9E,EAKnB,MAAMrxB,EAAYpiE,OAAO4P,OACzBwyD,EAAUC,OAAS,KACnBD,EAAUjnB,SAAWhlC,EDqajB69E,CAAkB79E,EAAKvL,IA9aW,KAibtCqpF,yBAjbsC,sCAibX,WAAO18F,EAAOqY,EAAMuqB,GAApB,2BAAAv0B,EAAA,wDACfyrF,EAAoB,EAAKp8F,MAAzBo8F,gBACR,EAAK17F,SAAS,CAAE07F,gBAAiB,OAE5BzhF,EAJkB,oDAMf8R,EAAW2vE,EAAX3vE,OANe,oDASfjsB,EAAwCisB,EAAxCjsB,OAAQ2P,EAAgCsc,EAAhCtc,OAAQiU,EAAwBqI,EAAxBrI,UAAWw8D,EAAan0D,EAAbm0D,SAC9BpgF,EAVkB,sDAYlB0kC,EAAOy1D,OAZW,iBAanB,EAAKuB,aAAe,CAAEh7E,IAAK1gB,EAAO0gB,KAClC,EAAK27E,sBAAsBv6F,EAAOqY,GAdf,yCAgBGta,IAAgBC,KAAK,CACvC,QAAS,cACT4U,QAAS/E,EACTgF,WAAYiP,EACZq8D,UAAWG,EACXqe,mBAAoBz+F,EAAOw6F,sBAAwB91D,EAAO01D,SArB3C,QAgBbjoB,EAhBa,OAwBnB,EAAKupB,aAAe,CAAEh7E,IAAKyxD,EAAQzxD,KACnC,EAAK27E,sBAAsBv6F,EAAOqY,GAzBf,0CAjbW,+DA8ctCukF,4BAA8B,CAAC1+F,EAAQ6/E,KAAc,MACzCgc,EAAuBp+F,KAAK+B,MAA5Bq8F,mBACF/b,EAAgB,IAAMriF,KAAKyC,SAAS,CAAE27F,mBAAoB,OAGhE,IAAK77F,EAED,YADA8/E,IAN4C,MAUxCmc,EAAeJ,EAAfI,WACRA,GAAcA,EAAWpc,EAAUC,EARnBtvE,GAAS/S,KAAKyC,SAAS,CAAE27F,mBAAmB,MAAMA,EAAP,CAA2BrrF,cAjdpD,KA4dtCmuF,0BA5dsC,sCA4dV,WAAO3+F,EAAQisB,GAAf,qBAAA9b,EAAA,wDAChB2rF,EAA4B,EAAKt8F,MAAjCs8F,wBAER,EAAK57F,SAAS,CAAE47F,wBAAyB,OAEpC97F,EALmB,oDAShBoqB,EAAW0xE,EAAX1xE,OATgB,iDAYpBza,EAAS,KAZW,KAahBya,EAAO,SAbS,OAcf,sBAde,QAmBf,sBAnBe,gCAehBw0E,aAAYx0E,GAfI,UAgBDvqB,IAAgBC,KAAK,CAAE,QAAS,oBAAqB2T,QAAS2W,EAAO3W,UAhBpE,eAgBhB9D,EAhBgB,2CAoBhBA,EAASya,EAAO1V,QApBA,gCAyBnBuX,IAAUA,EAAO2sE,aACZiG,EAAS7F,YAAgBrpF,GACzB,CAAE,QAAS,qCACX,CAAE,QAAS,wBAEjBmvF,aAAWnvF,EAAQkvF,IAGlB5yE,IAAUA,EAAOgT,WAjCE,oBAkCDC,YAAcvvB,GAlCb,mDAqCpB,EAAKkvB,UAAY,CAAElvB,UACnB,EAAKqtF,qBAAoB,GAAM,GAtCX,0CA5dU,wDAetCv8F,oBACImW,KAASnM,GAAG,iCAAkChN,KAAKs+F,2BACnDnlF,KAASnM,GAAG,+BAAgChN,KAAK6rC,yBACjD1yB,KAASnM,GAAG,kCAAmChN,KAAKm8B,4BACpDhjB,KAASnM,GAAG,6BAA8BhN,KAAKo/F,8BAC/CjmF,KAASnM,GAAG,yBAA0BhN,KAAKk/F,0BAC3C/lF,KAASnM,GAAG,2BAA4BhN,KAAKg/F,4BAC7C7lF,KAASnM,GAAG,oBAAqBhN,KAAK++F,qBACtC5lF,KAASnM,GAAG,iCAAkChN,KAAKu+F,kCACnDplF,KAASnM,GAAG,uBAAwBhN,KAAK8+F,wBACzC3lF,KAASnM,GAAG,2BAA4BhN,KAAK2+F,4BAC7CxlF,KAASnM,GAAG,4BAA6BhN,KAAKy+F,6BAC9CtlF,KAASnM,GAAG,8BAA+BhN,KAAK6+F,+BAGpD5xF,uBACIkM,KAAS/L,IAAI,iCAAkCpN,KAAKs+F,2BACpDnlF,KAAS/L,IAAI,+BAAgCpN,KAAK6rC,yBAClD1yB,KAAS/L,IAAI,kCAAmCpN,KAAKm8B,4BACrDhjB,KAAS/L,IAAI,6BAA8BpN,KAAKo/F,8BAChDjmF,KAAS/L,IAAI,yBAA0BpN,KAAKk/F,0BAC5C/lF,KAAS/L,IAAI,2BAA4BpN,KAAKg/F,4BAC9C7lF,KAAS/L,IAAI,oBAAqBpN,KAAK++F,qBACvC5lF,KAAS/L,IAAI,iCAAkCpN,KAAKu+F,kCACpDplF,KAAS/L,IAAI,uBAAwBpN,KAAK8+F,wBAC1C3lF,KAAS/L,IAAI,2BAA4BpN,KAAK2+F,4BAC9CxlF,KAAS/L,IAAI,4BAA6BpN,KAAKy+F,6BAC/CtlF,KAAS/L,IAAI,8BAA+BpN,KAAK6+F,+BA4drD57F,SAAU,MAAD,EAaDjD,KAAK+B,MAXLq/B,EAFC,EAEDA,UACAhF,EAHC,EAGDA,aACA5V,EAJC,EAIDA,eACAw3E,EALC,EAKDA,WACAv4B,EANC,EAMDA,aACA5H,EAPC,EAODA,MACAogC,EARC,EAQDA,aACAC,EATC,EASDA,cACAC,EAVC,EAUDA,gBACAC,EAXC,EAWDA,mBACAC,EAZC,EAYDA,wBAEJ,GAAIj9D,EAAW,CAAC,MACJlvB,EAAWkvB,EAAXlvB,OAER,OACI,kBAAC,GAAD,CACIA,OAAQA,EACR4K,QAAS9c,KAAKu/F,sBAEnB,GAAInjE,EAAc,CAAC,MACdlqB,EAAWkqB,EAAXlqB,OAER,OACI,kBAAC,GAAD,CACIA,OAAQA,EACR4K,QAAS9c,KAAKq/F,6BAEnB,GAAI74E,EAAgB,CAAC,MAChBtU,EAAuBsU,EAAvBtU,OAAQ4E,EAAe0P,EAAf1P,WAEhB,OACI,kBAAC,GAAD,CACI5E,OAAQA,EACR4E,WAAYA,EACZgG,QAAS9c,KAAK4/F,+BAEnB,GAAI5B,EAAY,CAAC,MACZ9rF,EAAsB8rF,EAAtB9rF,OAAQiU,EAAc63E,EAAd73E,UAEhB,OACI,kBAAC,GAAD,CACIjU,OAAQA,EACRiU,UAAWA,EACXrJ,QAAS9c,KAAKm/F,2BAEnB,GAAI15B,EAAc,CAAC,MACdvzD,EAAsBuzD,EAAtBvzD,OAAQiU,EAAcs/C,EAAdt/C,UAEhB,OACI,kBAAC,GAAD,CACIjU,OAAQA,EACRiU,UAAWA,EACXrJ,QAAS9c,KAAKi/F,6BAEnB,GAAIphC,EAAO,CAAC,MACPrvC,EAAWqvC,EAAXrvC,OAER,OACI,kBAAC,GAAD,CACIA,OAAQA,EACR1R,QAAS9c,KAAKogG,sBAEnB,GAAInC,EAAc,CAAC,MACdh7E,EAAgBg7E,EAAhBh7E,IAAKuL,EAAWyvE,EAAXzvE,OAEb,OACI,kBAAC,GAAD,CACIvL,IAAKA,EACLuL,OAAQA,EACR1R,QAAS9c,KAAK4+F,wBAEnB,GAAIV,EAAe,CAAC,MACf/c,EAAiB+c,EAAjB/c,KAAM3yD,EAAW0vE,EAAX1vE,OAEd,OACI,kBAAC,GAAD,CACI2yD,KAAMA,EACN3yD,OAAQA,EACR1R,QAAS9c,KAAK0+F,yBAEnB,GAAIP,EAAiB,CAAC,MACjBl7E,EAAgBk7E,EAAhBl7E,IAAKuL,EAAW2vE,EAAX3vE,OAEb,OACI,kBAAC,GAAD,CACIvL,IAAKA,EACLuL,OAAQA,EACR1R,QAAS9c,KAAK+gG,2BAEnB,GAAI3C,EAAoB,CAAC,MACpBr8F,EAAiBq8F,EAAjBr8F,MAAOgR,EAAUqrF,EAAVrrF,MAEf,OACI,kBAAC,GAAD,CACIhR,MAAOA,EACPgR,MAAOA,EACP+J,QAAS9c,KAAKihG,8BAEnB,GAAI5C,EAAyB,CAAC,MACzB1xE,EAAW0xE,EAAX1xE,OAER,OACI,kBAAC,GAAD,CACIA,OAAQA,EACR7P,QAAS9c,KAAKkhG,4BAI1B,OAAO,QE1cf,MAAM9rF,GAAUC,YACZisF,IACA59F,GAGW0R,aAvLf,cAAuBvT,IAAMC,UACzBlC,YAAY4C,GAAQ,IAAD,EACf0B,MAAM1B,GADS,YA4CnB6vF,+BAAiCjuF,IAAW,MAChC6G,EAAc7G,EAAd6G,UAERjL,KAAKyC,SAAS,CACVwI,eAhDW,KAoDnB2tB,wBAA0Bx0B,IAAW,MACzB4f,EAAiB5f,EAAjB4f,aAERhkB,KAAKyC,SAAS,CAAEuhB,kBAvDD,KA0DnBu9E,iCAAmCn9F,IAAW,MAClCoU,EAAYpU,EAAZoU,QAERxY,KAAKyC,SAAS,CACV++F,mBAAoBhpF,KA9DT,KAkEnBipF,uBAAyBr9F,IAAW,MACxB8N,EAAsC9N,EAAtC8N,OAAQiU,EAA8B/hB,EAA9B+hB,UAAWgK,EAAmB/rB,EAAnB+rB,MAAOrwB,EAAYsE,EAAZtE,QAElCE,KAAKo/E,iBAAiBltE,EAAQiU,EAAWgK,EAAOrwB,GAAWqZ,KAAS8hD,oBArErD,KAwEnBymC,uBAAyBt9F,IAAW,MACxBgtB,EAAkBhtB,EAAlBgtB,OAAQjB,EAAU/rB,EAAV+rB,MAEhBnwB,KAAKm/E,iBAAiB/tD,EAAQjB,IA3Ef,KA8EnBshE,oCAAsCrtF,IAAW,MACrCu9F,EAAyBxoF,KAAzBwoF,qBAER3hG,KAAKyC,SAAS,CAAEk/F,0BAjFD,KAoFnB30C,iCAAmC5oD,IAAW,MAClC6oD,EAAuB9zC,KAAvB8zC,mBAERjtD,KAAKyC,SAAS,CAAEwqD,wBAvFD,KA0FnB20C,wCAA0Cx9F,IAAW,MACzCy9F,EAA8B1oF,KAA9B0oF,0BAER7hG,KAAKyC,SAAS,CAAEo/F,+BA7FD,KAgGnBC,sBAAwB19F,IAAW,MACvBmc,EAASnc,EAATmc,KAERvgB,KAAKyC,SAAS,CAAEi2E,YAAan4D,KAnGd,KAsGnB6+D,iBAAmB,CAACltE,EAAQiU,EAAY,KAAMgK,GAAQ,EAAOrwB,EAAU,MACnE,MAAM+jB,EAAgB1K,KAAS0oB,YACzBkgE,EAAsB5oF,KAASuiB,aAC/BqtC,EAAmB5vD,KAAS21B,eAE9B3e,EACI4xE,IAAwB7vF,GACxB9P,IAAgBkG,aAAa,CACzB,QAAS,2BACT4J,WAOR2R,IAAkB3R,GAAUiU,GAAa4iD,IAAqB5iD,IAAcrmB,GAC5EE,KAAKgiG,iBAAiBhpF,QAAQwzE,kBAC1BrmE,GACAwnE,YAAiBz7E,EAAQiU,IAEtBtC,IAAkB3R,GAAWiU,GAAcrmB,EAGlDsC,IAAgBsqC,UAAUx6B,EAAQiU,EAAWrmB,GAF7CE,KAAKgiG,iBAAiBhpF,QAAQ+zE,iBA5HnB,KAkInB5N,iBAlImB,sCAkIA,WAAO/tD,EAAQjB,GAAf,eAAAzd,EAAA,wDACV0e,EADU,iEAGIhvB,IAAgBC,KAAK,CACpC,QAAS,oBACT2T,QAASob,EACTjb,OAAO,IANI,OAGToI,EAHS,OASf,EAAK6gE,iBAAiB7gE,EAAKre,GAAI,KAAMiwB,GATtB,yCAlIA,wDAGfnwB,KAAKgiG,iBAAmBngG,IAAMya,YAHf,MAKPqlF,EAAsFxoF,KAAtFwoF,qBAAsB10C,EAAgE9zC,KAAhE8zC,mBAAoB40C,EAA4C1oF,KAA5C0oF,0BAA2B79E,EAAiB7K,KAAjB6K,aAE7EhkB,KAAK+B,MAAQ,CACT4/F,uBACA10C,qBACA40C,4BACA79E,eACA00D,YAAa,KACb8oB,mBAAoB,KACpBv2F,UAAW,MAInBjI,oBACIiT,IAAUjJ,GAAG,uBAAwBhN,KAAK0hG,wBAC1C3jF,KAAU/Q,GAAG,uBAAwBhN,KAAKyhG,wBAE1CtoF,KAASnM,GAAG,oCAAqChN,KAAKyxF,qCACtDt4E,KAASnM,GAAG,iCAAkChN,KAAKgtD,kCACnD7zC,KAASnM,GAAG,wBAAyBhN,KAAK44B,yBAC1Czf,KAASnM,GAAG,wCAAyChN,KAAK4hG,yCAC1DzoF,KAASnM,GAAG,sBAAuBhN,KAAK8hG,uBACxCtM,KAAiBxoF,GAAG,iCAAkChN,KAAKuhG,kCAC3Dv1F,IAAYgB,GAAG,+BAAgChN,KAAKqyF,gCAGxDplF,uBACIgJ,IAAU7I,IAAI,uBAAwBpN,KAAK0hG,wBAC3C3jF,KAAU3Q,IAAI,uBAAwBpN,KAAKyhG,wBAE3CtoF,KAAS/L,IAAI,oCAAqCpN,KAAKyxF,qCACvDt4E,KAAS/L,IAAI,iCAAkCpN,KAAKgtD,kCACpD7zC,KAAS/L,IAAI,wBAAyBpN,KAAK44B,yBAC3Czf,KAAS/L,IAAI,wCAAyCpN,KAAK4hG,yCAC3DzoF,KAAS/L,IAAI,sBAAuBpN,KAAK8hG,uBACzCtM,KAAiBpoF,IAAI,iCAAkCpN,KAAKuhG,kCAC5Dv1F,IAAYoB,IAAI,+BAAgCpN,KAAKqyF,gCAqGzDpvF,SAAU,MAAD,EASDjD,KAAK+B,MAPLy/F,EAFC,EAEDA,mBACAG,EAHC,EAGDA,qBACA10C,EAJC,EAIDA,mBACA40C,EALC,EAKDA,0BACAnpB,EANC,EAMDA,YACAztE,EAPC,EAODA,UACA+Y,EARC,EAQDA,aAGJ,OACI,oCACI,yBACI9gB,UAAWkN,IAAW,OAAQ,CAC1B,aAAc4T,EACd,oBAAqB29E,KAEzB,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAe1kF,IAAKjd,KAAKgiG,mBACxBL,GAAwB,kBAAC,GAAD,OAE7B,kBAAC,GAAD,MACCH,GAAsB,kBAAC,GAAkBA,GACzCv0C,GAAsB,kBAAC,GAAgBA,GACvC40C,GAA6B,kBAAC,GAAuBA,GACrDnpB,GAAe,kBAAC,GAAkBA,GAClCztE,GAAa,kBAAC,EAAcA","file":"static/js/3.8636812a.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass Animator {\n    constructor(duration, options = []) {\n        this.options = options;\n        this.duration = duration;\n    }\n\n    static outSine(n) {\n        return Math.sin((n * Math.PI) / 2);\n    }\n\n    start = () => {\n        this.stopped = false;\n        this.id = requestAnimationFrame(this.startInternal);\n    };\n\n    startInternal = timeStamp => {\n        const { startTime, duration } = this;\n\n        this.startTime = timeStamp;\n        this.endTime = startTime + duration;\n        this.draw(timeStamp);\n    };\n\n    draw = now => {\n        const { stopped, duration, startTime, options } = this;\n\n        if (now - startTime > duration && options.every(x => x.to === x.last)) {\n            this.stopped = true;\n        }\n\n        if (stopped) return;\n\n        const time = Math.min(now - startTime, duration);\n        const p = duration === 0 ? 1.0 : time / duration;\n        const val = Animator.outSine(p);\n\n        options.forEach(x => {\n            const { from, to, func } = x;\n            x.last = from + (to - from) * val;\n            func(x.last);\n        });\n\n        this.id = requestAnimationFrame(this.draw);\n    };\n\n    stop = () => {\n        this.stopped = true;\n        cancelAnimationFrame(this.id);\n    };\n}\n\nexport default Animator;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker\n                    sticker={sticker}\n                    displaySize={STICKER_PREVIEW_DISPLAY_SIZE}\n                    source={StickerSourceEnum.PREVIEW}\n                />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M6.66607426,13.6501686 C7.13342047,13.4117012 7.7055954,13.5972442 7.94406273,14.0645904 C8.71613228,15.5776856 10.2710663,16.5499921 12,16.5499921 C13.7262991,16.5499921 15.2792455,15.5806677 16.0525854,14.0711462 C16.2918118,13.6041881 16.8642875,13.419575 17.3312456,13.6588014 C17.7982037,13.8980278 17.9828168,14.4705034 17.7435904,14.9374615 C16.6482438,17.0755242 14.4462205,18.4499921 12,18.4499921 C9.55003677,18.4499921 7.34521255,17.0713067 6.2516524,14.928157 C6.01318507,14.4608108 6.19872805,13.8886359 6.66607426,13.6501686 Z M8.75,8 C9.44035594,8 10,8.67157288 10,9.5 C10,10.3284271 9.44035594,11 8.75,11 C8.05964406,11 7.5,10.3284271 7.5,9.5 C7.5,8.67157288 8.05964406,8 8.75,8 Z M15.25,8 C15.9403559,8 16.5,8.67157288 16.5,9.5 C16.5,10.3284271 15.9403559,11 15.25,11 C14.5596441,11 14,10.3284271 14,9.5 C14,8.67157288 14.5596441,8 15.25,8 Z' />,\n    'Smile'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Slider from '@material-ui/core/Slider';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport PlayIcon from '../../Assets/Icons/PlayArrow';\nimport FullScreen from '../../Assets/Icons/FullScreen';\nimport Hint from './Hint';\nimport Player from './Player';\nimport Progress from './Progress';\nimport { clamp, getDurationString } from '../../Utils/Common';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport {\n    PIP_PLAYER_BORDER_PRECISION, PLAYER_PLAYBACKRATE_MAX,\n    PLAYER_PLAYBACKRATE_MIN,\n    PLAYER_PLAYBACKRATE_STEP,\n    PLAYER_SEEK_STEP_BIG,\n    PLAYER_SEEK_STEP_SMALL,\n    PLAYER_VOLUME_MAX,\n    PLAYER_VOLUME_MIN,\n    PLAYER_VOLUME_STEP\n} from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PipPlayer.css';\n\nclass PipPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.state = { };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { video, duration, currentTime, volume, play, buffered, waiting } = props;\n        if (state.prevVideo !== video) {\n            return {\n                prevVideo: video,\n                duration,\n                currentTime,\n                volume,\n                play,\n                buffered,\n                waiting,\n                dragging: false,\n                hidden: false,\n                fullscreen: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        const { video } = this.props;\n        this.connectPlayer(video);\n        window.addEventListener('resize', this.onWindowResize);\n        document.addEventListener('fullscreenchange', this.onFullScreenChange);\n        PlayerStore.on('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n    }\n\n    componentWillUnmount() {\n        const { video } = this.props;\n        this.disconnectPlayer(video);\n        window.removeEventListener('resize', this.onWindowResize);\n        document.removeEventListener('fullscreenchange', this.onFullScreenChange);\n        PlayerStore.off('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onClientUpdateMediaShortcut = update => {\n        const { event } = update;\n        if (!event) return;\n\n        this.onKeyDown(event);\n    };\n\n    onKeyDown = event => {\n        const { key, code, altKey, ctrlKey, metaKey, shiftKey } = event;\n\n        const { video } = this.props;\n        if (!video) return;\n\n        let handled = false;\n        switch (code) {\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClose();\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowLeft': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyJ': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyL': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowUp': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume + PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowDown': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume - PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Space':\n            case 'KeyK': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClick();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyM': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleMute();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyF': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleFullScreen();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyI': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    // this.handlePictureInPicture();\n                    handled = true;\n                }\n                break;\n            }\n            case 'Digit0':\n            case 'Digit1':\n            case 'Digit2':\n            case 'Digit3':\n            case 'Digit4':\n            case 'Digit5':\n            case 'Digit6':\n            case 'Digit7':\n            case 'Digit8':\n            case 'Digit9': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const progress = new Number(key.replace('Digit', '')) / 10.0;\n                    this.handleSeekProgress(progress);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Home': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'End': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.duration - 1.0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Comma': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate - PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Period': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate + PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n        }\n\n        if (handled) {\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    };\n\n    showMediaHint(text) {\n        const { fileId } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaHint',\n            fileId,\n            text\n        });\n    }\n\n    handleVolume = volume => {\n        const { video } = this.props;\n        if (!video) return;\n\n        volume = clamp(volume, PLAYER_VOLUME_MIN, PLAYER_VOLUME_MAX);\n\n        video.volume = volume;\n        this.showMediaHint(`${Math.round(video.volume * 100)}%`);\n    };\n\n    handlePlaybackRate = rate => {\n        const { video } = this.props;\n        if (!video) return;\n\n        rate = clamp(rate, PLAYER_PLAYBACKRATE_MIN, PLAYER_PLAYBACKRATE_MAX)\n\n        video.playbackRate = rate;\n        this.showMediaHint(`${rate}x`);\n    };\n\n    handleSeekProgress = progress => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.handleSeek(progress * video.duration);\n    };\n\n    handleSeek = currentTime => {\n        const { video } = this.props;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n        this.setState({ currentTime });\n    };\n\n    onFullScreenChange = () => {\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        const fullscreenPlayer = document.getElementById('pip-player-wrapper');\n        const fullscreen = fullscreenElement === fullscreenPlayer;\n\n        this.setState({\n            fullscreen\n        });\n    };\n\n    onWindowResize = () => {\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) return;\n\n        const player = document.getElementById('pip-player');\n\n        const oldLeft = parseInt(player.style.left, 10);\n        const oldTop = parseInt(player.style.top, 10);\n\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\n\n        if (oldLeft === left && oldTop === top) return;\n\n        // console.log('[pip] windowResize', left, top);\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { video } = this.props;\n\n        if (prevProps.video !== video) {\n            this.disconnectPlayer(prevProps.video)\n            this.connectPlayer(video);\n        }\n    }\n\n    connectPlayer(video) {\n        if (!video) return;\n\n        const pipPlayer = document.getElementById('pip-player');\n        const { left, top } = this.normalizePosition(PlayerStore.pipParams.left, PlayerStore.pipParams.top, false);\n        pipPlayer.style.left = left + 'px';\n        pipPlayer.style.top = top + 'px';\n\n        const pipPlayerWrapper = document.getElementById('pip-player-wrapper');\n        pipPlayerWrapper.focus();\n\n        // console.log('[pip] connect', PlayerStore.pipParams, pipPlayer.style.left, pipPlayer.style.top);\n\n        const container = document.getElementById('pip-player-container');\n        if (!container) return;\n\n        video.onloadedmetadata = this.handleLoadedMetadata;\n        video.onloadeddata = this.handleLoadedData;\n        video.oncanplay = this.handleCanPlay;\n        video.onplay = this.handlePlay;\n        video.onpause = this.handlePause;\n        video.onended = this.handleEnded;\n        video.ontimeupdate = this.handleTimeUpdate;\n        video.onvolumechange = this.handleVolumeChange;\n        video.onprogress = this.handleProgress;\n        video.onwaiting = this.handleWaiting;\n\n        container.innerHTML = '';\n        container.appendChild(video);\n    }\n\n    disconnectPlayer(video) {\n        if (!video) return;\n\n        video.onloadedmetadata = null;\n        video.onloadeddata = null;\n        video.oncanplay = null;\n        video.onplay = null;\n        video.onpause = null;\n        video.onended = null;\n        video.ontimeupdate = null;\n        video.onvolumechange = null;\n        video.onprogress = null;\n        video.onwaiting = null;\n    }\n\n    handleLoadedData = event => {\n        const { target: video } = event;\n        if (!video) return;\n    };\n\n    handleLoadedMetadata = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { currentTime } = this.state;\n        const { duration, volume, buffered } = video;\n        // const currentTime = this.getCurrentTime();\n\n        this.setState({\n            duration,\n            // currentTime,\n            volume,\n            waiting: true,\n            buffered\n        }, () => {\n            if (!currentTime) return;\n\n            video.currentTime = currentTime;\n        });\n    };\n\n    handleCanPlay = event => {\n        const { target: video } = event;\n\n        this.setState({\n            waiting: false\n        }, () => {\n            if (!video) return;\n\n            const { play } = this.state;\n            if (play) {\n                video.play();\n            } else {\n                video.pause();\n            }\n        });\n    };\n\n    handlePlay = event => {\n        const { onPlay } = this.props;\n\n        this.setState({\n            play: true,\n            hidden: true\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPlay' });\n        onPlay && onPlay(event);\n    };\n\n    handlePause = event => {\n        const { onPause } = this.props;\n\n        this.setState({\n            play: false,\n            hidden: false\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPause' });\n        onPause && onPause(event);\n    };\n\n    handleEnded = event => {\n        const { onEnded } = this.props;\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerEnded' });\n        onEnded && onEnded(event);\n\n        const { video } = this.props;\n        this.setCurrentTime({currentTime: 0, duration: video.duration });\n    };\n\n    handleTimeUpdate = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n        const { currentTime, duration, volume, buffered } = video;\n\n        this.setState({\n            duration,\n            currentTime,\n            volume,\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerTimeUpdate',\n            fileId,\n            currentTime,\n            duration,\n            volume,\n            buffered\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleVolumeChange = event => {\n        const { onVolumeChange } = this.props;\n\n        const { target: video } = event;\n        if (!video) return;\n\n        const { volume } = video;\n\n        this.setState({\n            volume\n        });\n\n        TdLibController.clientUpdate({ '@type' : 'clientUpdateMediaVolume', volume });\n        onVolumeChange && onVolumeChange(event);\n    };\n\n    handleProgress = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n\n        const { buffered } = video;\n\n        this.setState({\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerProgress',\n            fileId,\n            buffered\n        });\n    };\n\n    handleWaiting = () => {\n        this.setState({ waiting: true });\n    };\n\n    handleClick = () => {\n        this.startStopPlayer();\n    };\n\n    startStopPlayer = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        const { waiting } = this.state;\n        if (waiting) {\n            this.setState({\n                play: !this.state.play,\n                hidden: false\n            });\n        } else {\n            if (video.paused) {\n                video.play()\n            } else {\n                video.pause();\n            }\n        }\n    };\n\n    handlePlayerMouseDown = event => {\n        const pip = document.getElementById('pip-player-wrapper');\n        if (pip) pip.focus();\n\n        this.mouseDownRoot = true;\n        event.preventDefault();\n\n        if (event.nativeEvent.which !== 1) return;\n\n        this.offsetX = event.nativeEvent.offsetX;\n        this.offsetY = event.nativeEvent.offsetY;\n\n        document.onmousemove = this.handleMouseMove;\n        document.onmouseup = this.handleMouseUp;\n\n        this.setState({\n            windowDragging: true\n        });\n    };\n\n    handleMouseUp = event => {\n        event.preventDefault();\n\n        document.onmousemove = null;\n        document.onmouseup = null;\n\n        this.setState({\n            windowDragging: false\n        });\n    };\n\n    normalizePosition(left, top, checkGlue = true) {\n        const player = document.getElementById('pip-player');\n        const playerWidth = player ? player.clientWidth : 300;\n        const playerHeight = player ? player.clientHeight : 300;\n\n        const { clientWidth: documentWidth } = document.documentElement;\n        const { clientHeight: documentHeight } = document.documentElement;\n\n        if (checkGlue && this.glueLeft) {\n            left = 0;\n        } else if (checkGlue && this.glueRight) {\n            left = documentWidth - playerWidth;\n        } else {\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\n            left = clamp(left, 0, documentWidth - playerWidth);\n        }\n\n        if (checkGlue && this.glueTop) {\n            top = 0;\n        } else if (checkGlue && this.glueBottom) {\n            top = documentHeight - playerHeight;\n        } else {\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\n            top = clamp(top, 0, documentHeight - playerHeight);\n        }\n\n        this.glueLeft = left === 0;\n        this.glueRight = left === documentWidth - playerWidth;\n        this.glueTop = top === 0;\n        this.glueBottom = top === documentHeight - playerHeight;\n\n        PlayerStore.pipParams = { left, top };\n\n        return { left, top };\n    }\n\n    handleMouseMove = event => {\n        event.preventDefault();\n\n        const { left, top } = this.normalizePosition(event.clientX - this.offsetX, event.clientY - this.offsetY, false);\n\n        const player = document.getElementById('pip-player');\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            dragging: true,\n            draggingTime: video.currentTime\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            draggingTime: value * video.duration\n        });\n    };\n\n    handleChangeCommitted = () => {\n        const { dragging, draggingTime } = this.state;\n        if (!dragging) return;\n\n        this.setState({\n            dragging: false,\n            currentTime: draggingTime,\n            draggingTime: 0\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            if (Number.isFinite(draggingTime)) {\n                video.currentTime = draggingTime;\n            }\n        });\n    };\n\n    handlePanelEnter = () => {\n        this.panelEnter = true;\n    };\n\n    handlePanelLeave = () => {\n        this.panelEnter = false;\n    };\n\n    handleMouseOver = event => {\n        this.mouseDownRoot = false;\n        const { hidden } = this.state;\n\n        if (hidden) {\n            this.setState({\n                hidden: false\n            });\n        }\n\n        clearTimeout(this.mouseOverTimeout);\n        this.mouseOverTimeout = setTimeout(() => {\n            if (this.panelEnter) return;\n            if (!this.state.play) return;\n            if (!this.state.duration) return;\n\n            this.setState({\n                hidden: true\n            });\n        }, 1000);\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePictureInPicture',\n            videoInfo: null\n        });\n    };\n\n    handleVolumeSliderChange = (event, volume) => {\n        if (volume === this.state.volume) return;\n\n        this.setState({\n            volume\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            video.volume = volume;\n        });\n    };\n\n    handleVolumeSliderChangeCommitted = event => {\n        const { video } = this.props;\n        if (!video) return;\n\n        document.activeElement.blur();\n    };\n\n    handleMute = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        if (video.volume === 0) {\n            video.volume = this.prevVolume || 0.5;\n        } else {\n            this.prevVolume = video.volume;\n            video.volume = 0;\n        }\n    }\n\n    handleFullScreen = event => {\n        event && event.stopPropagation();\n\n        const root = document.getElementById('pip-player-wrapper');\n        if (!root) return;\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) {\n            this.exitFullscreen();\n            return;\n        }\n\n        this.requestFullscreen(root);\n    };\n\n    requestFullscreen(element) {\n        const method = element.requestFullscreen || element.mozRequestFullScreen || element.webkitRequestFullscreen;\n\n        method && method.call(element);\n    }\n\n    exitFullscreen() {\n        const method = document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen;\n\n        method && method.call(document);\n    }\n\n    getCurrentTime = () => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        return PlayerStore.getCurrentTime(unique_id);\n    };\n\n    setCurrentTime = currentTime => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    handlePanelDoubleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleClickRoot = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.startStopPlayer();\n    }\n\n    handleDoubleClick = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.handleFullScreen(event);\n    };\n\n    handleFocus = () => {\n        KeyboardManager.add(this.keyboardHandler);\n\n    };\n\n    handleBlur = () => {\n        KeyboardManager.remove(this.keyboardHandler);\n    };\n\n    render() {\n        const { fileId } = this.props;\n        const { windowDragging, dragging, draggingTime, currentTime, duration, play, waiting, buffered, hidden, volume, fullscreen } = this.state;\n\n        const time = dragging ? draggingTime : currentTime;\n        const value = duration > 0 ? time / duration : 0;\n        const bufferedTime = Player.getBufferedTime(time, buffered);\n        const bufferedValue = duration > 0 ? bufferedTime / duration : 0;\n\n        const timeString = getDurationString(Math.floor(time) || 0);\n        const durationString = getDurationString(Math.floor(duration) || 0);\n\n        const pictureInPictureEnabled = true;\n        const fullscreenEnabled = document.fullscreenEnabled || document.mozFullScreenEnabled || document.webkitFullscreenEnabled;\n\n        return (\n            <div\n                id='pip-player'\n                className={classNames('pip-player', { 'pip-player-dragging': windowDragging, 'pip-player-fullscreen': fullscreen })}\n                onMouseDown={this.handlePlayerMouseDown}\n                onMouseMove={this.handleMouseOver}\n                onClick={this.handleClickRoot}\n                onDoubleClick={this.handleDoubleClick}>\n                <div\n                    id='pip-player-wrapper'\n                    className={classNames({ 'pip-player-wrapper-hidden': hidden })}\n                    onFocus={this.handleFocus}\n                    onBlur={this.handleBlur}\n                    tabIndex={0}>\n                    <div id='pip-player-container'/>\n                    <Hint fileId={fileId}/>\n\n                    <button onMouseDown={e => e.stopPropagation()} className={classNames('player-button', 'player-button-close', { 'player-panel-hidden': hidden })} onClick={this.handleClose}>\n                        <CloseIcon/>\n                    </button>\n                    <div\n                        className={classNames('player-panel', { 'player-panel-hidden': hidden })}\n                        onClick={e => e.stopPropagation()}\n                        onMouseDown={e => e.stopPropagation()}\n                        onDoubleClick={this.handlePanelDoubleClick}\n                        onMouseEnter={this.handlePanelEnter}\n                        onMouseLeave={this.handlePanelLeave}>\n                        <div className='player-slider'>\n                            <span className='player-slider-buffer-track' style={{ width: bufferedValue * 100 + '%'}}/>\n                            <Slider\n                                value={value}\n                                min={0}\n                                max={1}\n                                step={0.001}\n                                classes={{\n                                    root: 'player-slider-root',\n                                    rail: 'player-slider-rail',\n                                    track: 'player-slider-track',\n                                    thumb: 'player-slider-thumb',\n                                    active: 'player-slider-active'\n                                }}\n                                onChange={this.handleChange}\n                                onChangeCommitted={this.handleChangeCommitted}\n                                onMouseDown={this.handleMouseDown}\n                            />\n                        </div>\n                        <div className='player-controls'>\n                            <button className='player-button' onClick={this.handleClick}>\n                                {play ? <PauseIcon/> : <PlayIcon/>}\n                            </button>\n                            <div className='player-time'>\n                                {`${timeString} / ${durationString}`}\n                            </div>\n                            <div className='player-volume'>\n                                <Slider\n                                    value={volume}\n                                    min={0}\n                                    max={1}\n                                    step={0.001}\n                                    classes={{\n                                        root: 'player-volume-root',\n                                        rail: 'player-volume-rail',\n                                        track: 'player-volume-track',\n                                        thumb: 'player-volume-thumb',\n                                        active: 'player-volume-active'\n                                    }}\n                                    onChange={this.handleVolumeSliderChange}\n                                    onChangeCommitted={this.handleVolumeSliderChangeCommitted}\n                                />\n                            </div>\n                            <button className='player-button' onClick={this.handleMute}>\n                                {Player.getVolumeIcon(volume)}\n                            </button>\n                            <button className='player-button' disabled={!fullscreenEnabled} onClick={this.handleFullScreen}>\n                                <FullScreen/>\n                            </button>\n                            {/*<button className='player-button' disabled={!pictureInPictureEnabled} onClick={this.handlePictureInPicture}>*/}\n                            {/*    <PictureInPictureIcon/>*/}\n                            {/*</button>*/}\n                        </div>\n                    </div>\n                    <Progress waiting={waiting}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nPipPlayer.propTypes = {\n\n};\n\nexport default PipPlayer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { chatId, selected, onSelect, t } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true, t);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className='forward-target-chat-selection' />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? 'forward-target-chat-mark-selected' : 'forward-target-chat-mark-unselected'\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport async function copy(text) {\n    try {\n        if (navigator.clipboard) {\n            await navigator.clipboard.writeText(text);\n            return true;\n        }\n    } catch (e) {\n        console.error('[clipboard] unable to copy with clipboard.writeText', e);\n    }\n\n    return copyOld(text);\n}\n\nfunction copyOld(text) {\n    let element;\n    let successful;\n    try {\n        element = document.createElement('textarea');\n        element.contentEditable = true;\n        element.readOnly = true;\n        element.value = text;\n        element.style.all = 'unset';\n        element.style.position = 'fixed';\n        element.style.top = 0;\n        element.style.clip = 'rect(0, 0, 0, 0)';\n        element.style.whiteSpace = 'pre';\n        element.style.webkitUserSelect = 'text';\n        element.style.MozUserSelect = 'text';\n        element.style.msUserSelect = 'text';\n        element.style.userSelect = 'text';\n\n        document.body.appendChild(element);\n\n        element.focus();\n        element.select();\n\n        successful = document.execCommand('copy');\n        if (!successful) {\n            throw new Error();\n        }\n        return true;\n    } catch {\n        console.error('[clipboard] unable to copy with document.execCommand', successful);\n    } finally {\n        if (element) {\n            document.body.removeChild(element);\n        }\n    }\n\n    return false;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nexport function sprintf(t, key, ...args) {\n    return t(key, { postProcess: 'sprintf', sprintf: args });\n}\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { copy } from '../../Utils/Text';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { clearSelection, forward } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\nimport AppStore from '../../Stores/ApplicationStore';\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false,\n            for_comment: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        forward(null);\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n        clearSelection();\n\n        const { chatId, messageIds, inputMessageContent } = this.props;\n        if (!chatId && !messageIds && !inputMessageContent) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(async targetChatId => {\n            if (inputMessageContent) {\n                await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n                if (text) {\n                    if ('caption' in inputMessageContent) {\n                        inputMessageContent.caption = {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        };\n                    } else {\n                        TdLibController.send({\n                            '@type': 'sendMessage',\n                            chat_id: targetChatId,\n                            reply_to_message_id: 0,\n                            disable_notifications: false,\n                            from_background: false,\n                            reply_markup: null,\n                            input_message_content: {\n                                '@type': 'inputMessageText',\n                                text: {\n                                    '@type': 'formattedText',\n                                    text,\n                                    entities: null\n                                },\n                                disable_web_page_preview: false,\n                                clear_draft: false\n                            }\n                        });\n                    }\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: inputMessageContent\n                });\n\n                return;\n            }\n\n            const size = this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        disable_web_page_preview: false,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        // console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = element => {\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = async () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const element = this.searchRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n\n        const innerText = this.getInnerText(element).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [], globalSearchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults });\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatsOnServer',\n            query: innerText,\n            limit: 100\n        });\n\n        if (this.state.searchText !== innerText) {\n            return;\n        }\n\n        this.setState({\n            globalSearchResults: result.chat_ids\n        });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const element = this.messageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatIds,\n            searchText,\n            searchResults,\n            globalSearchResults,\n            savedMessages,\n            publicMessageLink\n        } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const searchResultsMap = new Map((searchResults || []).map(x => [x, x]));\n        const filteredResults = (globalSearchResults || []).filter(\n            x => x !== savedMessages.id && canSendMessages(x) && !searchResultsMap.has(x)\n        );\n\n        const foundChats = (searchResults || [])\n            .concat(filteredResults)\n            .map(x => (\n                <ForwardTargetChat\n                    key={x}\n                    chatId={x}\n                    selected={this.targetChats.has(x)}\n                    onSelect={() => this.handleChangeSelection(x)}\n                />\n            ));\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className='forward-dialog'>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    className='scrollbars-hidden'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className='forward-dialog-content'>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && <div className='forward-dialog-search-list'>{foundChats}</div>}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    inputMessageContent: PropTypes.object\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.1715729,2 C12.9672223,2 13.7302841,2.31607052 14.2928932,2.87867966 L21.1213203,9.70710678 C21.6839295,10.2697159 22,11.0327777 22,11.8284271 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L12.1715729,2 Z M11,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,19 C4,19.5522847 4.44771525,20 5,20 L19,20 C19.5522847,20 20,19.5522847 20,19 L20,13 L14,13 C12.4023191,13 11.0963391,11.75108 11.0050927,10.1762728 L11,10 L11,4 Z M19.586,11 L13,4.414 L13,10 C13,10.5128358 13.3860402,10.9355072 13.8833789,10.9932723 L14,11 L19.586,11 Z' />,\n    'Document2'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,2 C20.6568542,2 22,3.34314575 22,5 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L19,2 Z M8.95903938,14.4653367 L8.89694708,14.4202095 C8.68789701,14.291568 8.42133316,14.3352159 8.26303498,14.5116789 L8.2090719,14.5840012 L4.88033327,19.9929138 L4.93969424,19.9982115 L4.93969424,19.9982115 L12.446,20 L9.05890452,14.5810435 C9.0316623,14.5374559 8.99794603,14.4984621 8.95903938,14.4653367 L8.89694708,14.4202095 L8.95903938,14.4653367 Z M15.6580762,12.1926572 C15.4476303,12.0663122 15.1815603,12.1128758 15.0252035,12.2910614 L14.9720355,12.3639701 L12.551,16.396 L14.803,20 L19,20 C19.5410622,20 19.9817615,19.5702952 19.9994483,19.0335352 L15.8247114,12.3563345 C15.7828678,12.2893847 15.7257647,12.2332952 15.6580762,12.1926572 Z M19,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,17.606 L6.50573804,13.5358344 C7.19919591,12.4089238 8.64230264,12.0252274 9.79631538,12.6320827 L9.94511393,12.7168756 C10.2187146,12.885239 10.4567799,13.1044297 10.6467737,13.3619985 L10.7549011,13.5210456 L11.361,14.492 L13.2573282,11.3345145 C13.9384069,10.2000794 15.3772263,9.80060652 16.5378139,10.3947912 L16.6875318,10.4779499 C16.9695672,10.6472749 17.2148477,10.8702509 17.409849,11.1335934 L17.5207081,11.2963367 L20,15.264 L20,5 C20,4.44771525 19.5522847,4 19,4 Z' />,\n    'SharedMedia'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M23,12L20.56,9.22L20.9,5.54L17.29,4.72L15.4,1.54L12,3L8.6,1.54L6.71,4.72L3.1,5.53L3.44,9.21L1,12L3.44,14.78L3.1,18.47L6.71,19.29L8.6,22.47L12,21L15.4,22.46L17.29,19.28L20.9,18.46L20.56,14.78L23,12M10,17L6,13L7.41,11.59L10,14.17L16.59,7.58L18,9L10,17Z' />,\n    'Verified'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CheckDecagramIcon from '../../Assets/Icons/Verified';\nimport { getChatTitle, isChatVerified } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitle.css';\n\nclass DialogTitle extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const isVerified = isChatVerified(chatId);\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return (\n            <div className='dialog-title'>\n                <span className='dialog-title-span'>{title}</span>\n                {isVerified && <CheckDecagramIcon className='dialog-title-icon' />}\n            </div>\n        );\n    }\n}\n\nDialogTitle.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitle.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitle);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    updateSubtitle = chatId => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (\n            type &&\n            (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') &&\n            type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    render() {\n        const { subtitle: externalSubtitle } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div className={classNames('dialog-status', { 'dialog-status-accent': isAccent })}>\n                {externalSubtitle ? externalSubtitle + ', ' : null}\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default DialogStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport { isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './Chat.css';\n\nclass Chat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            chat: ChatStore.get(chatId)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, subtitle, onTileSelect, showStatus, showSavedMessages, big, showTitle } = this.props;\n\n        const isSavedMessages = isMeChat(chatId);\n\n        return (\n            <div className={classNames('chat', { 'chat-big': big })} onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile big={big} chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    {showTitle && (\n                        <div className='chat-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                            </div>\n                            {showStatus && (!isSavedMessages || !showSavedMessages) && (\n                                <div className='tile-second-row'>\n                                    <DialogStatus chatId={chatId} subtitle={subtitle} />\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    subtitle: PropTypes.string,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    showTitle: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChat.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true,\n    showTitle: true\n};\n\nexport default Chat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.29289322,11.2928932 L11.2928932,4.29289322 C11.6834175,3.90236893 12.3165825,3.90236893 12.7071068,4.29289322 C13.0675907,4.65337718 13.0953203,5.22060824 12.7902954,5.61289944 L12.7071068,5.70710678 L7.414,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L7.414,13 L12.7071068,18.2928932 C13.0675907,18.6533772 13.0953203,19.2206082 12.7902954,19.6128994 L12.7071068,19.7071068 C12.3466228,20.0675907 11.7793918,20.0953203 11.3871006,19.7902954 L11.2928932,19.7071068 L4.29289322,12.7071068 C3.93240926,12.3466228 3.90467972,11.7793918 4.20970461,11.3871006 L4.29289322,11.2928932 L11.2928932,4.29289322 L4.29289322,11.2928932 Z' />,\n    'Back'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport './ChatDetailsHeader.css';\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className='header-right-button' onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATION_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isChatMuted(chatId)\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATION_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                isMuted: isChatMuted(chatId)\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if (!chat_id) return;\n        if (chat_id !== chatId) return;\n\n        this.setState({ isMuted: isChatMuted(chatId) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default Notifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport Notifications from '../ColumnMiddle/Notifications';\nimport './NotificationsListItem.css';\n\nclass NotificationsListItem extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>\n                    <Checkbox\n                        className='notifications-checkbox'\n                        edge='start'\n                        checked={!isMuted}\n                        color='primary'\n                        tabIndex={-1}\n                        disableRipple\n                        onChange={this.handleSetChatNotifications}\n                    />\n                </ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                    secondary={!isMuted ? t('NotificationsOn') : t('NotificationsOff')}\n                />\n            </ListItem>\n        );\n    }\n}\n\nexport default withTranslation()(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Animator from '../../../Utils/Animatior';\nimport { clamp, throttle } from '../../../Utils/Common';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaTabs.css';\n\nclass SharedMediaTabs extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        this.state = { }\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n\n        if (chatId !== state.prevChatId) {\n            const media = MessageStore.getMedia(props.chatId);\n\n            const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || (media.fullInfo && media.fullInfo.members) || [] : [];\n            const photoAndVideo = media ? media.photoAndVideo : [];\n            const document = media ? media.document : [];\n            const audio = media ? media.audio : [];\n            const url = media ? media.url : [];\n            const voiceNote = media ? media.voiceNote : [];\n            const groupsInCommon = media ? media.groupsInCommon : [];\n\n            let selectedIndex = -1;\n            if (members.length > 0) {\n                selectedIndex = 0;\n            } else if (photoAndVideo.length > 0) {\n                selectedIndex = 1;\n            } else if (document.length > 0) {\n                selectedIndex = 2;\n            } else if (audio.length > 0) {\n                selectedIndex = 3;\n            } else if (url.length > 0) {\n                selectedIndex = 4;\n            } else if (voiceNote.length > 0) {\n                selectedIndex = 5;\n            } else if (groupsInCommon.length > 0) {\n                selectedIndex = 6;\n            }\n\n            return {\n                prevChatId: props.chatId,\n                selectedIndex,\n                members,\n                photoAndVideo,\n                document,\n                audio,\n                url,\n                voiceNote,\n                groupsInCommon,\n                isSmallWidth: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        this.setSelection();\n\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    setMediaState = (media, selectedIndex) => {\n        const { chatId } = this.props;\n\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || (media.fullInfo && media.fullInfo.members) || [] : [];\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        const hasMembers = members.length > 0;\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\n        const hasDocument = document.length > 0;\n        const hasAudio = audio.length > 0;\n        const hasUrl = url.length > 0;\n        const hasVoiceNote = voiceNote.length > 0;\n        const hasGroupsInCommon = groupsInCommon.length > 0;\n\n        const replaceSelectedIndex =\n            selectedIndex === -1\n            || selectedIndex === 0 && !hasMembers\n            || selectedIndex === 1 && !hasPhotoAndVideo\n            || selectedIndex === 2 && !hasDocument\n            || selectedIndex === 3 && !hasAudio\n            || selectedIndex === 4 && !hasUrl\n            || selectedIndex === 5 && !hasVoiceNote\n            || selectedIndex === 6 && !hasGroupsInCommon;\n        if (replaceSelectedIndex) {\n            if (hasMembers) {\n                selectedIndex = 0;\n            } else if (hasPhotoAndVideo) {\n                selectedIndex = 1;\n            } else if (hasDocument) {\n                selectedIndex = 2;\n            } else if (hasAudio) {\n                selectedIndex = 3;\n            } else if (hasUrl) {\n                selectedIndex = 4;\n            } else if (hasVoiceNote) {\n                selectedIndex = 5;\n            } else if (hasGroupsInCommon) {\n                selectedIndex = 6;\n            }\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaTab',\n                chatId,\n                index: selectedIndex\n            });\n        }\n\n        this.setState({\n            selectedIndex,\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    }\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chatId, media } = update;\n        if (chatId !== currentChatId) return;\n\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onClientUpdateMediaTab = update => {\n        const { chatId, index } = update;\n        if (chatId !== this.props.chatId) return;\n\n        this.setState({\n            selectedIndex: index\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { selectedIndex, isSmallWidth } = this.state;\n        if (selectedIndex === -1) return;\n\n        const padding = 3;\n\n        const scroll = this.filtersRef.current;\n\n        let item = null;\n        let left = 0;\n        const membersFilter = this.filterRef.get('members');\n        if (selectedIndex === 0 && membersFilter) {\n            item = membersFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const photoAndVideoFilter = this.filterRef.get('photoAndVideo');\n        if (selectedIndex === 1 && photoAndVideoFilter) {\n            item = photoAndVideoFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const documentFilter = this.filterRef.get('document');\n        if (selectedIndex === 2 && documentFilter) {\n            item = documentFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const audioFilter = this.filterRef.get('audio');\n        if (selectedIndex === 3 && audioFilter) {\n            item = audioFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const urlFilter = this.filterRef.get('url');\n        if (selectedIndex === 4 && urlFilter) {\n            item = urlFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const voiceNoteFilter = this.filterRef.get('voiceNote');\n        if (selectedIndex === 5 && voiceNoteFilter) {\n            item = voiceNoteFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const groupsInCommonFilter = this.filterRef.get('groupsInCommon');\n        if (selectedIndex === 6 && groupsInCommonFilter) {\n            item = groupsInCommonFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n        const { chatId, onClick } = this.props;\n\n        onClick && onClick(event);\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTab',\n            chatId,\n            index: id\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { selectedIndex, members, photoAndVideo, document, audio, url, voiceNote, groupsInCommon } = this.state;\n\n        const tabsCount =\n            (members.length > 0 ? 1 : 0) +\n            (photoAndVideo.length > 0 ? 1 : 0) +\n            (document.length > 0 ? 1 : 0) +\n            (audio.length > 0 ? 1 : 0) +\n            (url.length > 0 ? 1 : 0) +\n            (voiceNote.length > 0 ? 1 : 0) +\n            (groupsInCommon.length > 0 ? 1 : 0);\n\n        const hasSharedMedia =\n            members.length > 0\n            || photoAndVideo.length > 0\n            || document.length > 0\n            || audio.length > 0\n            || url.length > 0\n            || voiceNote.length > 0\n            || groupsInCommon.length > 0;\n\n        if (!hasSharedMedia) {\n            return null;\n        }\n\n        this.filterRef = new Map();\n        return (\n            <div className={classNames('tabs', 'shared-media-tabs')}>\n                <div className='tabs-bottom-border'/>\n                <div ref={this.filtersRef} className={classNames('filters', {'shared-media-tabs-container': tabsCount > 1})}>\n                    {members.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('members', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 0})}\n                            onMouseDown={e => this.handleFilterClick(e, 0)}>\n                            <span>{t('GroupMembers')}</span>\n                        </div>\n                    )}\n                    {photoAndVideo.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('photoAndVideo', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 1})}\n                            onMouseDown={e => this.handleFilterClick(e, 1)}>\n                            <span>{t('SharedMediaTab2')}</span>\n                        </div>\n                    )}\n                    {document.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('document', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 2})}\n                            onMouseDown={e => this.handleFilterClick(e, 2)}>\n                            <span>{t('SharedFilesTab2')}</span>\n                        </div>\n                    )}\n                    {audio.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('audio', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 3})}\n                            onMouseDown={e => this.handleFilterClick(e, 3)}>\n                            <span>{t('SharedMusicTab2')}</span>\n                        </div>\n                    )}\n                    {url.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('url', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 4})}\n                            onMouseDown={e => this.handleFilterClick(e, 4)}>\n                            <span>{t('SharedLinksTab2')}</span>\n                        </div>\n                    )}\n                    {voiceNote.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('voiceNote', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 5})}\n                            onMouseDown={e => this.handleFilterClick(e, 5)}>\n                            <span>{t('SharedVoiceTab2')}</span>\n                        </div>\n                    )}\n                    {groupsInCommon.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('groupsInCommon', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 6})}\n                            onMouseDown={e => this.handleFilterClick(e, 6)}>\n                            <span>{t('SharedGroupsTab2')}</span>\n                        </div>\n                    )}\n                    <div ref={this.filterSelectionRef} className='filter-selection'/>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nSharedMediaTabs.propTypes = {\n    chatId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaTabs);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,6.5 C18.5522847,6.5 19,6.94771525 19,7.5 L19,18 C19,19.6568542 17.6568542,21 16,21 L8,21 C6.34314575,21 5,19.6568542 5,18 L5,7.5 C5,6.94771525 5.44771525,6.5 6,6.5 L18,6.5 Z M17,8.5 L7,8.5 L7,18 C7,18.5522847 7.44771525,19 8,19 L16,19 C16.5522847,19 17,18.5522847 17,18 L17,8.5 Z M10,2 L14,2 C14.2210137,2 14.434484,2.07316447 14.6080295,2.20608063 L14.7071068,2.29289322 L15.415,3 L19,3 C19.5128358,3 19.9355072,3.38604019 19.9932723,3.88337887 L20,4 C20,4.51283584 19.6139598,4.93550716 19.1166211,4.99327227 L19,5 L5,5 C4.44771525,5 4,4.55228475 4,4 C4,3.48716416 4.38604019,3.06449284 4.88337887,3.00672773 L5,3 L8.584,3 L9.29289322,2.29289322 C9.44917353,2.1366129 9.65185492,2.03740171 9.86855602,2.00867243 L10,2 L14,2 L10,2 Z' />,\n    'Delete'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.8025478,4.79529691 C11.8025478,3.93005081 12.5039683,3.22863025 13.3692144,3.22863025 C13.7633775,3.22863025 14.1430567,3.37720768 14.4325315,3.64473128 L22.2284036,10.8494344 C22.8638434,11.4366882 22.9029059,12.4278772 22.2883553,13.0917108 L22.2284036,13.1505656 L14.4325315,20.3552687 C13.7970916,20.9425225 12.8059026,20.90346 12.2186488,20.2680201 C11.9511252,19.9785454 11.8025478,19.5988662 11.8025478,19.2047031 L11.8025478,16.4249931 C8.21922017,16.6092505 5.79479016,17.8111183 4.43312712,19.9909578 L4.29164834,20.2262356 C3.95336498,20.8131459 3.20334729,21.0146979 2.61643694,20.6764146 C2.24185558,20.4605134 2.00860424,20.0633528 2.00249611,19.6310483 C1.8981509,12.2459874 5.13388305,8.13673748 11.4825227,7.6491321 L11.8025478,7.62777147 L11.8025478,4.79529691 Z M13.8025478,5.78581808 L13.8025478,8.6 C13.8025478,9.15228475 13.3548325,9.6 12.8025478,9.6 C7.49232524,9.6 4.65375859,12.0566924 4.1006582,17.2535243 C6.09650127,15.345115 9.01935671,14.4 12.8025478,14.4 C13.3548325,14.4 13.8025478,14.8477153 13.8025478,15.4 L13.8025478,18.2142808 L20.5271714,12.0005066 L13.8025478,5.78581808 Z' />,\n    'Share'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ChatBubbleOutlineOutlinedIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\nimport DeleteIcon from '../../../Assets/Icons/Delete';\nimport ShareIcon from '../../../Assets/Icons/Share';\nimport { deleteMessages, forwardMessages, openChat } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './ContextMenu.css';\n\nclass ContextMenu extends React.Component {\n    handleOpenMessage = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        deleteMessages(chatId, [messageId]);\n    };\n\n    render() {\n        const { t, chatId, messageId, open, onClose, anchorPosition, showOpenMessage } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n\n        return (\n            <Popover\n                open={open}\n                onClose={onClose}\n                anchorReference='anchorPosition'\n                anchorPosition={anchorPosition}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}\n                onClick={e => e.stopPropagation()}>\n                <MenuList>\n                    {showOpenMessage && (\n                        <MenuItem onClick={this.handleOpenMessage}>\n                            <ListItemIcon>\n                                <ChatBubbleOutlineOutlinedIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('GoToMessage')} />\n                        </MenuItem>\n                    )}\n                    {can_be_forwarded && (\n                        <MenuItem onClick={this.handleForward}>\n                            <ListItemIcon>\n                                <ShareIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Forward')} />\n                        </MenuItem>\n                    )}\n                    {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                        <MenuItem color='secondary' onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    )}\n                </MenuList>\n            </Popover>\n        );\n    }\n\n}\n\nContextMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(ContextMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedPhoto.css';\n\nclass SharedPhoto extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { photo, size, thumbnailSize } = props;\n        const { prevPhoto } = state;\n        if (photo !== prevPhoto) {\n            return {\n                prevPhoto: photo,\n\n                contextMenu: false,\n                left: 0,\n                top: 0,\n\n                photoSize: getSize(photo.sizes, size),\n                thumbSize: getSize(photo.sizes, thumbnailSize),\n                minithumbnail: photo.minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, photo, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (photo !== nextProps.photo) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, showOpenMessage, style } = this.props;\n        const { minithumbnail, thumbSize, photoSize, contextMenu, left, top } = this.state;\n\n        if (!photoSize) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const src = getSrc(photoSize.photo);\n        const isBlurred = miniSrc || isBlurredThumbnail(thumbSize);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover' }}>\n                        {src !== thumbSrc && (\n                            <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                        )}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedPhoto;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ContextMenu from './ContextMenu';\nimport { openMedia } from '../../../Utils/Message';\nimport { getMedia } from '../../../Utils/Media';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedDocument.css';\n\nclass SharedDocument extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, showOpenMessage, i18n } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        return (\n            <>\n                <div className='shared-document' onContextMenu={this.handleOpenContextMenu}>\n                    {getMedia(message, () => openMedia(chatId, messageId, true), { date: dateString })}\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(SharedDocument);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { hasVideoNote } from '../../../Utils/Message';\nimport { THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedLinkTile.css';\n\nclass SharedLinkTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.file || thumbnail.photo;\n        if (!file) return;\n\n        if (update.fileId === file.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, thumbnail, minithumbnail, title } = this.props;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(thumbnail ? thumbnail.file || thumbnail.photo : null);\n        const isBlurred = (!src && miniSrc) || isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n        const hasSrc = Boolean(src || miniSrc);\n\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 7) + 1}`;\n\n        return (\n            <div className={classNames('shared-link-tile', { [tileColor]: !hasSrc })}>\n                {hasSrc? (\n                    <img\n                        className={classNames(\n                            'shared-link-tile-photo',\n                            { 'shared-link-tile-photo-round': isVideoNote },\n                            { 'media-blurred': src && isBlurred },\n                            { 'media-mini-blurred': !src && miniSrc && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src || miniSrc}\n                        alt=''\n                    />\n                ) : (\n                    <span>{title}</span>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedLinkTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    minithumbnail: PropTypes.object,\n    thumbnail: PropTypes.object,\n    title: PropTypes.string\n};\n\nexport default SharedLinkTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport SafeLink from '../../Additional/SafeLink';\nimport SharedLinkTile from './SharedLinkTile';\nimport { getFirstLetter, getPhotoSize } from '../../../Utils/Common';\nimport { getFormattedText, substring } from '../../../Utils/Message';\nimport punycode from '../../../Utils/Punycode';\nimport { PHOTO_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedLink.css';\n\nclass SharedLink extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, webPage, caption, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (webPage !== nextProps.webPage) {\n            return true;\n        }\n\n        if (caption !== nextProps.caption) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    static isValidEntity(entity) {\n        if (!entity) return false;\n\n        const { type } = entity;\n        if (!type) return false;\n\n        return (\n            type['@type'] === 'textEntityTypeUrl' ||\n            type['@type'] === 'textEntityTypeTextUrl' ||\n            type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getTitleFromUrl(url) {\n        try {\n            url = url.startsWith('http') ? url : 'http://' + url;\n            const decodedUrl = decodeURI(url);\n\n            const hostname = new URL(decodedUrl).hostname.split('.');\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\n\n            return punycode.ToUnicode(domain);\n        } catch (error) {\n            console.error('url: ' + url + '\\n' + error);\n        }\n\n        return null;\n    }\n\n    render() {\n        const { chatId, messageId, webPage, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let thumbnail = null;\n        let minithumbnail = null;\n        let content = null;\n        let { display_url, description, photo, title, url, animation, audio, document, sticker, video, video_note: videoNote } = webPage || {\n            title: '',\n            description: {\n                '@type': 'formattedText',\n                text: '',\n                entities: []\n            },\n            photo: null,\n            animation: null,\n            audio: null,\n            document: null,\n            sticker: null,\n            video: null,\n            video_note: null,\n            url: ''\n        };\n\n        if (animation) {\n            minithumbnail = animation.minithumbnail;\n            thumbnail = animation.thumbnail;\n        } else if (audio) {\n            minithumbnail = audio.album_cover_minithumbnail;\n            thumbnail = audio.album_cover_thumbnail;\n        } else if (document) {\n            minithumbnail = document.minithumbnail;\n            thumbnail = document.thumbnail;\n        } else if (sticker) {\n            minithumbnail = sticker.minithumbnail;\n            thumbnail = sticker.thumbnail;\n        } else if (video) {\n            minithumbnail = video.minithumbnail;\n            thumbnail = video.thumbnail;\n        } else if (videoNote) {\n            minithumbnail = videoNote.minithumbnail;\n            thumbnail = videoNote.thumbnail;\n        }\n\n        if (!thumbnail && !minithumbnail && photo) {\n            minithumbnail = photo.minithumbnail;\n            thumbnail = getPhotoSize(photo.sizes, PHOTO_SIZE);\n        }\n\n        let { text, caption } = message.content;\n        text = text || caption;\n        if (text) {\n            const { entities } = text;\n            if (entities && entities.length > 0) {\n                const longTextMaxLength = 40;\n                const urlEntities = entities.filter(SharedLink.isValidEntity);\n                const showLinks = urlEntities.length > 1 || text.text.length > longTextMaxLength;\n                const oneLinkText = entities.length === 1 && entities[0].offset === 0 && entities[0].length === text.text.length;\n\n                const nonEmptyUrlEntities = urlEntities\n                    .filter(x => {\n                        let entityText = substring(text.text, x.offset, x.offset + x.length).trim();\n                        entityText = entityText.replace(/\\u200B/g,'');\n\n                        return entityText.length > 0;\n                    });\n\n                const links = nonEmptyUrlEntities.map((x, i) => {\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\n                        url = entityText;\n                        let mail = false;\n\n                        switch (x.type['@type']) {\n                            case 'textEntityTypeTextUrl': {\n                                const { url: typeUrl } = x.type;\n                                if (typeUrl) {\n                                    url = typeUrl;\n                                }\n                                break;\n                            }\n                            case 'textEntityTypeUrl': {\n                                break;\n                            }\n                            case 'textEntityTypeEmailAddress':\n                                mail = true;\n                                break;\n                        }\n\n                        title = title || this.getTitleFromUrl(url) || ' ';\n\n                        return (\n                            <SafeLink key={i} className='shared-link-url' url={url} mail={mail}>\n                                {entityText}\n                            </SafeLink>\n                        );\n                    });\n\n                if (showLinks) {\n                    let d = (nonEmptyUrlEntities.length > 0 && nonEmptyUrlEntities[0].offset > 0 ? text.text.substring(0, nonEmptyUrlEntities[0].offset) : text.text) || description.text || '';\n                    d = d.trim();\n                    content = (\n                        <>\n                            {d && !oneLinkText && <div className='web-page-description'>{d}</div>}\n                            <div>{links}</div>\n                        </>);\n                } else {\n                    let d = description.text || '';\n                    d = d.trim();\n                    content = (\n                        <>\n                            {d && <div className='web-page-description'>{d}</div>}\n                            <div className='shared-link-text'>{getFormattedText(text, x => x, { isValidEntity: SharedLink.isValidEntity })}</div>\n                        </>);\n                }\n\n                if (webPage) {\n                    title = title || this.getTitleFromUrl(url);\n                }\n            }\n        }\n\n        return (\n            <>\n                <div className='shared-link' onContextMenu={this.handleOpenContextMenu}>\n                    <SharedLinkTile\n                        chatId={chatId}\n                        messageId={messageId}\n                        minithumbnail={minithumbnail}\n                        thumbnail={thumbnail}\n                        title={getFirstLetter(this.getTitleFromUrl(url))}\n                    />\n                    <div className='shared-link-content'>\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {content}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedLink.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    webPage: PropTypes.object,\n    caption: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n};\n\nexport default SharedLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AudioAction from '../../Message/Media/AudioAction';\nimport ContextMenu from './ContextMenu';\nimport MediaStatus from '../../Message/Media/MediaStatus';\nimport MessageAuthor from '../../Message/MessageAuthor';\nimport VoiceNoteTile from '../VoiceNoteTile';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedVoiceNote.css';\n\nclass SharedVoiceNote extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, voiceNote, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (voiceNote !== nextProps.voiceNote) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, i18n, messageId, voiceNote, openMedia, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        if (!voiceNote) return null;\n\n        const { date, sender } = message;\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <>\n                <div className='shared-voice-note' onContextMenu={this.handleOpenContextMenu}>\n                    <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                    <div className='voice-note-content'>\n                        <div className='document-title'><MessageAuthor sender={sender} messageId={messageId} /></div>\n                        <div className='voice-note-meta'>\n                            <AudioAction\n                                chatId={chatId}\n                                messageId={messageId}\n                                duration={duration}\n                                file={file}\n                                date={dateString}\n                            />\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n\n        );\n    }\n}\n\nSharedVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(SharedVoiceNote);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedVideo.css';\n\nclass SharedVideo extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, video, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (video !== nextProps.video) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, style, showOpenMessage } = this.props;\n        const { minithumbnail, thumbnail, duration } = this.props.video;\n        const { contextMenu, left, top } = this.state;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const isBlurred = thumbSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-video-wrapper'>\n                        <div\n                            className={classNames('shared-video-content', {\n                                'media-blurred': isBlurred,\n                                'media-mini-blurred': !thumbSrc && isBlurred\n                            })}\n                            style={{ backgroundImage: `url(${thumbSrc || miniSrc})` }}\n                        />\n                        <div className='shared-video-meta'>{getDurationString(duration)}</div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedVideo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport User from '../../Tile/User';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { loadChatsContent, loadMessageContents, loadUsersContent } from '../../../Utils/File';\nimport { openMedia } from '../../../Utils/Message';\nimport { openChat, openUser } from '../../../Actions/Client';\nimport { SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaContent.css';\nimport Chat from '../../Tile/Chat';\n\nconst overScanCount = 5;\n\nclass SharedMediaContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0\n        }\n\n        // this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    static getItemHeight(item) {\n        if (!item) return undefined;\n\n        switch (item['@type']) {\n            case 'message': {\n                const { content } = item;\n                switch (content['@type']) {\n                    case 'messagePhoto': {\n                        return undefined;\n                    }\n                    case 'messageVideo': {\n                        return undefined;\n                    }\n                    case 'messageDocument': {\n                        return 78;\n                    }\n                    case 'messageAudio': {\n                        return 94;\n                    }\n                    case 'messageVoiceNote': {\n                        return 74;\n                    }\n                    default: {\n                        return undefined;\n                    }\n                }\n            }\n            case 'chat': {\n                return 74;\n            }\n            case 'user': {\n                return 74;\n            }\n            default: {\n                return undefined;\n            }\n        }\n    }\n\n    static getRowHeight(selectedIndex) {\n        switch (selectedIndex) {\n            case 0: {\n                return 74;\n            }\n            case 1: {\n                return undefined;\n            }\n            case 2: {\n                return 78;\n            }\n            case 3: {\n                return 94;\n            }\n            case 4: {\n                return undefined;\n            }\n            case 5: {\n                return 74;\n            }\n            case 6: {\n                return 74;\n            }\n        }\n\n        return undefined;\n    }\n\n    static getItemTemplate = (selectedIndex, item, onOpen) => {\n        const migratedChatId = -1;\n\n        switch (selectedIndex) {\n            case 0: {\n                const { user_id: id } = item;\n                return (\n                    <ListItem\n                        button\n                        key={`user_id=${id}`}\n                        className='groups-in-common-item'>\n                        <User userId={id} onSelect={onOpen}/>\n                    </ListItem>\n                );\n            }\n            case 1: {\n                const { chat_id, id, content } = item;\n                if (content['@type'] === 'messageVideo') {\n                    return (\n                        <SharedVideo\n                            key={`chat_id=${chat_id}_message_id=${id}`}\n                            chatId={chat_id}\n                            messageId={id}\n                            video={content.video}\n                            openMedia={onOpen}\n                            showOpenMessage={chat_id !== migratedChatId}\n                        />\n                    );\n                }\n\n                return (\n                    <SharedPhoto\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        photo={content.photo}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 2: {\n                const { chat_id, id } = item;\n                return (\n                    <SharedDocument\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 3: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedDocument\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 4: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedLink\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        webPage={content.web_page}\n                        caption={content.caption}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 5: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedVoiceNote\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        voiceNote={content.voice_note}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 6: {\n                const { id } = item;\n                return (\n                    <ListItem\n                        button\n                        key={`chat_id=${id}`}\n                        className='groups-in-common-item'>\n                        <Chat chatId={id} onSelect={onOpen} />\n                    </ListItem>\n                );\n            }\n        }\n\n        return null;\n    };\n\n    static isValidMessage(selectedIndex, message) {\n        if (!message) return false;\n\n        return SharedMediaContent.isValidContent(selectedIndex, message.content);\n    };\n\n    static isValidContent(selectedIndex, content) {\n        switch (selectedIndex) {\n            case 0: {\n                return true;\n            }\n            case 1: {\n                return SharedMediaContent.isValidPhotoAndVideoContent(content);\n            }\n            case 2: {\n                return SharedMediaContent.isValidDocumentContent(content);\n            }\n            case 3: {\n                return SharedMediaContent.isValidAudioContent(content);\n            }\n            case 4: {\n                return SharedMediaContent.isValidUrlContent(content);\n            }\n            case 5: {\n                return SharedMediaContent.isValidVoiceNoteContent(content);\n            }\n            case 6: {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    static isValidPhotoAndVideoContent(content) {\n        return content && (content['@type'] === 'messagePhoto' || content['@type'] === 'messageVideo');\n    }\n\n    static isValidAudioContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    static isValidDocumentContent(content) {\n        return content && (content['@type'] === 'messageDocument' || content['@type'] === 'messageAudio');\n    }\n\n    static isValidUrlContent(content) {\n        if (!content) return false;\n\n        const { web_page, text, caption } = content;\n        if (web_page) return true;\n        if (!text && !caption) return false;\n\n        const { entities } = text || caption;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    static isValidVoiceNoteContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    static getFilter(selectedIndex) {\n        switch (selectedIndex) {\n            case 0: {\n                return null;\n            }\n            case 1: {\n                return { '@type': 'searchMessagesFilterPhotoAndVideo' };\n            }\n            case 2: {\n                return { '@type': 'searchMessagesFilterDocument' };\n            }\n            case 3: {\n                return { '@type': 'searchMessagesFilterAudio' };\n            }\n            case 4: {\n                return { '@type': 'searchMessagesFilterUrl' };\n            }\n            case 5: {\n                return { '@type': 'searchMessagesFilterVoiceNote' };\n            }\n            case 6: {\n                return null;\n            }\n        }\n\n        return null;\n    }\n\n    static getSource(selectedIndex, media) {\n        if (!media) {\n            return [];\n        }\n\n        switch (selectedIndex) {\n            case 0: {\n                return (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [];\n            }\n            case 1: {\n                return media.photoAndVideo || [];\n            }\n            case 2: {\n                return media.document || [];\n            }\n            case 3: {\n                return media.audio || [];\n            }\n            case 4: {\n                return media.url || [];\n            }\n            case 5: {\n                return media.voiceNote || [];\n            }\n            case 6: {\n                return media.groupsInCommon || [];\n            }\n        }\n\n        return [];\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n\n        if (chatId !== state.prevChatId) {\n            const media = MessageStore.getMedia(props.chatId);\n\n            const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\n            const photoAndVideo = media ? media.photoAndVideo : [];\n            const document = media ? media.document : [];\n            const audio = media ? media.audio : [];\n            const url = media ? media.url : [];\n            const voiceNote = media ? media.voiceNote : [];\n            const groupsInCommon = media ? media.groupsInCommon : [];\n\n            let selectedIndex = -1;\n            if (members.length > 0) {\n                selectedIndex = 0;\n            } else if (photoAndVideo.length > 0) {\n                selectedIndex = 1;\n            } else if (document.length > 0) {\n                selectedIndex = 2;\n            } else if (audio.length > 0) {\n                selectedIndex = 3;\n            } else if (url.length > 0) {\n                selectedIndex = 4;\n            } else if (voiceNote.length > 0) {\n                selectedIndex = 5;\n            } else if (groupsInCommon.length > 0) {\n                selectedIndex = 6;\n            }\n            const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n\n            return {\n                prevChatId: props.chatId,\n                selectedIndex,\n                renderIds: new Map(),\n                rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n                items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\n                members,\n                photoAndVideo,\n                document,\n                audio,\n                url,\n                voiceNote,\n                groupsInCommon,\n                isSmallWidth: false,\n                params: {\n                    loading: false,\n                    completed: false,\n                    migrateCompleted: false,\n                    filter: SharedMediaContent.getFilter(selectedIndex)\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.onWindowResize);\n\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.onWindowResize);\n\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        const { items, selectedIndex } = this.state;\n        if (!items.some(x => x.id === message_id)) return;\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onWindowResize = event => {\n        const { items, scrollTop } = this.state;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\n\n        this.setState({ ...renderIds });\n    };\n\n    onUpdateMessageSend = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    setMediaState = (media, selectedIndex) => {\n        const { scrollTop } = this.state;\n\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        const hasMembers = members.length > 0;\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\n        const hasDocument = document.length > 0;\n        const hasAudio = audio.length > 0;\n        const hasUrl = url.length > 0;\n        const hasVoiceNote = voiceNote.length > 0;\n        const hasGroupsInCommon = groupsInCommon.length > 0;\n\n        const replaceSelectedIndex =\n            selectedIndex === -1\n            || selectedIndex === 0 && !hasMembers\n            || selectedIndex === 1 && !hasPhotoAndVideo\n            || selectedIndex === 2 && !hasDocument\n            || selectedIndex === 3 && !hasAudio\n            || selectedIndex === 4 && !hasUrl\n            || selectedIndex === 5 && !hasVoiceNote\n            || selectedIndex === 6 && !hasGroupsInCommon;\n        if (replaceSelectedIndex) {\n            if (hasMembers) {\n                selectedIndex = 0;\n            } else if (hasPhotoAndVideo) {\n                selectedIndex = 1;\n            } else if (hasDocument) {\n                selectedIndex = 2;\n            } else if (hasAudio) {\n                selectedIndex = 3;\n            } else if (hasUrl) {\n                selectedIndex = 4;\n            } else if (hasVoiceNote) {\n                selectedIndex = 5;\n            } else if (hasGroupsInCommon) {\n                selectedIndex = 6;\n            }\n        }\n\n        const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n        const items = source.slice(0, SHARED_MESSAGE_SLICE_LIMIT);\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        this.setState({\n            selectedIndex,\n            renderIds: this.getRenderIds(items, viewportHeight, scrollTop - offsetTop),\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n            items,\n            params: {\n                loading: false,\n                completed: false,\n                migrateCompleted: false,\n                filter: SharedMediaContent.getFilter(selectedIndex)\n            },\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.items !== this.props.chatId || prevState.selectedIndex !== this.state.selectedIndex) {\n            const { items } = this.state;\n\n            const store = FileStore.getStore();\n            switch (this.state.selectedIndex) {\n                case 0: {\n                    loadUsersContent(store, items.map(x => x.user_id));\n                    break;\n                }\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5: {\n                    loadMessageContents(store, items);\n                    break;\n                }\n                case 6: {\n                    loadChatsContent(store, items);\n                    break;\n                }\n            }\n        }\n\n        // this.unobserveResize();\n        // this.observeResize();\n    }\n\n    onClientUpdateMediaTab = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId, index: selectedIndex } = update;\n        if (chatId !== currentChatId) return;\n\n        const media = MessageStore.getMedia(currentChatId);\n\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        let source = [];\n        if (selectedIndex === 0) {\n            source = members;\n        } else if (selectedIndex === 1) {\n            source = photoAndVideo;\n        } else if (selectedIndex === 2) {\n            source = document;\n        } else if (selectedIndex === 3) {\n            source = audio;\n        } else if (selectedIndex === 4) {\n            source = url;\n        } else if (selectedIndex === 5) {\n            source = voiceNote;\n        } else if (selectedIndex === 6) {\n            source = groupsInCommon;\n        }\n        source = source.filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n\n        this.setState({\n            selectedIndex,\n            renderIds: new Map(),\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n            items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon,\n            params: {\n                loading: false,\n                completed: false,\n                migrateCompleted: false,\n                filter: SharedMediaContent.getFilter(selectedIndex)\n            }\n        });\n    };\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { selectedIndex } = this.state;\n\n        const { chatId } = update;\n        if (chatId !== currentChatId) return;\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    handleScroll = (event, container) => {\n        const { params } = this.state;\n\n        if (params && !params.completed) {\n            this.onLoadNext(params);\n        } else {\n            // this.onLoadMigratedNext(params);\n        }\n    };\n\n    handleVirtScroll = (event, container) => {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        this.setScrollPosition(container.scrollTop);\n    };\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { rowHeight } = this.state;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    setScrollPosition = scrollTop => {\n        const { items, scrollTop: prevScrollTop, rowHeight } = this.state;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        if (Math.abs(scrollTop - prevScrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\n\n            this.setState({\n                scrollTop,\n                ...renderIds\n            });\n        }\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { items, selectedIndex } = this.state;\n        const { completed, filter, loading, messages: lastMessages } = params;\n\n        if (selectedIndex === 0) return;\n        if (selectedIndex === 6) return;\n        if (!filter) return;\n        if (loading) return;\n        if (completed) return;\n\n        let fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        if (lastMessages) {\n            fromMessageId = lastMessages.length > 0 ? lastMessages[lastMessages.length - 1].id : 0;\n        }\n        params.loading = true;\n        params.requestId = new Date();\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { params: currentParams } = this.state;\n        if (!currentParams || currentParams.requestId !== params.requestId) {\n            return;\n        }\n\n        const { messages } = result;\n        params.messages = messages;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(x => SharedMediaContent.isValidMessage(selectedIndex, x)));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext(params, loadIncomplete) {\n\n    }\n\n    handleOpen = item => {\n        const { popup } = this.props;\n\n        switch (item['@type']) {\n            case 'message': {\n                const { chat_id, id } = item;\n\n                openMedia(chat_id, id, false);\n                break;\n            }\n            case 'chat': {\n                const { id } = item;\n                openChat(id);\n\n                if (popup) {\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateDialogChatId',\n                        chatId: 0\n                    });\n                }\n                break;\n            }\n            case 'chatMember': {\n                const { user_id } = item;\n                openUser(user_id, true);\n\n                if (popup) {\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateDialogChatId',\n                        chatId: 0\n                    });\n                }\n            }\n        }\n    };\n\n    render() {\n        const {\n            selectedIndex,\n            items = [],\n            renderIds,\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        } = this.state;\n\n        // console.log('[vlist] render', [selectedIndex, items, renderIds]);\n\n        const hasItems = members && members.length > 0\n            || photoAndVideo && photoAndVideo.length > 0\n            || document && document.length > 0\n            || audio && audio.length > 0\n            || url && url.length > 0\n            || voiceNote && voiceNote.length > 0\n            || groupsInCommon && groupsInCommon.length > 0;\n        if (!hasItems) {\n            return (<div ref={this.listRef}/>);\n        }\n\n        if (selectedIndex === 2 || selectedIndex === 3 || selectedIndex === 5) {\n            let contentHeight = 0;\n            const controls = items.map((x, index) => {\n                const { chat_id, id } = x;\n                const itemHeight = SharedMediaContent.getItemHeight(x);\n                if (!itemHeight) {\n                    return null;\n                }\n                contentHeight += itemHeight;\n\n                return ((!renderIds.size || renderIds.has(index)) && (\n                    <div key={`chat_id=${chat_id}_message_id=${id}`} className='shared-media-virt-item' style={{ top: contentHeight - itemHeight }}>\n                        {SharedMediaContent.getItemTemplate(selectedIndex, x, () => this.handleOpen(x))}\n                    </div>\n                ));\n            });\n\n            return (\n                <div ref={this.listRef} className='shared-media-virt-content' style={{ height: contentHeight }}>\n                    {controls}\n                </div>\n            );\n        }\n\n        return (\n            <div ref={this.listRef} className={classNames('shared-media-content', { 'shared-photos-list': selectedIndex === 1 })}>\n                {items.map(x => SharedMediaContent.getItemTemplate(selectedIndex, x, () => this.handleOpen(x)))}\n            </div>\n        );\n    }\n}\n\nSharedMediaContent.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default SharedMediaContent;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GroupIcon from '@material-ui/icons/Group';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MicIcon from '@material-ui/icons/Mic';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport Typography from '@material-ui/core/Typography';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport User from '../Tile/User';\nimport Chat from '../Tile/Chat';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport SharedMediaTabs from './SharedMedia/SharedMediaTabs';\nimport SharedMediaContent from './SharedMedia/SharedMediaContent';\nimport { copy } from '../../Utils/Text';\nimport { getFormattedText, getUrlMentionHashtagEntities } from '../../Utils/Message';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    isMeChat, isChannelChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Phone';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS, SCROLL_PRECISION } from '../../Constants';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MoreListItem.css';\nimport './ChatDetails.css';\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.dividerRef = React.createRef();\n        this.mediaRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const { current: list } = this.listRef;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme, counters, migratedCounters } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.counters !== counters) {\n            return true;\n        }\n\n        if (nextProps.migratedCounters !== migratedCounters) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.loadContent();\n        }\n\n        const { current: list } = this.listRef;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop;\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = () => {\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId, popup } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n\n        if (popup) {\n            getChatFullInfo(chatId);\n        }\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        this.handleScheduledAction(t('PhoneCopied'));\n    };\n\n    handleHeaderClick = () => {\n        this.listRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.listRef) return 0;\n\n        return this.listRef.current.clientHeight;\n    };\n\n    handleTabClick = event => {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { current: divider } = this.dividerRef;\n        if (!divider) return;\n        if (divider.offsetTop === list.scrollTop) return;\n\n        if (list.scrollTop < divider.offsetTop) {\n            list.scrollTo({\n                top: divider.offsetTop,\n                behavior: 'smooth'\n            });\n        } else {\n            list.scrollTop = divider.offsetTop + 70;\n            setTimeout(() => {\n                list.scrollTo({\n                    top: divider.offsetTop,\n                    behavior: 'smooth'\n                });\n            }, 0);\n        }\n        // requestAnimationFrame(() => {\n        //     list.scrollTo({\n        //         top: divider.offsetTop,\n        //         behavior: 'smooth'\n        //     });\n        // });\n    };\n\n    handleScroll = event => {\n        if (!this.listRef) return;\n        if (!this.mediaRef) return;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { current: media } = this.mediaRef;\n        if (!media) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            media.handleScroll(event);\n        }\n\n        media.handleVirtScroll(event, list);\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            onClose,\n            popup,\n            t\n        } = this.props;\n\n        let { counters, migratedCounters } = this.props;\n        counters = counters || [0, 0, 0, 0, 0, 0];\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\n            (el, i) => el + migratedCounters[i]\n        );\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.listRef} className={classNames('chat-details-list', 'scrollbars-hidden')} />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        let bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className='list-item' key={user.id}>\n                <User userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        if (isGroupChat(chatId) || isChannelChat(chatId)) {\n            const { text: bioText, entities: bioEntities } = getUrlMentionHashtagEntities(bio, []);\n            if (bioEntities.length > 0) {\n                bio = getFormattedText({ '@type': 'formattedText', text: bioText, entities: bioEntities });\n            }\n        }\n\n        let openChatTitle = t('SendMessage');\n        if (isChannelChat(chatId)) {\n            openChatTitle = t('OpenChannel');\n        } else if (isGroupChat(chatId)) {\n            openChatTitle = t('OpenGroup');\n        }\n\n        let chatUrl = ''\n        if (username) {\n            if (isPrivateChat(chatId)) {\n                chatUrl = username;\n            } else {\n                const tMeUrl = OptionStore.get('t_me_url')\n                    .value\n                    .toLowerCase()\n                    .replace('https://', '')\n                    .replace('http://', '');\n\n                chatUrl = tMeUrl + username;\n            }\n        }\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('chat-details-list', 'scrollbars-hidden')}\n                    onScroll={this.handleScroll}>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                        {!isMe && (\n                            <List className='chat-details-items'>\n                                {bio && (\n                                    <ListItem className='list-item-rounded' alignItems='flex-start'>\n                                        <ListItemIcon>\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={bio}\n                                            secondary={isPrivateChat(chatId) ? t('Bio') : t('DescriptionPlaceholder')}\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                        />\n                                    </ListItem>\n                                )}\n                                {username && (\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleUsernameHint}>\n                                        <ListItemIcon>\n                                            <AlternateEmailIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {chatUrl}\n                                                </Typography>\n                                            }\n                                            secondary={isPrivateChat(chatId) ? t('Username') : t('InviteLink')}\n                                        />\n                                    </ListItem>\n                                )}\n                                {phoneNumber && (\n                                    <>\n                                        <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handlePhoneHint}>\n                                            <ListItemIcon>\n                                                <CallIcon />\n                                            </ListItemIcon>\n                                            <ListItemText\n                                                primary={\n                                                    <Typography variant='inherit' noWrap>\n                                                        {formatPhoneNumber(phoneNumber)}\n                                                    </Typography>\n                                                }\n                                                secondary={t('Phone')}\n                                            />\n                                        </ListItem>\n                                    </>\n                                )}\n                                <NotificationsListItem chatId={chatId} />\n                                {popup && (\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleOpenChat}>\n                                        <ListItemText\n                                            primary={\n                                                <Typography color='primary' variant='inherit' noWrap>\n                                                    {openChatTitle.toUpperCase()}\n                                                </Typography>\n                                            }\n                                            style={{ paddingLeft: 40 }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        )}\n                    </div>\n\n                    <div ref={this.dividerRef}/>\n                    <SharedMediaTabs chatId={chatId} onClick={this.handleTabClick}/>\n                    <SharedMediaContent ref={this.mediaRef} chatId={chatId} popup={popup}/>\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func,\n    onOpenSharedDocuments: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenSharedLinks: PropTypes.func,\n    onOpenSharedPhotos: PropTypes.func,\n    onOpenSharedVideos: PropTypes.func,\n    onOpenSharedVoiceNotes: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './GroupsInCommonHeader.css';\n\nclass GroupsInCommonHeader extends React.Component {\n    render() {\n        const { onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default GroupsInCommonHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from '../Tile/Chat';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <Chat chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.5,3 C13.0898509,3 16,5.91014913 16,9.5 C16,10.9337106 15.5358211,12.2590065 14.7495478,13.3338028 L19.7071068,18.2928932 C20.0976311,18.6834175 20.0976311,19.3165825 19.7071068,19.7071068 C19.3466228,20.0675907 18.7793918,20.0953203 18.3871006,19.7902954 L18.2928932,19.7071068 L13.3338028,14.7495478 C12.2590065,15.5358211 10.9337106,16 9.5,16 C5.91014913,16 3,13.0898509 3,9.5 C3,5.91014913 5.91014913,3 9.5,3 Z M9.5,5 C7.01471863,5 5,7.01471863 5,9.5 C5,11.9852814 7.01471863,14 9.5,14 C11.9852814,14 14,11.9852814 14,9.5 C14,7.01471863 11.9852814,5 9.5,5 Z' />,\n    'Search'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            openSearch: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.state;\n\n        if (openSearch && openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInputRef.current) {\n                    this.searchInputRef.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    handleSearch = () => {\n        if (this.searchInputRef.current) {\n            const innerText = this.searchInputRef.current.innerText;\n            if (innerText) {\n                this.searchInputRef.current.innerText = '';\n\n                const { onSearch } = this.props;\n                if (!onSearch) return;\n\n                onSearch('');\n                return;\n            }\n        }\n\n        const { onCloseSearch } = this.props;\n        const { openSearch } = this.state;\n\n        this.setState({ openSearch: !openSearch });\n\n        if (onCloseSearch) {\n            onCloseSearch();\n        }\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        const { onSearch } = this.props;\n        if (!onSearch) return;\n\n        onSearch(innerText);\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    render() {\n        const { t, title, onClick, onClose, onSearch } = this.props;\n        const { openSearch } = this.state;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <IconButton className='header-left-button' onClick={onClose}>\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{title}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInputRef}\n                                placeholder={t('Search')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                {Boolean(onSearch) && (\n                    <IconButton className='header-right-button' onMouseDown={this.handleSearch}>\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedMediaHeader.propTypes = {\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onCloseSearch: PropTypes.func,\n    onSearch: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport { between, insertByOrder } from '../../../Utils/Common';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { messageComparatorDesc } from '../../../Utils/Message';\nimport { SCROLL_PRECISION, SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaBase.css';\n\nclass SharedMediaBase extends React.Component {\n    getListClassName() {\n        return null;\n    }\n\n    getSearchListClassName() {\n        return null;\n    }\n\n    constructor(props) {\n        if (new.target === SharedMediaBase) {\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\n        }\n\n        // console.log('SharedMediaBase.ctor');\n\n        super(props);\n\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: [],\n            migratedItems: [],\n            searchItems: [],\n            searchMigratedItems: []\n        };\n    }\n\n    hasSearch() {\n        return true;\n    }\n\n    isValidContent(content) {\n        throw new Error('Virtual method isValidContent is not implemented');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, id } = message;\n\n        return (\n            <SharedDocument\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n\n    getSearchFilter() {\n        throw new Error('Virtual method getSearchFilter is not implemented');\n    }\n\n    getHeader() {\n        throw new Error('Virtual method getHeader is not implemented');\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_id, old_content, new_content } = update;\n\n        const message = MessageStore.get(chat_id, message_id);\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\n\n        if (chat_id === chatId) {\n            if (!items.length) return;\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\n\n            const index = items.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\n                } else {\n                    // replace document\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\n                }\n            }\n        } else if (chat_id === migratedChatId) {\n            if (!migratedItems.length) return;\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\n\n            const index = migratedItems.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\n                    });\n                } else {\n                    // replace document\n                    this.setState({\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\n                    });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\n                }\n            }\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { message } = update;\n        const { chat_id } = message;\n\n        if (chat_id !== chatId) return;\n        if (!this.isValidMessage(message)) return;\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n\n        if (chat_id === chatId) {\n            this.setState({ items: [message].concat(items) });\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: [message].concat(migratedItems) });\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_ids } = update;\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        const callback = () => {\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\n                this.onLoadNext(this.params);\n            }\n        };\n\n        if (chat_id === chatId) {\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\n        }\n    };\n\n    loadContent = () => {\n        this.params = {\n            loading: false,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onLoadNext(this.params);\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading } = params;\n\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\n\n        if (loading) return;\n        if (completed) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { messages } = result;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\n\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (params.migrateCompleted) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ migratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onLoadMigratedNext(params, false);\n        }\n    };\n\n    handleScroll = () => {\n        if (!this.listRef) return;\n\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { params } = this;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (params && !params.completed) {\n                this.onLoadNext(params);\n            } else {\n                this.onLoadMigratedNext(params);\n            }\n        }\n    };\n\n    handleHeaderClick = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        list.scrollTop = 0;\n    };\n\n    handleSearchScroll = () => {\n        if (!this.searchListRef) return;\n\n        const list = this.searchListRef.current;\n        if (!list) return;\n\n        const { searchParams } = this;\n        if (!searchParams) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (!searchParams.completed) {\n                this.onSearchNext(searchParams);\n            } else {\n                this.onSearchMigratedNext(searchParams);\n            }\n        }\n    };\n\n    onSearchNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading, query } = params;\n\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\n\n        if (completed) return;\n        if (loading) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (params.completed) {\n            this.onSearchMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onSearchNext(params, false);\n        }\n    };\n\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\n\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onSearchMigratedNext(params, false);\n        }\n    };\n\n    handleSearch = async text => {\n        const query = text ? text.trim() : '';\n        if (!query) {\n            this.handleCloseSearch();\n            return;\n        }\n\n        this.searchParams = {\n            query,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onSearchNext(this.searchParams, true);\n    };\n\n    handleCloseSearch = () => {\n        this.searchParams = null;\n        this.setState({ searchItems: [], searchMigratedItems: [] });\n    };\n\n    isValidMessage = message => {\n        if (!message) return false;\n\n        return this.isValidContent(message.content);\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\n        const { searchParams } = this;\n\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\n\n        return (\n            <>\n                <SharedMediaHeader\n                    title={this.getHeader()}\n                    onClick={this.handleHeaderClick}\n                    onClose={onClose}\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\n                    onCloseSearch={this.handleCloseSearch}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('shared-media-list', this.getListClassName())}\n                    onScroll={this.handleScroll}\n                    style={{ minHeight: popup ? minHeight : null }}>\n                    {messages}\n                </div>\n                {Boolean(searchParams) && (\n                    <div\n                        ref={this.searchListRef}\n                        className={classNames('shared-media-search-list', this.getSearchListClassName())}\n                        onScroll={this.handleSearchScroll}>\n                        {searchMessages}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nSharedMediaBase.propTypes = {};\n\nexport default SharedMediaBase;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedAudios.css';\n\nclass SharedAudios extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterAudio' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('AudioTitle');\n    }\n}\n\nSharedAudios.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedAudios.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedAudios);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedDocuments.css';\n\nclass SharedDocuments extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageDocument';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterDocument' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('DocumentsTitle');\n    }\n}\n\nSharedDocuments.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedDocuments.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedDocuments);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedLinks.css';\n\nclass SharedLinks extends SharedMediaBase {\n    isValidContent(content) {\n        if (!content) return false;\n\n        const { web_page, text } = content;\n        if (web_page) return true;\n        if (!text) return false;\n\n        const { entities } = text;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterUrl' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('LinksTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedLink\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                webPage={content.web_page}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedLinks.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedLinks.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedLinks);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SharedMediaHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport './SharedMedia.css';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeader close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedPhotos.css';\n\nclass SharedPhotos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messagePhoto';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterPhoto' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('PhotosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedPhoto\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                photo={content.photo}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedPhotos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedPhotos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedPhotos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVideos.css';\n\nclass SharedVideos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVideo';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVideo' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VideosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVideo\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                video={content.video}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVideos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVideos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVideos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVoiceNotes.css';\n\nclass SharedVoiceNotes extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVoiceNote' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VoiceTitle');\n    }\n\n    hasSearch() {\n        return false;\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVoiceNote\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                voiceNote={content.voice_note}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVoiceNotes.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVoiceNotes.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVoiceNotes);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedLinks from './SharedMedia/SharedLinks';\nimport SharedMedia from './SharedMedia';\nimport SharedPhotos from './SharedMedia/SharedPhotos';\nimport SharedVideos from './SharedMedia/SharedVideos';\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\nimport { changeChatDetailsVisibility, getChatCounters } from '../../Actions/Chat';\nimport { getPhotoFromChat, getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport { loadProfileMediaViewerContent } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = AppStore;\n\n        this.state = {\n            chatId: popup ? dialogChatId : chatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: null,\n            migratedCounters: null\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent(this.state.chatId);\n\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadContent(chatId);\n        }\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n        if (!isSmallWidth) return;\n\n        const { popup } = this.props;\n        if (popup) return;\n\n        this.handleCloseChatDetails();\n    };\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.sharedAudios = null;\n        this.sharedDocuments = null;\n        this.sharedLinks = null;\n        this.sharedPhotos = null;\n        this.sharedVideos = null;\n        this.sharedVoiceNotes = null;\n\n        this.setState({\n            chatId: update.nextChatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: ChatStore.getCounters(update.nextChatId),\n            migratedCounters: null\n        });\n\n        if (!update.nextChatId) {\n            this.handleCloseChatDetails();\n        }\n    };\n\n    loadContent = chatId => {\n        this.loadChatCounters(chatId);\n        this.loadMigratedCounters(chatId);\n\n        const photo = getPhotoFromChat(chatId);\n        if (!photo) return;\n        loadProfileMediaViewerContent(chatId, [photo]);\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n        ChatStore.setCounters(chatId, counters);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    loadMigratedCounters = async chatId => {\n        if (!isSupergroup(chatId)) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n        if (!fullInfo) return;\n\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\n        if (!basic_group_id) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id,\n            force: true\n        });\n\n        if (!chat) return;\n\n        const counters = await getChatCounters(chat.id);\n        ChatStore.setCounters(chat.id, counters);\n\n        if (this.state.chatId !== chatId) return;\n\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\n    };\n\n    handleOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocuments = () => {\n        this.setState({ openSharedDocuments: true });\n    };\n\n    handleCloseSharedDocuments = () => {\n        this.setState({ openSharedDocuments: false });\n    };\n\n    handleOpenSharedAudios = () => {\n        this.setState({ openSharedAudios: true });\n    };\n\n    handleCloseSharedAudios = () => {\n        this.setState({ openSharedAudios: false });\n    };\n\n    handleOpenSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: true });\n    };\n\n    handleCloseSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: false });\n    };\n\n    handleOpenSharedLinks = () => {\n        this.setState({ openSharedLinks: true });\n    };\n\n    handleCloseSharedLinks = () => {\n        this.setState({ openSharedLinks: false });\n    };\n\n    handleOpenSharedPhotos = () => {\n        this.setState({ openSharedPhotos: true });\n    };\n\n    handleCloseSharedPhotos = () => {\n        this.setState({ openSharedPhotos: false });\n    };\n\n    handleOpenSharedVideos = () => {\n        this.setState({ openSharedVideos: true });\n    };\n\n    handleCloseSharedVideos = () => {\n        this.setState({ openSharedVideos: false });\n    };\n\n    render() {\n        const { className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            migratedChatId,\n            migratedCounters,\n            userChatId,\n            openSharedAudios,\n            openSharedDocuments,\n            openSharedLinks,\n            openSharedMedia,\n            openSharedPhotos,\n            openSharedVideos,\n            openSharedVoiceNotes,\n            openGroupInCommon\n        } = this.state;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedAudios) {\n            this.sharedAudios = this.sharedAudios || (\n                <SharedAudios\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedAudios}\n                />\n            );\n\n            content = this.sharedAudios;\n        } else if (openSharedDocuments) {\n            this.sharedDocuments = this.sharedDocuments || (\n                <SharedDocuments\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocuments}\n                />\n            );\n\n            content = this.sharedDocuments;\n        } else if (openSharedLinks) {\n            this.sharedLinks = this.sharedLinks || (\n                <SharedLinks\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedLinks}\n                />\n            );\n\n            content = this.sharedLinks;\n        } else if (openSharedPhotos) {\n            this.sharedPhotos = this.sharedPhotos || (\n                <SharedPhotos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedPhotos}\n                />\n            );\n\n            content = this.sharedPhotos;\n        } else if (openSharedVideos) {\n            this.sharedVideos = this.sharedVideos || (\n                <SharedVideos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVideos}\n                />\n            );\n\n            content = this.sharedVideos;\n        } else if (openSharedVoiceNotes) {\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\n                <SharedVoiceNotes\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVoiceNotes}\n                />\n            );\n\n            content = this.sharedVoiceNotes;\n        } else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    migratedCounters={migratedCounters}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames('chat-info', { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default ChatInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport {\n    getChatTypingString,\n    getChatDraft,\n    getLastMessageSenderName,\n    getLastMessageContent,\n    showChatDraft, isPrivateChat\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport './DialogContent.css';\n\nclass DialogContent extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateUserChatAction', this.onUpdate);\n        UserStore.on('updateUser', this.onUpdateUser);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateUserChatAction', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateUser = update => {\n        const { chatId } = this.props;\n        const { user } = update;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (isPrivateChat(chatId)) return;\n\n        const { last_message } = chat;\n        if (!last_message) return;\n\n        const { sender } = last_message;\n        if (sender.user_id !== user.id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        let contentControl = null;\n        const typingString = getChatTypingString(chatId);\n        if (typingString) {\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\n        }\n\n        if (!contentControl) {\n            const draft = getChatDraft(chatId);\n            if (showChatDraft(chatId)) {\n                const text = draft.text || '\\u00A0';\n\n                contentControl = (\n                    <>\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\n                        {text}\n                    </>\n                );\n            }\n        }\n\n        if (!contentControl) {\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\n            const senderName = getLastMessageSenderName(chat, t);\n            contentControl = (\n                <>\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\n                    {content}\n                </>\n            );\n        }\n\n        return <div className='dialog-content'>{contentControl}</div>;\n    }\n}\n\nexport default withTranslation()(DialogContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd'>\n        <line x1='10.5' y1='13.5' x2='7' y2='17' id='Path-51' strokeWidth='1.66' strokeLinecap='round' />\n        <path\n            d='M15.2734195,6.29329584 L17.7068554,8.72673178 C18.0977149,9.11759123 18.0977149,9.7512996 17.7068554,10.142159 C17.6489915,10.200023 17.5842494,10.2505721 17.5140791,10.2926743 L15.0747102,11.7562956 C15.5465193,13.1717229 15.0755189,14.5863414 13.661709,16.0001513 L8,10.3384422 C9.41380985,8.92463237 10.8284284,8.45363199 12.2438557,8.92544107 L13.707477,6.48607217 C13.991869,6.01208547 14.6066564,5.85838861 15.0806431,6.14278063 C15.1508135,6.18488284 15.2155555,6.2354319 15.2734195,6.29329584 Z'\n            strokeWidth='1.66'\n            strokeLinecap='round'\n            strokeLinejoin='round'\n        />\n    </g>,\n    'Pin'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport PinIcon from '../../Assets/Icons/Pin';\nimport {\n    isChatMuted,\n    isChatPinned,\n    showChatUnreadCount,\n    showChatUnreadMentionCount\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\nimport './DialogBadge.css';\n\nclass DialogBadge extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, chatList } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatPosition', this.onUpdate);\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.off('updateChatPosition', this.onUpdate);\n        ChatStore.off('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadOutbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n        }\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId, chatList } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { unread_count } = chat;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        const showUnreadMentionCount = showChatUnreadMentionCount(chatId);\n        const showUnreadCount = showChatUnreadCount(chatId);\n        const isMuted = isChatMuted(chatId);\n\n        return (\n            <>\n                {showUnreadMentionCount && (\n                    <div className='dialog-badge'>\n                        <div className='dialog-badge-mention'>@</div>\n                    </div>\n                )}\n                {showUnreadCount && (\n                    <div className={classNames({ 'dialog-badge-muted': isMuted }, 'dialog-badge')}>\n                        <span className='dialog-badge-text'>{unread_count > 0 ? unread_count : ''}</span>\n                    </div>\n                )}\n                {isPinned && !showUnreadCount && !showUnreadMentionCount && (\n                    <div className='dialog-badge-pinned'>\n                        <PinIcon className='dialog-badge-pinned-icon' />\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default DialogBadge;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n        <g transform='translate(-3.000000, 0.000000)' fill='#E53935' fillRule='nonzero'>\n            <path d='M10,0.4 C13.6450793,0.4 16.6,3.35492065 16.6,7 C16.6,10.6450793 13.6450793,13.6 10,13.6 C6.35492065,13.6 3.4,10.6450793 3.4,7 C3.4,3.35492065 6.35492065,0.4 10,0.4 Z M10,9.25 C9.58578644,9.25 9.25,9.58578644 9.25,10 C9.25,10.4142136 9.58578644,10.75 10,10.75 C10.4142136,10.75 10.75,10.4142136 10.75,10 C10.75,9.58578644 10.4142136,9.25 10,9.25 Z M10,2.85 C9.64101491,2.85 9.35,3.14101491 9.35,3.5 L9.35,7.5 C9.35,7.85898509 9.64101491,8.15 10,8.15 C10.3589851,8.15 10.65,7.85898509 10.65,7.5 L10.65,3.5 C10.65,3.14101491 10.3589851,2.85 10,2.85 Z' />\n        </g>\n    </g>,\n    'Error'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd' strokeLinecap='round' strokeLinejoin='round'>\n        <g transform='translate(-3.000000, 0.000000)'>\n            <circle strokeWidth='1.2' cx='10' cy='7' r='6' />\n            <line x1='10' y1='3.5' x2='10' y2='7' strokeWidth='1.3' />\n            <line x1='12' y1='9' x2='10' y2='7' strokeWidth='1.3' />\n        </g>\n    </g>,\n    'Pending'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-4.000000, -2.000000)'\n        d='M7.96833846,10.0490996 L14.5108251,2.571972 C14.7472185,2.30180819 15.1578642,2.27443181 15.428028,2.51082515 C15.6711754,2.72357915 15.717665,3.07747757 15.5522007,3.34307913 L15.4891749,3.428028 L8.48917485,11.428028 C8.2663359,11.6827011 7.89144111,11.7199091 7.62486888,11.5309823 L7.54038059,11.4596194 L4.54038059,8.45961941 C4.2865398,8.20577862 4.2865398,7.79422138 4.54038059,7.54038059 C4.7688373,7.31192388 5.12504434,7.28907821 5.37905111,7.47184358 L5.45961941,7.54038059 L7.96833846,10.0490996 L14.5108251,2.571972 L7.96833846,10.0490996 Z'\n    />,\n    'Sent'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-1.000000, -2.000000)'\n        d='M4.96833846,10.0490996 L11.5108251,2.571972 C11.7472185,2.30180819 12.1578642,2.27443181 12.428028,2.51082515 C12.6711754,2.72357915 12.717665,3.07747757 12.5522007,3.34307913 L12.4891749,3.428028 L5.48917485,11.428028 C5.2663359,11.6827011 4.89144111,11.7199091 4.62486888,11.5309823 L4.54038059,11.4596194 L1.54038059,8.45961941 C1.2865398,8.20577862 1.2865398,7.79422138 1.54038059,7.54038059 C1.7688373,7.31192388 2.12504434,7.28907821 2.37905111,7.47184358 L2.45961941,7.54038059 L4.96833846,10.0490996 L11.5108251,2.571972 L4.96833846,10.0490996 Z M9.96833846,10.0490996 L16.5108251,2.571972 C16.7472185,2.30180819 17.1578642,2.27443181 17.428028,2.51082515 C17.6711754,2.72357915 17.717665,3.07747757 17.5522007,3.34307913 L17.4891749,3.428028 L10.4891749,11.428028 C10.2663359,11.6827011 9.89144111,11.7199091 9.62486888,11.5309823 L9.54038059,11.4596194 L8.54038059,10.4596194 C8.2865398,10.2057786 8.2865398,9.79422138 8.54038059,9.54038059 C8.7688373,9.31192388 9.12504434,9.28907821 9.37905111,9.47184358 L9.45961941,9.54038059 L9.96833846,10.0490996 L16.5108251,2.571972 L9.96833846,10.0490996 Z'\n    />,\n    'Succeeded'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ErrorIcon from '../../Assets/Icons/Error';\nimport PendingIcon from '../../Assets/Icons/Pending';\nimport SentIcon from '../../Assets/Icons/Sent';\nimport SucceededIcon from '../../Assets/Icons/Succeeded';\nimport { isMessageUnread } from '../../Utils/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Status.css';\n\nclass Status extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const sendingState = message ? message.sending_state : null;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                sendingState,\n                unread: isMessageUnread(chatId, messageId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageSend = update => {\n        const { chatId, messageId } = this.props;\n        const { old_message_id, message } = update;\n\n        if (messageId !== old_message_id) return;\n        if (!message) return;\n\n        const { chat_id, id, sending_state } = message;\n        if (chatId !== chat_id) return;\n\n        this.newMessageId = id;\n        this.setState({ sendingState: sending_state });\n    };\n\n    onUpdateChatReadOutbox = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, last_read_outbox_message_id } = update;\n        const { newMessageId } = this;\n\n        if (chatId !== chat_id) return;\n\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    };\n\n    render() {\n        const { sendingState, unread } = this.state;\n        if (!unread) {\n            return <SucceededIcon className='status' viewBox='0 0 17 10' style={{ width: 16, height: 9 }} />;\n        }\n\n        if (sendingState) {\n            return sendingState['@type'] === 'messageSendingStateFailed' ? (\n                <ErrorIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)' }}\n                />\n            ) : (\n                <PendingIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)', stroke: 'currentColor' }}\n                />\n            );\n        }\n\n        return <SentIcon className='status' viewBox='0 0 12 10' style={{ width: 16, height: 9 }} />;\n    }\n}\n\nStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number\n};\n\nexport default Status;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Status from '../Message/Status';\nimport { getLastMessageDate, isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogMeta.css';\n\nclass DialogMeta extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isMe = isMeChat(chatId);\n\n        const { last_message } = chat;\n        if (!last_message) return null;\n\n        const date = getLastMessageDate(chat);\n        if (!date) return null;\n\n        const { id, is_outgoing } = last_message;\n\n        return (\n            <div className='dialog-meta'>\n                {is_outgoing && !isMe && (\n                    <>\n                        <Status chatId={chatId} messageId={id} />\n                        <span> </span>\n                    </>\n                )}\n                {date}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(DialogMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M8.29289322,11.2928932 C8.68341751,10.9023689 9.31658249,10.9023689 9.70710678,11.2928932 L9.70710678,11.2928932 L12,13.5857864 L14.2928932,11.2928932 C14.6834175,10.9023689 15.3165825,10.9023689 15.7071068,11.2928932 C16.0976311,11.6834175 16.0976311,12.3165825 15.7071068,12.7071068 L15.7071068,12.7071068 L12.7071068,15.7071068 C12.3165825,16.0976311 11.6834175,16.0976311 11.2928932,15.7071068 L11.2928932,15.7071068 L8.29289322,12.7071068 C7.90236893,12.3165825 7.90236893,11.6834175 8.29289322,11.2928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Archive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M12.7071068,10.7928932 L15.7071068,13.7928932 C16.0976311,14.1834175 16.0976311,14.8165825 15.7071068,15.2071068 C15.3165825,15.5976311 14.6834175,15.5976311 14.2928932,15.2071068 L12,12.9142136 L9.70710678,15.2071068 C9.31658249,15.5976311 8.68341751,15.5976311 8.29289322,15.2071068 C7.90236893,14.8165825 7.90236893,14.1834175 8.29289322,13.7928932 L11.2928932,10.7928932 C11.6834175,10.4023689 12.3165825,10.4023689 12.7071068,10.7928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Unarchive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z' />,\n    'Pin2'\n);\n\n// <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n// <svg width=\"16px\" height=\"21px\" viewBox=\"0 0 16 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n//     <!-- Generator: Sketch 61.2 (89653) - https://sketch.com -->\n// <title>Combined Shape</title>\n// <desc>Created with Sketch.</desc>\n// <g id=\"Graphics\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n// <g id=\"Graphics-/-Icons-/-Pin\" transform=\"translate(-4.000000, -2.000000)\" fill=\"#707579\" fill-rule=\"nonzero\">\n// <path d=\"M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z\" id=\"Combined-Shape\"></path>\n// </g>\n// </g>\n// </svg>\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g fill='none' stroke='currentColor' strokeWidth='2' strokeLinecap='round' strokeLinejoin='round' transform='translate(4.000000, 3.000000)'>\n        <path d='M4.13956059,4.53516651 L12,13 L1.61342192,13 C1.33727955,13 1.11342192,12.7761424 1.11342192,12.5 C1.11342192,12.3775429 1.15836121,12.2593436 1.23971726,12.1678181 L4.21231156,8.8236495 C4.39586848,8.61714796 4.48580955,8.343905 4.46079545,8.06874991 C4.3180244,6.4982684 4.21094612,5.32040727 4.13956059,4.53516651 Z M14.1483713,1.77635684e-15 C14.4245137,1.77635684e-15 14.6483713,0.223857625 14.6483713,0.5 C14.6483713,0.645962444 14.5845899,0.784637202 14.473767,0.879628301 L12.3083351,2.73571273 C12.1106192,2.90518356 11.9868095,3.14509573 11.9632333,3.40443359 C11.817534,5.00712639 11.7082595,6.209146 11.6354098,7.0104924 L5,1.77635684e-15 L14.1483713,1.77635684e-15 Z M8,13 L8,19 M0,0 L16.5,17'/>\n    </g>,\n    'PinOff'\n);\n\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M3.30352462,2.28241931 C3.6998335,1.89776658 4.33292796,1.90721575 4.71758069,2.30352462 L4.71758069,2.30352462 L21.2175807,19.3035246 C21.6022334,19.6998335 21.5927842,20.332928 21.1964754,20.7175807 C20.8001665,21.1022334 20.167072,21.0927842 19.7824193,20.6964754 L19.7824193,20.6964754 L18.127874,18.9919007 C18.1241295,18.9923786 18.1203785,18.9928359 18.1166211,18.9932723 L18,19 L4,19 C3.23933773,19 2.77101468,18.1926118 3.11084891,17.5416503 L3.16794971,17.4452998 L5,14.6972244 L5,9 C5,7.98873702 5.21529462,7.00715088 5.62359521,6.10821117 L3.28241931,3.69647538 C2.89776658,3.3001665 2.90721575,2.66707204 3.30352462,2.28241931 Z M7.00817933,8.71121787 L7,9 L7,14.6972244 C7,15.0356672 6.91413188,15.3676193 6.75167088,15.6624466 L6.66410059,15.8066248 L5.86851709,17 L16.1953186,16.9999993 L7.16961011,7.7028948 C7.08210009,8.02986218 7.02771758,8.36725335 7.00817933,8.71121787 Z M12,2 C15.7854517,2 18.8690987,5.00478338 18.995941,8.75935025 L19,9 L19,12 C19,12.5522847 18.5522847,13 18,13 C17.4871642,13 17.0644928,12.6139598 17.0067277,12.1166211 L17,12 L17,9 C17,6.23857625 14.7614237,4 12,4 C11.3902636,4 10.7970241,4.10872043 10.239851,4.31831953 C9.72293204,4.51277572 9.14624852,4.25136798 8.95179232,3.734449 C8.75733613,3.21753002 9.01874387,2.6408465 9.53566285,2.4463903 C10.3171048,2.15242503 11.1488212,2 12,2 Z' />,\n    'Mute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M12,2 C15.8659932,2 19,5.13400675 19,9 L19,14.6972244 L20.8320503,17.4452998 C21.2750868,18.1098545 20.7986954,19 20,19 L4,19 C3.20130462,19 2.72491322,18.1098545 3.16794971,17.4452998 L5,14.6972244 L5,9 C5,5.13400675 8.13400675,2 12,2 Z M12,4 C9.23857625,4 7,6.23857625 7,9 L7,14.6972244 C7,15.0920743 6.88312395,15.4780897 6.66410059,15.8066248 L5.86851709,17 L18.1314829,17 L17.3358994,15.8066248 C17.1168761,15.4780897 17,15.0920743 17,14.6972244 L17,9 C17,6.23857625 14.7614237,4 12,4 Z' />,\n    'Unmute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,12 C15.9072418,12 18.715318,13.0364023 20.3351717,15.1788288 C20.7665758,15.7493929 21,16.4451545 21,17.1604559 L21,18.2857143 C21,19.7847729 19.7847729,21 18.2857143,21 L5.71428571,21 C4.21522711,21 3,19.7847729 3,18.2857143 L3,17.160494 C3,16.445199 3.23340019,15.7494497 3.66478123,15.178891 C5.28463457,13.0364199 8.09272555,12 12,12 Z M12,14 C8.66170181,14 6.44476079,14.8182362 5.26012276,16.3850773 C5.09133017,16.6083279 5,16.8805766 5,17.160494 L5,18.2857143 C5,18.6802034 5.31979661,19 5.71428571,19 L18.2857143,19 C18.6802034,19 19,18.6802034 19,18.2857143 L19,17.1604559 C19,16.8805572 18.9086617,16.6083073 18.7398491,16.38504 C17.5552048,14.8182236 15.3382718,14 12,14 Z M12,2 C14.209139,2 16,3.790861 16,6 C16,8.209139 14.209139,10 12,10 C9.790861,10 8,8.209139 8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 C10,7.1045695 10.8954305,8 12,8 C13.1045695,8 14,7.1045695 14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'User'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8,13 C11.3229116,13 13.7530244,13.8337117 15.2223821,15.5699359 C15.724477,16.1632234 16,16.915291 16,17.6925226 L16,18.5 C16,19.8807119 14.8807119,21 13.5,21 L2.5,21 C1.11928813,21 0,19.8807119 0,18.5 L0,17.6925204 C0,16.9152876 0.275524605,16.1632192 0.777621166,15.569932 C2.24697824,13.8337108 4.67709024,13 8,13 Z M17.9515112,14.0335753 L18.0683205,14.0347288 C20.2213596,14.1802785 21.8813904,14.7876525 23.0130897,15.8958397 C23.5916808,16.4623828 23.9388003,17.2206225 23.9926356,18.0235027 L24,18.2434663 L24,18.75 C24,19.940864 23.0748384,20.9156449 21.9040488,20.9948092 L21.75,21 L19,21 C18.4477153,21 18,20.5522847 18,20 C18,19.4871642 18.3860402,19.0644928 18.8833789,19.0067277 L19,19 L21.75,19 C21.8683467,19 21.9674868,18.9177666 21.9933973,18.8073227 L22,18.75 L22,18.2434663 C22,17.8977921 21.8608093,17.5666871 21.6138154,17.3248364 C20.8641159,16.5907126 19.6490875,16.1461566 17.9334244,16.0301743 C17.3823973,15.9929238 16.9658991,15.5160306 17.0031496,14.9650035 C17.0377394,14.4533355 17.4514089,14.0576643 17.9515112,14.0335753 L17.9515112,14.0335753 Z M8,15 C5.21130036,15 3.33538166,15.6435809 2.30428673,16.861943 C2.10781409,17.0940989 2,17.3883868 2,17.6925212 L2,18.5 C2,18.7761424 2.22385763,19 2.5,19 L13.5,19 C13.7761424,19 14,18.7761424 14,18.5 L14,17.6925226 C14,17.3883883 13.8921864,17.0941004 13.6957148,16.8619448 C12.6646202,15.6435815 10.788701,15 8,15 Z M17,5 C18.9329966,5 20.5,6.56700338 20.5,8.5 C20.5,10.4329966 18.9329966,12 17,12 C15.0670034,12 13.5,10.4329966 13.5,8.5 C13.5,6.56700338 15.0670034,5 17,5 Z M8,3 C10.209139,3 12,4.790861 12,7 C12,9.209139 10.209139,11 8,11 C5.790861,11 4,9.209139 4,7 C4,4.790861 5.790861,3 8,3 Z M17,7 C16.1715729,7 15.5,7.67157288 15.5,8.5 C15.5,9.32842712 16.1715729,10 17,10 C17.8284271,10 18.5,9.32842712 18.5,8.5 C18.5,7.67157288 17.8284271,7 17,7 Z M8,5 C6.8954305,5 6,5.8954305 6,7 C6,8.1045695 6.8954305,9 8,9 C9.1045695,9 10,8.1045695 10,7 C10,5.8954305 9.1045695,5 8,5 Z' />,\n    'Group'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.11589252,22.3301061 2,22.0503168 2,21.7585786 L2,6 C2,3.790861 3.790861,2 6,2 L18,2 C20.209139,2 22,3.790861 22,6 L22,15 C22,17.209139 20.209139,19 18,19 L7.41421356,19 Z M4,19.5857864 L6.20502525,17.3807612 C6.44882255,17.1369639 6.77948263,17 7.12426407,17 L18,17 C19.1045695,17 20,16.1045695 20,15 L20,6 C20,4.8954305 19.1045695,4 18,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,19.5857864 Z' />,\n    'Message'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M6,2 L18,2 C20.1421954,2 21.8910789,3.68396847 21.9951047,5.80035966 L22,6 L22,10 C22,10.5522847 21.5522847,11 21,11 C20.4871642,11 20.0644928,10.6139598 20.0067277,10.1166211 L20,10 L20,6 C20,4.9456382 19.1841222,4.08183488 18.1492623,4.00548574 L18,4 L6,4 C4.9456382,4 4.08183488,4.81587779 4.00548574,5.85073766 L4,6 L4,19.5857864 L6.20502525,17.3807612 C6.41399436,17.1717921 6.68678103,17.0413128 6.97757724,17.0082977 L7.12426407,17 L13,17 C13.5522847,17 14,17.4477153 14,18 C14,18.5128358 13.6139598,18.9355072 13.1166211,18.9932723 L13,19 L7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.14536253,22.3595761 2.034957,22.1287566 2.00702113,21.8826983 L2,21.7585786 L2,6 C2,3.85780461 3.68396847,2.10892112 5.80035966,2.00489531 L6,2 L18,2 L6,2 Z M19,12 C21.209139,12 23,13.790861 23,16 C23,18.209139 21.209139,20 19,20 C16.790861,20 15,18.209139 15,16 C15,13.790861 16.790861,12 19,12 Z M19,14 C17.8954305,14 17,14.8954305 17,16 C17,17.1045695 17.8954305,18 19,18 C20.1045695,18 21,17.1045695 21,16 C21,14.8954305 20.1045695,14 19,14 Z' />,\n    'Unread'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport DialogContent from './DialogContent';\nimport DialogBadge from './DialogBadge';\nimport DialogTitle from './DialogTitle';\nimport DialogMeta from './DialogMeta';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport UnarchiveIcon from '../../Assets/Icons/Unarchive';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/PinOff';\nimport MuteIcon from '../../Assets/Icons/Mute';\nimport UnmuteIcon from '../../Assets/Icons/Unmute';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport MessageIcon from '../../Assets/Icons/Message';\nimport UnreadIcon from '../../Assets/Icons/Unread';\nimport {\n    canAddChatToList,\n    canDeleteChat,\n    getDeleteChatTitle,\n    getViewInfoTitle,\n    isChatArchived,\n    isChatMuted,\n    isChatPinned,\n    isChatSecret,\n    isChatUnread,\n    isMeChat,\n    isPrivateChat\n} from '../../Utils/Chat';\nimport {\n    addChatToList,\n    leaveChat,\n    toggleChatIsMarkedAsUnread,\n    toggleChatIsPinned,\n    toggleChatNotificationSettings\n} from '../../Actions/Chat';\nimport { openChat } from '../../Actions/Client';\nimport { viewMessages } from '../../Actions/Message';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialog.css';\n\nclass Dialog extends Component {\n    static contextMenuId;\n\n    constructor(props) {\n        super(props);\n\n        this.dialog = React.createRef();\n\n        const chat = ChatStore.get(this.props.chatId);\n        this.state = {\n            chat,\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t, hidden, isLastPinned, chatList, style } = this.props;\n        const { contextMenu } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] Dialog.shouldUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            // console.log('[vl] Dialog.shouldUpdate true t');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] Dialog.shouldUpdate true hidden');\n            return true;\n        }\n\n        if (nextProps.isLastPinned !== isLastPinned) {\n            // console.log('[vl] Dialog.shouldUpdate true isLastPinned');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.chatList !== chatList) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextProps.style && style && style.top !== nextProps.style.top) {\n            // console.log('[vl] Dialog.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] Dialog.shouldUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelect = event => {\n        if (event.button === 0) {\n            openChat(this.props.chatId);\n        }\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { chatId, chatList } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const contextMenuId = new Date();\n            Dialog.contextMenuId = contextMenuId;\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const isPinned = isChatPinned(chatId, chatList);\n            const canTogglePin = (await this.canPinChats(chatId)) || isPinned;\n            const canToggleArchive = canAddChatToList(chatId);\n            const canMute = !isMeChat(chatId);\n\n            if (Dialog.contextMenuId !== contextMenuId) {\n                return;\n            }\n\n            this.setState({\n                contextMenu: true,\n                canTogglePin,\n                canToggleArchive,\n                canMute,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleMute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        toggleChatNotificationSettings(chatId, !isChatMuted(chatId));\n    };\n\n    canPinChats = async chatId => {\n        const { chatList } = this.props;\n\n        const pinnedSumMaxOption = isChatArchived(chatId)\n            ? OptionStore.get('pinned_archived_chat_count_max')\n            : OptionStore.get('pinned_chat_count_max');\n        if (!pinnedSumMaxOption) return false;\n\n        const isSecret = isChatSecret(chatId);\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: pinnedSumMaxOption.value + 10\n        });\n\n        const pinnedSum = chats.chat_ids.reduce((x, id) => {\n            if (isChatSecret(id) !== isSecret) return x;\n\n            const chat = ChatStore.get(id);\n\n            return x + (chat && isChatPinned(chat.id, chatList) ? 1 : 0);\n        }, 0);\n\n        return pinnedSum < pinnedSumMaxOption.value;\n    };\n\n    handlePin = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, chatList } = this.props;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        if (!isPinned && !this.canPinChats(chatId)) return;\n\n        toggleChatIsPinned(chatId, chatList, !isPinned);\n    };\n\n    handleArchive = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        if (!canAddChatToList(chatId)) return;\n\n        addChatToList(chatId, { '@type': isChatArchived(chatId) ? 'chatListMain' : 'chatListArchive' });\n    };\n\n    handleViewInfo = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        openChat(chatId, null, true);\n    };\n\n    handleRead = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        const isUnread = isChatUnread(chatId);\n        if (isUnread) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return;\n\n            const { is_marked_as_unread, last_message, unread_count } = chat;\n            if (unread_count > 0 && last_message) {\n                viewMessages(chatId, [last_message.id], true);\n            } else if (is_marked_as_unread) {\n                toggleChatIsMarkedAsUnread(chatId, false);\n            }\n        } else {\n            toggleChatIsMarkedAsUnread(chatId, true);\n        }\n    };\n\n    handleDeleteChat = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        leaveChat(chatId)\n    };\n\n    render() {\n        const { chatId, chatList, showSavedMessages, hidden, t, isLastPinned, style } = this.props;\n        const { contextMenu, left, top, canToggleArchive, canTogglePin, canMute } = this.state;\n\n        const deleteChat = canDeleteChat(chatId);\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\n\n        const isPinned = isChatPinned(chatId, chatList);\n        const currentChatId = ApplicationStore.getChatId();\n        const isSelected = currentChatId === chatId;\n        const isMuted = isChatMuted(chatId);\n        const isUnread = isChatUnread(chatId);\n        const isArchived = isChatArchived(chatId);\n        return (\n            <ListItem\n                button\n                className={classNames('dialog', { 'item-selected': isSelected }, { 'dialog-hidden': hidden })}\n                onMouseDown={this.handleSelect}\n                onContextMenu={this.handleContextMenu}\n                style={style}\n                >\n                    <div className='dialog-wrapper'>\n                        <ChatTile chatId={chatId} dialog showSavedMessages={showSavedMessages} showOnline />\n                        <div className='dialog-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} />\n                                <DialogMeta chatId={chatId} />\n                            </div>\n                            <div className='tile-second-row'>\n                                <DialogContent chatId={chatId} />\n                                <DialogBadge chatId={chatId} chatList={chatList} />\n                            </div>\n                        </div>\n                    </div>\n                    <Popover\n                        open={contextMenu}\n                        onClose={this.handleCloseContextMenu}\n                        anchorReference='anchorPosition'\n                        anchorPosition={{ top, left }}\n                        anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'right'\n                        }}\n                        transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'left'\n                        }}\n                        onMouseDown={e => e.stopPropagation()}>\n                        <MenuList onClick={e => e.stopPropagation()}>\n                            {canToggleArchive && (\n                                <MenuItem onClick={this.handleArchive}>\n                                    {isArchived ? (\n                                        <>\n                                            <ListItemIcon>\n                                                <UnarchiveIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('Unarchive')} />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <ListItemIcon>\n                                                <ArchiveIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('Archive')} />\n                                        </>\n                                    )}\n                                </MenuItem>\n                            )}\n                            {canTogglePin && (\n                                <MenuItem onClick={this.handlePin}>\n                                    {isPinned ? (\n                                        <>\n                                            <ListItemIcon>\n                                                <UnpinIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('UnpinFromTop')} />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <ListItemIcon>\n                                                <PinIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('PinToTop')} />\n                                        </>\n                                    )}\n                                </MenuItem>\n                            )}\n                            <MenuItem onClick={this.handleViewInfo}>\n                                <ListItemIcon>\n                                    {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\n                                </ListItemIcon>\n                                <ListItemText primary={getViewInfoTitle(chatId, t)} />\n                            </MenuItem>\n                            { canMute && (\n                                <MenuItem onClick={this.handleMute}>\n                                    {isMuted ? (\n                                        <>\n                                            <ListItemIcon>\n                                                <UnmuteIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('ChatsUnmute')} />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <ListItemIcon>\n                                                <MuteIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('ChatsMute')} />\n                                        </>\n                                    )}\n                                </MenuItem>\n                            )}\n                            <MenuItem onClick={this.handleRead}>\n                                {isUnread ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <MessageIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('MarkAsRead')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnreadIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('MarkAsUnread')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                            {/*{clearHistory && (*/}\n                            {/*    <MenuItem onClick={this.handleClearHistory}>*/}\n                            {/*        <ListItemIcon>*/}\n                            {/*            <BroomIcon />*/}\n                            {/*        </ListItemIcon>*/}\n                            {/*        <ListItemText primary={t('ClearHistory')} />*/}\n                            {/*    </MenuItem>*/}\n                            {/*)}*/}\n                            {deleteChat && deleteChatTitle && (\n                                <MenuItem onClick={this.handleDeleteChat}>\n                                    <ListItemIcon>\n                                        <DeleteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={deleteChatTitle} />\n                                </MenuItem>\n                            )}\n                        </MenuList>\n                    </Popover>\n            </ListItem>\n        );\n    }\n}\n\nDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    chatList: PropTypes.object.isRequired,\n    hidden: PropTypes.bool,\n    showSavedMessages: PropTypes.bool,\n    isLastPinned: PropTypes.bool,\n    style: PropTypes.object\n};\n\nDialog.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withTranslation()(Dialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatTitle } from '../../Utils/Chat';\nimport './DialogPlaceholder.css';\n\nclass DialogPlaceholder extends React.Component {\n    render() {\n        const { chatId, index, showTitle } = this.props;\n\n        let title = null;\n        if (showTitle) {\n            title = getChatTitle(chatId, true);\n        }\n\n        const titleWidth = `${50 + Math.sin(index) * 10}%`;\n        const contentWidth = `${70 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='dialog-placeholder'>\n                <div className='dialog-placeholder-wrapper'>\n                    <div className='dialog-placeholder-tile' />\n                    <div className='dialog-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {showTitle ? (\n                                title\n                            ) : (\n                                <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            )}\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showTitle: PropTypes.bool\n};\n\nexport default DialogPlaceholder;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './VirtualizedList.css';\n\nconst style = {\n    listWrapper: height => ({\n        height,\n        position: 'relative'\n    }),\n    item: (index, height) => ({\n        height,\n        left: 0,\n        right: 0,\n        top: height * index,\n        position: 'absolute'\n    })\n};\n\nexport class VirtualizedList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0,\n            renderIds: new Map(),\n            renderIdsList: [],\n            viewportHeight: 0\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.source !== this.props.source) {\n            this.setViewportHeight();\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return true;\n\n        // const { renderIds } = this.state;\n        // const { renderIds: nextRenderIds } = nextState;\n        //\n        // if (renderIds.size === nextRenderIds.size) {\n        //     renderIds.forEach((value, key) => {\n        //         if (!nextRenderIds.has(key)) {\n        //             return true;\n        //         }\n        //     });\n        //\n        //     return false;\n        // }\n        //\n        // return true;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.setViewportHeight, true);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.addEventListener('scroll', this.setScrollPosition, true);\n\n        this.setViewportHeight();\n    }\n\n    setViewportHeight = () => {\n        const { source } = this.props;\n        const { scrollTop } = this.state;\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const viewportHeight = parseFloat(window.getComputedStyle(current, null).getPropertyValue('height'));\n        const renderIds = this.getRenderIds(source, viewportHeight, scrollTop);\n\n        // console.log('[vl] setViewportHeight');\n        this.setState({ viewportHeight, ...renderIds });\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.setViewportHeight);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.removeEventListener('scroll', this.setScrollPosition);\n    }\n\n    getListRenderIds() {\n        const { renderIds } = this.state;\n\n        return renderIds;\n    }\n\n    setScrollPosition = event => {\n        const { source, rowHeight, onScroll } = this.props;\n        const { viewportHeight, scrollTop } = this.state;\n\n        if (Math.abs(event.target.scrollTop - scrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(source, viewportHeight, event.target.scrollTop);\n\n            this.setState({\n                scrollTop: event.target.scrollTop,\n                ...renderIds\n            });\n        }\n\n        if (onScroll) {\n            onScroll(event);\n        }\n    };\n\n    getListRef() {\n        return this.listRef;\n    }\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { overScanCount, rowHeight } = this.props;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    render() {\n        const { className, source, renderItem, rowHeight } = this.props;\n        const { renderIds } = this.state;\n\n        const items = (source || []).map((item, index) => {\n            return renderIds.has(index) && renderItem({ index, style: style.item(index, rowHeight) });\n        });\n\n        // console.log('[vl] render', source, renderIds);\n\n        return (\n            <div ref={this.listRef} className={classNames('vlist', className)}>\n                <div style={style.listWrapper((source || []).length * rowHeight)}>\n                    {items}\n                </div>\n                {/*<div className='vlist-top-border'/>*/}\n            </div>\n        );\n    }\n}\n\nVirtualizedList.defaultProps = {\n    source: [],\n    rowHeight: 72,\n    overScanCount: 5\n};\n\nVirtualizedList.propTypes = {\n    renderItem: PropTypes.func,\n    onScroll: PropTypes.func,\n    rowHeight: PropTypes.number,\n    className: PropTypes.string,\n    source: PropTypes.array.isRequired,\n    overScanCount: PropTypes.number.isRequired\n};\n\nexport default VirtualizedList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function findLastTextNode(element) {\n    if (element.nodeType === Node.TEXT_NODE) {\n        return element;\n    }\n\n    for (let i = element.childNodes.length - 1; i >= 0; i--) {\n        const textNode = findLastTextNode(element.childNodes[i]);\n        if (textNode) {\n            return textNode;\n        }\n    }\n\n    return null;\n}\n\nexport function focusInput(element) {\n    if (!element) return;\n\n    const textNode = findLastTextNode(element);\n    if (textNode) {\n        const range = document.createRange();\n        range.setStart(textNode, textNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n    }\n\n    element.focus();\n}\n\nexport function scrollTop(element, behavior = 'smooth') {\n    if (!element) return;\n\n    element.scrollTop = Math.min(element.scrollTop, 50);\n    setTimeout(() => {\n        element.scrollTo({ top: 0, behavior });\n    }, 1);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.5,1.6784749 C19.8807119,1.6784749 21,2.79776303 21,4.1784749 L21,19.8215251 C21,20.4013736 20.7984395,20.9631907 20.4298256,21.4107932 C19.552097,22.4766065 17.9765451,22.6290792 16.9107319,21.7513507 L12,17.7064749 L12,19.5 C12,21.0976809 10.75108,22.4036609 9.17627279,22.4949073 L9,22.5 C7.34314575,22.5 6,21.1568542 6,19.5 L6,19.5 L5.99981203,16.8999437 C3.71766536,16.4366008 2,14.4188915 2,12 C2,9.23857625 4.23857625,7 7,7 L11.1412346,7 L16.9107319,2.24864931 C17.3583344,1.88003543 17.9201515,1.6784749 18.5,1.6784749 Z M8,19.5 C8,20.0522847 8.44771525,20.5 9,20.5 C9.55228475,20.5 10,20.0522847 10,19.5 L10,19.5 L10,16.9994749 L8,16.9994749 Z M18.5,3.6784749 C18.3840303,3.6784749 18.2716669,3.71878701 18.1821464,3.79250978 L12.4126491,8.54386047 C12.054567,8.83875158 11.6051134,9 11.1412346,9 L7,9 C5.34314575,9 4,10.3431458 4,12 C4,13.6568542 5.34314575,15 7,15 L11.1412346,15 C11.6051134,15 12.054567,15.1612484 12.4126491,15.4561395 L18.1821464,20.2074902 C18.395309,20.3830359 18.7104194,20.3525414 18.8859651,20.1393787 C18.9596879,20.0498582 19,19.9374948 19,19.8215251 L19,4.1784749 C19,3.90233253 18.7761424,3.6784749 18.5,3.6784749 Z' />,\n    'Channel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4,16 L20,16 C20.5522847,16 21,16.4477153 21,17 C21,17.5128358 20.6139598,17.9355072 20.1166211,17.9932723 L20,18 L4,18 C3.44771525,18 3,17.5522847 3,17 C3,16.4871642 3.38604019,16.0644928 3.88337887,16.0067277 L4,16 L20,16 L4,16 Z M4,11 L20,11 C20.5522847,11 21,11.4477153 21,12 C21,12.5128358 20.6139598,12.9355072 20.1166211,12.9932723 L20,13 L4,13 C3.44771525,13 3,12.5522847 3,12 C3,11.4871642 3.38604019,11.0644928 3.88337887,11.0067277 L4,11 Z M4,6 L20,6 C20.5522847,6 21,6.44771525 21,7 C21,7.51283584 20.6139598,7.93550716 20.1166211,7.99327227 L20,8 L4,8 C3.44771525,8 3,7.55228475 3,7 C3,6.48716416 3.38604019,6.06449284 3.88337887,6.00672773 L4,6 Z' />,\n    'Menu'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M11.9779053,15.294165 C12.6523978,15.294165 13.1985107,15.8124506 13.1985107,16.4732666 C13.1985107,17.1238794 12.6418359,17.6523682 11.9779053,17.6523682 C11.3175981,17.6523682 10.7572998,17.1168932 10.7572998,16.4732666 C10.7572998,15.8194152 11.3070616,15.294165 11.9779053,15.294165 Z M12.3306885,6.9 C14.2795758,6.9 15.719873,7.96860761 15.719873,9.65625 C15.719873,10.6709643 15.2884676,11.3128276 14.2962576,12.0165438 L13.7962596,12.3573922 C13.1714716,12.7953495 12.9391113,13.1198405 12.9391113,13.5887451 L12.9391113,13.7132568 C12.9391113,14.2033083 12.5618823,14.5499512 11.9986572,14.5499512 C11.4068652,14.5499512 11.0789551,14.2281702 11.0789551,13.630249 L11.0789551,13.4953613 C11.0789551,12.5573197 11.487326,11.9745882 12.4189711,11.3276124 L12.7619755,11.0871498 C13.5110635,10.5470305 13.7248291,10.2540011 13.7248291,9.73925781 C13.7248291,8.99900037 13.149745,8.51113281 12.2580566,8.51113281 C11.6278214,8.51113281 11.1498312,8.8062186 10.7980484,9.38963394 L10.5277106,9.73161327 L10.5277106,9.73161327 L10.4428973,9.8298462 C10.2452762,10.0412654 10.0433297,10.1297852 9.70556641,10.1297852 C9.27040611,10.1297852 8.9,9.79174463 8.9,9.31384277 C8.9,9.13743147 8.92867764,8.96536563 8.98734042,8.76592778 C9.31829759,7.6784971 10.623966,6.9 12.3306885,6.9 Z' />,\n    'Help'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.4542714,1 C14.5034049,1 15.447759,1.80035641 15.6254934,2.83409123 L15.8863908,4.35151652 C16.4016786,4.58533298 16.8892685,4.86975342 17.3418997,5.20083722 L18.729489,4.68523838 C19.7215225,4.31661974 20.8874905,4.74674629 21.4093705,5.66596818 L22.3631385,7.34590292 C22.8807104,8.25753682 22.6641696,9.47960173 21.8668015,10.158283 L20.7203437,11.1340925 C20.7523279,11.4263818 20.768775,11.713662 20.768775,12 C20.768775,12.2863013 20.7523321,12.5735444 20.7203561,12.8657949 L21.8666717,13.8411466 C22.6665193,14.5217032 22.8803536,15.7423983 22.3631806,16.6535107 L21.4094127,18.3337799 C20.8871999,19.2537711 19.7186485,19.6823124 18.729489,19.3147616 L17.3418997,18.7991628 C16.8892685,19.1302466 16.4016786,19.414667 15.8863908,19.6484835 L15.6254934,21.1659088 C15.4482371,22.1968626 14.500959,23 13.4542714,23 L11.5464067,23 C10.4973482,23 9.55294448,22.1997516 9.37499917,21.1661206 L9.11371177,19.6483803 C8.59870239,19.4145642 8.11116816,19.1301583 7.65836517,18.7991106 L6.27103566,19.3147347 C5.27906015,19.683419 4.11313098,19.25315 3.59116388,18.3339086 L2.63706709,16.6536394 C2.11936149,15.741903 2.33579039,14.5197379 3.13332831,13.8411466 L4.27990265,12.8655748 C4.24777315,12.5724368 4.23122501,12.2856623 4.23122501,12 C4.23122501,11.7143012 4.24777739,11.4274899 4.27991498,11.1343127 L3.1331985,10.158283 C2.33341387,9.47754488 2.11971252,8.25678535 2.6371093,7.34577419 L3.59120609,5.66583945 C4.11357343,4.74607633 5.28204594,4.31769072 6.27103566,4.68526527 L7.65836517,5.20088944 C8.02060756,4.93605128 8.40507795,4.70106385 8.80806121,4.49794854 L9.11371177,4.35161967 L9.37499917,2.83387942 C9.55246572,1.80302941 10.4997942,1 11.5464067,1 L13.4542714,1 Z M13.4542714,3 L11.5464067,3 C11.4759721,3 11.3587093,3.09940116 11.3460046,3.17319893 L10.9911423,5.23448734 C10.9307198,5.5854636 10.6881938,5.87781899 10.3544182,6.00203275 C9.66471384,6.25870451 9.03276419,6.62813555 8.48454956,7.09507573 C8.20871593,7.3300162 7.82737524,7.39737412 7.48774669,7.2711455 L5.57427032,6.55997006 C5.50662795,6.53482964 5.36908018,6.58525743 5.33030218,6.65353615 L4.37620539,8.3334709 C4.33235155,8.41068695 4.36153792,8.57741281 4.42951339,8.63527025 L5.99467372,9.96745916 C6.26327177,10.1960769 6.39156502,10.5492878 6.3322987,10.8969923 C6.26535074,11.2897637 6.23122501,11.6509097 6.23122501,12 C6.23122501,12.3490903 6.26535074,12.7102363 6.3322987,13.1030077 C6.39157523,13.4507721 6.26322722,13.80404 5.99454391,14.0326513 L4.42938358,15.3643802 C4.36263141,15.4211768 4.33280785,15.5895892 4.3762476,15.6660914 L5.33034439,17.3463606 C5.36962791,17.4155432 5.5053715,17.4656373 5.57427032,17.4400299 L7.48774669,16.7288545 C7.82737524,16.6026259 8.20871593,16.6699838 8.48454956,16.9049243 C9.03276419,17.3718644 9.66471384,17.7412955 10.3544182,17.9979673 C10.6881938,18.122181 10.9307198,18.4145364 10.9911423,18.7655127 L11.3460046,20.8268011 C11.3591616,20.9032262 11.473368,21 11.5464067,21 L13.4542714,21 C13.5246311,21 13.6417446,20.9007069 13.6544151,20.8270129 L14.0088212,18.7657245 C14.0691981,18.4145617 14.3118672,18.1220527 14.6458423,17.9978703 C15.3359969,17.7412494 15.9677081,17.3719578 16.5150513,16.9052644 C16.7908836,16.6700754 17.1723926,16.6025695 17.512181,16.7288276 L19.4261097,17.4400031 C19.4938321,17.4651673 19.631347,17.4147366 19.6700861,17.3464893 L20.623854,15.6662201 C20.6677382,15.5889085 20.6385289,15.422164 20.5706164,15.3643802 L19.0054561,14.0326513 C18.7363402,13.803672 18.6080436,13.4496677 18.6679701,13.1014383 C18.7347206,12.7135552 18.768775,12.3516302 18.768775,12 C18.768775,11.6483698 18.7347206,11.2864448 18.6679701,10.8985617 C18.6080539,10.5503923 18.7362957,10.196445 19.0053263,9.96745916 L20.5704866,8.63527025 C20.6374086,8.57830946 20.6672761,8.40975011 20.6238962,8.33334216 L19.6701283,6.65340742 C19.6309511,6.58440211 19.4952014,6.53432393 19.4261097,6.55999695 L17.512181,7.27117239 C17.1723926,7.39743055 16.7908836,7.32992456 16.5150513,7.09473562 C15.9677081,6.62804223 15.3359969,6.25875055 14.6458423,6.00212967 C14.3118672,5.87794735 14.0691981,5.58543825 14.0088212,5.23427554 L13.6544151,3.17298713 C13.6412929,3.0966658 13.5272352,3 13.4542714,3 Z M12.5,10 C13.6045695,10 14.5,10.8954305 14.5,12 C14.5,13.1045695 13.6045695,14 12.5,14 C11.3954305,14 10.5,13.1045695 10.5,12 C10.5,10.8954305 11.3954305,10 12.5,10 Z' />,\n    'Settings'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass CacheManager {\n    async load(key) {\n        const value = localStorage.getItem(key);\n        if (!value) return null;\n\n        try {\n            return JSON.parse(value);\n        } catch {\n            return null;\n        }\n    }\n\n    async save(key, value) {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n\n    async remove(key) {\n        localStorage.removeItem(key);\n    }\n\n    async clear() {\n        localStorage.clear();\n    }\n}\n\nconst manager = new CacheManager();\nexport default manager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { debounce } from '../Utils/Common';\nimport CacheManager from '../Workers/CacheManager';\nimport BasicGroupStore from './BasicGroupStore';\nimport ChatStore from './ChatStore';\nimport FileStore from './FileStore';\nimport MessageStore from './MessageStore';\nimport OptionStore from './OptionStore';\nimport SupergroupStore from './SupergroupStore';\nimport UserStore from './UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass CacheStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.cacheContacts = false;\n\n        this.reset();\n\n        this.addTdLibListener();\n\n        this.saveInternal = debounce(this.saveInternal, 2000);\n    }\n\n    reset = () => {\n        this.filters = null;\n        this.chatIds = [];\n        this.archiveChatIds = [];\n        this.meChat = null;\n        if (this.cacheContacts) {\n            this.contacts = null;\n        }\n\n        this.cache = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        this.clear();\n                        break;\n                    }\n                    case 'authorizationStateLoggingOut':\n                    case 'authorizationStateWaitCode':\n                    case 'authorizationStateWaitPhoneNumber':\n                    case 'authorizationStateWaitPassword':\n                    case 'authorizationStateWaitRegistration': {\n                        CacheManager.remove('cache');\n                        CacheManager.remove('files');\n                        if (this.cacheContacts) {\n                            CacheManager.remove('contacts');\n                        }\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateDialogsReady': {\n                this.clearDataUrls();\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    async load() {\n        // console.log('[cm] getChats start');\n        const promises = [];\n        promises.push(CacheManager.load('cache').catch(error => null));\n        promises.push(CacheManager.load('files').catch(error => null));\n        promises.push(CacheManager.load('filters').catch(error => null));\n        if (this.cacheContacts) {\n            promises.push(CacheManager.load('contacts').catch(error => null));\n        }\n        let [cache, files, filters, contacts] = await Promise.all(promises);\n\n        let dropCache = false;\n        if (cache && cache.chats) {\n            for (let i = 0; i < cache.chats.length; i++) {\n                const { last_message } = cache.chats[i];\n                if (last_message && last_message.sender_user_id) {\n                    dropCache = true;\n                    break;\n                }\n            }\n        }\n        if (dropCache) {\n            cache = null;\n        }\n\n        this.cache = cache;\n        if (this.cache) {\n            this.cache.files = files || [];\n        }\n\n        if (this.cacheContacts) {\n            if (contacts) {\n                (contacts || []).forEach(x => {\n                    UserStore.set(x);\n                })\n\n                this.contacts = {\n                    '@type': 'users',\n                    user_ids: contacts.map(x => x.id),\n                    total_count: contacts.length\n                };\n            }\n        }\n\n        this.filters = filters;\n\n        if (this.cache) {\n            this.parseCache(this.cache);\n        }\n\n        // console.log('[cm] load', this.filters, filters);\n        return this.cache;\n    }\n\n    parseCache(cache) {\n        if (!cache) return;\n\n        const { meChat, chats, archiveChats, users, basicGroups, supergroups, files, options } = cache;\n        // console.log('[cache] parseCache', cache);\n\n        (files || []).filter(x => Boolean(x)).forEach(({ id, url }) => {\n            FileStore.setDataUrl(id, url);\n        });\n\n        (users || []).forEach(x => {\n            UserStore.set(x);\n        });\n\n        (basicGroups || []).forEach(x => {\n            BasicGroupStore.set(x);\n        });\n\n        (supergroups || []).forEach(x => {\n            SupergroupStore.set(x);\n        });\n\n        (chats || []).concat(archiveChats || []).concat([meChat]).forEach(x => {\n            if (x) {\n                delete x.OutputTypingManager;\n\n                ChatStore.set(x);\n                if (x.photo) {\n                    if (x.photo.small) FileStore.set(x.photo.small);\n                    if (x.photo.big) FileStore.set(x.photo.big);\n                }\n                if (x.position) {\n                    ChatStore.updateChatChatLists(x.id);\n                }\n                if (x.last_message) {\n                    MessageStore.set(x.last_message);\n                }\n            }\n        });\n\n        (options || []).forEach(([id, option]) => {\n            OptionStore.set(id, option);\n        });\n    }\n\n    async getCache(chatIds, archiveChatIds) {\n        const fileMap = new Map();\n        const userMap = new Map();\n        const basicGroupMap = new Map();\n        const supergroupMap = new Map();\n        const meChat = this.meChat;\n        const chats = chatIds.map(x => ChatStore.get(x));\n        const chatMap = new Map(chats.map(x => [x.id, x]));\n        const archiveChats = archiveChatIds.map(x => ChatStore.get(x));\n\n        chats.concat(archiveChats).concat([meChat]).forEach(x => {\n            const { photo, type, last_message } = x;\n            if (photo && photo.small) {\n                const { id } = photo.small;\n                if (id) {\n                    const blob = FileStore.getBlob(id);\n                    if (blob) {\n                        fileMap.set(id, blob);\n                    }\n                }\n            }\n\n            switch (type['@type']) {\n                case 'chatTypeBasicGroup': {\n                    const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                    if (basicGroup) {\n                        basicGroupMap.set(basicGroup.id, basicGroup);\n                    }\n                }\n                case 'chatTypePrivate':\n                case 'chatTypeSecret': {\n                    const user = UserStore.get(type.user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n                case 'chatTypeSupergroup': {\n                    const supergroup = SupergroupStore.get(type.supergroup_id);\n                    if (supergroup) {\n                        supergroupMap.set(supergroup.id, supergroup);\n                    }\n                }\n            }\n\n            if (last_message) {\n                const { sender } = last_message;\n                switch (sender['@type']) {\n                    case 'messageSenderUser': {\n                        const user = UserStore.get(sender.user_id);\n                        if (user) {\n                            userMap.set(user.id, user);\n                        }\n                        break;\n                    }\n                    case 'messageSenderChat': {\n                        const chat = ChatStore.get(sender.chat_id);\n                        if (chat) {\n                            chatMap.set(chat.id, chat);\n                        }\n                        break;\n                    }\n                }\n            }\n        });\n\n        return {\n            date: new Date(),\n            meChat,\n            chats: [...chatMap.values()],\n            archiveChats,\n            users: [...userMap.values()],\n            basicGroups: [...basicGroupMap.values()],\n            supergroups: [...supergroupMap.values()],\n            files: [...fileMap.entries()],\n            options: [...OptionStore.items.entries()]\n        };\n    }\n\n    async save(filters, chatIds, archiveChatIds) {\n        this.chatIds = chatIds;\n        this.archiveChatIds = archiveChatIds;\n        this.meChat = this.meChat || await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: false\n        });\n        if (this.cacheContacts) {\n            this.contacts = this.contacts || await TdLibController.send({\n                '@type': 'getContacts'\n            });\n        }\n        this.filters = filters;\n\n        this.saveInternal();\n    }\n\n    async saveInternal() {\n        // console.log('[cm] saveInternal', this.filters, this.chatIds, this.archiveChatIds);\n        const cache = await this.getCache(this.chatIds, this.archiveChatIds);\n        const files = cache.files;\n        cache.files = [];\n        // console.log('[cm] save cache', cache);\n        await CacheManager.save('cache', cache);\n\n        const promises = [];\n        files.forEach(x => {\n            const [id, blob] = x;\n            promises.push(\n                new Promise((resolve, reject) => {\n                    const fileReader = new FileReader();\n                    fileReader.readAsDataURL(blob);\n                    fileReader.onload = e => {\n                        resolve({ id, url: e.target.result });\n                    };\n                    fileReader.onerror = e => {\n                        resolve(null);\n                    };\n                })\n            );\n        });\n        // console.log('[cm] save files start', files);\n        const results = await Promise.all(promises);\n        // console.log('[cm] save files', results);\n        await CacheManager.save('files', results);\n\n        if (this.cacheContacts) {\n            const contacts = this.contacts.user_ids.map(x => UserStore.get(x));\n            await CacheManager.save('contacts', contacts);\n        }\n\n        if (this.filters) {\n            await CacheManager.save('filters', this.filters);\n        }\n    }\n\n    clear() {\n        const promises = [];\n        promises.push(CacheManager.remove('cache').catch(error => null));\n        promises.push(CacheManager.remove('files').catch(error => null));\n        promises.push(CacheManager.remove('filters').catch(error => null));\n        promises.push(CacheManager.remove('contacts').catch(error => null));\n        promises.push(CacheManager.remove('register').catch(error => null));\n\n        Promise.all(promises)\n    }\n\n    clearDataUrls() {\n        if (this.cache) {\n            const { files } = this.cache;\n\n            files.forEach(({ id, url }) => {\n                FileStore.deleteDataUrl(id);\n            });\n        }\n    }\n}\n\nconst store = new CacheStore();\nwindow.cache = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport ChannelIcon from '../../Assets/Icons/Channel';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MenuIcon from '../../Assets/Icons/Menu';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport HelpIcon from '../../Assets/Icons/Help';\nimport SavedIcon from '../../Assets/Icons/Saved';\nimport SettingsIcon from '../../Assets/Icons/Settings';\nimport UserIcon from '../../Assets/Icons/User';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { openArchive, openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            anchorEl: null,\n            isSmallWidth: AppStore.isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        //await update();\n    };\n\n    handleNewChannel = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: true\n        });\n    };\n\n    handleNewGroup = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: true\n        });\n    };\n\n    handleContacts = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: true\n        });\n    };\n\n    handleArchived = event => {\n        this.handleMenuClose();\n\n        openArchive();\n    };\n\n    handleSaved = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        openChat(chat.id);\n    };\n\n    handleSettings = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: true,\n            chatId: chat.id\n        });\n    };\n\n    handleHelp = async event => {\n        this.handleMenuClose();\n        // unregister();\n    };\n\n    handleSearch = () => {\n        this.handleMenuClose();\n\n        searchChat(0);\n    };\n\n    render() {\n        const { t, timeout, popup, showClose, onClose } = this.props;\n        const { anchorEl, authorizationState, isSmallWidth } = this.state;\n\n        const mainMenuControl =\n            !showClose && isAuthorizationReady(authorizationState) ? (\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left'\n                    }}>\n                    <MenuItem onClick={this.handleNewChannel}>\n                        <ListItemIcon>\n                            <ChannelIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewChannel')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleNewGroup}>\n                        <ListItemIcon>\n                            <GroupIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewGroup')} />\n                    </MenuItem>\n                    { isSmallWidth && (\n                        <MenuItem onClick={this.handleSearch}>\n                            <ListItemIcon>\n                                <SearchIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Search')} />\n                        </MenuItem>\n                    )}\n                    <MenuItem onClick={this.handleContacts}>\n                        <ListItemIcon>\n                            <UserIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Contacts')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleArchived}>\n                        <ListItemIcon>\n                            <ArchiveIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Archived')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSaved}>\n                        <ListItemIcon>\n                            <SavedIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Saved')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSettings}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Settings')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleHelp}>\n                        <ListItemIcon>\n                            <HelpIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('SettingsHelp')} />\n                    </MenuItem>\n                </Menu>\n            ) : null;\n\n        const closeIcon = popup\n            ? <CloseIcon/>\n            : <ArrowBackIcon/>;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-left-button main-menu-button'\n                    aria-label='Menu'\n                    onClick={showClose ? onClose : this.handleMenuOpen}>\n                    { timeout\n                        ? (<SpeedDialIcon open={showClose} openIcon={<ArrowBackIcon />} icon={<MenuIcon />} />)\n                        : (<>{showClose ? closeIcon : <MenuIcon />}</>)\n                    }\n\n                </IconButton>\n                {mainMenuControl}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport './SearchInput.css';\n\nclass SearchInput extends React.Component {\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        } else if (event.keyCode === 27) {\n            const { onChange, onClose } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n\n            if (element.innerText) {\n                event.stopPropagation();\n                event.nativeEvent.stopImmediatePropagation();\n\n                element.innerText = null;\n                if (onChange) onChange(element.innerText);\n                return;\n            }\n\n            if (onClose) {\n                onClose(event);\n            }\n        } else if (event.keyCode === 8) {\n            const { onBackspace } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n            if (element.innerText) return;\n\n            if (onBackspace) {\n                event.stopPropagation();\n                onBackspace();\n            }\n        }\n    };\n\n    handleKeyUp = event => {\n        const element = event.target;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = event => {\n        const { onChange } = this.props;\n\n        const element = event.target;\n        if (!element) return;\n\n        if (onChange) {\n            onChange(element.innerText);\n        }\n    };\n\n    render() {\n        const { inputRef, t, onFocus, hint, showIcon } = this.props;\n\n        return (\n            <div className='search-input'>\n                <div\n                    id='search-inputbox'\n                    ref={inputRef}\n                    placeholder={hint || t('Search')}\n                    contentEditable\n                    suppressContentEditableWarning\n                    onKeyDown={this.handleKeyDown}\n                    onKeyUp={this.handleKeyUp}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                    onFocus={onFocus}\n                />\n                {showIcon && <SearchIcon className='search-input-icon' />}\n            </div>\n        );\n    }\n}\n\nSearchInput.propTypes = {\n    inputRef: PropTypes.object,\n    hint: PropTypes.string,\n    showIcon: PropTypes.bool,\n    onBackspace: PropTypes.func,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nSearchInput.defaultProps = {\n    showIcon: true\n}\n\nexport default withTranslation()(SearchInput);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MainMenuButton from './MainMenuButton';\nimport SearchInput from './Search/SearchInput';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport '../ColumnMiddle/Header.css';\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    setInitQuery(query) {\n        const { onSearchTextChange } = this.props;\n\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.innerText = query;\n            if (searchInput.childNodes.length > 0) {\n                const range = document.createRange();\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\n                range.collapse(true);\n\n                const selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            searchInput.focus();\n            onSearchTextChange(query);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.props;\n\n        if (openSearch !== prevProps.openSearch) {\n            if (openSearch) {\n                this.focusInput();\n            } else {\n                const searchInput = this.searchInputRef.current;\n                if (searchInput) {\n                    searchInput.innerText = null;\n                }\n            }\n        }\n    }\n\n    focusInput() {\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.focus();\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.popup) {\n            this.focusInput();\n        }\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleSearchTextChange = () => {\n        const { onSearchTextChange } = this.props;\n\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        onSearchTextChange(innerText);\n    };\n\n    handleCloseSearch = () => {\n        this.handleSearch();\n    };\n\n    handleFocus = () => {\n        this.handleSearch();\n    };\n\n    render() {\n        const { openSearch, timeout, popup } = this.props;\n\n        let content = null;\n        let showBack = false;\n        if (openSearch) {\n            showBack = true;\n            content = (\n                <SearchInput\n                    inputRef={this.searchInputRef}\n                    onChange={this.handleSearchTextChange}\n                    onClose={this.handleCloseSearch}\n                />\n            );\n        } else {\n            content = <SearchInput inputRef={this.searchInputRef} onFocus={this.handleFocus} />;\n        }\n\n        return (\n            <div className='header-master'>\n                <MainMenuButton timeout={timeout} showClose={showBack} popup={popup} onClose={this.handleCloseSearch} />\n                {content}\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired,\n    timeout: PropTypes.bool,\n    popup: PropTypes.bool\n};\n\nexport default DialogsHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport Animator from '../../Utils/Animatior';\nimport { clamp, getFirstLetter, throttle } from '../../Utils/Common';\nimport { openChatList } from '../../Actions/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './Filters.css';\n\nclass Filters extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        const { isSmallWidth } = AppStore;\n        const { filters, chatList } = FilterStore;\n\n        this.state = {\n            isSmallWidth,\n            filters,\n            chatList\n        };\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n\n        this.setSelection();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n    }\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onClientUpdateLanguageChange = update => {\n        if (!this.hasObserver()) this.setSelection(false);\n    };\n\n    onClientUpdateCacheLoaded = update => {\n        const { filters } = this.state;\n        if (filters) return;\n\n        const { filters: cachedFilters } = CacheStore;\n        if (!cachedFilters) return;\n\n        this.setState({\n            filters: cachedFilters\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = AppStore;\n        this.setState({\n            isSmallWidth\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { chatList, filters, isSmallWidth } = this.state;\n\n        const scroll = this.filtersRef.current;\n        const padding = 3;\n\n        let item = null;\n        let left = 9;\n        if (chatList['@type'] === 'chatListMain') {\n            const main = this.filterRef.get('chatListMain');\n            if (main){\n                item = main.firstChild;\n                left = item.offsetLeft;\n            }\n        } else if (chatList['@type'] === 'chatListFilter') {\n            for (let i = 0; i < filters.length; i++) {\n                const filter = this.filterRef.get('chatListFilter_id=' + filters[i].id);\n                if (filters[i].id === chatList.chat_filter_id) {\n                    item = filter.firstChild;\n                    left = item.offsetLeft;\n                    break;\n                }\n            }\n        }\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    onUpdateChatFilters = update => {\n        const { chatList } = this.state;\n        const { filters } = FilterStore;\n\n        this.setState({\n            filters\n        }, () => {\n            if (chatList['@type'] === 'chatListFilter' && filters.findIndex(x => x.id === chatList.chat_filter_id) === -1) {\n                this.handleMainClick();\n            } else {\n                if (!this.hasObserver()) this.setSelection();\n            }\n        });\n    };\n\n    onClientUpdateChatList = update => {\n        const { chatList } = FilterStore;\n\n        this.setState({\n            chatList\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    handleMainClick = event => {\n        if (event && event.button !== 0) return;\n\n        openChatList({ '@type': 'chatListMain' });\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n\n        openChatList({ '@type': 'chatListFilter', chat_filter_id: id });\n    };\n\n    handleWheel = event => {\n        if (!event.deltaY) {\n            return;\n        }\n\n        event.currentTarget.scrollLeft += event.deltaY;\n        event.stopPropagation();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { filters, chatList, isSmallWidth } = this.state;\n\n        if (!filters) return null;\n        if (!filters.length) return null;\n\n        this.filterRef = new Map();\n        return (\n            <div className='tabs'>\n                <div className='tabs-bottom-border'/>\n                <div ref={this.filtersRef} className='filters' onWheel={this.handleWheel}>\n                    <div\n                        ref={r => this.filterRef.set('chatListMain', r)}\n                        className={classNames('filter', { 'item-selected': chatList['@type'] === 'chatListMain'})}\n                        onMouseDown={this.handleMainClick}\n                        title={isSmallWidth ? t('FilterAllChats') : null}>\n                        <span>{isSmallWidth ? getFirstLetter(t('FilterAllChats')) : t('FilterAllChats')}</span>\n                    </div>\n                    {filters.map(x => (\n                        <div\n                            key={x.id}\n                            ref={r => this.filterRef.set('chatListFilter_id=' + x.id, r)}\n                            className={classNames('filter', { 'item-selected': chatList.chat_filter_id === x.id})}\n                            onMouseDown={e => this.handleFilterClick(e, x.id)}\n                            title={isSmallWidth ? x.title : null}>\n                            <span>{isSmallWidth ? getFirstLetter(x.title) : x.title}</span>\n                        </div>))}\n                    <div ref={this.filterSelectionRef} className='filter-selection'/>\n                </div>\n            </div>\n        );\n    }\n}\n\nFilters.propTypes = {\n\n};\n\nexport default withTranslation()(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '../Tile/Dialog';\nimport DialogPlaceholder from '../Tile/DialogPlaceholder';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { isAuthorizationReady, orderCompare } from '../../Utils/Common';\nimport { scrollTop } from '../../Utils/DOM';\nimport { chatListEquals, getChatOrder, hasChatList, isChatMember, isChatPinned, positionListEquals } from '../../Utils/Chat';\nimport { CHAT_SLICE_LIMIT, SCROLL_CHATS_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './DialogsList.css';\nimport FilterStore from '../../Stores/FilterStore';\nimport DialogsHeader from './DialogsHeader';\nimport Filters from './Filters';\n\nclass DialogListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, chatList, style, hidden } = this.props;\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            // console.log('[vl] UserListItem.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] UserListItem.shouldUpdate false', nextProps, this.props);\n        return false;\n    }\n\n    render() {\n        const { chatId, chatList, hidden, style } = this.props;\n\n        return (\n            <div className='dialog-list-item' style={style}>\n                <Dialog chatId={chatId} chatList={chatList} hidden={hidden} />\n            </div>\n        );\n    }\n}\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        window._m = new Map();\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        const { authorizationState } = AppStore;\n\n        this.state = {\n            authorizationState,\n            chats: null,\n            fistSliceLoaded: false,\n            chatList: props.type === 'chatListMain' ? { '@type': 'chatListMain' } : { '@type': 'chatListArchive' },\n            params: {\n                loading: false,\n                completed: false\n            }\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, open, showArchive, archiveTitle, items, cacheItems } = this.props;\n        const { chats, chatList } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        if (nextProps.items !== items) {\n            return true;\n        }\n\n        if (nextProps.cacheItems !== cacheItems) {\n            return true;\n        }\n\n        if (nextProps.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextProps.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.chats !== chats) {\n            return true;\n        }\n\n        // if (nextState.chatList !== chatList) {\n        //     return true;\n        // }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n        if (!list) return { scrollTop: 0 };\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.on('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.off('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    onClientUpdateChatList = update => {\n        const { chatList } = update;\n\n        if (chatListEquals(this.state.chatList, chatList)) {\n            this.scrollToTop();\n        } else {\n            this.setState({\n                chatList,\n                params: {\n                    loading: false,\n                    completed: false\n                }\n            }, () => {\n                this.loadFirstSlice();\n            });\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        // const { supegroup, prevSupergroup } = update;\n        //\n        // if (!hasLeftSupergroup(supegroup, prevSupergroup)) {\n        //     return;\n        // }\n\n\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { inProgress, chatId } = update;\n\n        if (inProgress) {\n            this.hiddenChats.set(chatId, chatId);\n        } else {\n            this.hiddenChats.delete(chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state: authorizationState } = update;\n\n        this.setState({ authorizationState }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        await FileStore.initDB(() => this.onLoadNext(true));\n    };\n\n    saveCache = () => {\n        const { onSaveCache, type } = this.props;\n        const { chatList } = this.state;\n        if (type !== 'chatListMain') return;\n        if (chatList['@type'] !== 'chatListMain') return;\n\n        if (onSaveCache) onSaveCache();\n    };\n\n    onUpdateChatPosition = update => {\n        const { chatList } = this.state;\n        const { position } = update;\n\n        if (!chatListEquals(chatList, position.list)) {\n            return;\n        }\n\n        this.onUpdateChatOrder(update);\n    };\n\n    onUpdateChatOrder = update => {\n        const { chats, chatList, params } = this.state;\n        if (!chats) return;\n\n        const { loading } = params;\n        if (loading && !chats.length) return;\n\n        const { chat_id } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat) {\n            return;\n        }\n\n        if (!hasChatList(chat_id, chatList)) {\n            return;\n        }\n\n        const order = getChatOrder(chat_id, chatList);\n        const currentIndex = chats.findIndex(x => x === chat_id);\n        if (currentIndex === -1 && order === '0') {\n            return;\n        }\n\n        const chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            const chat = ChatStore.get(chats[i]);\n            const chatOrder = getChatOrder(chats[i], chatList);\n            if (chat && chatOrder !== '0') {\n                chatIds.push(chat.id);\n            }\n        }\n\n        const newChatIds = [];\n        if (order === '0') {\n            // unselect deleted chat\n            if (chat_id === AppStore.getChatId() && !chat.last_message) {\n                TdLibController.setChatId(0);\n                changeChatDetailsVisibility(false);\n            }\n        } else {\n            if (currentIndex === -1) {\n                if (loading) {\n                    console.error(`[vl] skip ${update['@type']}`, { id: chat_id, title: ChatStore.get(chat_id).title, chat: ChatStore.get(chat_id) });\n                    window._m.set(chat_id, chat_id);\n                    // TODO: check and add if within loaded part\n                } else {\n                    newChatIds.push(chat_id);\n                }\n            }\n        }\n\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n            this.saveCache();\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const { chatList } = this.state;\n\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(getChatOrder(b, chatList), getChatOrder(a, chatList));\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            if (callback) callback();\n            return;\n        }\n\n        // console.log('[vl] reorderChats', orderedChatIds);\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        // console.log('[vl] onScroll');\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const list = current.getListRef().current;\n        if (!list) return;\n\n        // console.log(`[vl] onScroll [scrollTop, offsetHeight, scrollHeight] = [${list.scrollTop}, ${list.offsetHeight}, ${list.scrollHeight}]`, list.scrollTop + list.offsetHeight, (list.scrollHeight - SCROLL_CHATS_PRECISION));\n        if (list.scrollTop <= SCROLL_CHATS_PRECISION) {\n            this.onLoadPrev();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - list.offsetHeight) {\n            // console.log(`[vl] onScroll onLoadNext`);\n            this.onLoadNext();\n        }\n    };\n\n    onLoadPrev() {\n\n    }\n\n    async onLoadNext(replace = false, limit = CHAT_SLICE_LIMIT) {\n        const { type } = this.props;\n        const { chats, chatList, params } = this.state;\n\n        // console.log('[folders] onLoadNext', chatList, limit);\n        if (params.loading) {\n            // console.log('[folders] onLoadNext cancel loading', chatList);\n            return;\n        }\n\n        if (params.completed) {\n            // console.log('[folders] onLoadNext cancel loaded', chatList);\n            return;\n        }\n\n        let offsetOrder = '9223372036854775807'; // 2^63 - 1\n        let offsetChatId = 0;\n        let offsetChat = null;\n        if (!replace && chats && chats.length > 0) {\n            offsetChat = ChatStore.get(chats[chats.length - 1]);\n            if (offsetChat) {\n                offsetOrder = getChatOrder(offsetChat.id, chatList);\n                offsetChatId = offsetChat.id;\n            }\n        }\n\n        if (type === 'chatListMain') console.log('[vl] GETCHATS start', type, offsetOrder, offsetChatId, offsetChat);\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_chat_id: offsetChatId,\n            offset_order: offsetOrder,\n            limit: CHAT_SLICE_LIMIT\n        }).finally(() => {\n            params.loading = false;\n            if (replace) {\n                TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady', list: chatList });\n            }\n        });\n        if (type === 'chatListMain') console.log('[vl] GETCHATS stop', replace, type, result);\n\n        if (params !== this.state.params) {\n            // console.log('[folders] onLoadNext cancel', chatList);\n            return;\n        }\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        params.completed = !result.chat_ids.length;\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => {\n                this.loadChatContents(result.chat_ids);\n                this.saveCache();\n\n                if (result.chat_ids.length < CHAT_SLICE_LIMIT) {\n                    this.onLoadNext(false, CHAT_SLICE_LIMIT - result.chat_ids.length);\n                }\n\n                const list = this.listRef.current.getListRef().current;\n                if (!list) return;\n                list.scrollTop = 0;\n            });\n        } else {\n            // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\n            this.appendChats(result.chat_ids, () => {\n                // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\n                this.loadChatContents(result.chat_ids);\n\n                if (result.chat_ids.length && result.chat_ids.length < limit) {\n                    this.onLoadNext(false, limit - result.chat_ids.length);\n                }\n            });\n        }\n    }\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    appendChats(chatIds, callback) {\n        if (chatIds.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const { chats } = this.state;\n\n        const newChats = (chats || []).concat(chatIds);\n        this.setState({ chats: newChats }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current.getListRef().current;\n\n        scrollTop(list);\n    }\n\n    renderItem = ({ index, style }, source) => {\n        const { chatList } = this.state;\n        const x = source[index];\n\n        return <DialogListItem key={x} chatId={x} chatList={chatList} hidden={this.hiddenChats.has(x)} style={style} />;\n\n        // return <Dialog key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />\n    };\n\n    render() {\n        const { open, cacheItems, showArchive, archiveTitle } = this.props;\n        const { chats, chatList } = this.state;\n\n        // console.log('[dl] render', type, open, chats, cacheChats);\n        if (!open) return null;\n\n        this.source = [];\n        let dialogs = null;\n        if (chats) {\n            let lastPinnedId = 0;\n            chats.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = chats;\n        } else if (cacheItems) {\n            let lastPinnedId = 0;\n            cacheItems.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = cacheItems.map(x => x.id);\n            // dialogs = cacheItems.map(x => (\n            //     <Dialog\n            //         key={x.id}\n            //         chatId={x.id}\n            //         isLastPinned={x === lastPinnedId}\n            //         hidden={this.hiddenChats.has(x.id)}\n            //     />\n            // ));\n        } else {\n            if (chatList['@type'] === 'chatListMain') {\n                dialogs = Array.from(Array(10)).map((x, index) => <DialogPlaceholder key={index} index={index} />);\n            }\n        }\n\n        window._chats = chats;\n        window._c = new Map((chats || []).map(i => [i, i]));\n        const ids = [];\n        window._m.forEach((value, key) => {\n            if (!window._c.has(key)) {\n                ids.push(key);\n            }\n        });\n        console.log('[vl] render', (chats || []).length, window._c.size, window._m.size, ids.length,\n            //ids.map(x => ChatStore.get(x))\n        );\n\n        return (\n            <VirtualizedList\n                ref={this.listRef}\n                className='dialogs-list'\n                source={this.source}\n                rowHeight={76}\n                overScanCount={20}\n                renderItem={x => this.renderItem(x, this.source)}\n                onScroll={this.handleScroll}\n            />\n        );\n    }\n}\n\nDialogsList.propTypes = {\n    type: PropTypes.oneOf(['chatListMain', 'chatListArchive']).isRequired,\n    showArchive: PropTypes.bool,\n    archiveTitle: PropTypes.string,\n    cacheItems: PropTypes.array,\n    items: PropTypes.array\n};\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport DialogsList from './DialogsList';\n\nclass Archive extends React.Component {\n    handleClick = () => {\n        const { innerListRef } = this.props;\n        if (!innerListRef) return;\n\n        const { current: list } = innerListRef;\n        if (!list) return;\n\n        list.scrollToTop();\n    };\n\n    render() {\n        const { t, innerListRef, items, cacheItems, onClose } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button main-menu-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer' onClick={this.handleClick}>\n                        <span className='header-status-content'>{t('ArchivedChats')}</span>\n                    </div>\n                </div>\n                <div className='dialogs-content'>\n                    <DialogsList\n                        type='chatListArchive'\n                        ref={innerListRef}\n                        cacheItems={cacheItems}\n                        open={true}\n                        items={items}\n                    />\n                </div>\n            </>\n        );\n    }\n}\n\nArchive.propTypes = {};\n\nexport default withTranslation()(Archive);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nclass TopChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { chatId, onSelect, showSavedMessages, t } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages, t);\n\n        return (\n            <>\n                <ListItem button className='top-chat' onClick={onSelect} onContextMenu={this.handleContextMenu}>\n                    <ChatTile dialog chatId={chatId} showSavedMessages={showSavedMessages} showOnline />\n                    <div className='top-chat-title'>{shortTitle}</div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Chat from './Chat';\nimport './RecentlyFoundChat.css';\n\nclass RecentlyFoundChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { t, chatId, onClick } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        return (\n            <>\n                <ListItem\n                    button\n                    className='recently-found-chat'\n                    onClick={onClick}\n                    onContextMenu={this.handleContextMenu}>\n                    <Chat chatId={chatId} />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from './Chat';\nimport { getChatUsername } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick } = this.props;\n        const { nextChatId: selectedChatId } = this.state;\n\n        const username = getChatUsername(chatId);\n\n        return (\n            <ListItem\n                button\n                className={classNames('found-public-chat', { 'item-selected': chatId === selectedChatId })}\n                onClick={onClick}>\n                <div className='found-public-chat-wrapper'>\n                    <Chat chatId={chatId} subtitle={username ? '@' + username : null} />\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default FoundPublicChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './FoundMessage.css';\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            nextMessageId: AppStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message, t);\n        const senderFullName = getMessageSenderFullName(message, t);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile =\n            sender.user_id && chatSearch ? (\n                <UserTile userId={sender.user_id} dialog />\n            ) : (\n                <ChatTile chatId={chatId} dialog />\n            );\n\n        return (\n            <ListItem button className={classNames('found-message', { 'item-selected': selected })} onClick={onClick}>\n                <div className='dialog-wrapper'>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} />\n                            )}\n                            <div className='dialog-meta'>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-content'>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './SectionHeader.css';\n\nfunction SectionHeader({ command, multiline, onClick, children }) {\n    return (\n        <div className='section-header'>\n            <div className={classNames('section-header-title', { 'section-header-title-multiline': multiline })}>{children}</div>\n            {Boolean(command) && <a onClick={onClick}>{command}</a>}\n        </div>\n    );\n}\n\nSectionHeader.propTypes = {\n    command: PropTypes.string,\n    multiline: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default SectionHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../../Additional/KeyboardManager';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chat from '../../Tile/Chat';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SectionHeader from '../SectionHeader';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { getChatOrder } from '../../../Utils/Chat';\nimport { modalManager } from '../../../Utils/Modal';\nimport { SCROLL_PRECISION, USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n        this.listRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const { text } = this.props;\n\n        this.searchOrLoadContent(text);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                event.preventDefault();\n                event.stopPropagation();\n                event.target.blur();\n\n                this.handleClose();\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.searchOrLoadContent(text);\n        } else if (prevProps.chatId !== chatId) {\n            this.searchOrLoadContent(text);\n        }\n    }\n\n    searchOrLoadContent(text) {\n        const trimmedText = text ? text.trim() : '';\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    }\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n            for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(getChatOrder(b), getChatOrder(a));\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        // console.log('[se] searchText=' + text);\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        let linkMessage = null;\n        if (!chatId) {\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: text\n                });\n                // console.log('[se] searchText=' + text + ' messageLinkInfo', messageLinkInfo);\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                linkMessage = messageLinkInfo;\n            } catch (error) {\n                console.log('[se] searchText=' + text + ' messageLinkInfo error', error);\n            }\n        }\n\n        // console.log('[se] searchText=' + text + ' result', messages, linkMessage);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        // console.log('[se] searchText=' + text + ' result session', messages, linkMessage);\n\n        this.setState({\n            messages,\n            linkMessage\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender.user_id) {\n                users.set(messages.messages[i].sender.user_id, messages.messages[i].sender.user_id);\n            }\n        }\n\n        if (linkMessage) {\n            const { chat_id, message } = linkMessage;\n\n            chats.set(chat_id, chat_id);\n            if (message) {\n                const { sender } = message;\n                if (sender && sender.user_id) {\n                    users.set(sender.user_id, sender.user_id);\n                }\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null,\n                linkMessage: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top,\n            recentlyFound,\n            savedMessages,\n            local: null,\n            global: null,\n            messages: null,\n            linkMessage: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender.user_id) {\n                users.set(result.messages[i].sender.user_id, result.messages[i].sender.user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    handleDeleteRecentlyFoundChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeRecentlyFoundChat',\n            chat_id: chatId\n        });\n\n        const { recentlyFound } = this.state;\n        if (!recentlyFound) return;\n\n        this.setState({\n            recentlyFound: { ...recentlyFound, chat_ids: recentlyFound.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    handleDeleteTopChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeTopChat',\n            chat_id: chatId,\n            category: {\n                '@type': 'topChatCategoryUsers'\n            }\n        });\n\n        const { top } = this.state;\n        if (!top) return;\n\n        this.setState({\n            top: { ...top, chat_ids: top.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { top, recentlyFound, local, global, messages, linkMessage } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat\n                          key={x}\n                          chatId={x}\n                          onSelect={() => this.handleSelectMessage(x, null, false, false)}\n                          onDelete={() => this.handleDeleteTopChat(x)}\n                      />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                          onDelete={() => this.handleDeleteRecentlyFoundChat(x)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChatsMap = new Map();\n        const globalChats = global\n            ? global.map(x => {\n                  globalChatsMap.set(x, x);\n\n                  return (\n                      <FoundPublicChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, true)}\n                      />\n                  );\n              })\n            : [];\n\n        const globalLinkChat =\n            linkMessage && linkMessage.chat_id && !linkMessage.message && !globalChatsMap.has(linkMessage.chat_id) ? (\n                <FoundPublicChat\n                    key={linkMessage.chat_id}\n                    chatId={linkMessage.chat_id}\n                    onClick={() => this.handleSelectMessage(linkMessage.chat_id, null, true, true)}\n                />\n            ) : null;\n\n        const globalMessagesMap = new Map();\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => {\n                      const key = `${x.chat_id}_${x.id}`;\n                      globalMessagesMap.set(key, key);\n\n                      return (\n                          <FoundMessage\n                              key={key}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              chatSearch={Boolean(chatId)}\n                              onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                          />\n                      );\n                  })\n                : [];\n\n        const globalLinkMessage =\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`) ? (\n                <FoundMessage\n                    key={`${linkMessage.message.chat_id}_${linkMessage.message.id}`}\n                    chatId={linkMessage.message.chat_id}\n                    messageId={linkMessage.message.id}\n                    chatSearch={false}\n                    onClick={() =>\n                        this.handleSelectMessage(linkMessage.message.chat_id, linkMessage.message.id, false, true)\n                    }\n                />\n            ) : null;\n\n        let count = messages ? messages.total_count : 0;\n        if (\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`)\n        ) {\n            count++;\n        }\n\n        let messagesCaption = t('NoMessages');\n        if (count) {\n            messagesCaption = count === 1 ? 'Found 1 message' : `Found ${count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className='search' onScroll={this.handleScroll}>\n                {chat && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('SearchMessagesIn')}</SectionHeader>\n                            <div className='search-chat-wrapper'>\n                                <div className='search-chat-control'>\n                                    <Chat chatId={chatId} showStatus={false} />\n                                </div>\n                                <IconButton\n                                    className='header-right-button'\n                                    aria-label='Search'\n                                    onMouseDown={this.handleClose}>\n                                    <CloseIcon />\n                                </IconButton>\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {topChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatHints')}</SectionHeader>\n                            <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                                <div className='search-top-chats-placeholder' />\n                                {topChats}\n                                <div className='search-top-chats-placeholder' />\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader command={t('ClearButton')} onClick={this.handleClearRecentlyFound}>\n                            {t('Recent')}\n                        </SectionHeader>\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatsAndContacts')}</SectionHeader>\n                            {localChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {globalChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('GlobalSearch')}</SectionHeader>\n                            {globalLinkChat}\n                            {globalChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {(messages || (linkMessage && linkMessage.message)) && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{messagesCaption}</SectionHeader>\n                        {globalLinkMessage}\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes, { number } from 'prop-types';\nimport { Slide } from '@material-ui/core';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { modalManager } from '../../Utils/Modal';\nimport './SidebarPage.css';\n\nclass SidebarPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                const { onClose } = this.props;\n                if (onClose) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    event.target.blur();\n\n                    onClose();\n                }\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.props;\n\n        if (prevProps.open !== open) {\n            if (open) {\n                KeyboardManager.add(this.keyboardHandler);\n            } else {\n                KeyboardManager.remove(this.keyboardHandler);\n            }\n        }\n    }\n\n    render() {\n        const { children, open, timeout, onClose } = this.props;\n\n        return (\n            <Slide direction='right' in={open} timeout={timeout} mountOnEnter unmountOnExit>\n                <div className='sidebar-page'>{onClose ? React.cloneElement(children, { onClose }) : children}</div>\n            </Slide>\n        );\n    }\n}\n\nSidebarPage.propTypes = {\n    open: PropTypes.bool.isRequired,\n    timeout: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    onClose: PropTypes.func\n};\n\nexport default SidebarPage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.37867966,2 C9.97541676,2 10.5501571,2.2133476 11.0009229,2.59780217 L11.1464466,2.73223305 L13.267767,4.85355339 C13.3427815,4.92856794 13.4391777,4.97728504 13.542631,4.9937713 L13.6213203,5 L19,5 C21.1421954,5 22.8910789,6.68396847 22.9951047,8.80035966 L23,9 L23,18 C23,20.1421954 21.3160315,21.8910789 19.1996403,21.9951047 L19,22 L5,22 C2.85780461,22 1.10892112,20.3160315 1.00489531,18.1996403 L1,18 L1,6 C1,3.85780461 2.68396847,2.10892112 4.80035966,2.00489531 L5,2 L9.37867966,2 Z M9.37867966,4 L5,4 C3.9456382,4 3.08183488,4.81587779 3.00548574,5.85073766 L3,6 L3,18 C3,19.0543618 3.81587779,19.9181651 4.85073766,19.9945143 L5,20 L19,20 C20.0543618,20 20.9181651,19.1841222 20.9945143,18.1492623 L21,18 L21,9 C21,7.9456382 20.1841222,7.08183488 19.1492623,7.00548574 L19,7 L13.6213203,7 C13.0245832,7 12.4498429,6.7866524 11.9990771,6.40219783 L11.8535534,6.26776695 L9.73223305,4.14644661 C9.6572185,4.07143206 9.56082233,4.02271496 9.45736903,4.0062287 L9.37867966,4 Z M19,10 C19.5522847,10 20,10.4477153 20,11 C20,11.5128358 19.6139598,11.9355072 19.1166211,11.9932723 L19,12 L5,12 C4.44771525,12 4,11.5522847 4,11 C4,10.4871642 4.38604019,10.0644928 4.88337887,10.0067277 L5,10 L19,10 Z'/>,\n    'Folder'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.70710678,20.7071068 C7.5195704,20.8946432 7.26521649,21 7,21 L4,21 C3.44771525,21 3,20.5522847 3,20 L3,17 C3,16.7347835 3.10535684,16.4804296 3.29289322,16.2928932 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L7.70710678,20.7071068 Z M5,17.4142136 L5,19 L6.58578644,19 L16.5857864,9 L15,7.41421356 L5,17.4142136 Z M18,4.41421356 L16.414,5.99921356 L18,7.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Edit'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11,2 C13.209139,2 15,3.790861 15,6 C15,6.55228475 14.5522847,7 14,7 C13.4477153,7 13,6.55228475 13,6 L13,6 L12.9945143,5.85073766 C12.9181651,4.81587779 12.0543618,4 11,4 L11,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,6 L4,18 C4,19.1045695 4.8954305,20 6,20 L6,20 L11,20 C12.1045695,20 13,19.1045695 13,18 L13,18 L13.0067277,17.8833789 C13.0644928,17.3860402 13.4871642,17 14,17 C14.5522847,17 15,17.4477153 15,18 C15,20.209139 13.209139,22 11,22 L11,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,18 L2,6 C2,3.790861 3.790861,2 6,2 L6,2 Z M18.7071068,7.29289322 L22.7071068,11.2928932 C22.7355731,11.3213595 22.7623312,11.3515341 22.787214,11.3832499 L22.7071068,11.2928932 C22.7425008,11.3282873 22.774687,11.3656744 22.8036654,11.4046934 C22.8215099,11.4288693 22.8382813,11.453725 22.8539326,11.4793398 C22.8613931,11.4913869 22.8685012,11.5036056 22.8753288,11.5159379 C22.8862061,11.5357061 22.8966234,11.5561086 22.9063462,11.5769009 C22.914321,11.5939015 22.9218036,11.6112044 22.9287745,11.628664 C22.9366843,11.6484208 22.9438775,11.6682023 22.9504533,11.6882636 C22.9552713,11.7031487 22.9599023,11.7185367 22.9641549,11.734007 C22.9701664,11.7555635 22.9753602,11.7772539 22.9798348,11.7992059 C22.9832978,11.8166247 22.9863719,11.834051 22.9889822,11.8515331 C22.9962388,11.8996379 23,11.9493797 23,12 L22.9962979,11.9137692 C22.9978436,11.9317345 22.9989053,11.9497336 22.9994829,11.9677454 L23,12 C23,12.0112225 22.9998151,12.0224019 22.9994483,12.0335352 C22.9988772,12.050591 22.997855,12.0679231 22.996384,12.0852242 C22.994564,12.1070574 22.9920941,12.1281144 22.9889807,12.1489612 C22.9863719,12.165949 22.9832978,12.1833753 22.9797599,12.2007258 C22.9753602,12.2227461 22.9701664,12.2444365 22.964279,12.2658396 C22.9599023,12.2814633 22.9552713,12.2968513 22.9502619,12.3121425 C22.9438775,12.3317977 22.9366843,12.3515792 22.928896,12.3710585 C22.9218036,12.3887956 22.914321,12.4060985 22.9063266,12.4232215 C22.8966234,12.4438914 22.8862061,12.4642939 22.8751242,12.484277 C22.8685012,12.4963944 22.8613931,12.5086131 22.8540045,12.5207088 C22.8382813,12.546275 22.8215099,12.5711307 22.8036865,12.5951593 C22.7982466,12.602603 22.7927155,12.6098424 22.7870723,12.6170223 C22.7849289,12.6196628 22.7826279,12.6225624 22.7803112,12.625449 L22.7071068,12.7071068 L22.7071068,12.7071068 L18.7071068,16.7071068 C18.3165825,17.0976311 17.6834175,17.0976311 17.2928932,16.7071068 C16.9023689,16.3165825 16.9023689,15.6834175 17.2928932,15.2928932 L19.585,13 L13,13 C12.4871642,13 12.0644928,12.6139598 12.0067277,12.1166211 L12,12 C12,11.4477153 12.4477153,11 13,11 L13,11 L19.585,11 L17.2928932,8.70710678 C16.9023689,8.31658249 16.9023689,7.68341751 17.2928932,7.29289322 C17.6834175,6.90236893 18.3165825,6.90236893 18.7071068,7.29289322 Z' />,\n    'LogOut'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,16 C13.1045695,16 14,16.8954305 14,18 C14,19.1045695 13.1045695,20 12,20 C10.8954305,20 10,19.1045695 10,18 C10,16.8954305 10.8954305,16 12,16 Z M12,10 C13.1045695,10 14,10.8954305 14,12 C14,13.1045695 13.1045695,14 12,14 C10.8954305,14 10,13.1045695 10,12 C10,10.8954305 10.8954305,10 12,10 Z M12,4 C13.1045695,4 14,4.8954305 14,6 C14,7.1045695 13.1045695,8 12,8 C10.8954305,8 10,7.1045695 10,6 C10,4.8954305 10.8954305,4 12,4 Z' />,\n    'More'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport LogOutIcon from '../../../Assets/Icons/LogOut';\nimport MoreIcon from '../../../Assets/Icons/More';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass SettingsMenuButton extends React.Component {\n    state = {\n        anchorEl: null,\n        open: false\n    };\n\n    handleMenuOpen = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, open } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-right-button'\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleLogOut}>\n                        <ListItemIcon>\n                            <LogOutIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('LogOut')} />\n                    </MenuItem>\n                </Menu>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleClose}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureLogout')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDone} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nSettingsMenuButton.propTypes = {};\n\nexport default withTranslation()(SettingsMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C14.6887547,1 16.8818181,3.12230671 16.9953805,5.78311038 L17,6 L17,8 C18.6568542,8 20,9.34314575 20,11 L20,19 C20,20.6568542 18.6568542,22 17,22 L7,22 C5.34314575,22 4,20.6568542 4,19 L4,11 C4,9.34314575 5.34314575,8 7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M17,10 L7,10 C6.44771525,10 6,10.4477153 6,11 L6,19 C6,19.5522847 6.44771525,20 7,20 L17,20 C17.5522847,20 18,19.5522847 18,19 L18,11 C18,10.4477153 17.5522847,10 17,10 Z M12,13.5 C12.8284271,13.5 13.5,14.1715729 13.5,15 C13.5,15.8284271 12.8284271,16.5 12,16.5 C11.1715729,16.5 10.5,15.8284271 10.5,15 C10.5,14.1715729 11.1715729,13.5 12,13.5 Z M12.1762728,3.00509269 L12,3 C10.4023191,3 9.09633912,4.24891996 9.00509269,5.82372721 L9,6 L9,8 L15,8 L15,6 C15,4.40231912 13.75108,3.09633912 12.1762728,3.00509269 L12,3 L12.1762728,3.00509269 Z' />,\n    'Data'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.4100787,14.6155108 L10.33,12.56 L10.33,12.56 L10.36,12.53 C12.1,10.59 13.34,8.36 14.07,6 L16,6 C16.5522847,6 17,5.55228475 17,5 C17,4.44771525 16.5522847,4 16,4 L10,4 L10,4 L10,3 C10,2.44771525 9.55228475,2 9,2 C8.44771525,2 8,2.44771525 8,3 L8,4 L8,4 L1.995,4 C1.44547667,4 1,4.44547667 1,4.995 C1,5.54452333 1.44547667,5.99 1.995,5.99 L12.17,5.99 L12.17,5.99 C11.5,7.92 10.44,9.75 9,11.35 C8.29025814,10.5639418 7.67370319,9.7196418 7.15033516,8.83487918 C7.09974701,8.74935905 7.03930045,8.64304956 6.96899548,8.51595071 C6.79288115,8.1975972 6.45776707,8 6.09394677,8 L5.69,8 C5.34408921,8 5.06367311,8.2804161 5.06367311,8.62632689 C5.06367311,8.72554854 5.08724633,8.82335055 5.13246346,8.91167013 C5.1653189,8.97586688 5.19575217,9.03408878 5.22376326,9.08633583 C5.88285067,10.3156835 6.70136504,11.4828779 7.67,12.56 L3.29489879,16.8749328 C2.90279535,17.2616439 2.89842396,17.8929978 3.28513501,18.2851012 C3.28675102,18.2867397 3.28837269,18.2883727 3.29,18.29 L3.29289322,18.2928932 C3.68341751,18.6834175 4.31658249,18.6834175 4.70710678,18.2928932 L9,14 L9,14 L11.3403247,16.3403247 C11.6133932,16.6133932 12.0561246,16.6133932 12.3291931,16.3403247 C12.4001325,16.2693853 12.4549762,16.1840114 12.49,16.09 L12.6442671,15.6759147 C12.7816472,15.3071575 12.6899849,14.8921111 12.4100787,14.6155108 Z M17.8069995,10 L17.1930005,10 C16.7761559,10 16.4030352,10.2585728 16.2566713,10.6488766 L12.3511234,21.0636708 C12.2167367,21.4220355 12.3983067,21.8214894 12.7566713,21.9558761 C12.8344793,21.9850541 12.916901,22 13,22 L13.3059169,22 C13.7232965,22 14.0967782,21.7407727 14.2427584,21.3497542 L15.12,19 L15.12,19 L19.87,19 L20.7561047,21.3524905 C20.9028501,21.74208 21.2756099,22 21.6919201,22 L22,22 C22.3827336,22 22.6930005,21.6897331 22.6930005,21.3069995 C22.6930005,21.2239005 22.6780546,21.1414789 22.6488766,21.0636708 L18.7433287,10.6488766 C18.5969648,10.2585728 18.2238441,10 17.8069995,10 Z M17.5,12.67 L19.12,17 L15.88,17 L17.5,12.67 Z' />,\n    'Language'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { IconButton } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport FilterIcon from '../../../Assets/Icons/Folder';\nimport Chat from '../../Tile/Chat';\nimport EditIcon from '../../../Assets/Icons/Edit';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '../../../Assets/Icons/Settings';\nimport SettingsMenuButton from './SettingsMenuButton';\nimport UnmuteIcon from '../../../Assets/Icons/Unmute';\nimport DataIcon from '../../../Assets/Icons/Data';\nimport LanguageIcon from '../../../Assets/Icons/Language';\nimport packageJson from '../../../../package.json';\nimport { setProfileMediaViewerContent } from '../../../Actions/Client';\nimport ChatStore from '../../../Stores/ChatStore';\nimport './Main.css';\n\nclass Main extends React.Component {\n\n    handleOpenViewer = () => {\n        const { chatId } = this.props;\n        \n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n    };\n\n    render() {\n        const {\n            chatId,\n            popup,\n            t,\n            onClose,\n            onEditProfile,\n            onGeneral,\n            onNotifications,\n            onPrivacySecurity,\n            onLanguage,\n            onFilters\n        } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Settings')}</span>\n                    </div>\n                    <SettingsMenuButton />\n                </div>\n                <div className='sidebar-page-content settings-main-content'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={false}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    <ListItem className='settings-list-item' button onClick={onEditProfile}>\n                        <ListItemIcon>\n                            <EditIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('EditProfile')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onGeneral}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('GeneralSettings')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onNotifications}>\n                        <ListItemIcon>\n                            <UnmuteIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Notifications')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onPrivacySecurity}>\n                        <ListItemIcon>\n                            <DataIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('PrivacySettings')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onFilters}>\n                        <ListItemIcon>\n                            <FilterIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Filters')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onLanguage}>\n                        <ListItemIcon>\n                            <LanguageIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Language')} />\n                    </ListItem>\n                    <div className='settings-main-footer'>\n                        {packageJson.version}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nMain.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onEditProfile: PropTypes.func,\n    onGeneral: PropTypes.func,\n    onNotifications: PropTypes.func,\n    onPrivacySecurity: PropTypes.func,\n    onLanguage: PropTypes.func,\n    onFilters: PropTypes.func\n};\n\nexport default withTranslation()(Main);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.8833789,16.0067277 L20,16 C20.5128358,16 20.9355072,16.3860402 20.9932723,16.8833789 L21,17 L21,19 L23,19 C23.5128358,19 23.9355072,19.3860402 23.9932723,19.8833789 L24,20 C24,20.5128358 23.6139598,20.9355072 23.1166211,20.9932723 L23,21 L21,21 L21,23 C21,23.5128358 20.6139598,23.9355072 20.1166211,23.9932723 L20,24 C19.4871642,24 19.0644928,23.6139598 19.0067277,23.1166211 L19,23 L19,21 L17,21 C16.4871642,21 16.0644928,20.6139598 16.0067277,20.1166211 L16,20 C16,19.4871642 16.3860402,19.0644928 16.8833789,19.0067277 L17,19 L19,19 L19,17 C19,16.4871642 19.3860402,16.0644928 19.8833789,16.0067277 L20,16 L19.8833789,16.0067277 Z M8.41421356,2 L13.5857864,2 C14.0572824,2 14.5116128,2.16648982 14.8701798,2.46691315 L15,2.58578644 L16.4142136,4 L18,4 C19.5976809,4 20.9036609,5.24891996 20.9949073,6.82372721 L21,7 L21,12 C21,12.5522847 20.5522847,13 20,13 C19.4871642,13 19.0644928,12.6139598 19.0067277,12.1166211 L19,12 L19,7 C19,6.48716416 18.6139598,6.06449284 18.1166211,6.00672773 L18,6 L16.4142136,6 C15.9427176,6 15.4883872,5.83351018 15.1298202,5.53308685 L15,5.41421356 L13.5857864,4 L8.41421356,4 L7,5.41421356 C6.66660199,5.74761157 6.22761579,5.95114561 5.76163928,5.99225938 L5.58578644,6 L4,6 C3.48716416,6 3.06449284,6.38604019 3.00672773,6.88337887 L3,7 L3,18 C3,18.5128358 3.38604019,18.9355072 3.88337887,18.9932723 L4,19 L13,19 C13.5522847,19 14,19.4477153 14,20 C14,20.5128358 13.6139598,20.9355072 13.1166211,20.9932723 L13,21 L4,21 C2.40231912,21 1.09633912,19.75108 1.00509269,18.1762728 L1,18 L1,7 C1,5.40231912 2.24891996,4.09633912 3.82372721,4.00509269 L4,4 L5.58578644,4 L7,2.58578644 C7.33339801,2.25238843 7.77238421,2.04885439 8.23836072,2.00774062 L8.41421356,2 L13.5857864,2 L8.41421356,2 Z M11,7 C13.7614237,7 16,9.23857625 16,12 C16,14.7614237 13.7614237,17 11,17 C8.23857625,17 6,14.7614237 6,12 C6,9.23857625 8.23857625,7 11,7 Z M11,9 C9.34314575,9 8,10.3431458 8,12 C8,13.6568542 9.34314575,15 11,15 C12.6568542,15 14,13.6568542 14,12 C14,10.3431458 12.6568542,9 11,9 Z' />,\n    'AddImage'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Cropper from 'react-cropper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport AddImageIcon from '../../Assets/Icons/AddImage';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CheckIcon from '../../Assets/Icons/Check';\nimport { getFitSize, readImageSize } from '../../Utils/Common';\nimport 'cropperjs/dist/cropper.css';\nimport './NewChatPhoto.css';\n\nclass NewChatPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.attachPhotoRef = React.createRef();\n        this.cropperRef = React.createRef();\n\n        const { defaultURL } = this.props;\n\n        this.state = {\n            blobURL: defaultURL,\n            open: false\n        }\n    }\n\n    handleCancel = () => {\n        this.setState({\n            open: false\n        });\n    }\n\n    handleDone = () => {\n        const cropper = this.cropperRef.current;\n        if (!cropper) return;\n\n        cropper.getCroppedCanvas().toBlob(blob => {\n            const blobURL = URL.createObjectURL(blob);\n\n            this.setState({\n                blob,\n                blobURL\n            });\n\n            const { onChoose } = this.props;\n            if (!onChoose) return;\n\n            onChoose(blob, blobURL);\n        }, 'image/jpeg');\n\n        this.handleCancel();\n    };\n\n    handleAttach = () => {\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ file, ...rest ] = Array.from(files);\n            if (!file) return;\n\n            const [width, height] = await readImageSize(file);\n\n            this.setState({\n                open: true,\n                file,\n                fileURL: URL.createObjectURL(file),\n                width,\n                height\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    render() {\n        const { t } = this.props;\n        const { open, width, height, fileURL, blobURL } = this.state;\n\n        const { width: fitWidth, height: fitHeight } = getFitSize({ width, height }, 400, true);\n\n        return (\n            <>\n                <div className='new-chat-photo'>\n                    { blobURL ? (\n                        <img className='new-chat-photo-image-button' alt='' src={blobURL} onClick={this.handleAttach}/>\n                        ) : (\n                        <div className='new-chat-photo-image-button new-chat-photo-button' onClick={this.handleAttach}>\n                            <AddImageIcon className='new-chat-photo-icon'/>\n                        </div>\n                    )}\n                </div>\n                <input\n                    ref={this.attachPhotoRef}\n                    className='inputbox-attach-button'\n                    type='file'\n                    multiple={false}\n                    accept='image/*'\n                    onChange={this.handleAttachComplete}\n                />\n                { open && (\n                    <Dialog\n                        transitionDuration={0}\n                        open={true}\n                        onClose={this.handleCancel}\n                        aria-labelledby='dialog-title'>\n                        <div className='header-master'>\n                            <IconButton className='header-left-button' onClick={this.handleCancel}>\n                                <CloseIcon/>\n                            </IconButton>\n                            <div className='header-status grow cursor-pointer'>\n                                <span className='header-status-content'>{t('DragToReposition')}</span>\n                            </div>\n                        </div>\n                        <DialogContent>\n                            <Cropper\n                                ref={this.cropperRef}\n                                src={fileURL}\n                                style={{ height: fitHeight, width: fitWidth, margin: '0 46px 62px' }}\n                                // Cropper.js options\n                                aspectRatio={1}\n                                viewMode={3}\n                                guides={false} />\n                        </DialogContent>\n                        <div className='new-chat-photo-done-button ' onClick={this.handleDone}>\n                            <CheckIcon/>\n                        </div>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n\n}\n\nNewChatPhoto.propTypes = {\n    defaultURL: PropTypes.string,\n    onChoose: PropTypes.func\n};\n\nexport default withTranslation()(NewChatPhoto);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport TextField from '@material-ui/core/TextField';\nimport { IconButton } from '@material-ui/core';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport NewChatPhoto from '../NewChatPhoto';\nimport { getSrc, loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditProfile.css';\nimport { getSimpleMarkupEntities, getFormattedText } from '../../../Utils/Message';\n\nclass EditProfile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.firstNameRef = React.createRef();\n        this.lastNameRef = React.createRef();\n        this.bioRef = React.createRef();\n        this.usernameRef = React.createRef();\n\n        const user = UserStore.get(UserStore.getMyId());\n        const userFullInfo = UserStore.getFullInfo(UserStore.getMyId());\n\n        this.state = {\n            firstName: user ? user.first_name : '',\n            lastName: user ? user.last_name : '',\n            bio: userFullInfo ? userFullInfo.bio : '',\n            username: user ? user.username : '',\n            usernameCheck: null\n        };\n    }\n\n    componentWillUnmount() {\n        this.setName();\n        this.setBio();\n        this.setUsername();\n    }\n\n    setUsername() {\n        const { username, usernameCheck } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n\n        if (username === newUsername) return;\n        if (!usernameCheck) return;\n        if (usernameCheck['@type'] !== 'checkChatUsernameResultOk') return;\n\n        TdLibController.send({\n            '@type': 'setUsername',\n            username: newUsername\n        });\n    }\n\n    setName() {\n        const { firstName, lastName } = this.state;\n        const newFirstName = this.firstNameRef.current.value;\n        const newLastName = this.lastNameRef.current.value;\n\n        if (newFirstName === firstName && newLastName === lastName) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setName',\n            first_name: newFirstName,\n            last_name: newLastName\n        });\n    }\n\n    setBio() {\n        const { bio } = this.state;\n        const newBio = this.bioRef.current.value;\n        if (newBio === bio) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setBio',\n            bio: newBio\n        });\n    }\n\n    handleUsernameChange = async () => {\n        const { chatId } = this.props;\n        const { username } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n        if (username === newUsername || newUsername === '') {\n            this.setState({\n                usernameCheck: null\n            });\n\n            // console.log('[un] checkChatUsername', 'null');\n        } else {\n            // console.log('[un] checkChatUsername start', chatId, newUsername);\n            const result = await TdLibController.send({\n                '@type': 'checkChatUsername',\n                chat_id: chatId,\n                username: newUsername\n            });\n\n            // console.log('[un] checkChatUsername end', chatId, newUsername, result);\n\n            let newUsername2 = this.usernameRef.current.value;\n            if (newUsername2.startsWith('@') && newUsername2.length > 1) {\n                newUsername2 = newUsername2.substr(1);\n            }\n            if (newUsername2 === newUsername) {\n                this.setState({\n                    usernameCheck: result\n                });\n            }\n        }\n    };\n\n    handleChoosePhoto = async data => {\n        const { chatId } = this.props;\n\n        await TdLibController.send({\n            '@type': 'setProfilePhoto',\n            photo: { '@type': 'inputFileBlob', name: 'profile_photo.jpg', data }\n        });\n\n        const store = FileStore.getStore();\n        loadChatContent(store, chatId, true);\n    };\n\n    render() {\n        let { chatId, t, onClose } = this.props;\n        const { firstName, lastName, bio, username, usernameCheck } = this.state;\n\n        let hasError = false;\n        let usernameLabel = t('Username');\n        if (usernameCheck) {\n            switch (usernameCheck['@type']) {\n                case 'checkChatUsernameResultOk': {\n                    hasError = false;\n                    usernameLabel = 'Username is available';\n                    break;\n                }\n                case 'checkChatUsernameResultPublicChatsTooMuch':\n                case 'checkChatUsernameResultPublicGroupsUnavailable':\n                case 'checkChatUsernameResultUsernameInvalid': {\n                    hasError = true;\n                    usernameLabel = 'Invalid username';\n                    break;\n                }\n                case 'checkChatUsernameResultUsernameOccupied': {\n                    hasError = true;\n                    usernameLabel = 'Username is already taken';\n                    break;\n                }\n            }\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const src = getSrc(photo ? photo.small : null);\n        const entities = [];\n        const text = getSimpleMarkupEntities(t('UsernameHelp'), entities);\n        const formattedText = getFormattedText({ '@type': 'formattedText', text, entities });\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('EditProfile')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <NewChatPhoto defaultURL={src} onChoose={this.handleChoosePhoto}/>\n                    <div className='edit-profile-name'>\n                        <TextField\n                            inputRef={this.firstNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FirstName')}\n                            defaultValue={firstName}\n                        />\n                        <TextField\n                            inputRef={this.lastNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('LastName')}\n                            defaultValue={lastName}\n                        />\n                        <TextField\n                            inputRef={this.bioRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('Bio')}\n                            defaultValue={bio}\n                        />\n                        <div className='edit-profile-hint'>{t('BioAbout')}</div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='edit-profile-username'>\n                        <TextField\n                            inputRef={this.usernameRef}\n                            error={hasError}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={usernameLabel}\n                            defaultValue={username}\n                            onChange={this.handleUsernameChange}\n                        />\n                        <div className='edit-profile-hint'>\n                            {formattedText}\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nEditProfile.propTypes = {\n    chatId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(EditProfile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fill='currentColor' fillRule='nonzero' d='M11.8833789,4.00672773 L12,4 C12.5128358,4 12.9355072,4.38604019 12.9932723,4.88337887 L13,5 L13,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L13,13 L13,19 C13,19.5128358 12.6139598,19.9355072 12.1166211,19.9932723 L12,20 C11.4871642,20 11.0644928,19.6139598 11.0067277,19.1166211 L11,19 L11,13 L5,13 C4.48716416,13 4.06449284,12.6139598 4.00672773,12.1166211 L4,12 C4,11.4871642 4.38604019,11.0644928 4.88337887,11.0067277 L5,11 L11,11 L11,5 C11,4.48716416 11.3860402,4.06449284 11.8833789,4.00672773 L12,4 L11.8833789,4.00672773 Z'/>,\n    'Add'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M18,18 C23.8608627,18 28.072977,19.5546034 30.5027576,22.7682432 C31.1498637,23.6240893 31.5,24.6677318 31.5,25.7406839 L31.5,27.4285714 C31.5,29.6771593 29.6771593,31.5 27.4285714,31.5 L8.57142857,31.5 C6.32284066,31.5 4.5,29.6771593 4.5,27.4285714 L4.5,25.740741 C4.5,24.6677985 4.85010028,23.6241745 5.49717185,22.7683365 C7.92695186,19.5546298 12.1390883,18 18,18 Z M18,21 C12.9925527,21 9.66714119,22.2273543 7.89018414,24.5776159 C7.63699525,24.9124919 7.5,25.3208649 7.5,25.740741 L7.5,27.4285714 C7.5,28.0203051 7.97969491,28.5 8.57142857,28.5 L27.4285714,28.5 C28.0203051,28.5 28.5,28.0203051 28.5,27.4285714 L28.5,25.7406839 C28.5,25.3208358 28.3629925,24.9124609 28.1097736,24.5775601 C26.3328071,22.2273354 23.0074077,21 18,21 Z M18,3 C21.3137085,3 24,5.6862915 24,9 C24,12.3137085 21.3137085,15 18,15 C14.6862915,15 12,12.3137085 12,9 C12,5.6862915 14.6862915,3 18,3 Z M18,6 C16.3431458,6 15,7.34314575 15,9 C15,10.6568542 16.3431458,12 18,12 C19.6568542,12 21,10.6568542 21,9 C21,7.34314575 19.6568542,6 18,6 Z'/>,\n    'NewPrivate'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.6742675,16.1038947 16.9426297,16.7664653 16.9917833,17.4602417 L17,17.6925226 L17,18.5 C17,19.8254834 15.9684641,20.9100387 14.6643757,20.9946823 L14.5,21 L3.5,21 C2.1745166,21 1.08996133,19.9684641 1.00531768,18.6643757 L1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.14055953,17.0554062 3.03840077,17.2920167 3.00889582,17.5415166 L3,17.6925212 L3,18.5 C3,18.7454599 3.17687516,18.9496084 3.41012437,18.9919443 L3.5,19 L14.5,19 C14.7454599,19 14.9496084,18.8231248 14.9919443,18.5898756 L15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M19,14 C19.5522847,14 20,14.4477153 20,15 C20,15.5522847 19.5522847,16 19,16 C18.4477153,16 18,15.5522847 18,15 C18,14.4477153 18.4477153,14 19,14 Z M19,3 C21.209139,3 23,4.790861 23,7 C23,8.80747736 21.8011592,10.3349504 20.1552529,10.8306439 L20,10.873 L20,11.5 C20,12.0128358 19.6139598,12.4355072 19.1166211,12.4932723 L19,12.5 C18.4871642,12.5 18.0644928,12.1139598 18.0067277,11.6166211 L18,11.5 L18,10 C18,9.48716416 18.3860402,9.06449284 18.8833789,9.00672773 L19,9 C20.1045695,9 21,8.1045695 21,7 C21,5.8954305 20.1045695,5 19,5 C17.8954305,5 17,5.8954305 17,7 C17,7.55228475 16.5522847,8 16,8 C15.4477153,8 15,7.55228475 15,7 C15,4.790861 16.790861,3 19,3 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z'/>,\n    'NonContacts'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,19.5 C16.9843673,19.5 20.6295366,20.7505675 22.8335731,23.3549038 C23.5867154,24.2448351 24,25.3729365 24,26.538784 L24,27.75 C24,29.8210678 22.3210678,31.5 20.25,31.5 L3.75,31.5 C1.67893219,31.5 0,29.8210678 0,27.75 L0,26.5387806 C0,25.3729314 0.413286907,24.2448288 1.16643175,23.354898 C3.37046736,20.7505662 7.01563535,19.5 12,19.5 Z M26.9272668,21.0503629 L27.1024807,21.0520931 C30.3320395,21.2704178 32.8220855,22.1814787 34.5196345,23.8437596 C35.3875212,24.6935741 35.9082005,25.8309338 35.9889534,27.0352541 L36,27.3651995 L36,28.125 C36,29.911296 34.6122576,31.3734674 32.8560732,31.4922138 L32.625,31.5 L28.5,31.5 C27.6715729,31.5 27,30.8284271 27,30 C27,29.2307462 27.5790603,28.5967393 28.3250683,28.5100916 L28.5,28.5 L32.625,28.5 C32.8025201,28.5 32.9512302,28.3766499 32.990096,28.2109841 L33,28.125 L33,27.3651995 C33,26.8466882 32.7912139,26.3500306 32.4207231,25.9872546 C31.2961739,24.8860689 29.4736312,24.2192349 26.9001365,24.0452615 C26.0735959,23.9893857 25.4488487,23.2740458 25.5047245,22.4475052 C25.5566091,21.6800032 26.1771133,21.0864965 26.9272668,21.0503629 L26.9272668,21.0503629 Z M12,22.5 C7.81695054,22.5 5.00307249,23.4653713 3.4564301,25.2929144 C3.16172113,25.6411484 3,26.0825803 3,26.5387817 L3,27.75 C3,28.1642136 3.33578644,28.5 3.75,28.5 L20.25,28.5 C20.6642136,28.5 21,28.1642136 21,27.75 L21,26.538784 C21,26.0825825 20.8382796,25.6411507 20.5435722,25.2929172 C18.9969303,23.4653723 16.1830516,22.5 12,22.5 Z M25.5,7.5 C28.3994949,7.5 30.75,9.85050506 30.75,12.75 C30.75,15.6494949 28.3994949,18 25.5,18 C22.6005051,18 20.25,15.6494949 20.25,12.75 C20.25,9.85050506 22.6005051,7.5 25.5,7.5 Z M12,4.5 C15.3137085,4.5 18,7.1862915 18,10.5 C18,13.8137085 15.3137085,16.5 12,16.5 C8.6862915,16.5 6,13.8137085 6,10.5 C6,7.1862915 8.6862915,4.5 12,4.5 Z M25.5,10.5 C24.2573593,10.5 23.25,11.5073593 23.25,12.75 C23.25,13.9926407 24.2573593,15 25.5,15 C26.7426407,15 27.75,13.9926407 27.75,12.75 C27.75,11.5073593 26.7426407,10.5 25.5,10.5 Z M12,7.5 C10.3431458,7.5 9,8.84314575 9,10.5 C9,12.1568542 10.3431458,13.5 12,13.5 C13.6568542,13.5 15,12.1568542 15,10.5 C15,8.84314575 13.6568542,7.5 12,7.5 Z'/>,\n    'NewGroup'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M27.75,2.51771235 C29.8210678,2.51771235 31.5,4.19664454 31.5,6.26771235 L31.5,29.7322876 C31.5,30.6020604 31.1976592,31.444786 30.6447384,32.1161898 C29.3281456,33.7149097 26.9648177,33.9436189 25.3660978,32.627026 L18,26.5597124 L18,29.25 C18,31.6465213 16.1266201,33.6054913 13.7644092,33.742361 L13.5,33.75 C11.1034787,33.75 9.14450868,31.8766201 9.00763904,29.5144092 L9,29.25 L8.99971804,25.3499156 C5.57649804,24.6549011 3,21.6283372 3,18 C3,13.8578644 6.35786438,10.5 10.5,10.5 L16.7118519,10.5 L25.3660978,3.37297397 C26.0375017,2.82005314 26.8802273,2.51771235 27.75,2.51771235 Z M12,25.4992124 L12,29.25 C12,30.0784271 12.6715729,30.75 13.5,30.75 C14.2692538,30.75 14.9032607,30.1709397 14.9899084,29.4249317 L15,29.25 L15,25.4992124 L12,25.4992124 L12,29.25 L12,25.4992124 Z M27.75,5.51771235 C27.5760455,5.51771235 27.4075003,5.57818051 27.2732196,5.68876467 L18.6189737,12.8157907 C18.0818506,13.2581274 17.4076701,13.5 16.7118519,13.5 L10.5,13.5 C8.01471863,13.5 6,15.5147186 6,18 C6,20.4852814 8.01471863,22.5 10.5,22.5 L16.7118519,22.5 C17.4076701,22.5 18.0818506,22.7418726 18.6189737,23.1842093 L27.2732196,30.3112353 C27.5929635,30.5745539 28.0656291,30.5288121 28.3289477,30.2090681 C28.4395318,30.0747873 28.5,29.9062422 28.5,29.7322876 L28.5,6.26771235 C28.5,5.85349879 28.1642136,5.51771235 27.75,5.51771235 Z'/>,\n    'NewChannel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M17,3 C19.1421954,3 20.8910789,4.68396847 20.9951047,6.80035966 L21,7 L21,10.5 C21,11.0522847 20.5522847,11.5 20,11.5 C19.4871642,11.5 19.0644928,11.1139598 19.0067277,10.6166211 L19,10.5 L19,7 C19,5.9456382 18.1841222,5.08183488 17.1492623,5.00548574 L17,5 L7,5 C5.9456382,5 5.08183488,5.81587779 5.00548574,6.85073766 L5,7 L5,19.585 L7.20502525,17.3807612 C7.41399436,17.1717921 7.68678103,17.0413128 7.97757724,17.0082977 L8.12426407,17 L12.5,17 C13.0522847,17 13.5,17.4477153 13.5,18 C13.5,18.5128358 13.1139598,18.9355072 12.6166211,18.9932723 L12.5,19 L8.413,19 L4.87781746,22.5363961 C4.47892479,22.9352888 3.84989486,22.9637811 3.41812544,22.6218731 L3.32218254,22.5363961 C3.14536253,22.3595761 3.034957,22.1287566 3.00702113,21.8826983 L3,21.7585786 L3,7 C3,4.85780461 4.68396847,3.10892112 6.80035966,3.00489531 L7,3 L17,3 Z M22.7071068,12.2928932 C23.0675907,12.6533772 23.0953203,13.2206082 22.7902954,13.6128994 L22.7071068,13.7071068 L17.7071068,18.7071068 C17.3466228,19.0675907 16.7793918,19.0953203 16.3871006,18.7902954 L16.2928932,18.7071068 L13.7928932,16.2071068 C13.4023689,15.8165825 13.4023689,15.1834175 13.7928932,14.7928932 C14.1533772,14.4324093 14.7206082,14.4046797 15.1128994,14.7097046 L15.2071068,14.7928932 L17,16.585 L21.2928932,12.2928932 C21.6834175,11.9023689 22.3165825,11.9023689 22.7071068,12.2928932 Z'/>,\n    'ReadChats'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,1 C12.5128358,1 12.9355072,1.38604019 12.9932723,1.88337887 L13,2 L13,3 L13.5,3 C16.7383969,3 19.3775718,5.56557489 19.4958615,8.77506174 L19.5,9 L19.5,11 L20,11 L20.1762728,11.0050927 C21.6927538,11.0929596 22.9070404,12.3072462 22.9949073,13.8237272 L23,14 L23,17 L22.9932723,17.1166211 C22.9355072,17.6139598 22.5128358,18 22,18 C21.4871642,18 21.0644928,17.6139598 21.0067277,17.1166211 L21,17 L21,14 L20.9932723,13.8833789 C20.9399506,13.424297 20.575703,13.0600494 20.1166211,13.0067277 L20,13 L19.5,13 L19.5,18 C19.5,20.1421954 17.8160315,21.8910789 15.6996403,21.9951047 L15.5,22 L8.5,22 C6.35780461,22 4.60892112,20.3160315 4.50489531,18.1996403 L4.5,18 L4.5,13 L4,13 C3.48716416,13 3.06449284,13.3860402 3.00672773,13.8833789 L3,14 L3,17 C3,17.5522847 2.55228475,18 2,18 C1.48716416,18 1.06449284,17.6139598 1.00672773,17.1166211 L1,17 L1,14 C1,12.4023191 2.24891996,11.0963391 3.82372721,11.0050927 L4,11 L4.5,11 L4.5,9 C4.5,5.76160306 7.06557489,3.12242824 10.2750617,3.00413847 L10.5,3 L11,3 L11,2 C11,1.44771525 11.4477153,1 12,1 Z M16.6762728,12.9949073 L16.5,13 L7.5,13 C7.14939781,13 6.81284272,12.9398572 6.5,12.8293257 L6.5,18 C6.5,19.0543618 7.31587779,19.9181651 8.35073766,19.9945143 L8.5,20 L15.5,20 C16.5543618,20 17.4181651,19.1841222 17.4945143,18.1492623 L17.5,18 L17.5009007,12.8289758 C17.2406443,12.9210572 16.9638938,12.9782422 16.6762728,12.9949073 Z M13.5,5 L10.5,5 C8.35780461,5 6.60892112,6.68396847 6.50489531,8.80035966 L6.5,9 L6.5,10 C6.5,10.5128358 6.88604019,10.9355072 7.38337887,10.9932723 L7.5,11 L16.5,11 C17.0128358,11 17.4355072,10.6139598 17.4932723,10.1166211 L17.5,10 L17.5,9 C17.5,6.85780461 15.8160315,5.10892112 13.6996403,5.00489531 L13.5,5 Z M9.5,7.5 C10.0522847,7.5 10.5,7.94771525 10.5,8.5 C10.5,9.05228475 10.0522847,9.5 9.5,9.5 C8.94771525,9.5 8.5,9.05228475 8.5,8.5 C8.5,7.94771525 8.94771525,7.5 9.5,7.5 Z M14.5,7.5 C15.0522847,7.5 15.5,7.94771525 15.5,8.5 C15.5,9.05228475 15.0522847,9.5 14.5,9.5 C13.9477153,9.5 13.5,9.05228475 13.5,8.5 C13.5,7.94771525 13.9477153,7.5 14.5,7.5 Z'/>,\n    'Bots'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\n    'Done'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport ChatTile from './ChatTile';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getChatTitle, getChatType } from '../../Utils/Chat';\nimport './FilterChat.css';\n\nclass FilterChat extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0,\n        checked: false\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { chatId, onDelete } = this.props;\n\n        onDelete && onDelete(chatId);\n    };\n\n    render() {\n        const { chatId, t, type, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const title = getChatTitle(chatId, true, t);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        <ChatTile chatId={chatId} small={true} showSavedMessages={true}/>\n                    </div>\n                    <div className='filter-chat-content'>\n                        <div className='filter-chat-title'>\n                            {title}\n                        </div>\n                        { type && (\n                            <div className='filter-chat-subtitle'>\n                                {getChatType(chatId, t)}\n                            </div>\n                        )}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    type: PropTypes.bool,\n    onDelete: PropTypes.func,\n    checked: PropTypes.bool,\n    onChange: PropTypes.func\n};\n\nexport default withTranslation()(FilterChat);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport './FilterText.css';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nclass FilterText extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete && onDelete();\n    };\n\n    render() {\n        const { t, className, icon, text, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        return (\n            <>\n                <ListItem className={classNames(className, 'settings-list-item2', 'filter-chat-text')} role={undefined} button onMouseDown={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        {icon}\n                    </div>\n                    <div className='filter-chat-content'>\n                        {text}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterText.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func,\n    onChange: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(FilterText);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport './Chip.css';\n\nclass Chip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { icon, text, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <div className='chip-icon'>\n                    {icon}\n                </div>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{text}</div>\n            </div>\n        )\n    }\n}\n\nChip.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default Chip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ChatChip.css';\n\nclass ChatChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { chatId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <ChatTile chatId={chatId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getChatShortTitle(chatId)}</div>\n            </div>\n        )\n    }\n}\n\nChatChip.propTypes = {\n    chatId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default ChatChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport SectionHeader from '../SectionHeader';\nimport SearchInput from '../Search/SearchInput';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport Chip from '../../Tile/Chip';\nimport ChatChip from '../../Tile/ChatChip';\nimport { loadChatsContent } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditFilterChats.css';\n\nclass EditFilterChats extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            focusedItem: null,\n            searchItems: null,\n            error: false\n        }\n    }\n\n    handleChatChange = (chatId, search) => {\n        const { mode } = this.props;\n\n        if (search) {\n            const input = this.searchInputRef.current;\n            input.focus();\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        this.handleChange(mode === 'include' ? 'included_chat_ids' : 'excluded_chat_ids', chatId);\n    };\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { filter, mode } = this.props;\n        const { filter : prevFilter } = prevProps;\n\n        if (prevProps.filter === filter) {\n            return null;\n        }\n\n        const include = mode === 'include';\n        const prevItems = include ? prevProps.filter.included_chat_ids : prevProps.filter.excluded_chat_ids;\n        const items = include ? filter.included_chat_ids : filter.excluded_chat_ids;\n\n        const isDeleting =\n            prevItems.length > items.length\n            || prevFilter.include_contacts && !filter.include_contacts\n            || prevFilter.include_non_contacts && !filter.include_non_contacts\n            || prevFilter.include_groups && !filter.include_groups\n            || prevFilter.include_channels && !filter.include_channels\n            || prevFilter.include_bots && !filter.include_bots\n            || prevFilter.exclude_read && !filter.exclude_read\n            || prevFilter.exclude_muted && !filter.exclude_muted\n            || prevFilter.exclude_archived && !filter.exclude_archived;\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        return { items: prevMap, panel: { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.filter === this.props.filter) {\n            return;\n        }\n\n        this.animatePanel(snapshot.panel);\n        // this.animateItems(snapshot.items);\n    }\n\n    animatePanel(snapshot) {\n        if (!snapshot) return;\n\n        const { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } = snapshot;\n\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        if (!prevOffsets) return;\n\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                            + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                        + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 100);\n        });\n    }\n\n    handleBackspace = () => {\n        const { filter, mode } = this.props;\n        const { focusedItem } = this.state;\n        if (!filter) return;\n\n        if (focusedItem) {\n            switch (focusedItem) {\n                case 'include_contacts':\n                case 'include_non_contacts':\n                case 'include_bots':\n                case 'include_groups':\n                case 'include_channels':\n                case 'exclude_muted':\n                case 'exclude_read':\n                case 'exclude_archived': {\n                    this.handleChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n                default: {\n                    this.handleChatChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n            }\n            return;\n        }\n\n        const include = mode === 'include';\n        if (include) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = filter;\n\n            if (included_chat_ids.length > 0) {\n                const lastItem = included_chat_ids[included_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (include_bots) {\n                this.setState({\n                    focusedItem: 'include_bots'\n                });\n            } else if (include_channels) {\n                this.setState({\n                    focusedItem: 'include_channels'\n                });\n            } else if (include_groups) {\n                this.setState({\n                    focusedItem: 'include_groups'\n                });\n            } else if (include_non_contacts) {\n                this.setState({\n                    focusedItem: 'include_non_contacts'\n                });\n            } else if (include_contacts) {\n                this.setState({\n                    focusedItem: 'include_contacts'\n                });\n            }\n        } else {\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = filter;\n\n            if (excluded_chat_ids.length > 0) {\n                const lastItem = excluded_chat_ids[excluded_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (exclude_archived) {\n                this.setState({\n                    focusedItem: 'exclude_archived'\n                });\n            } else if (exclude_read) {\n                this.setState({\n                    focusedItem: 'exclude_read'\n                });\n            } else if (exclude_muted) {\n                this.setState({\n                    focusedItem: 'exclude_muted'\n                });\n            }\n        }\n    };\n\n    handleChange = (type, value) => {\n        const { onChange } = this.props;\n\n        onChange(type, value);\n\n        this.setState({\n            focusedItem: null\n        });\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchChats',\n                query,\n                limit: 100\n            })\n        );\n        const [searchItems] = await Promise.all(promises);\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, searchItems.chat_ids);\n\n        this.setState({ searchItems, focusedItem: null });\n    };\n\n    render() {\n        const { t, filter, chats, limit, mode, onClose, onChange, onScroll } = this.props;\n        const { focusedItem, searchItems } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = filter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = filter;\n\n        const include = mode === 'include';\n        const items = include ? included_chat_ids : excluded_chat_ids;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{mode === 'include' ? t('FilterInclude') : t('FilterExclude')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    { include && (\n                        <>\n                            {include_contacts && <Chip onClick={() => this.handleChange('include_contacts')} ref={el => { this.itemsRef.set('include_contacts', el); }} selected={focusedItem === 'include_contacts'} icon={<ContactsIcon viewBox='0 0 36 36'/>} text={t('FilterContacts')}/>}\n                            {include_non_contacts && <Chip onClick={() => this.handleChange('include_non_contacts')} ref={el => { this.itemsRef.set('include_non_contacts', el); }} selected={focusedItem === 'include_non_contacts'} icon={<NonContactsIcon />} text={t('FilterNonContacts')}/>}\n                            {include_groups && <Chip onClick={() => this.handleChange('include_groups')} ref={el => { this.itemsRef.set('include_groups', el); }} selected={focusedItem === 'include_groups'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterGroups')}/>}\n                            {include_channels && <Chip onClick={() => this.handleChange('include_channels')} ref={el => { this.itemsRef.set('include_channels', el); }} selected={focusedItem === 'include_channels'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterChannels')}/>}\n                            {include_bots && <Chip onClick={() => this.handleChange('include_bots')} ref={el => { this.itemsRef.set('include_bots', el); }} selected={focusedItem === 'include_bots'} icon={<BotsIcon />} text={t('FilterBots')}/>}\n                        </>\n                    )}\n                    { !include && (\n                        <>\n                            {exclude_muted && <Chip onClick={() => this.handleChange('exclude_muted')} ref={el => { this.itemsRef.set('exclude_muted', el); }} selected={focusedItem === 'exclude_muted'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterMuted')}/>}\n                            {exclude_read && <Chip onClick={() => this.handleChange('exclude_read')} ref={el => { this.itemsRef.set('exclude_read', el); }} selected={focusedItem === 'exclude_read'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterRead')}/>}\n                            {exclude_archived && <Chip onClick={() => this.handleChange('exclude_archived')} ref={el => { this.itemsRef.set('exclude_archived', el); }} selected={focusedItem === 'exclude_archived'} icon={<BotsIcon />} text={t('FilterArchived')}/>}\n                        </>\n                    )}\n                    {items.map(x => <ChatChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} chatId={x} onClick={() => this.handleChatChange(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('Search')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>\n                <div ref={this.scrollRef} className='sidebar-page-content' style={{ marginTop: -3, position: 'relative', height: '100%' }} onScroll={onScroll}>\n                    <SectionHeader>{t('FilterChatTypes')}</SectionHeader>\n                    {include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('include_contacts')} checked={include_contacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_non_contacts')} checked={include_non_contacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_groups')} checked={include_groups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />\n                            <FilterText onClick={() => this.handleChange('include_channels')} checked={include_channels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />\n                            <FilterText onClick={() => this.handleChange('include_bots')} checked={include_bots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />\n                        </>\n                    )}\n                    {!include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('exclude_muted')} checked={exclude_muted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />\n                            <FilterText onClick={() => this.handleChange('exclude_read')} checked={exclude_read} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />\n                            <FilterText onClick={() => this.handleChange('exclude_archived')} checked={exclude_archived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />\n                        </>\n                    )}\n                    { chats && chats.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' style={{ margin: '8px -8px' }}/>\n                            <SectionHeader>{t('FilterChats')}</SectionHeader>\n                            { (chats || []).slice(0, limit).map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </>\n                    )}\n                    { searchItems && (\n                        <div className='edit-filter-chats-search'>\n                            { searchItems.chat_ids.map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x, true)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </div>\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nEditFilterChats.propTypes = {\n    filter: PropTypes.object,\n    chats: PropTypes.array,\n    mode: PropTypes.string,\n    onChange: PropTypes.func,\n    onScroll: PropTypes.func\n};\n\nexport default withTranslation()(EditFilterChats);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport DoneIcon from '../../../Assets/Icons/Done';\nimport EditFilterChats from './EditFilterChats';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { isFilterValid } from '../../../Utils/Filter';\nimport { CHAT_SLICE_LIMIT, FILTER_TITLE_MAX_LENGTH, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './CreateFilter.css';\n\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\n\nclass CreateFilter extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            prevFilterId: -1,\n            data: null,\n            openFilterChats: false,\n            mode: null,\n            title: '',\n            error: false,\n            shook: false,\n            chats: [],\n            limit: 0\n        }\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { filter, filterId } = props;\n        const { prevFilterId } = state;\n\n        if (filter && prevFilterId !== filterId){\n            return {\n                prevFilterId: filterId,\n                editFilter: {...filter},\n                title: filter.title\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [ fetch('data/Folders_2.json') ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.text()));\n\n            this.setState({ data });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleDone = () => {\n        const { onDone } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.titleRef.current.focus();\n            this.setState({\n                error: true\n            })\n            return;\n        } else {\n            this.setState({\n                error: false\n            })\n        }\n\n        editFilter.title = title;\n\n        if (!isFilterValid(editFilter)) {\n            this.handleScheduledAction('Please choose at least one chat for this folder.');\n            return;\n        }\n\n        onDone && onDone(editFilter);\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.isPaused) return;\n\n        lottie.play();\n    };\n\n    handleDeleteIncludeContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeNonContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_non_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterNonContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeGroups = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_groups: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterGroups')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeChannels = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_channels: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterChannels')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeBots = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_bots: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterBots')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, included_chat_ids: editFilter.included_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeMuted = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_muted: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeRead = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_read: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeArchived = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_archived: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, excluded_chat_ids: editFilter.excluded_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleOpenFilterChats = async mode => {\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 1000\n        });\n\n        this.setState({\n            openFilterChats: true,\n            mode,\n            chats: result.chat_ids,\n            limit: CHAT_SLICE_LIMIT\n        })\n    };\n\n    setDefaultFilterTitle() {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value;\n        if (!title) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = editFilter;\n\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = editFilter;\n\n            if (!included_chat_ids.length) {\n                if (include_contacts && !include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterContacts')\n                    });\n                } else if (!include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterNonContacts')\n                    });\n                } else if (include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('ChatHints')\n                    });\n                } else if (!include_contacts && !include_non_contacts && include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterBots')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterGroups')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && !include_groups && include_channels) {\n                    this.setState({\n                        title: t('FilterChannels')\n                    });\n                }\n            }\n        }\n    }\n\n    handleCloseFilterChats = () => {\n\n        this.setDefaultFilterTitle();\n\n        this.setState({\n            openFilterChats: false,\n            mode: null\n        })\n    };\n\n    handleChange = (type, value) => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        let newEditFilter = null;\n        switch (type) {\n            case 'include_contacts': {\n                newEditFilter = { ...editFilter, include_contacts: !editFilter.include_contacts };\n                break;\n            }\n            case 'include_non_contacts': {\n                newEditFilter = { ...editFilter, include_non_contacts: !editFilter.include_non_contacts };\n                break;\n            }\n            case 'include_bots': {\n                newEditFilter = { ...editFilter, include_bots: !editFilter.include_bots };\n                break;\n            }\n            case 'include_groups': {\n                newEditFilter = { ...editFilter, include_groups: !editFilter.include_groups };\n                break;\n            }\n            case 'include_channels': {\n                newEditFilter = { ...editFilter, include_channels: !editFilter.include_channels };\n                break;\n            }\n            case 'included_chat_ids': {\n                let included, excluded;\n                if (editFilter.included_chat_ids.includes(value)) {\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                    excluded = editFilter.excluded_chat_ids;\n                } else {\n                    included = [ ...editFilter.included_chat_ids, value ];\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n                break;\n            }\n            case 'exclude_muted': {\n                newEditFilter = { ...editFilter, exclude_muted: !editFilter.exclude_muted };\n                break;\n            }\n            case 'exclude_read': {\n                newEditFilter = { ...editFilter, exclude_read: !editFilter.exclude_read };\n                break;\n            }\n            case 'exclude_archived': {\n                newEditFilter = { ...editFilter, exclude_archived: !editFilter.exclude_archived };\n                break;\n            }\n            case 'excluded_chat_ids': {\n                let included, excluded;\n                if (editFilter.excluded_chat_ids.includes(value)) {\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                    included = editFilter.included_chat_ids;\n                } else {\n                    excluded = [ ...editFilter.excluded_chat_ids, value ];\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n\n                break;\n            }\n        }\n\n        // console.log('[f] onChange', type, value, newEditFilter);\n        if (!newEditFilter) return;\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleTitleChange = () => {\n        const title = this.titleRef.current.value.substr(0, FILTER_TITLE_MAX_LENGTH);\n\n        this.setState({\n            title\n        });\n    }\n\n    handleScroll = event => {\n        const scroll = event.target;\n        if (scroll.scrollTop + scroll.offsetHeight >= scroll.scrollHeight) {\n            this.setState({\n                limit: this.state.limit + CHAT_SLICE_LIMIT\n            })\n        }\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, filter, id, onClose } = this.props;\n        if (!filter) return null;\n\n        const { editFilter, data, openFilterChats, mode, chats, limit, title, error, shook } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = editFilter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = editFilter;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{id >= 0 ? t('FilterEdit') : t('CreateNewFilter')}</span>\n                    </div>\n                    <IconButton className='header-right-button' color='primary' onClick={this.handleDone}>\n                        <DoneIcon />\n                    </IconButton>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='filters-create-animation'>\n                        { data && (\n                            <React.Suspense fallback={null}>\n                                <RLottie\n                                    ref={this.lottieRef}\n                                    options={{\n                                        width: 80,\n                                        height: 80,\n                                        autoplay: true,\n                                        loop: false,\n                                        fileId: 'createFilter',\n                                        stringData: data\n                                    }}\n                                    onClick={this.handleAnimationClick}\n                                />\n                            </React.Suspense>\n                        )}\n                    </div>\n\n\n                    <div className='create-filter-title'>\n                        <TextField\n                            inputRef={this.titleRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FilterNameHint')}\n                            value={title}\n                            error={error}\n                            onChange={this.handleTitleChange}\n                        />\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterInclude')}</SectionHeader>\n                        <FilterText className='create-filter-add-chats' icon={<AddIcon/>} text={t('FilterAddChats')} onClick={() => this.handleOpenFilterChats('include')}/>\n                        {include_contacts && <FilterText onDelete={this.handleDeleteIncludeContacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />}\n                        {include_non_contacts && <FilterText onDelete={this.handleDeleteIncludeNonContacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />}\n                        {include_groups && <FilterText onDelete={this.handleDeleteIncludeGroups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />}\n                        {include_channels && <FilterText onDelete={this.handleDeleteIncludeChannels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />}\n                        {include_bots && <FilterText onDelete={this.handleDeleteIncludeBots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />}\n                        { included_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteIncludedChat}/>\n                        ))}\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterExclude')}</SectionHeader>\n                        <FilterText className='create-filter-remove-chats' icon={<RemoveIcon/>} text={t('FilterRemoveChats')} onClick={() => this.handleOpenFilterChats('exclude')}/>\n                        {exclude_muted && <FilterText onDelete={this.handleDeleteExcludeMuted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />}\n                        {exclude_read && <FilterText onDelete={this.handleDeleteExcludeRead} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />}\n                        {exclude_archived && <FilterText onDelete={this.handleDeleteExcludeArchived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />}\n                        { excluded_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteExcludedChat}/>\n                        ))}\n                    </div>\n                </div>\n                <SidebarPage open={openFilterChats} onClose={this.handleCloseFilterChats}>\n                    <EditFilterChats filter={editFilter} mode={mode} chats={chats} limit={limit} onChange={this.handleChange} onScroll={this.handleScroll}/>\n                </SidebarPage>\n            </>\n        );\n    }\n\n}\n\nCreateFilter.propTypes = {\n    filter: PropTypes.object,\n    id: PropTypes.number,\n    onDone: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(CreateFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { getChatOrder } from './Chat';\n\nexport function isFilterValid(filter) {\n    if (!filter) return false;\n\n    const {\n        include_contacts,\n        include_non_contacts,\n        include_bots,\n        include_groups,\n        include_channels,\n        included_chat_ids,\n        title\n    } = filter;\n\n    if (!title) return false;\n\n    return include_contacts || include_non_contacts || include_bots || include_groups || include_channels || included_chat_ids.length > 0;\n}\n\nexport function getFilterSubtitle(t, filterId, chats) {\n    if (!chats) return ' ';\n\n    let count = 0;\n    for (let i = 0; i < chats.chat_ids.length; i++) {\n        if (getChatOrder(chats.chat_ids[i], { '@type': 'chatListFilter', chat_filter_id: filterId }) !== '0') {\n            count++;\n        }\n    }\n\n    if (!count) {\n        return t('FilterNoChats');\n    }\n\n    return count === 1 ? '1 chat' : `${count} chats`;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getFilterSubtitle } from '../../Utils/Filter';\nimport { modalManager } from '../../Utils/Modal';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Filter.css';\n\nclass Filter extends React.Component {\n\n    state = {\n        dialog: false,\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n        this.handleOpenDialog();\n    };\n\n    handleOpenDialog = () => {\n        this.setState({\n            dialog: true\n        })\n    };\n\n    handleCloseDialog = () => {\n        this.setState({\n            dialog: false\n        })\n    };\n\n    handleDeleteCancel = () => {\n        this.handleCloseDialog();\n    };\n\n    handleDeleteConfirm = () => {\n        const { info } = this.props;\n        if (!info) return;\n\n        this.handleCloseDialog();\n\n        TdLibController.send({\n            '@type': 'deleteChatFilter',\n            chat_filter_id: info.id\n        });\n    };\n\n    handleOpenContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    render() {\n        const { t, info, onEdit, chats } = this.props;\n        if (!info) return null;\n\n        const { dialog, contextMenu, top, left } = this.state;\n\n        const { title } = info;\n        const subtitle = getFilterSubtitle(t, info.id, chats);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onEdit} onContextMenu={this.handleOpenContextMenu}>\n                    <ListItemText\n                        className='settings-list-item-text2'\n                        primary={title}\n                        secondary={subtitle}\n                    />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={dialog}\n                    onClose={this.handleCancel}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {t('FilterDeleteAlert')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleDeleteCancel} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteConfirm} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nFilter.propTypes = {\n    info: PropTypes.object.isRequired,\n    chats: PropTypes.object,\n    onEdit: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Filter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './RecommendedFilter.css';\n\nclass RecommendedFilter extends React.Component {\n\n    handleAdd = () => {\n        const { filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return;\n\n        const { filter } = recommendedFilter;\n\n        TdLibController.send({\n            '@type': 'createChatFilter',\n            filter\n        });\n    };\n\n    render() {\n        const { t, filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return null;\n\n        const { filter, description } = recommendedFilter;\n\n        return (\n            <ListItem\n                className='settings-list-item2'\n                role={undefined}\n                button>\n                <ListItemText\n                    className='settings-list-item-text'\n                    primary={filter.title}\n                    secondary={description}\n                />\n                <Button className='recommended-filter-add' variant='contained' disableElevation color='primary' onClick={this.handleAdd}>\n                    {t('Add')}\n                </Button>\n            </ListItem>\n        );\n    }\n\n}\n\nRecommendedFilter.propTypes = {\n    filter: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(RecommendedFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport CreateFilter from './CreateFilter';\nimport Filter from '../../Tile/Filter';\nimport RecommendedFilter from '../../Tile/RecommendedFilter';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { FILTER_COUNT_MAX, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport FilterStore from '../../../Stores/FilterStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Filters.css';\n\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\n\nclass Filters extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            openFilter: false,\n            filterId: -1,\n            filter: null,\n            editFilter: null,\n            recommendedFilters: null,\n            chats: null,\n            filtersMap: new Map()\n        };\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n        this.loadData();\n\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        setTimeout(() => {\n            this.loadData();\n        }, 100);\n    };\n\n    async loadData() {\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_chat_id: 0,\n            offset_order: '9223372036854775807',\n            limit: 1000\n        });\n\n        const { filters: filterInfo } = FilterStore;\n        const promises = [];\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\n            promises.push(TdLibController.send({\n                '@type': 'getChatFilter',\n                chat_filter_id: filterInfo[i].id\n            }).catch(e => null));\n        }\n        const filters = await Promise.all(promises);\n\n        const filtersMap = new Map();\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\n            filtersMap.set(filterInfo[i].id, filters[i]);\n        }\n\n        const recommendedFilters = await TdLibController.send({\n            '@type': 'getRecommendedChatFilters'\n        });\n\n        this.setState({\n            chats,\n            filtersMap,\n            recommendedFilters\n        });\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [\n                fetch('data/Folders_1.json'),\n                fetch('data/Folders_2.json'),\n            ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.text()));\n\n            this.setState({ data });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleCreateFilter = () => {\n        const { t } = this.props;\n        const { filters } = FilterStore;\n        if (filters.length >= FILTER_COUNT_MAX) {\n            this.handleScheduledAction(t('FilterCreateError'));\n            return;\n        }\n\n        const filter = {\n            '@type': 'chatFiler',\n            title: '',\n            icon_name: '',\n            pinned_chat_ids: [],\n            included_chat_ids: [],\n            excluded_chat_ids: [],\n            exclude_muted: false,\n            exclude_read: false,\n            exclude_archived: false,\n            include_contacts: false,\n            include_non_contacts: false,\n            include_bots: false,\n            include_groups: false,\n            include_channels: false\n        };\n\n        this.setState({\n            openFilter: true,\n            filterId: -1,\n            filter\n        });\n    };\n\n    handleCloseFilter = () => {\n        this.setState({\n            openFilter: false,\n            filterId: -1,\n            filter: null\n        })\n    };\n\n    handleEditFilter = async info => {\n        const filter = await TdLibController.send({\n            '@type': 'getChatFilter',\n            chat_filter_id: info.id\n        });\n\n        if (!filter) return;\n\n        this.setState({\n            openFilter: true,\n            filterId: info.id,\n            filter\n        })\n    };\n\n    handleDone = filter => {\n        const { filterId } = this.state;\n\n        this.handleCloseFilter();\n        if (!filter) return;\n\n        if (filterId !== -1) {\n            TdLibController.send({\n                '@type': 'editChatFilter',\n                chat_filter_id: filterId,\n                filter\n            });\n        } else {\n            TdLibController.send({\n                '@type': 'createChatFilter',\n                filter\n            });\n        }\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.isPaused) return;\n\n        lottie.play();\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { recommendedFilters, openFilter, filter, filterId, data, chats, filtersMap } = this.state;\n        const { filters } = FilterStore;\n\n        const hasFilters = filters && filters.length > 0;\n        const hasRecommendedFilters = recommendedFilters\n            && recommendedFilters.chat_filters.length > 0\n            && (!filters || filters.length < FILTER_COUNT_MAX);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('FilterAvailableTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section filters-create'>\n                        <div className='filters-create-animation'>\n                            { data && (\n                                <React.Suspense fallback={null}>\n                                    <RLottie\n                                        ref={this.lottieRef}\n                                        options={{\n                                            width: 80,\n                                            height: 80,\n                                            autoplay: true,\n                                            loop: false,\n                                            fileId: 'filters',\n                                            stringData: data\n                                        }}\n                                        onClick={this.handleAnimationClick}\n                                    />\n                                </React.Suspense>\n                            )}\n                        </div>\n\n                        <div className='filters-create-hint'>{t('CreateNewFilterInfo')}</div>\n                        <Button className='filters-create-button' color='primary' variant='contained' disableElevation startIcon={<AddIcon/>} onClick={this.handleCreateFilter}>\n                            {t('CreateNewFilter')}\n                        </Button>\n                    </div>\n                    { hasFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('Filters')}</SectionHeader>\n                                {(filters || []).map(x => (<Filter key={x.id} info={x} filter={filtersMap.get(x.id)} chats={chats} onEdit={() => this.handleEditFilter(x)}/>))}\n                            </div>\n                        </>\n                    )}\n                    { hasRecommendedFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('FilterRecommended')}</SectionHeader>\n                                {recommendedFilters.chat_filters.map(x => (<RecommendedFilter key={x.filter.title} filter={x}/>))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <SidebarPage open={openFilter} onClose={this.handleCloseFilter}>\n                    <CreateFilter filter={filter} id={filterId} onDone={this.handleDone}/>\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nFilters.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L17.414,10.9992136 L18.2071068,11.7928932 C18.5976311,12.1834175 18.5976311,12.8165825 18.2071068,13.2071068 C17.8466228,13.5675907 17.2793918,13.5953203 16.8871006,13.2902954 L16.7928932,13.2071068 L16,12.4142136 L7.70710678,20.7071068 C7.55082647,20.8633871 7.34814508,20.9625983 7.13144398,20.9913276 L7,21 L4,21 C3.48716416,21 3.06449284,20.6139598 3.00672773,20.1166211 L3,20 L3,17 C3,16.7789863 3.07316447,16.565516 3.20608063,16.3919705 L3.29289322,16.2928932 L11.585,7.99921356 L10.7928932,7.20710678 C10.4023689,6.81658249 10.4023689,6.18341751 10.7928932,5.79289322 C11.1533772,5.43240926 11.7206082,5.40467972 12.1128994,5.70970461 L12.2071068,5.79289322 L13,6.58521356 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 Z M13,9.415 L5,17.414 L5,18.999 L6.585,18.999 L14.585,11 L13,9.415 Z M18,4.41421356 L14.414,7.99921356 L16,9.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Colorize'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './Wallpaper.css';\nimport FileProgress from '../Viewer/FileProgress';\n\nclass Wallpaper extends React.Component {\n    state = {\n        loaded: false\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.props;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    handleClick = () => {\n        const { wallpaper, onClick } = this.props;\n\n        if (onClick) {\n            onClick(wallpaper);\n        }\n    };\n\n    render() {\n        const { wallpaper, isSelected } = this.props;\n        const { loaded  } = this.state;\n\n        const { document } = wallpaper;\n        const { minithumbnail, thumbnail } = document;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const tileLoaded = thumbSrc && loaded;\n        const src = thumbSrc || miniSrc;\n\n        return (\n            <div className='shared-photo' onClick={this.handleClick}>\n                <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover', backgroundPosition: '50%' }}>\n                    {src !== thumbSrc && (\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                    )}\n                </div>\n                { isSelected && <><div className='wallpaper-selected'/><div className='wallpaper-selected-inner'/></> }\n                { document && document.document && <FileProgress file={document.document} cancelButton={false}/> }\n            </div>\n        );\n    }\n\n}\n\nWallpaper.propTypes = {\n    wallpaper: PropTypes.object.isRequired,\n    isSelected: PropTypes.bool\n};\n\nexport default Wallpaper;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Wallpaper from '../../Tile/Wallpaper';\nimport { getSrc, loadBackgroundContent, loadBackgroundsContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ChatBackground.css';\n\nclass ChatBackground extends React.Component {\n    state = {\n        selectedId: ChatStore.wallpaper ? ChatStore.wallpaper.id : -1\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { backgrounds } = this.props;\n        if (!backgrounds) return;\n\n        const store = FileStore.getStore();\n        loadBackgroundsContent(store, backgrounds.backgrounds);\n    }\n\n    handleClick = wallpaper => {\n        this.setState({\n            selectedId: wallpaper.id\n        });\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail, document: file } = document;\n        if (!file) return;\n\n        const src = getSrc(file);\n        if (!src) {\n            const store = FileStore.getStore();\n            loadBackgroundContent(store, wallpaper, true);\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatBackground',\n            wallpaper\n        });\n    };\n\n    render() {\n        const { t, backgrounds, onClose } = this.props;\n        const { selectedId } = this.state;\n\n        const wallpapers = backgrounds.backgrounds.filter(x => x.type['@type'] === 'backgroundTypeWallpaper');\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ChatBackground')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content shared-media-list shared-photos-list'>\n                    { wallpapers.map(x => (<Wallpaper key={x.id} wallpaper={x} isSelected={x.id === selectedId} onClick={this.handleClick}/>)) }\n                </div>\n            </>\n        );\n    }\n}\n\nChatBackground.propTypes = {\n    backgrounds: PropTypes.object\n};\n\nexport default withTranslation()(ChatBackground);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport withTheme from '@material-ui/core/styles/withTheme';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './ThemePicker.css';\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case '#50A2E9':\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return { main: '#50A2E9' };\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { type, color, open } = this.state;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>{t('Appearance')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Theme')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className='theme-picker-group'\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Accent')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className='theme-picker-group'\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-red'\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-orange'\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-amber'\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-green'\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-blue'\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-indigo'\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-deep-purple'\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTheme,\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ColorizeIcon from '../../../Assets/Icons/Colorize';\nimport ChatBackground from './ChatBackground';\nimport SidebarPage from '../SidebarPage';\nimport SharedMediaIcon from '../../../Assets/Icons/SharedMedia';\nimport ThemePicker from '../ThemePicker';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './General.css';\n\nclass General extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            backgrounds: null,\n            openChatBackground: false\n        };\n\n        this.themePickerRef = React.createRef();\n    }\n\n    handleAppearance = () => {\n        this.themePickerRef.current.open();\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent = () => {\n        TdLibController.send({\n            '@type': 'getBackgrounds',\n            for_dark_theme: false\n        }).then(backgrounds => this.setState({ backgrounds }));\n    };\n\n    openChatBackground = () => {\n        if (!this.state.backgrounds) return;\n\n        this.setState({\n            openChatBackground: true\n        });\n    };\n\n    closeChatBackground = () => {\n        this.setState({\n            openChatBackground: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { backgrounds, openChatBackground } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GeneralSettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        {/*<ListItem autoFocus={false} className='settings-list-item' button onClick={this.openChatBackground}>*/}\n                        {/*    <ListItemIcon>*/}\n                        {/*        <SharedMediaIcon />*/}\n                        {/*    </ListItemIcon>*/}\n                        {/*    <ListItemText primary={t('ChatBackground')} />*/}\n                        {/*</ListItem>*/}\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.handleAppearance}>\n                            <ListItemIcon>\n                                <ColorizeIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Appearance')} />\n                        </ListItem>\n                    </div>\n                </div>\n                <SidebarPage open={openChatBackground} onClose={this.closeChatBackground}>\n                    <ChatBackground backgrounds={backgrounds} />\n                </SidebarPage>\n                <ThemePicker ref={this.themePickerRef} />\n            </>\n        );\n    }\n}\n\nGeneral.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(General);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Language.css';\n\nclass Language extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            language: language || 'en'\n        };\n    }\n\n    handleChange = language => {\n        this.setState({ language });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <div key={x.id} className='settings-item' onClick={() => this.handleChange(x.id)}>\n                <Radio\n                    color='primary'\n                    className='settings-item-control'\n                    checked={language === x.id}\n                    tabIndex={-1}\n                    inputProps={{ 'aria-labelledby': 'label-2' }}\n                />\n                <ListItemText id='label-2' primary={x.name} secondary={x.native_name} />\n            </div>\n        ));\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Language')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>{languages}</div>\n            </>\n        );\n    }\n}\n\nLanguage.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Language);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport NotificationStore from '../../../Stores/NotificationStore';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Notifications.css';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n\n        this.state = {\n            privateChatsSettings: NotificationStore.settings.get('notificationSettingsScopePrivateChats'),\n            groupChatsSettings: NotificationStore.settings.get('notificationSettingsScopeGroupChats'),\n            channelChatsSettings: NotificationStore.settings.get('notificationSettingsScopeChannelChats'),\n            contactJoined: !contactJoinedOption || !contactJoinedOption.value\n        };\n    }\n\n    componentWillUnmount() {\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n        this.setScopeNotificationSettings('notificationSettingsScopePrivateChats', privateChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeGroupChats', groupChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeChannelChats', channelChatsSettings);\n        this.setContactJoinedOption(contactJoined);\n    }\n\n    setContactJoinedOption() {\n        const { contactJoined } = this.state;\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n        const oldContactJoined = !contactJoinedOption || !contactJoinedOption.value;\n        if (oldContactJoined === contactJoined) return;\n\n        TdLibController.send({\n            '@type': 'setOption',\n            name: 'disable_contact_registered_notifications',\n            value: {\n                '@type': 'optionValueBoolean',\n                value: !contactJoined\n            }\n        });\n    }\n\n    setScopeNotificationSettings(scope, settings) {\n        if (!scope) return;\n        if (!settings) return;\n        const oldSettings = NotificationStore.settings.get(scope);\n        if (!oldSettings) return;\n\n        const { mute_for, show_preview } = settings;\n        const { mute_for: oldMuteFor, show_preview: oldShowPreview } = oldSettings;\n        if (mute_for === oldMuteFor && show_preview === oldShowPreview) return;\n\n        TdLibController.send({\n            '@type': 'setScopeNotificationSettings',\n            scope: { '@type': scope },\n            notification_settings: settings\n        });\n    }\n\n    handleMuteFor = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { mute_for } = settings;\n        const newSettings = { ...settings, mute_for: mute_for === 0 ? 365 * 24 * 60 * 60 : 0 };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleShowPreview = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { show_preview } = settings;\n        const newSettings = { ...settings, show_preview: !show_preview };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleContactJoined = () => {\n        this.setState({ contactJoined: !this.state.contactJoined });\n    };\n\n    isEnabled(settings) {\n        if (!settings) return false;\n\n        const { mute_for } = settings;\n\n        return mute_for === 0;\n    }\n\n    showPreview(settings) {\n        if (!settings) return false;\n\n        const { show_preview } = settings;\n\n        return show_preview;\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Notifications')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsPrivateChats')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForPrivateChats')}\n                                secondary={\n                                    this.isEnabled(privateChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(privateChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsGroups')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForGroups')}\n                                secondary={\n                                    this.isEnabled(groupChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(groupChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsChannels')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForChannels')}\n                                secondary={\n                                    this.isEnabled(channelChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(channelChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsOther')}</SectionHeader>\n                        <div className='settings-item' onClick={this.handleContactJoined}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={contactJoined}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('ContactJoined')}\n                                secondary={contactJoined ? t('ContactJoinedEnabled') : t('ContactJoinedDisabled')}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNotifications.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Notifications);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -1.000000)' fillRule='nonzero'>\n        <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M8,11 L16,11 C16.5522847,11 17,11.4477153 17,12 C17,12.5128358 16.6139598,12.9355072 16.1166211,12.9932723 L16,13 L8,13 C7.44771525,13 7,12.5522847 7,12 C7,11.4871642 7.38604019,11.0644928 7.88337887,11.0067277 L8,11 L16,11 L8,11 Z' />\n    </g>,\n    'Stop'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport { getMessageDate } from '../../Utils/Chat';\nimport './Session.css';\n\nclass Session extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { session } = this.props;\n        if (!session) return;\n        if (session.is_current) return;\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleTerminate = event => {\n        this.handleCloseContextMenu(event);\n\n        const { onTerminate, session } = this.props;\n\n        onTerminate(session);\n    };\n\n    render() {\n        const { session, t } = this.props;\n        if (!session) return null;\n\n        const { left, top, contextMenu } = this.state;\n        const {\n            is_current,\n            application_name,\n            application_version,\n            device_model,\n            platform,\n            system_version,\n            ip,\n            region,\n            country,\n            last_active_date\n        } = session;\n        const showDate = !is_current;\n\n        return (\n            <>\n                <ListItem className='settings-list-item' button onContextMenu={this.handleContextMenu}>\n                    <div className='session'>\n                        <div className='session-title'>\n                            <div className='session-app'>{`${application_name} ${application_version}`}</div>\n                            {showDate && (\n                                <div className='session-date'>{getMessageDate({ date: last_active_date })}</div>\n                            )}\n                        </div>\n                        <div className='session-subtitle1'>{`${device_model}, ${platform} ${system_version}`}</div>\n                        <div className='session-subtitle2'>\n                            {`${ip} - `}\n                            {region && `${region}, `}\n                            {country && `${country}`}\n                        </div>\n                    </div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleTerminate}>\n                            <ListItemIcon>\n                                <StopIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Terminate')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nSession.propTypes = {\n    session: PropTypes.object.isRequired,\n    onTerminate: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Session);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Button from '@material-ui/core/Button';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Session from '../../Tile/Session';\nimport StopIcon from '../../../Assets/Icons/Stop';\nimport SectionHeader from '../SectionHeader';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ActiveSessions.css';\n\nclass ActiveSessions extends React.Component {\n    state = {\n        open: false,\n        openAll: false,\n        session: null\n    };\n\n    handleTerminate = session => {\n        this.setState({\n            open: true,\n            session\n        });\n    };\n\n    handleTerminateAllOther = () => {\n        this.setState({\n            openAll: true\n        });\n    };\n\n    handleCloseConfirmation = () => {\n        this.setState({\n            open: false,\n            session: null\n        });\n    };\n\n    handleDoneConfirmation = async () => {\n        const { sessions, t } = this.props;\n        const { session } = this.state;\n        if (!session) return;\n\n        this.setState({\n            open: false,\n            session: null\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateSession',\n            session_id: session.id\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => x.id !== session.id);\n        this.forceUpdate();\n    };\n\n    handleCloseAllConfirmation = () => {\n        this.setState({\n            openAll: false\n        });\n    };\n\n    handleDoneAllConfirmation = async () => {\n        const { sessions } = this.props;\n\n        this.setState({\n            openAll: false\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateAllOtherSessions'\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => !x.is_current);\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, sessions, onClose } = this.props;\n        const { open, openAll } = this.state;\n\n        const current = sessions.sessions.find(x => x.is_current);\n        const other = sessions.sessions.filter(x => !x.is_current);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('SessionsTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    {Boolean(current) && (\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('CurrentSession')}</SectionHeader>\n                            <Session session={current} onTerminate={this.handleTerminate} />\n                            {other.length > 0 && (\n                                <ListItem\n                                    className='settings-list-item'\n                                    button\n                                    disableRipple\n                                    onClick={this.handleTerminateAllOther}>\n                                    <ListItemIcon>\n                                        <StopIcon color='secondary' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primaryTypographyProps={{ color: 'secondary' }}\n                                        primary={t('TerminateAllSessions')}\n                                    />\n                                </ListItem>\n                            )}\n                        </div>\n                    )}\n                    {other.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('OtherSessions')}</SectionHeader>\n                                {other.map(x => (\n                                    <Session key={x.id} session={x} onTerminate={this.handleTerminate} />\n                                ))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleCloseConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('TerminateSessionText')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={openAll}\n                    onClose={this.handleCloseAllConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureSessions')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseAllConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneAllConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nActiveSessions.propTypes = {\n    sessions: PropTypes.object.isRequired,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ActiveSessions);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,1 C20.6887547,1 22.8818181,3.12230671 22.9953805,5.78311038 L23,6 L23,9 C23,9.55228475 22.5522847,10 22,10 C21.4871642,10 21.0644928,9.61395981 21.0067277,9.11662113 L21,9 L21,6 C21,4.34314575 19.6568542,3 18,3 C16.4023191,3 15.0963391,4.24891996 15.0050927,5.82372721 L15,6 L15,8 C16.6568542,8 18,9.34314575 18,11 L18,19 C18,20.6568542 16.6568542,22 15,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,11 C2,9.34314575 3.34314575,8 5,8 L13,8 L13,6 C13,3.3112453 15.1223067,1.11818189 17.7831104,1.00461951 L18,1 Z M15,10 L5,10 C4.44771525,10 4,10.4477153 4,11 L4,19 C4,19.5522847 4.44771525,20 5,20 L15,20 C15.5522847,20 16,19.5522847 16,19 L16,11 C16,10.4477153 15.5522847,10 15,10 Z M10,13.5 C10.8284271,13.5 11.5,14.1715729 11.5,15 C11.5,15.8284271 10.8284271,16.5 10,16.5 C9.17157288,16.5 8.5,15.8284271 8.5,15 C8.5,14.1715729 9.17157288,13.5 10,13.5 Z' />,\n    'Unblock'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport User from '../../Tile/User';\nimport UnblockIcon from '../../../Assets/Icons/Unblock';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { openUser } from '../../../Actions/Client';\nimport { unblockSender } from '../../../Actions/Message';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './BlockedUsers.css';\n\nconst BlockedUser = React.memo(({ userId, onClick, onUnblock }) => {\n    const [contextMenu, setContextMenu] = React.useState(false);\n    const [top, setTop] = React.useState(0);\n    const [left, setLeft] = React.useState(0);\n    const { t } = useTranslation();\n\n    const handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        if (contextMenu) {\n            setContextMenu(false);\n        } else {\n            const { clientX, clientY } = event;\n\n            setContextMenu(true);\n            setLeft(clientX);\n            setTop(clientY);\n        }\n    };\n\n    const handleCloseContextMenu = () => {\n        setContextMenu(false);\n        setLeft(0);\n        setTop(0);\n    };\n\n    const handleClick = () => {\n        onClick(userId);\n    };\n\n    const handleUnblock = () => {\n        handleCloseContextMenu();\n        onUnblock(userId);\n    };\n\n    return (\n        <>\n            <ListItem className='settings-list-item' button onClick={handleClick} onContextMenu={handleContextMenu}>\n                <User userId={userId} />\n            </ListItem>\n            <Popover\n                open={contextMenu}\n                onClose={handleCloseContextMenu}\n                anchorReference='anchorPosition'\n                anchorPosition={{ top, left }}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}>\n                <MenuList onClick={e => e.stopPropagation()}>\n                    <MenuItem onClick={handleUnblock}>\n                        <ListItemIcon>\n                            <UnblockIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Unblock')} />\n                    </MenuItem>\n                </MenuList>\n            </Popover>\n        </>\n    );\n});\n\nBlockedUser.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onUnblock: PropTypes.func.isRequired\n};\n\nclass BlockedUsers extends React.Component {\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { users } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadUsersContent(store, users.senders.filter(x => x['@type'] === 'messageSenderUser').map(x => x.user_id));\n        loadChatsContent(store, users.senders.filter(x => x['@type'] === 'messageSenderChat').map(x => x.chat_id));\n    }\n\n    handleUnblockUser = async userId => {\n        unblockSender({ '@type': 'messageSenderUser', user_id: userId });\n    };\n\n    render() {\n        const { onClose, users, t } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('BlockedUsers')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        { users.senders.length > 0 ? (\n                            <>\n                                <SectionHeader multiline>{t('BlockedUsersInfo')}</SectionHeader>\n                                {\n                                    users.senders.filter(x => x['@type'] === 'messageSenderUser').map(x => <BlockedUser key={x.user_id} userId={x.user_id} onClick={openUser} onUnblock={this.handleUnblockUser}/>)\n                                }\n                            </>\n                        ) : (\n                            <SectionHeader>{t('NoBlocked')}</SectionHeader>\n                        )}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nBlockedUsers.propTypes = {\n    users: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(BlockedUsers);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(0.000000, -2.000000)' fillRule='nonzero'>\n        <path d='M18,2 C20.209139,2 22,3.790861 22,6 L22,6 L22,8 C22,8.55228475 21.5522847,9 21,9 C20.4477153,9 20,8.55228475 20,8 L20,8 L20,6 C20,4.8954305 19.1045695,4 18,4 L18,4 L4,4 C2.8954305,4 2,4.8954305 2,6 L2,6 L2,14 C2,15.1045695 2.8954305,16 4,16 L4,16 L14,16 C14.5522847,16 15,16.4477153 15,17 C15,17.5522847 14.5522847,18 14,18 L14,18 L12,18 L12,20 L14,20 C14.5128358,20 14.9355072,20.3860402 14.9932723,20.8833789 L15,21 C15,21.5522847 14.5522847,22 14,22 L14,22 L8,22 C7.44771525,22 7,21.5522847 7,21 C7,20.4477153 7.44771525,20 8,20 L8,20 L10,20 L10,18 L4,18 C1.85780461,18 0.108921124,16.3160315 0.00489530723,14.1996403 L0,14 L0,6 C0,3.790861 1.790861,2 4,2 L4,2 Z M22,11 C23.1045695,11 24,11.8954305 24,13 L24,20 C24,21.1045695 23.1045695,22 22,22 L19,22 C17.8954305,22 17,21.1045695 17,20 L17,13 C17,11.8954305 17.8954305,11 19,11 L22,11 Z M22,13 L19,13 L19,20 L22,20 L22,13 Z' />\n    </g>,\n    'Device'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -3.000000)' fillRule='nonzero'>\n        <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M16,10 L22,10 C22.5522847,10 23,10.4477153 23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L16,12 C15.4477153,12 15,11.5522847 15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L22,10 L16,10 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />\n    </g>,\n    'RemoveMember'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ActiveSessions from './ActiveSessions';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport BlockedUsers from './BlockedUsers';\nimport DeviceIcon from '../../../Assets/Icons/Device';\nimport RemoveMemberIcon from '../../../Assets/Icons/RemoveMember';\nimport SidebarPage from '../SidebarPage';\nimport SectionHeader from '../SectionHeader';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './PrivacySecurity.css';\n\nclass PrivacySecurity extends React.Component {\n    state = {\n        sessions: null,\n        users: null,\n        openBlockedUsers: false,\n        openActiveSessions: false\n    };\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    onUpdateUserFullInfo = update => {\n        const { user_id, user_full_info } = update;\n        const { users } = this.state;\n        if (!users) return;\n\n        const { total_count, senders } = users;\n        const { is_blocked } = user_full_info;\n        const prevIsBlocked = senders.findIndex(x => x.user_id === user_id) !== -1;\n        if (is_blocked === prevIsBlocked) return;\n\n        if (is_blocked) {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count + 1,\n                    senders: [{ '@type': 'messageSenderUser', user_id }, ...senders]\n                }\n            });\n        } else {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count - 1,\n                    senders: senders.filter(x => x.user_id !== user_id)\n                }\n            });\n        }\n    };\n\n    async loadContent() {\n        TdLibController.send({\n            '@type': 'getActiveSessions'\n        }).then(sessions => this.setState({ sessions }));\n\n        TdLibController.send({\n            '@type': 'getBlockedMessageSenders',\n            offset: 0,\n            limit: 100\n        }).then(users => this.setState({ users }));\n    }\n\n    openActiveSessions = () => {\n        if (!this.state.sessions) return;\n\n        this.setState({\n            openActiveSessions: true\n        });\n    };\n\n    closeActiveSessions = () => {\n        this.setState({\n            openActiveSessions: false\n        });\n    };\n\n    openBlockedUsers = () => {\n        if (!this.state.users) return;\n\n        this.setState({\n            openBlockedUsers: true\n        });\n    };\n\n    closeBlockedUsers = () => {\n        this.setState({\n            openBlockedUsers: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { openBlockedUsers, users, openActiveSessions, sessions } = this.state;\n\n        const sessionsCount =\n            sessions && sessions.sessions.length > 0\n                ? sessions.sessions.length === 1\n                    ? '1 session'\n                    : `${sessions.sessions.length} sessions`\n                : '1 session';\n\n        const usersCount =\n            users && users.total_count > 0\n                ? users.total_count === 1\n                    ? '1 user'\n                    : `${users.total_count} users`\n                : 'no users';\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('PrivacySettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openBlockedUsers}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <RemoveMemberIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('BlockedUsers')}\n                                secondary={usersCount}\n                            />\n                        </ListItem>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openActiveSessions}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <DeviceIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('SessionsTitle')}\n                                secondary={sessionsCount}\n                            />\n                        </ListItem>\n                    </div>\n                    {/*<div className='sidebar-page-section-divider' />*/}\n                    {/*<div className='sidebar-page-section'>*/}\n                    {/*    <SectionHeader>{t('PrivacyTitle')}</SectionHeader>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyPhoneTitle')}*/}\n                    {/*            secondary={t('LastSeenContacts')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('LastSeenTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyProfilePhotoTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyForwardsTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('WhoCanAddMe')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*</div>*/}\n                </div>\n                <SidebarPage open={openBlockedUsers} onClose={this.closeBlockedUsers}>\n                    <BlockedUsers users={users} />\n                </SidebarPage>\n                <SidebarPage open={openActiveSessions} onClose={this.closeActiveSessions}>\n                    <ActiveSessions sessions={sessions} />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nPrivacySecurity.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(PrivacySecurity);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Main from './Main';\nimport EditProfile from './EditProfile';\nimport Filters from './Filters';\nimport General from './General';\nimport Language from '../Language';\nimport Notifications from './Notifications';\nimport PrivacySecurity from './PrivacySecurity';\nimport SidebarPage from '../SidebarPage';\nimport { loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Settings.css';\n\nclass Settings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openEditProfile: false,\n            openGeneral: false,\n            openNotifications: false,\n            openPrivacySecurity: false,\n            openLanguage: false,\n            openFilters: false\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n        if (!photo) return;\n\n        const store = FileStore.get();\n        loadChatContent(store, chatId, true);\n    };\n\n    async loadContent() {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatContent(store, chatId, true);\n\n        const result = await TdLibController.send({\n            '@type': 'getUserFullInfo',\n            user_id: UserStore.getMyId()\n        });\n\n        UserStore.setFullInfo(UserStore.getMyId(), result);\n    }\n\n    openEditProfile = () => {\n        this.setState({\n            openEditProfile: true\n        });\n    };\n\n    closeEditProfile = () => {\n        this.setState({\n            openEditProfile: false\n        });\n    };\n\n    openGeneral = () => {\n        this.setState({\n            openGeneral: true\n        });\n    };\n\n    closeGeneral = () => {\n        this.setState({\n            openGeneral: false\n        });\n    };\n\n    openNotifications = () => {\n        this.setState({\n            openNotifications: true\n        });\n    };\n\n    closeNotifications = () => {\n        this.setState({\n            openNotifications: false\n        });\n    };\n\n    openPrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: true\n        });\n    };\n\n    closePrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: false\n        });\n    };\n\n    openLanguage = () => {\n        this.setState({\n            openLanguage: true\n        });\n    };\n\n    closeLanguage = () => {\n        this.setState({\n            openLanguage: false\n        });\n    };\n\n    openFilters = () => {\n        this.setState({\n            openFilters: true\n        });\n    };\n\n    closeFilters = () => {\n        this.setState({\n            openFilters: false\n        });\n    };\n\n    handleCloseSettings = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: false\n        });\n    };\n\n    render() {\n        const { chatId, popup } = this.props;\n        const { openEditProfile, openGeneral, openNotifications, openPrivacySecurity, openLanguage, openFilters } = this.state;\n\n        return (\n            <>\n                <Main\n                    chatId={chatId}\n                    popup={popup}\n                    onClose={this.handleCloseSettings}\n                    onEditProfile={this.openEditProfile}\n                    onGeneral={this.openGeneral}\n                    onNotifications={this.openNotifications}\n                    onPrivacySecurity={this.openPrivacySecurity}\n                    onLanguage={this.openLanguage}\n                    onFilters={this.openFilters}\n                />\n                <SidebarPage open={openEditProfile} onClose={this.closeEditProfile}>\n                    <EditProfile chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openGeneral} onClose={this.closeGeneral}>\n                    <General chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openNotifications} onClose={this.closeNotifications}>\n                    <Notifications chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openPrivacySecurity} onClose={this.closePrivacySecurity}>\n                    <PrivacySecurity />\n                </SidebarPage>\n                <SidebarPage open={openFilters} onClose={this.closeFilters}>\n                    <Filters />\n                </SidebarPage>\n                <SidebarPage open={openLanguage} onClose={this.closeLanguage}>\n                    <Language />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nSettings.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Settings);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { openUser } from '../../Actions/Client';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass Contacts extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: null,\n            searchItems: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        openUser(userId, false);\n        this.handleClose();\n    };\n\n    renderItem = ({ index, style }, items) => {\n        const userId = items.user_ids[index];\n\n        return <UserListItem key={userId} userId={userId} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null\n            });\n            return;\n        }\n\n        const searchItems = await TdLibController.send({\n            '@type': 'searchContacts',\n            query,\n            limit: 1000\n        });\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids.slice(0, 20));\n\n        this.setState({ searchItems });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: false\n        });\n    };\n\n    render() {\n        const { popup } = this.props;\n        const { items, searchItems } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <SearchInput inputRef={this.searchInputRef} onChange={this.handleSearch} />\n                </div>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nContacts.propTypes = {\n    popup: PropTypes.bool\n};\n\nexport default Contacts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DownloadIcon from '../../Assets/Icons/Download';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './UpdatePanel.css';\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { isSmallWidth } = AppStore;\n\n        this.state = {\n            newContentAvailable: false,\n            isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable, isSmallWidth } = this.state;\n        const { t } = this.props;\n\n        if (!newContentAvailable) {\n            return null;\n        }\n\n        return (\n            <Button className='update-button' variant='contained' color='primary' onClick={this.handleUpdate}>\n                {isSmallWidth ? <DownloadIcon/> : t('Update')}\n            </Button>\n        );\n    }\n}\n\nexport default withTranslation()(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NextIcon from '../../Assets/Icons/Back';\nimport NewChatPhoto from './NewChatPhoto';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewChannel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.descriptionRef = React.createRef();\n\n        this.state = {\n            error: false,\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: false\n        });\n    };\n\n    handleDone = async () => {\n        const { error } = this.state;\n        const { defaultPhoto, defaultPhotoFile } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            });\n        }\n\n        this.handleClose();\n\n        const description = this.descriptionRef.current.value;\n\n        const chat = await TdLibController.send({\n            '@type': 'createNewSupergroupChat',\n            title,\n            description,\n            is_channel: true,\n            location: null\n        });\n\n        if (defaultPhotoFile) {\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\n            });\n        } else if (defaultPhoto) {\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\n            });\n        }\n\n        openChat(chat.id);\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { error } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewChannel')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto onChoose={this.handleChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('EnterChannelName')}\n                                defaultValue={''}\n                            />\n                            <TextField\n                                inputRef={this.descriptionRef}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('DescriptionOptionalPlaceholder')}\n                                defaultValue={''}\n                            />\n                            <div className='edit-profile-hint'>{t('DescriptionInfo')}</div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewChannel.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewChannel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport UserTile from './UserTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getUserShortName } from '../../Utils/User';\nimport './UserChip.css';\n\nclass UserChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { userId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <UserTile userId={userId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getUserShortName(userId)}</div>\n            </div>\n        )\n    }\n}\n\nUserChip.propTypes = {\n    userId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default UserChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport UserChip from '../Tile/UserChip';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, selected, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.selected !== selected) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, selected, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <Checkbox className='user-list-item-checkbox' checked={selected} color='primary' />\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass AddParticipants extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            items: null,\n            searchItems: null,\n            selectedItems: {\n                array: [],\n                map: new Map()\n            },\n            focusedItem: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    getUserIds() {\n        return this.state.selectedItems.array;\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        const { selectedItems, focusedItem } = this.state;\n        const { map, array } = selectedItems;\n\n        const newMap = new Map(map);\n        let newArray;\n        let newFocusedItem = null;\n        let isDeleting = false;\n        if (map.has(userId)) {\n            newMap.delete(userId);\n            newArray = array.filter(x => x !== userId);\n            newFocusedItem = focusedItem === userId ? null : focusedItem;\n            isDeleting = true;\n        } else {\n            newMap.set(userId, userId);\n            newArray = array.concat([userId]);\n            newFocusedItem = null;\n        }\n\n        const input = this.searchInputRef.current;\n        input.focus();\n        if (!isDeleting) {\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        this.setState({\n            focusedItem: newFocusedItem,\n            selectedItems: {\n                array: newArray,\n                map: newMap\n            }\n        }, () => {\n            this.animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText);\n            this.animateItems(prevMap);\n        });\n    };\n\n    animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText) {\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                                   + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                                     + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 101);\n        });\n    }\n\n    renderItem = ({ index, style }, items, selectedItemsMap) => {\n        const userId = items[index];\n        const isSelected = selectedItemsMap.has(userId);\n\n        return <UserListItem key={userId} userId={userId} selected={isSelected} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                publicItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchContacts',\n                query,\n                limit: 20\n            })\n        );\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchPublicChats',\n                query\n            })\n        );\n        const [searchItems, publicChats] = await Promise.all(promises);\n\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const publicItems = { '@type': 'users', user_ids: [] };\n        publicChats.chat_ids.reduce((array, chatId) => {\n            const chat = ChatStore.get(chatId);\n            if (chat && chat.type['@type'] === 'chatTypePrivate') {\n                array.push(chat.type.user_id);\n            }\n            return array;\n        }, publicItems.user_ids);\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids);\n        loadUsersContent(store, publicItems.user_ids);\n\n        this.setState({ searchItems, publicItems, focusedItem: null });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleSearchClose = event => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { map } = selectedItems;\n        if (!map.has(focusedItem)) return;\n\n        event.stopPropagation();\n        event.nativeEvent.stopImmediatePropagation();\n\n        this.setState({\n            focusedItem: null\n        })\n    };\n\n    handleBackspace = () => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { array, map } = selectedItems;\n        if (!array) return;\n        if (!array.length) return;\n\n        if (map.has(focusedItem)) {\n            this.handleOpenUser(focusedItem);\n            return;\n        }\n\n        const lastItem = array[array.length - 1];\n        if (!lastItem) return;\n\n        this.setState({\n            focusedItem: lastItem\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { items, searchItems, publicItems, selectedItems, focusedItem } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        this.itemsRef.clear();\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GroupAddMembers')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    {selectedItems.array.map(x => <UserChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} userId={x} onClick={() => this.handleOpenUser(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('SendMessageTo')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='contacts-border'/>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items.user_ids, selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && publicItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids.concat(publicItems.user_ids)}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems.user_ids.concat(publicItems.user_ids), selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nAddParticipants.propTypes = {\n    popup: PropTypes.bool,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(AddParticipants);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport SectionHeader from './SectionHeader';\nimport User from '../Tile/User';\nimport NewChatPhoto from './NewChatPhoto';\nimport { loadUsersContent } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './NewGroupParams.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass NewGroupParams extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n\n        this.state = {\n            error: false\n        };\n    }\n\n    componentDidMount() {\n        const { userIds } = this.props;\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, userIds);\n    }\n\n    getTitle() {\n        const { error } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return title;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            })\n        }\n\n        return title;\n    }\n\n    handleClose = () => {\n        const { onClose } = this.props;\n        if (!onClose) return;\n\n        onClose();\n    };\n\n    render() {\n        const { t, userIds, defaultPhotoURL, onChoosePhoto } = this.props;\n        const { error } = this.state;\n\n        const items = userIds.map(userId => (<UserListItem key={userId} userId={userId} />));\n\n        const itemsCaption = userIds.length !== 1 ? `${userIds.length} members` : `${userIds.length} member`;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewGroup')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto defaultURL={defaultPhotoURL} onChoose={onChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('GroupName')}\n                                defaultValue={''}\n                            />\n                        </div>\n                        <SectionHeader>{itemsCaption}</SectionHeader>\n                        {items}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroupParams.propTypes = {\n    userIds: PropTypes.array,\n    defaultPhotoURL: PropTypes.string,\n    onChoosePhoto: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(NewGroupParams);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AddParticipants from './AddParticipants';\nimport NewGroupParams from './NewGroupParams';\nimport SidebarPage from './SidebarPage';\nimport NextIcon from '../../Assets/Icons/Back';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewGroup extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.addParticipantsRef = React.createRef();\n        this.newGroupParamsRef = React.createRef();\n\n        this.state = {\n            openParams: false,\n            userIds: [],\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleDone = async () => {\n        const { openParams } = this.state;\n        if (!openParams) {\n            const userIds = this.addParticipantsRef.current.getUserIds();\n            if (!userIds.length) return;\n\n            this.setState({\n                openParams: true,\n                userIds\n            })\n        } else {\n            const { userIds, defaultPhoto, defaultPhotoFile } = this.state;\n\n            const title = this.newGroupParamsRef.current.getTitle();\n            if (!title) {\n                return;\n            }\n\n            this.handleClose();\n\n            const chat = await TdLibController.send({\n                '@type': 'createNewSupergroupChat',\n                title,\n                is_channel: false,\n                description: '',\n                location: null\n            });\n\n            if (defaultPhotoFile) {\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\n                });\n            } else if (defaultPhoto) {\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\n                });\n            }\n\n            if (userIds.length > 0) {\n                TdLibController.send({\n                    '@type': 'addChatMembers',\n                    chat_id: chat.id,\n                    user_ids: userIds\n                });\n            }\n\n            openChat(chat.id);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleCloseParams = () => {\n        this.setState({\n            openParams: false,\n            userIds: []\n        })\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    }\n\n    render() {\n        const { popup } = this.props;\n        const { openParams, userIds, defaultPhotoURL } = this.state;\n\n        return (\n            <>\n                <AddParticipants ref={this.addParticipantsRef} popup={popup} onClose={this.handleClose}/>\n\n                <SidebarPage open={openParams}>\n                    <NewGroupParams\n                        ref={this.newGroupParamsRef}\n                        defaultPhotoURL={defaultPhotoURL}\n                        userIds={userIds}\n                        onChoosePhoto={this.handleChoosePhoto}\n                        onClose={this.handleCloseParams}\n                    />\n                </SidebarPage>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroup.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewGroup);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Contacts from '../ColumnLeft/Contacts';\nimport DialogsHeader from '../ColumnLeft/DialogsHeader';\nimport Search from '../ColumnLeft/Search/Search';\nimport Settings from '../ColumnLeft/Settings/Settings';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatInfoDialog.css';\nimport { openChat } from '../../Actions/Client';\nimport NewChannel from '../ColumnLeft/NewChannel';\nimport NewGroup from '../ColumnLeft/NewGroup';\n\nclass SidebarDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.headerRef = React.createRef();\n\n        this.state = {\n            openSearch: false,\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { openSearch, searchText, openSettings, openContacts, openNewGroup, openNewChannel } = this.state;\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        this.query = query;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null\n            }\n        );\n    };\n\n    handleDialogEnter = () => {\n        if (!this.query) return;\n\n        const header = this.headerRef.current;\n        if (header) {\n            header.setInitQuery(this.query);\n        }\n\n        this.query = null;\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false,\n            openSearch: false\n        });\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        this.handleCloseSearch();\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    render() {\n        const { meChatId, searchChatId, searchText, openSearch, openContacts, openSettings, openNewGroup, openNewChannel } = this.state;\n        if (!openSearch && !openContacts && !openSettings && !openNewGroup && !openNewChannel) {\n            return null;\n        }\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}\n                onEnter={this.handleDialogEnter}\n                >\n                {openSettings && <Settings chatId={meChatId} popup/>}\n                {openContacts && <Contacts popup />}\n                {openNewGroup && <NewGroup popup/>}\n                {openNewChannel && <NewChannel popup />}\n                {openSearch && (\n                    <>\n                        <DialogsHeader\n                            ref={this.headerRef}\n                            openSearch={true}\n                            timeout={false}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                            popup\n                        />\n                        <div className='search-content'>\n                            <Search\n                                chatId={searchChatId}\n                                text={searchText}\n                                onSelectMessage={this.handleSelectMessage}\n                                onClose={this.handleCloseSearch}\n                            />\n                        </div>\n                    </>\n                )}\n            </Dialog>\n        );\n    }\n}\n\nSidebarDialog.propTypes = {};\n\nexport default SidebarDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { orderCompare } from './Common';\nimport { getChatOrder } from './Chat';\nimport ChatStore from '../Stores/ChatStore';\n\nexport function getArchiveTitle() {\n    const archive = ChatStore.chatList.get('chatListArchive');\n    const chats = [];\n    const chatsOrder = [];\n    if (archive) {\n        for (const chatId of archive.keys()) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                const order = getChatOrder(chatId, { '@type': 'chatListArchive' });\n                if (order !== '0') chats.push(chat);\n                chatsOrder.push({ order, id: chatId, title: chat.title });\n            }\n        }\n    }\n\n    const orderedChats = chats.sort((a, b) => orderCompare(getChatOrder(b, { '@type': 'chatListArchive' }), getChatOrder(a, { '@type': 'chatListArchive' })));\n\n    return orderedChats.map(x => x.title).join(', ');\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport Archive from './Archive';\nimport Search from './Search/Search';\nimport Filters from './Filters';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport SidebarPage from './SidebarPage';\nimport Settings from './Settings/Settings';\nimport Contacts from './Contacts';\nimport UpdatePanel from './UpdatePanel';\nimport SidebarDialog from '../Popup/SidebarDialog';\nimport NewGroup from './NewGroup';\nimport NewChannel from './NewChannel';\nimport { openChat } from '../../Actions/Client';\nimport { getArchiveTitle } from '../../Utils/Archive';\nimport { loadChatsContent } from '../../Utils/File';\nimport { duration } from '@material-ui/core/styles/transitions';\nimport { CHAT_SLICE_LIMIT } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialogs.css';\n\nconst defaultTimeout = {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n};\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogListRef = React.createRef();\n        this.archiveListRef = React.createRef();\n        this.dialogsHeaderRef = React.createRef();\n\n        this.state = {\n            cache: null,\n\n            showArchive: false,\n            archiveTitle: null,\n\n            mainItems: [],\n            archiveItems: [],\n\n            timeout: defaultTimeout,\n            openSearch: false,\n            openArchive: false,\n            openContacts: false,\n            openSettings: false,\n            openNewGroup: false,\n            openNewChannel: false,\n\n            searchChatId: 0,\n            searchText: null,\n            query: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            openSearch,\n            openArchive,\n            openSettings,\n            openContacts,\n            openNewGroup,\n            openNewChannel,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        if (nextState.cache !== cache) {\n            return true;\n        }\n\n        if (nextState.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextState.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.archiveItems !== archiveItems) {\n            return true;\n        }\n\n        if (nextState.mainItems !== mainItems) {\n            return true;\n        }\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.openArchive !== openArchive) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadCache();\n\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        this.handleSaveCache();\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        if (!isSmallWidth) return;\n\n        const { openSettings, openContacts, openSearch, openNewGroup, openNewChannel } = this.state;\n        if (openSettings || openContacts || openSearch || openNewGroup || openNewChannel) {\n            this.setState({\n                    openContacts: false,\n                    openSettings: false,\n                    openSearch: false,\n                    openNewGroup: false,\n                    openNewChannel: false,\n                    timeout: 0\n                }, () => {\n                    this.setState({\n                        timeout: defaultTimeout\n                    });\n            });\n        }\n    };\n\n    async loadCache() {\n        const cache = (await CacheStore.load()) || {};\n\n        const { chats, archiveChats } = cache;\n\n        FilterStore.filters = FilterStore.filters || CacheStore.filters;\n        this.setState({\n            cache,\n\n            showArchive: archiveChats && archiveChats.length > 0,\n            archiveTitle: getArchiveTitle()\n        });\n\n        this.loadChatContents((chats || []).map(x => x.id));\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateCacheLoaded'\n        });\n    }\n\n    async saveCache() {\n        const promises = [];\n        promises.push(TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: CHAT_SLICE_LIMIT\n        }));\n        promises.push(TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListArchive' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: CHAT_SLICE_LIMIT\n        }));\n        const [mainChats, archiveChats] = await Promise.all(promises);\n\n        const { filters } = FilterStore;\n\n        CacheStore.save(filters, mainChats.chat_ids, archiveChats.chat_ids);\n    }\n\n    onUpdateChatOrder = update => {\n        const { showArchive: prevShowArchive } = this.state;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archiveList = ChatStore.chatList.get('chatListArchive');\n        const showArchive = archiveList && archiveList.size > 0;\n\n        this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\n            if (!prevShowArchive && showArchive) {\n                const { current } = this.dialogListRef;\n                if (current.listRef) {\n                    const { current: listCurrent } = current.listRef;\n                    if (listCurrent && listCurrent.scrollTop > 0) {\n                        current.scrollTop += 68;\n                    }\n                }\n            }\n        });\n\n        if (prevShowArchive && !showArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        }\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    onClientUpdateArchive = update => {\n        const { open } = update;\n\n        this.setState({ openArchive: open });\n    };\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        const header = this.dialogsHeaderRef.current;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null,\n                openArchive: false,\n                openContacts: false,\n                openSettings: false,\n                openNewGroup: false,\n                openNewChannel: false,\n            },\n            () => {\n                if (header) {\n                    header.setInitQuery(query);\n                }\n            }\n        );\n    };\n\n    handleHeaderClick = () => {\n        const { openArchive } = this.state;\n        if (openArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        } else {\n            this.dialogListRef.current.scrollToTop();\n        }\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch,\n            searchChatId,\n            searchText\n        });\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSaveCache = () => {\n        this.saveCache();\n    };\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    handleCloseArchive = () => {\n        this.setState({ openArchive: false });\n    };\n\n    handleCloseContacts = () => {\n        this.setState({ openContacts: false });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({ openSettings: false });\n    };\n\n    handleCloseNewGroup = () => {\n        this.setState({ openNewGroup: false });\n    };\n\n    handleCloseNewChannel = () => {\n        this.setState({ openNewChannel: false });\n    };\n\n    render() {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            meChatId,\n            openSettings,\n            openContacts,\n            openArchive,\n            openSearch,\n            openNewGroup,\n            openNewChannel,\n            timeout,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        const mainCacheItems = cache ? cache.chats || [] : null;\n        const archiveCacheItems = cache ? cache.archiveChats || [] : null;\n\n        return (\n            <>\n                <div className='dialogs'>\n                    <div className='sidebar-page'>\n                        <DialogsHeader\n                            ref={this.dialogsHeaderRef}\n                            openSearch={openSearch}\n                            timeout={timeout !== 0}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                        />\n                        <div className='dialogs-content'>\n                            <div className='dialogs-content-internal'>\n                                <Filters/>\n                                {/*<div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>*/}\n                                <DialogsList\n                                    type='chatListMain'\n                                    ref={this.dialogListRef}\n                                    cacheItems={mainCacheItems}\n                                    items={mainItems}\n                                    showArchive={showArchive}\n                                    archiveTitle={archiveTitle}\n                                    open={true}\n                                    onSaveCache={this.handleSaveCache}\n                                />\n                            </div>\n                            <CSSTransition\n                                classNames='search'\n                                timeout={timeout}\n                                in={openSearch}\n                                mountOnEnter={true}\n                                unmountOnExit={true}>\n                                <Search\n                                    chatId={searchChatId}\n                                    text={searchText}\n                                    onSelectMessage={this.handleSelectMessage}\n                                    onClose={this.handleCloseSearch}\n                                />\n                            </CSSTransition>\n                        </div>\n                        <UpdatePanel />\n                    </div>\n\n                    <SidebarPage open={openArchive} timeout={timeout} onClose={this.handleCloseArchive}>\n                        <Archive\n                            innerListRef={this.archiveListRef}\n                            items={archiveItems}\n                            cacheItems={archiveCacheItems}\n                        />\n                    </SidebarPage>\n\n                    <SidebarPage open={openContacts} timeout={timeout} onClose={this.handleCloseContacts}>\n                        <Contacts />\n                    </SidebarPage>\n\n                    <SidebarPage open={openSettings} timeout={timeout} onClose={this.handleCloseSettings}>\n                        <Settings chatId={meChatId} />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewGroup} timeout={timeout} onClose={this.handleCloseNewGroup}>\n                        <NewGroup />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewChannel} timeout={timeout} onClose={this.handleCloseNewChannel}>\n                        <NewChannel />\n                    </SidebarPage>\n\n                    <SidebarDialog/>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Dialogs;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaViewerContent = update => {\n        if (ApplicationStore.mediaViewerContent) {\n            this.handleClose();\n        }\n    };\n\n    onClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}>\n                <ChatInfo className='chat-info-dialog-content' chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default ChatInfoDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M2.65383364,2.92607697 L4.145798,9.778632 C4.26700994,10.3353554 4.73555061,10.7489799 5.30300879,10.8002098 L16.196355,11.7836569 C16.3159306,11.7944521 16.4041145,11.9001385 16.3933192,12.0197141 C16.3838746,12.1243302 16.3009783,12.2072294 16.1963626,12.2166777 L5.30295988,13.2005138 C4.73552551,13.2517615 4.26701089,13.6653731 4.14579755,14.2220735 L2.65385781,21.074154 C2.55168485,21.543407 2.84926209,22.0066394 3.31851517,22.1088123 C3.50628037,22.1496954 3.70229947,22.1272304 3.87594675,22.0449272 L23.4110848,12.7858981 C23.8450551,12.5802101 24.0301144,12.0616646 23.8244264,11.6276943 C23.7384721,11.4463438 23.5924353,11.300307 23.4110848,11.2143527 L3.87592461,1.95531307 C3.44195432,1.74962507 2.92340882,1.93468443 2.71772082,2.36865471 C2.63541897,2.54229904 2.61295329,2.73831451 2.65383364,2.92607697 Z' />,\n    'Send'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,10 C19.5522847,10 20,10.4477153 20,11 C20,15.0792885 16.9468043,18.445465 13.0009551,18.9379871 L13,22 C13,22.5522847 12.5522847,23 12,23 C11.4871642,23 11.0644928,22.6139598 11.0067277,22.1166211 L11,22 L11.0000487,18.9381123 C7.05371356,18.4460359 4,15.0796344 4,11 C4,10.4477153 4.44771525,10 5,10 C5.55228475,10 6,10.4477153 6,11 C6,14.3137085 8.6862915,17 12,17 C15.3137085,17 18,14.3137085 18,11 C18,10.4477153 18.4477153,10 19,10 Z M12,2 C14.209139,2 16,3.790861 16,6 L16,11 C16,13.209139 14.209139,15 12,15 C9.790861,15 8,13.209139 8,11 L8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 L10,11 C10,12.1045695 10.8954305,13 12,13 C13.1045695,13 14,12.1045695 14,11 L14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'Microphone'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.657825,8.68730116 L7.89384699,12.5266719 C6.53977525,13.9078658 6.53979565,16.118605 7.89389288,17.4997739 C9.18119565,18.812813 11.2598788,18.8798255 12.6276396,17.6859428 L12.8071445,17.5177786 L19.3928802,10.8005213 C21.4766204,8.67512215 21.4766204,5.27313659 19.3928802,3.14773741 C17.4051081,1.12022499 14.1862843,1.0310006 12.0906645,2.90336495 L11.834659,3.14773741 L5.26671543,9.84699003 C2.45333216,12.7166196 2.45333216,17.3098454 5.26671543,20.179475 C7.96150749,22.9281424 12.3352577,23.0332941 15.1578204,20.4629606 L15.452067,20.1794113 L19.2160679,16.340063 C19.6027032,15.945688 19.596429,15.3125541 19.202054,14.9259188 C18.8076791,14.5392835 18.1745452,14.5455577 17.7879099,14.9399327 L13.9520378,18.8511531 C11.9281881,20.8353343 8.67903707,20.8031766 6.6948559,18.7793268 C4.64395201,16.6874204 4.64395201,13.3390446 6.6948559,11.2471382 L13.3088798,4.50180526 C14.6072848,3.22884976 16.6917843,3.24948061 17.9647398,4.54788555 C19.2860006,5.89556155 19.2860006,8.05269718 17.9647398,9.40037319 L11.3764629,16.119959 C10.803533,16.6816592 9.88373353,16.6725557 9.32203335,16.0996258 C8.73040544,15.4961698 8.73039653,14.5302606 9.3220133,13.9267937 L13.0859914,10.0874229 C13.4726243,9.6930457 13.4663463,9.05991185 13.0719691,8.67327889 C12.6775919,8.28664594 12.044458,8.29292392 11.657825,8.68730116 Z' />,\n    'Attach'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AttachFileIcon from '../../Assets/Icons/Attach';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport PollIcon from '@material-ui/icons/PollOutlined';\nimport { canSendMediaMessages, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\nimport './AttachButton.css';\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className='inputbox-icon-button'\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    classes={{\n                        paper: 'attach-button-paper'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleChange = () => {\n        const { option } = this.props;\n        if (!option) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChooseOption',\n            id: option.id\n        });\n    };\n\n    render() {\n        const { t, option } = this.props;\n        const { remainLength } = this.state;\n\n        const { is_chosen } = option;\n\n        return (\n            <div className='create-poll-option'>\n                <div className='create-poll-option-wrapper'>\n                    <Radio\n                        key={Date.now()}\n                        classes={{ root: 'create-poll-radio-root' }}\n                        color='primary'\n                        checked={is_chosen}\n                        onChange={this.handleChange}\n                    />\n                    <div\n                        ref={this.optionTextRef}\n                        className='create-poll-option-text'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('Option')}\n                        data-length={POLL_OPTION_LENGTH}\n                        data-max-length={POLL_OPTION_MAX_LENGTH}\n                        onInput={this.handleInput}\n                        onKeyDown={this.handleKeyDown}\n                        onPaste={this.handlePaste}\n                    />\n                </div>\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className='create-poll-option-button' onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className='create-poll-option-bottom-border' />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className='create-poll-option-subtitle'\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withSnackbar } from 'notistack';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport { modalManager } from '../../Utils/Modal';\nimport {\n    NOTIFICATION_AUTO_HIDE_DURATION_MS,\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.off('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.off('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.off('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    handleChangeAnonymous = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAnonymous'\n        });\n    };\n\n    handleChangeAllowMultipleAnswers = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAllowMultipleAnswers'\n        });\n    };\n\n    handleChangeType = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeType'\n        });\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleAllowMultipleAnswersClick = event => {\n        const { t } = this.props;\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n        if (quizPoll) {\n            event.stopPropagation();\n\n            this.handleScheduledAction(t('PollQuizOneRightAnswer'));\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const { is_anonymous } = poll;\n\n        const options = poll ? poll.options : [];\n        const allowMultipleAnswers = poll.type.allow_multiple_answers;\n        const allowMultipleAnswersDisabled = poll.type['@type'] !== 'pollTypeRegular';\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classNames('create-poll-dialog', { 'create-quiz-dialog': quizPoll })}\n                    open\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: 'create-poll-dialog-list' }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className='create-poll-add-option'\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('Settings')}\n                        </Typography>\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        color='primary'\n                                        checked={is_anonymous}\n                                        onChange={this.handleChangeAnonymous}\n                                    />\n                                }\n                                label={t('PollAnonymous')}\n                            />\n                            <div onClick={this.handleAllowMultipleAnswersClick} style={{ background: 'transparent' }}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            color='primary'\n                                            disabled={allowMultipleAnswersDisabled}\n                                            checked={allowMultipleAnswers}\n                                            onChange={this.handleChangeAllowMultipleAnswers}\n                                        />\n                                    }\n                                    label={t('PollMultiple')}\n                                />\n                            </div>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox color='primary' checked={quizPoll} onChange={this.handleChangeType} />\n                                }\n                                label={t('PollQuiz')}\n                            />\n                        </FormGroup>\n                        <Typography>{t('QuizInfo')}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Create')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className='create-poll-dialog-root'\n                    open={confirm}\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        {t('CancelPollAlertText')}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { validateUrl } from '../../Utils/Url';\nimport { modalManager } from '../../Utils/Modal';\nimport './EditUrlDialog.css';\n\nclass EditUrlDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.textRef = React.createRef();\n        this.textInputRef = React.createRef();\n        this.urlRef = React.createRef();\n        this.urlInputRef = React.createRef();\n\n        this.state = {};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { defaultText, defaultUrl, open } = this.props;\n\n        if (open && prevProps.open !== open) {\n            setTimeout(() => {\n                const text = this.textInputRef.current;\n                const url = this.urlInputRef.current;\n\n                if (!text) return;\n                if (!url) return;\n\n                if (!defaultText) {\n                    text.focus();\n                } else if (!defaultUrl) {\n                    url.focus();\n                } else {\n                    text.focus();\n                    text.select();\n                }\n            }, 0);\n        }\n    }\n\n    componentDidMount() {\n        // const { defaultText, defaultUrl } = this.props;\n        //\n        // const text = this.textInputRef.current;\n        // const url = this.urlInputRef.current;\n        //\n        // if (!text) return;\n        // if (!url) return;\n        //\n        // setTimeout(() => {\n        //     if (!defaultText) {\n        //         text.focus();\n        //     } else if (!defaultUrl) {\n        //         url.focus();\n        //     } else {\n        //         text.focus();\n        //         // text.select();\n        //     }\n        // }, 0);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { defaultText, defaultUrl, onDone, onCancel, open } = this.props;\n        const { textError, urlError } = this.state;\n\n        if (nextProps.defaultText !== defaultText) {\n            return true;\n        }\n\n        if (nextProps.defaultUrl !== defaultUrl) {\n            return true;\n        }\n\n        if (nextState.textError !== textError) {\n            return true;\n        }\n\n        if (nextState.urlError !== urlError) {\n            return true;\n        }\n\n        if (nextProps.onDone !== onDone) {\n            return true;\n        }\n\n        if (nextProps.onCancel !== onCancel) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (state.prevOpen !== props.open) {\n            return {\n                prevOpen: true,\n                textError: false,\n                urlError: false,\n                text: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    handleTextKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.urlInputRef.current.focus();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleUrlKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.handleDone();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleTextChange = event => {\n        this.setState({\n            text: event.target.value\n        });\n    };\n\n    handleUrlChange = event => {\n        this.setState({\n            url: event.target.value\n        });\n    };\n\n    handleDone = () => {\n        const { defaultText, defaultUrl } = this.props;\n        let { text, url } = this.state;\n\n        text = text !== null ? text : defaultText;\n        url = url !== null ? url : defaultUrl;\n\n        if (!text && !url) {\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        if (!text) {\n            this.setState({ textError: true });\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        url = validateUrl(url);\n        if (!url) {\n            this.setState({ urlError: true });\n            this.urlInputRef.current.focus();\n            return;\n        }\n\n        const { onDone } = this.props;\n\n        onDone(text, url);\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n\n        onCancel();\n    };\n\n    render() {\n        const { open, defaultUrl, defaultText, t } = this.props;\n        const { textError, urlError } = this.state;\n        if (!open) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-url-dialog-title'>\n                <DialogTitle id='edit-url-dialog-title'>{t('CreateLink')}</DialogTitle>\n                <DialogContent>\n                    <div style={{ display: 'flex', flexDirection: 'column', width: 260 }}>\n                        <TextField\n                            ref={this.textRef}\n                            inputRef={this.textInputRef}\n                            label={t('Text')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultText}\n                            error={textError}\n                            onChange={this.handleTextChange}\n                            onKeyDown={this.handleTextKeyDown}\n                        />\n                        <TextField\n                            ref={this.urlRef}\n                            inputRef={this.urlInputRef}\n                            label={t('URL')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultUrl}\n                            error={urlError}\n                            onChange={this.handleUrlChange}\n                            onKeyDown={this.handleUrlKeyDown}\n                        />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Create')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nEditUrlDialog.propTypes = {\n    open: PropTypes.bool,\n    defaultText: PropTypes.string,\n    defaultUrl: PropTypes.string,\n    onDone: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(EditUrlDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport { THUMBNAIL_BLURRED_SIZE_40, THUMBNAIL_BLURRED_SIZE_90 } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateBlob);\n    }\n\n    onClientUpdateBlob = update => {\n        const { chatId, messageId, thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo || thumbnail.file;\n        if (!file) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === file.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, thumbnail, minithumbnail, onClick } = this.props;\n        if (!thumbnail) return null;\n\n        const file = thumbnail.photo || thumbnail.file;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(file);\n        const isBlurred = isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90, THUMBNAIL_BLURRED_SIZE_40);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n\n        return (\n            <div className='reply-tile' onClick={onClick}>\n                {miniSrc && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'media-mini-blurred': true }\n                        )}\n                        draggable={false}\n                        src={miniSrc}\n                        alt=''\n                    />\n                )}\n                {src && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'media-blurred': src && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    minithumbnail: PropTypes.object,\n    thumbnail: PropTypes.object,\n    onClick: PropTypes.func\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyThumbnail, getReplyMinithumbnail } from '../../Utils/Message';\nimport { closePinned, openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        if (event.button !== 0) return;\n\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        closePinned();\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { t, chatId, messageId } = this.props;\n        let { title } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        title = title || getTitle(message, t);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const thumbnail = getReplyThumbnail(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className='border reply-border' />\n                    {thumbnail && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            minithumbnail={minithumbnail}\n                            thumbnail={thumbnail}\n                        />\n                    )}\n                    <div className='reply-content'>\n                        {title && <div className='reply-content-title'>{title}</div>}\n                        <div className={classNames('reply-content-subtitle')}>{content}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Reply from '../Message/Reply';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nclass InputBoxHeader extends React.Component {\n    componentDidMount() {\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, editMessageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id && editMessageId !== message_id) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId, editMessageId } = this.props;\n\n        if (editMessageId) {\n            editMessage(chatId, 0);\n        } else {\n            replyMessage(chatId, 0);\n        }\n    };\n\n    render() {\n        const { chatId, messageId, editMessageId, t, onClick } = this.props;\n        if (!chatId) return null;\n        if (!messageId && !editMessageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <IconButton className='inputbox-icon-button' aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply\n                        chatId={chatId}\n                        messageId={editMessageId || messageId}\n                        title={editMessageId ? t('EditMessage') : null}\n                        onClick={onClick}\n                    />\n                </div>\n                <div className='inputbox-header-right-column' />\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    editMessageId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { modalManager } from '../../Utils/Modal';\nimport './PasteFilesDialog.css';\n\nclass PasteFilesDialog extends React.Component {\n    handleDone = () => {\n        const { onConfirm } = this.props;\n        onConfirm();\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n        onCancel();\n    };\n\n    render() {\n        const { files, t } = this.props;\n        if (!files) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {files.length > 1 ? t('SendFilesConfirmation') : t('SendFileConfirmation')}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPasteFilesDialog.propTypes = {\n    files: PropTypes.array,\n    onConfirm: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nconst enhance = compose(withTranslation());\n\nexport default enhance(PasteFilesDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MessageStore from '../../Stores/MessageStore';\nimport './RecordTimer.css';\n\nclass RecordTimer extends React.Component {\n    state = { };\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.on('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.off('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    onClientUpdateRecordStart = () => {\n        this.timer = setInterval(() => {\n            const now = new Date();\n            const diff = now - this.startTime;\n\n            // console.log('[recordTimer] ');\n            this.setState({\n                time: diff\n            });\n        }, 25);\n        this.startTime = new Date();\n    }\n\n    onClientUpdateRecordStop = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    onClientUpdateRecordError = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    normalizeM(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr += '0'\n        } else if (msStr.length > 2) {\n            msStr = msStr.substr(0, 2);\n        }\n\n        return msStr;\n    }\n\n    normalizeS(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr = '0' + msStr;\n        }\n\n        return msStr;\n    }\n\n    msToTime(s) {\n        let ms = (s % 1000);\n        s = (s - ms) / 1000;\n        let secs = s % 60;\n        s = (s - secs) / 60;\n        let mins = s % 60;\n        let hrs = (s - mins) / 60;\n\n        let result = mins + ':' + this.normalizeS(secs) + ',' + this.normalizeM(ms);\n        if (hrs > 0) {\n            result = hrs + ':' + result;\n        }\n\n        return result;\n    }\n\n    render() {\n        const { time } = this.state;\n        if (!time) return null;\n\n        return (\n            <div className='record-timer'>\n                {this.msToTime(time)}\n                <div className='record-timer-icon'/>\n            </div>\n        );\n    }\n\n}\n\nRecordTimer.propTypes = {};\n\nexport default RecordTimer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport EditUrlDialog from './EditUrlDialog';\nimport { focusInput } from '../../Utils/DOM';\nimport { editMessage as editMessageAction } from '../../Actions/Client';\nimport { getEntities, getNodes } from '../../Utils/Message';\nimport { getMedia, getMediaPhotoFromFile } from '../../Utils/Media';\nimport { modalManager } from '../../Utils/Modal';\nimport MessageStore from '../../Stores/MessageStore';\nimport './EditMediaDialog.css';\n\nclass EditMediaDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.captionRef = React.createRef();\n        this.editMediaRef = React.createRef();\n\n        this.state = {\n\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevOpen } = state;\n        const { open, chatId, messageId, newItem } = props;\n\n        if (prevOpen !== open) {\n            if (open) {\n                const editMessage = MessageStore.get(chatId, messageId);\n                let sendAsPhoto = false;\n                if (editMessage && editMessage.content['@type'] === 'messagePhoto') {\n                    sendAsPhoto = true;\n                } else if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto'){\n                    sendAsPhoto = true;\n                }\n\n                return {\n                    prevOpen: true,\n                    sendAsPhoto,\n                    editMessage,\n                    editMedia: null,\n                    editFile: null\n                }\n            } else {\n                return {\n                    prevOpen: false,\n                    sendAsPhoto: false,\n                    editMessage: null,\n                    editMedia: null,\n                    editFile: null\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    handleSelectionChange = () => {\n        if (document.activeElement === this.captionRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    handleEnter = () => {\n        const { chatId, messageId, open, newItem } = this.props;\n        if (!open) return;\n\n        let text = null;\n        let caption = null;\n        const message = MessageStore.get(chatId, messageId);\n        if (message) {\n            const { content } = message;\n            if (content) {\n                text = content.text;\n                caption = content.caption;\n            }\n        }\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else if (newItem && newItem.caption) {\n            element.innerHTML = newItem.caption;\n        } else {\n            element.innerText = null;\n        }\n\n        focusInput(element);\n    };\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.captionRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    handleDone = () => {\n        const { chatId, newItem, onSend, onEdit } = this.props;\n        const { editMessage, editFile, editMedia, sendAsPhoto } = this.state;\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n\n        element.innerText = null;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const caption = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n\n        const isEditing = Boolean(editMessage);\n        if (isEditing) {\n            if (editMedia) {\n                const { photo } = editMedia;\n                if (!photo) return;\n\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: editFile.name, data: editFile },\n                    width,\n                    height,\n                    caption\n                };\n\n                onEdit(null, content);\n            } else {\n                onEdit(caption, null);\n            }\n\n            editMessageAction(chatId, 0);\n        } else {\n            const { media, file } = newItem;\n            const { audio, photo, document } = media;\n\n            let content = null;\n            if (photo) {\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                content = sendAsPhoto\n                    ? {\n                        '@type': 'inputMessagePhoto',\n                        photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        width,\n                        height,\n                        caption\n                    }\n                    : {\n                        '@type': 'inputMessageDocument',\n                        document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        thumbnail: null,\n                        caption\n                    };\n            } else if (document) {\n                content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    caption\n                };\n            } else if (audio) {\n                const { duration, title, performer } = audio;\n\n                content = {\n                    '@type': 'inputMessageAudio',\n                    audio: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    duration,\n                    title,\n                    performer,\n                    caption\n                };\n            }\n            if (!content) return;\n\n            onSend(content, file);\n        }\n    };\n\n    handleCancel = () => {\n        const { chatId, messageId, onCancel } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n\n        if (isEditing) {\n            editMessageAction(chatId, 0);\n        }\n\n        onCancel();\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, code, metaKey, shiftKey, repeat, nativeEvent } = event;\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            event.stopPropagation();\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            case 'Enter':\n            case 'NumpadEnter': {\n                // enter+cmd, enter+ctrl, enter+shift\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleDone();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.captionRef.current.focus();\n    }\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = () => {\n        this.clearInnerHtml();\n    };\n\n    clearInnerHtml() {\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    }\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleEditMedia = event => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        element.click();\n    };\n\n    handleEditMediaComplete = async () => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        const { files } = element;\n        if (files.length === 0) return;\n\n        const [file, ...rest] = Array.from(files);\n        if (!file) return;\n\n        const editMedia = await getMediaPhotoFromFile(file);\n\n        this.setState({\n            editFile: file,\n            editMedia\n        });\n\n        element.value = '';\n    };\n\n    handleSendAsPhoto = () => {\n        const { sendAsPhoto } = this.state;\n\n        this.setState({\n            sendAsPhoto: !sendAsPhoto\n        });\n    };\n\n    render() {\n        const { chatId, messageId, newItem, open, t } = this.props;\n        const { defaultText, defaultUrl, openEditUrl, editMessage, editMedia, sendAsPhoto } = this.state;\n        if (!open) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n        let isPhoto = false;\n        if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMedia && editMedia['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMessage && editMessage.content['@type'] === 'messagePhoto'){\n            isPhoto = true;\n        }\n\n        let media = null;\n        if (isEditing) {\n            media =\n            editMedia\n                ? getMedia({ content: editMedia })\n                : getMedia(message, null);\n        } else if (newItem) {\n            media = getMedia({ content: newItem.media });\n        }\n        const doneLabel = isEditing ? t('Save') : t('Send');\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-media-dialog-title'\n                onEnter={this.handleEnter}>\n                <div className='edit-media-dialog-content'>\n                    <div style={{ margin: 24 }}>{media}</div>\n                    { isEditing && (\n                        <>\n                            <IconButton\n                                disableRipple={true}\n                                aria-label={t('Edit')}\n                                className='edit-media-dialog-edit-button'\n                                size='small'\n                                onClick={this.handleEditMedia}>\n                                <EditIcon fontSize='inherit' />\n                            </IconButton>\n                            <input\n                                ref={this.editMediaRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                accept='image/*'\n                                onChange={this.handleEditMediaComplete}\n                            />\n                        </>\n                    )}\n                    { !isEditing && isPhoto && (\n                        <RadioGroup value={sendAsPhoto} onChange={this.handleSendAsPhoto} style={{ margin: '0 24px 24px' }}>\n                            <FormControlLabel value={true} control={<Radio color='primary'/>} label={t('SendAsPhoto')} />\n                            <FormControlLabel value={false} control={<Radio color='primary'/>} label={t('SendAsFile')} />\n                        </RadioGroup>\n                    )}\n                </div>\n                <div\n                    ref={this.captionRef}\n                    id='edit-media-dialog-caption'\n                    className='scrollbars-hidden'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Caption')}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                />\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {doneLabel}\n                    </Button>\n                </DialogActions>\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n            </Dialog>\n        );\n    }\n}\n\nEditMediaDialog.propTypes = {\n    open: PropTypes.bool,\n\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    newItem: PropTypes.object,\n\n    onSend: PropTypes.func,\n    onEdit: PropTypes.func,\n    onCancel: PropTypes.func\n};\n\nexport default withTranslation()(EditMediaDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport emojiRegex from 'emoji-regex';\nimport MediaRecorder from 'opus-media-recorder';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport DoneIcon from '../../Assets/Icons/Done';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertEmoticonIcon from '../../Assets/Icons/Smile';\nimport SendIcon from '../../Assets/Icons/Send';\nimport MicrophoneIcon from '../../Assets/Icons/Microphone';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport EditUrlDialog from '../Popup/EditUrlDialog';\nimport InputBoxHeader from './InputBoxHeader';\nimport PasteFilesDialog from '../Popup/PasteFilesDialog';\nimport RecordTimer from './RecordTimer';\nimport EditMediaDialog from '../Popup/EditMediaDialog';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { draftEquals, getChatDraft, getChatDraftReplyToMessageId, getChatFullInfo, isMeChat, isPrivateChat, isSupergroup } from '../../Utils/Chat';\nimport { findLastTextNode, focusInput } from '../../Utils/DOM';\nimport { getMediaDocumentFromFile, getMediaPhotoFromFile, isEditedMedia } from '../../Utils/Media';\nimport { getEntities, getNodes, isTextMessage } from '../../Utils/Message';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport { isDeletedUser, isMeUser } from '../../Utils/User';\nimport { PHOTO_SIZE, VOICENOTE_MIN_RECORD_DURATION } from '../../Constants';\nimport AnimationStore from '../../Stores/AnimationStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBox.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nclass InputBox extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = AppStore.getChatId();\n\n        this.state = {\n            chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            editMessageId: 0,\n            recordingReady: true,\n            recordingTime: null,\n            recordPermissionDenied: false,\n            sendFile: null\n        };\n\n        document.execCommand('defaultParagraphSeparator', false, 'br');\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t } = this.props;\n        const {\n            chatId,\n            newDraft,\n            files,\n            replyToMessageId,\n            editMessageId,\n            openEditMedia,\n            openEditUrl,\n            sendFile,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.newDraft !== newDraft) {\n            return true;\n        }\n\n        if (nextState.files !== files) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.editMessageId !== editMessageId) {\n            return true;\n        }\n\n        if (nextState.sendFile !== sendFile) {\n            return true;\n        }\n\n        if (nextState.openEditUrl !== openEditUrl) {\n            return true;\n        }\n\n        if (nextState.openEditMedia !== openEditMedia) {\n            return true;\n        }\n\n        if (nextState.recordingTime !== recordingTime) {\n            return true;\n        }\n\n        if (nextState.recordingReady !== recordingReady) {\n            return true;\n        }\n\n        if (nextState.recordPermissionDenied !== recordPermissionDenied) {\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            return true;\n        }\n\n        return false;\n    }\n\n    loadDraft() {\n        this.setDraft();\n        this.setInputFocus();\n        this.handleInput();\n    }\n\n    saveDraft() {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let innerHTML = null;\n        if (editMessageId) {\n            innerHTML = this.beforeEditText ? this.beforeEditText.innerHTML : null;\n        } else {\n            innerHTML = element.innerHTML;\n        }\n\n        const draftMessage = this.getDraftMessage(chatId, replyToMessageId, innerHTML);\n        this.setChatDraftMessage(draftMessage);\n    }\n\n    selectionChangeListener = () => {\n        // console.log('[ed] selectionchange', document.activeElement);\n        if (document.activeElement === this.newMessageRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.selectionChangeListener, true);\n\n        AnimationStore.on('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.on('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.on('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.on('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.on('clientUpdateSendText', this.onClientUpdateSendText);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.loadDraft();\n    }\n\n    componentWillUnmount() {\n        this.saveDraft();\n\n        AnimationStore.off('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.off('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.off('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.off('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.off('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('clientUpdateSendText', this.onClientUpdateSendText);\n        StickerStore.off('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        document.removeEventListener('selectionchange', this.selectionChangeListener, true);\n\n        this.handleCancelRecord();\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chatId) return;\n    };\n\n    onClientUpdateSendText = update => {\n        const { text } = update;\n\n        if (!text) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = text;\n        focusInput(element);\n    }\n\n    onClientUpdateInputShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (shook) {\n            this.setState({ shook: false }, () => {\n                setTimeout(() => {\n                    this.setState({ shook: true });\n                }, 0);\n            });\n        } else {\n            this.setState({ shook: true });\n        }\n    };\n\n    onClientUpdateSendFiles = update => {\n        const { files } = update;\n        if (!files) return;\n\n        this.handleSendFiles(Array.from(files));\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, editMessageId } = this.state;\n        const { chat_id, message_ids, is_permanent } = update;\n\n        if (!editMessageId) return;\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n        if (message_ids.indexOf(editMessageId) === -1) return;\n\n        this.handleCancel();\n    };\n\n    onClientUpdateEditMessage = update => {\n        const { chatId, messageId } = update;\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n        if (this.state.chatId !== chatId) return;\n\n        if (!messageId) {\n            this.restoreDraftAndSelection();\n        } else {\n            this.saveDraftAndSelection();\n        }\n\n        const openEditMedia = messageId !== 0 && isEditedMedia(chatId, messageId);\n        this.setState(\n            {\n                editMessageId: messageId,\n                openEditMedia\n            },\n            () => {\n                if (!this.state.openEditMedia) {\n                    this.setEditMessage();\n                    this.handleInput();\n                    setTimeout(() => {\n                        this.focusInput();\n                    }, 0);\n                }\n            }\n        );\n    };\n\n    restoreDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { beforeEditText } = this;\n\n        if (beforeEditText) {\n            element.innerHTML = beforeEditText.innerHTML;\n\n            if (!beforeEditText.range) {\n                this.focusInput();\n                return;\n            }\n\n            const selection = document.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(beforeEditText.range);\n\n            element.focus();\n        } else {\n            element.innerHTML = null;\n            this.focusInput();\n        }\n\n        this.handleInput();\n    }\n\n    saveDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        this.beforeEditText = {\n            innerHTML: element.innerHTML,\n            range: this.range\n        };\n    }\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) return;\n\n        this.saveDraft();\n    };\n\n    onUpdateChatDraftMessage = update => {\n        const { chat_id } = update;\n        const { chatId, recordingTime } = this.state;\n\n        if (recordingTime) return;\n        if (chatId !== chat_id) return;\n\n        this.loadDraft();\n    };\n\n    onClientUpdateAnimationSend = update => {\n        const { animation: item } = update;\n        if (!item) return;\n\n        const { animation, thumbnail, width, height, duration } = item;\n        if (!animation) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageAnimation',\n            animation: {\n                '@type': 'inputFileId',\n                id: animation.id\n            },\n            width,\n            height,\n            duration\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n    };\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId, recordingTime } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId && !recordingTime) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.saveDraft();\n        this.beforeEditText = null;\n        this.setState(\n            {\n                chatId: update.nextChatId,\n                replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n                editMessageId: 0,\n                openEditUrl: false\n            },\n            () => {\n                this.loadDraft();\n            }\n        );\n\n        this.handleCancelRecord();\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const { chatSelectOptions } = AppStore;\n        if (chatSelectOptions && chatSelectOptions.switchInline) {\n            this.setFormattedText({ '@type': 'formattedText', text: chatSelectOptions.switchInline, entities: [] });\n            return;\n        }\n\n        const formattedText = getChatDraft(chatId);\n        if (formattedText) {\n            this.setFormattedText(formattedText);\n            this.setState({\n                replyToMessageId: getChatDraftReplyToMessageId(chatId)\n            });\n        } else {\n            element.innerText = null;\n        }\n    };\n\n    setEditMessage() {\n        const { chatId, editMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, editMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { text, caption } = content;\n        if (!text && !caption) return;\n\n        const element = this.newMessageRef.current;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else {\n            element.innerText = null;\n        }\n    }\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.newMessageRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    setInputFocus = () => {\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n\n        setTimeout(() => {\n            const element = this.newMessageRef.current;\n\n            focusInput(element);\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getDraftMessage = (chatId, replyToMessageId, innerHTML) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { draft_message } = chat;\n        const { text, entities } = getEntities(innerHTML);\n        const draftMessage =\n            (text && text.length > 0) || entities.length > 0\n                ? {\n                      '@type': 'draftMessage',\n                      reply_to_message_id: replyToMessageId,\n                      input_message_text: {\n                          '@type': 'inputMessageText',\n                          text: {\n                              '@type': 'formattedText',\n                              text,\n                              entities\n                          },\n                          disable_web_page_preview: false,\n                          clear_draft: false\n                      }\n                  }\n                : null;\n\n        if (draftEquals(draft_message, draftMessage)) {\n            return null;\n        }\n\n        return { chatId, draftMessage };\n    };\n\n    handleSubmit = (startRecord = true) => {\n        const { chatId, editMessageId, replyToMessageId, recordingReady, recordingTime } = this.state;\n\n        if (recordingTime) {\n            if ((new Date() - recordingTime) < VOICENOTE_MIN_RECORD_DURATION) {\n                return;\n            }\n\n            this.handleStopRecord();\n            return;\n        } else if (recordingReady) {\n            if (startRecord) this.handleRecord();\n            return;\n        }\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let { innerHTML } = element;\n\n        element.innerText = null;\n        this.handleInput();\n\n        if (!innerHTML) return;\n        if (!innerHTML.trim()) return;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const formattedText = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n        const inputContent = {\n            '@type': 'inputMessageText',\n            text: formattedText,\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        if (editMessageId) {\n            const editedMessage = MessageStore.get(chatId, editMessageId);\n            if (!editedMessage) return;\n\n            const { content } = editedMessage;\n            if (!content) return;\n\n            const { text, caption } = content;\n            if (text) {\n                this.editMessageText(inputContent, result => {});\n            } else if (caption) {\n                this.editMessageCaption(formattedText);\n            }\n            editMessage(chatId, 0);\n        } else {\n            this.sendMessage(inputContent, false, result => {});\n        }\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    async getNewItem(file, sendAsFile) {\n        if (!file) return null;\n\n        const caption = this.newMessageRef.current.innerHTML;\n        if (caption) {\n            this.newMessageRef.current.innerHTML = null;\n            this.handleInput();\n        }\n\n        const media = sendAsFile\n            ? await getMediaPhotoFromFile(file)\n            : await getMediaDocumentFromFile(file);\n\n        return {\n            file,\n            media,\n            caption\n        }\n    };\n\n    handleAttachPhotoComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, true);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(async file => {\n                const [width, height] = await readImageSize(file);\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file },\n                    width,\n                    height\n                };\n\n                this.handleSendPhoto(content, file);\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = async () => {\n        const { files } = this.attachDocumentRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, false);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(file => {\n                const content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file }\n                };\n\n                this.handleSendDocument(content, file);\n            });\n        }\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    setTyping() {\n        const { chatId, editMessageId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        if (!innerText) return;\n        if (isMeChat(chatId)) return;\n        if (editMessageId) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    }\n\n    setHints() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11 || editMessageId) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        // console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    }\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    handleCancel = () => {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n        if (editMessageId) {\n            editMessage(chatId, 0);\n            return true;\n        } else if (replyToMessageId) {\n            replyMessage(chatId, 0);\n            return true;\n        }\n\n        return false;\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, charCode, metaKey, shiftKey, repeat, nativeEvent } = event;\n        const { editMessageId, replyToMessageId } = this.state;\n\n        // console.log('[input] handleKeyDown', key, keyCode, charCode, altKey, ctrlKey, metaKey, shiftKey, repeat, event, nativeEvent, nativeEvent.isComposing);\n        //\n        // setTimeout(() => {\n        //     const { innerText } = this.newMessageRef.current;\n        //     console.log('[input] text', innerText.length, [...innerText].map(x => ({ alpha: x, code: x.charCodeAt(0) })));\n        // }, 1000);\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            // ctrl+alt+0 fix\n            case 'Digit0': {\n                if (altKey && ctrlKey && !metaKey && !shiftKey) {\n                    if (editMessageId) return;\n                    if (replyToMessageId) return;\n\n                    event.preventDefault();\n                }\n                break;\n            }\n            case 'Enter':\n            case 'NumpadEnter': {\n                // enter+cmd, enter+ctrl, enter+shift\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleSubmit(false);\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // esc\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat && this.handleCancel()) {\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // arrow up\n            case 'ArrowUp': {\n                if (!repeat && !altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const element = this.newMessageRef.current;\n                    if (element && !element.innerText) {\n                        const { editMessageId } = this.state;\n                        if (editMessageId) return;\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateTryEditMessage'\n                        });\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleSendPhoto = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.sendMessage(poll, true, () => {});\n    };\n\n    handleSendDocument = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handleSendAudio = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.audio.audio.id, result));\n    };\n\n    handleSendVoiceNote = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.voice_note.voice.id, result));\n    };\n\n    async handleSendFiles(files) {\n        if (!files) return;\n        if (!files.length) return;\n\n        if (files.length === 1) {\n            const newItem = await this.getNewItem(files[0], files[0].type.startsWith('image'));\n            if (!newItem) return;\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            this.setState({ files });\n        }\n    }\n\n    handlePaste = async event => {\n        const { items } = event.clipboardData || event.originalEvent.clipboardData;\n        if (!items) return;\n\n        const files = [];\n        Array.from(items).forEach(item => {\n            if (item.kind.indexOf('file') === 0) {\n                const file = item.getAsFile();\n                if (file) {\n                    files.push(file);\n                }\n            }\n        });\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.handleSendFiles(files);\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n            return;\n        }\n    };\n\n    handlePasteConfirm = () => {\n        const { files } = this.state;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.handleSendDocument(content, file);\n        });\n\n        this.handlePasteCancel();\n    };\n\n    handlePasteCancel = () => {\n        this.setState({ files: null });\n    };\n\n    handleUpdateDraftConfirm = () => {\n        const { newDraft } = this.state;\n        if (!newDraft) return;\n\n        this.loadDraft();\n        this.handleUpdateDraftCancel();\n    };\n\n    handleUpdateDraftCancel = () => {\n        this.setState({ newDraft: null });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (!message) return;\n\n        const { sending_state, content, chat_id, id } = message;\n        if (!sending_state) return;\n        if (sending_state['@type'] !== 'messageSendingStatePending') return;\n        if (content['@type'] !== 'messagePhoto') return;\n\n        const { photo } = content;\n        if (!photo) return;\n\n        const size = getSize(photo.sizes, PHOTO_SIZE);\n        if (!size) return;\n\n        const { photo: file } = size;\n        if (!file) return;\n\n        FileStore.setBlob(file.id, blob);\n        FileStore.updatePhotoBlob(chat_id, id, file.id);\n    };\n\n    async editMessageMedia(content) {\n        const { chatId, editMessageId } = this.state;\n        // console.log('[em] editMessageMedia start', chatId, editMessageId, content);\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        return TdLibController.send({\n            '@type': 'editMessageMedia',\n            chat_id: chatId,\n            message_id: editMessageId,\n            input_message_content: content\n        });\n    }\n\n    editMessageCaption(caption) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!caption) return;\n\n        TdLibController.send({\n            '@type': 'editMessageCaption',\n            chat_id: chatId,\n            message_id: editMessageId,\n            caption\n        });\n    }\n\n    async editMessageText(content, callback) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        try {\n            const result = await TdLibController.send({\n                '@type': 'editMessageText',\n                chat_id: chatId,\n                message_id: editMessageId,\n                input_message_content: content\n            });\n\n            callback(result);\n        } finally {\n        }\n    }\n\n    sendMessage = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n            const result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    this.saveDraft();\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            if (replyToMessageId) {\n                replyMessage(chatId, 0);\n            }\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.restoreSelection();\n        document.execCommand('insertText', false, emoji.native);\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        this.setTyping();\n        this.setHints();\n        this.setRecordingReadyState();\n\n        // const { text, position } = this.getTextAndCaretPosition();\n        // this.searchUsernameOrHashtag(text, position, [], false);\n    };\n\n    getTextAndCaretPosition = () => {\n        const { current: input } = this.newMessageRef;\n        if (!input) return;\n\n        input.focus()\n        let _range = document.getSelection().getRangeAt(0);\n        let range = _range.cloneRange();\n        range.selectNodeContents(input);\n        range.setEnd(_range.endContainer, _range.endOffset);\n\n        return { text: input.innerText, position: range.toString().length };\n    };\n\n    searchUsernameOrHashtag(text, position, messages, usernameOnly) {\n        const { chatId } = this.state;\n\n        const searchResultUsernames = [];\n\n        if (this.cancelDelayRunnable) {\n            clearTimeout(this.cancelDelayRunnable);\n            this.cancelDelayRunnable = null;\n        }\n\n        const info = getChatFullInfo(chatId);\n        const needUsernames = true;\n        const needBotContext = true;\n\n        const now = Date.now();\n        this.now = now;\n\n        let searchPosition = position;\n        if (text.length > 0) {\n            searchPosition--;\n        }\n\n        this.lastText = text;\n        this.lastUsernameOnly = usernameOnly;\n\n        let foundType = -1;\n        let result = '';\n        let resultStartPosition;\n        let resultLength;\n\n        let dogPosition = -1;\n        if (usernameOnly) {\n            result += text.substring(1);\n            resultStartPosition = 0;\n            resultLength = result.length;\n            foundType = 0;\n        } else {\n            for (let i = searchPosition; i >= 0; i--) {\n                if (i >= text.length){\n                    continue;\n                }\n                let ch = text[i];\n                if (i === 0 || text[i - 1] === ' ' || text[i - 1] === '\\n' || text[i - 1] === ':') {\n                    if (ch === '@') {\n                        if (needUsernames || needBotContext && i === 0){\n                            if (!info && i !== 0) {\n                                this.lastText = text;\n                                this.lastPosition = position;\n                                this.messages = messages;\n                                this.closeHints(now);\n                                return;\n                            }\n                            dogPosition = i;\n                            foundType = 0;\n                            resultStartPosition = i;\n                            resultLength = result.length + 1;\n                        }\n                    }\n                }\n\n                result = ch + result;\n            }\n        }\n\n        if (foundType === -1) {\n            this.closeHints(now);\n            return;\n        }\n\n        if (foundType === 0) {\n            const users = [];\n            const usersMap = new Map();\n            for (let i = 0; i < Math.min(100, messages.length); i++) {\n                const { sender } = messages[i];\n                if (sender && sender.user_id && !usersMap.has(sender.user_id)) {\n                    usersMap.set(sender.user_id, sender.user_id);\n                    users.push(sender.user_id);\n                }\n            }\n\n            let usernameString = result.substr(resultStartPosition, resultLength).toLowerCase();\n            const hasSpace = usernameString.indexOf(' ') >= 0;\n            const newResult = [];\n            const newResultsMap = new Map();\n            const newMap = new Map();\n\n            const inlineBots = [];\n            if (!usernameOnly && needBotContext && dogPosition === 0 && inlineBots.length > 0) {\n\n            }\n\n            const chat = ChatStore.get(chatId);\n            if (chat && info && info.members) {\n                for (let i = -1; i < info.members.length; i++) {\n                    let username;\n                    let firstName;\n                    let lastName;\n                    let object;\n                    let id;\n                    if (i === -1) {\n                        if (!usernameString.length) {\n                            newResult.push(chat);\n                            continue;\n                        }\n                        firstName = chat.title;\n                        lastName = '';\n                        username = chat.username;\n                        object = chat;\n                        id = -chat.id;\n                    } else {\n                        const { user_id } = info.members[i];\n                        const user = UserStore.get(user_id);\n                        if (!user || !usernameOnly && isMeUser(user_id) || newResultsMap.has(user_id)) {\n                            continue;\n                        }\n                        if (!usernameString.length) {\n                            if (!isDeletedUser(user_id)) {\n                                newResult.push(user);\n                                continue;\n                            }\n                        }\n                        firstName = user.first_name;\n                        lastName = user.last_name;\n                        username = user.username;\n                        object = user;\n                        id = user.id;\n                    }\n\n                    if (username.length > 0 && username.toLowerCase().startsWith(usernameString)\n                        || firstName.length > 0 && firstName.toLowerCase().startsWith(usernameString)\n                        || lastName.length > 0 && lastName.toLowerCase().startsWith(usernameString)\n                        || hasSpace && `${firstName} ${lastName}`.toLowerCase().startsWith(usernameString)) {\n                        newResult.push(object);\n                        newMap.set(id, object);\n                    }\n                }\n            }\n\n            if (isSupergroup(chatId) && usernameString.length > 0) {\n                if (newResult.length < 5) {\n                    this.cancelDelayRunnable = setTimeout(() => {\n                        this.cancelDelayRunnable = null;\n                        this.showUsersResult(now, newResult, newMap, true);\n                    }, 0);\n                } else {\n                    this.showUsersResult(now, newResult, newMap, true);\n                }\n\n                setTimeout(async () => {\n                    if (this.now !== now) {\n                        return;\n                    }\n\n                    const result = await TdLibController.send({\n                        '@type': 'searchChatMembers',\n                        chat_id: chatId,\n                        query: usernameString,\n                        limit: 20,\n                        filter: { '@type': 'chatMembersFilterMention', message_thread_id: 0 }\n                    });\n\n                    if (this.now !== now) {\n                        return;\n                    }\n\n                    const { members } = result;\n                    if (members.length > 0) {\n                        for (let i = 0; i < members.length; i++) {\n                            const { user_id } = members[i];\n                            if (isMeUser(user_id)) {\n                                continue;\n                            }\n                            const user = UserStore.get(user_id);\n                            if (!user) {\n                                continue;\n                            }\n\n                            searchResultUsernames.push(user);\n                        }\n\n                        this.notifyDataSetChanged(now, searchResultUsernames);\n                    }\n\n\n                }, 200);\n            } else {\n                this.showUsersResult(now, newResult, newMap, true);\n            }\n        }\n    }\n\n    notifyDataSetChanged(id, searchResultUsernames) {\n        console.log('[search] global', searchResultUsernames);\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateHintsGlobal',\n            id,\n            global: searchResultUsernames\n        });\n    }\n\n    showUsersResult(id, newResult, newMap, notify) {\n        console.log('[search] local', newResult);\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateHintsLocal',\n            id,\n            local: newResult\n        });\n    }\n\n    closeHints(id) {\n        console.log('[search] close');\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateHintsClose',\n            id\n        });\n    }\n\n    openHints() {\n\n    }\n\n    setRecordingReadyState() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText && !editMessageId) {\n            this.setState({\n                recordingReady: true\n            });\n        } else {\n            this.setState({\n                recordingReady: false\n            });\n        }\n    }\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            this.focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.newMessageRef.current.focus();\n    }\n\n    focusInput = () => {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n        if (!element.childNodes.length) {\n            element.focus();\n            return;\n        }\n\n        const lastTextNode = findLastTextNode(element);\n        if (!lastTextNode) {\n            return;\n        }\n\n        const range = document.createRange();\n        range.setStart(lastTextNode, lastTextNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        element.focus();\n    };\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleCancelEditMedia = () => {\n        this.closeEditMediaDialog();\n    };\n\n    handleEditMedia = async (caption, content) => {\n        if (content) {\n            const message = await this.editMessageMedia(content);\n            if (message) {\n                const { content: editContent } = message;\n                switch (editContent['@type']) {\n                    case 'messagePhoto': {\n                        const { photo: sendPhoto } = content;\n                        if (!sendPhoto) break;\n\n                        const { data: blob } = sendPhoto;\n                        if (!blob) break;\n\n                        const { photo } = editContent;\n                        if (!photo) break;\n\n                        const iSize = photo.sizes.find(x => x.type === 'i');\n                        if (!iSize) break;\n\n                        const { photo: file } = iSize;\n                        if (file) {\n                            FileStore.setBlob(file.id, blob);\n                        }\n                        break;\n                    }\n                }\n            }\n            return;\n        }\n\n        this.editMessageCaption(caption);\n    };\n\n    handleSendMedia = (content, file) => {\n        this.closeEditMediaDialog(false);\n\n        switch (content['@type']) {\n            case 'inputMessageAudio': {\n                this.handleSendAudio(content, file);\n                break;\n            }\n            case 'inputMessagePhoto': {\n                this.handleSendPhoto(content, file);\n                break;\n            }\n            case 'inputMessageDocument': {\n                this.handleSendDocument(content, file);\n                break;\n            }\n        }\n    };\n\n    closeEditMediaDialog(cancel = true) {\n        const { newItem } = this.state;\n\n        this.setState(\n            {\n                openEditMedia: false,\n                newItem: null\n            },\n            () => {\n                if (cancel && newItem && newItem.caption) {\n                    this.newMessageRef.current.innerHTML = newItem.caption;\n                    this.focusInput();\n                    this.handleInput();\n                } else {\n                    this.restoreSelection();\n                }\n            }\n        );\n    }\n\n    handleHeaderClick = () => {\n        setTimeout(() => this.restoreSelection(), 0);\n    };\n\n    handleStopRecord = (cancelled = false) => {\n        if (!this.recorder) return;\n\n        this.recorder.cancelled = cancelled;\n        this.recorder.stop();\n        this.recorder.stream.getAudioTracks().forEach(track => track.stop());\n    }\n\n    handleCancelRecord = () => {\n        this.handleStopRecord(true);\n    }\n\n    handleRecord = async () => {\n        if (this.recorder) return;\n\n        let stream = null;\n        try{\n            stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n            if (this.recorder) return;\n        } catch { }\n\n        if (!stream) {\n            this.setState({\n                recordPermissionDenied: true\n            });\n            return;\n        }\n\n        const constraints = {\n            channelCount: 1,\n            sampleRate: 48000,\n        };\n\n        const track = stream.getAudioTracks()[0];\n        track.applyConstraints(constraints)\n\n        const options = { mimeType: 'audio/ogg; codecs=opus', audioBitsPerSecond: 64000 };\n        const workerOptions = {\n            encoderWorkerFactory: function () {\n                return new Worker(process.env.PUBLIC_URL + '/opus-media-recorder/encoderWorker.umd.js')\n            },\n            OggOpusEncoderWasmPath: process.env.PUBLIC_URL + '/opus-media-recorder/OggOpusEncoder.wasm'\n        };\n\n        const recorder = new MediaRecorder(stream, options, workerOptions);\n\n        const chunks = [];\n\n        recorder.ondataavailable = e => {\n            chunks.push(e.data);\n        };\n        recorder.onstart = () => {\n\n        };\n        recorder.onstop = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStop' });\n            this.setState({ recordingTime: null });\n\n            const { cancelled } = this.recorder;\n            this.recorder = null;\n\n            this.loadDraft();\n            if (cancelled) {\n                return;\n            }\n\n            // console.log('stop');\n            const blob = new Blob(chunks, { 'type' : 'audio/ogg; codecs=opus' });\n            const audioURL = window.URL.createObjectURL(blob);\n\n            const audio = new Audio(audioURL);\n            audio.oncanplay = () => {\n                const content = {\n                    '@type': 'inputMessageVoiceNote',\n                    voice_note: { '@type': 'inputFileBlob', name: '', size: blob.size, data: blob },\n                    duration: Math.trunc(audio.duration),\n                    waveform: '',\n                    caption: null\n                };\n\n                this.handleSendVoiceNote(content, blob);\n            };\n        };\n        recorder.onerror = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordError' });\n            this.setState({ recordingTime: null });\n\n            this.loadDraft();\n            // console.log('error', e);\n        };\n\n        this.recorder = recorder;\n        this.recorder.start(50);\n        this.startTime = new Date();\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStart' });\n        this.setState({ recordingTime: new Date() });\n    }\n\n    handleClosePermission = () => {\n        this.setState({\n            recordPermissionDenied: false\n        })\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            editMessageId,\n            newItem,\n            replyToMessageId,\n            files,\n            newDraft,\n            defaultText,\n            defaultUrl,\n            openEditUrl,\n            openEditMedia,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        const isMediaEditing = editMessageId > 0 && !isTextMessage(chatId, editMessageId);\n        let icon = (<SpeedDialIcon open={!recordingTime && recordingReady} openIcon={<MicrophoneIcon />} icon={<SendIcon />} />);\n        if (editMessageId) {\n            icon = <DoneIcon/>;\n        }\n\n        return (\n            <div className='inputbox-background'>\n                <div className={classNames('inputbox', { 'inputbox-recording': recordingTime }, { 'shook': shook })}>\n                    <div className={classNames('inputbox-bubble')}>\n                        <InputBoxHeader\n                            chatId={chatId}\n                            messageId={replyToMessageId}\n                            editMessageId={openEditMedia ? 0 : editMessageId}\n                            onClick={this.handleHeaderClick}\n                        />\n                        <div className='inputbox-wrapper'>\n                            <div className='inputbox-left-column'>\n                                <React.Suspense\n                                    fallback={\n                                        <IconButton className='inputbox-icon-button' aria-label='Emoticon'>\n                                            <InsertEmoticonIcon />\n                                        </IconButton>\n                                    }>\n                                    <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                                </React.Suspense>\n                            </div>\n                            <div className='inputbox-middle-column'>\n                                <div\n                                    id='inputbox-message'\n                                    className='scrollbars-hidden'\n                                    ref={this.newMessageRef}\n                                    placeholder={isMediaEditing ? t('Caption') : t('Message')}\n                                    contentEditable\n                                    suppressContentEditableWarning\n                                    onKeyDown={this.handleKeyDown}\n                                    // onKeyDownCapture={this.handleKeyDownCapture}\n                                    onPaste={this.handlePaste}\n                                    onInput={this.handleInput}\n                                />\n                            </div>\n                            <div className='inputbox-right-column'>\n                                <RecordTimer/>\n                                <input\n                                    ref={this.attachDocumentRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    onChange={this.handleAttachDocumentComplete}\n                                />\n                                <input\n                                    ref={this.attachPhotoRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    accept='image/*'\n                                    onChange={this.handleAttachPhotoComplete}\n                                />\n                                {!Boolean(editMessageId) && !recordingTime && (\n                                    <AttachButton\n                                        chatId={chatId}\n                                        onAttachPhoto={this.handleAttachPhoto}\n                                        onAttachDocument={this.handleAttachDocument}\n                                        onAttachPoll={this.handleAttachPoll}\n                                    />\n                                )}\n\n                                {/*<IconButton>*/}\n                                {/*<KeyboardVoiceIcon />*/}\n                                {/*</IconButton>*/}\n                            </div>\n                        </div>\n                    </div>\n                    { recordingTime && (\n                        <div className='inputbox-cancel-record-button-background'>\n                            <IconButton\n                                className='inputbox-cancel-record-button'\n                                aria-label='Delete'\n                                size='small'\n                                color='secondary'\n                                onClick={this.handleCancelRecord}>\n                                <DeleteIcon />\n                            </IconButton>\n                        </div>\n                    )}\n                    <div className='inputbox-send-button-background'>\n                        <IconButton\n                            className={classNames('inputbox-send-button', {'inputbox-send-accent-button': recordingTime || !recordingReady})}\n                            aria-label='Send'\n                            size='small'\n                            onClick={this.handleSubmit}>\n                            {icon}\n                        </IconButton>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <PasteFilesDialog files={files} onConfirm={this.handlePasteConfirm} onCancel={this.handlePasteCancel} />\n                {/*<UpdateDraftDialog draft={newDraft} onConfirm={this.handleUpdateDraftConfirm} onCancel={this.handleUpdateDraftCancel}/>*/}\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n                <EditMediaDialog\n                    open={openEditMedia}\n                    chatId={chatId}\n                    messageId={editMessageId}\n                    newItem={newItem}\n                    onEdit={this.handleEditMedia}\n                    onSend={this.handleSendMedia}\n                    onCancel={this.handleCancelEditMedia}\n                />\n                <Dialog\n                    transitionDuration={0}\n                    open={recordPermissionDenied}\n                    onClose={this.handleClosePermission}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('RecordDeniedTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('RecordDeniedDescription')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClosePermission} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(InputBox);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport './FooterCommand.css';\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { command, onCommand } = this.props;\n\n        return (\n            <div className='footer-command'>\n                <div className='inputbox'>\n                    <div className='inputbox-bubble'>\n                        <Button color='primary' className='footer-command-button' onClick={onCommand}>\n                            {command}\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FooterCommand;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport Notifications from './Notifications';\n\nclass NotificationsCommand extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n        const command = isMuted ? t('ChatsUnmute') : t('ChatsMute');\n\n        return <FooterCommand command={command} onCommand={this.handleSetChatNotifications} />;\n    }\n}\n\nexport default withTranslation()(NotificationsCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport InputBox from './InputBox';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommand from './NotificationsCommand';\nimport { hasBasicGroupId, hasSupergroupId, isBotChat } from '../../Utils/Chat';\nimport { sendBotStartMessage, unblockSender } from '../../Actions/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n        const { prevChatId } = state;\n\n        if (prevChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                const { is_blocked, last_message } = chat;\n\n                return {\n                    prevChatId: chatId,\n\n                    isBlocked: is_blocked,\n                    hasLastMessage: Boolean(last_message)\n                };\n            }\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t, chatId, options } = this.props;\n        const { hasLastMessage, isBlocked, clearHistory } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.options !== options) {\n            return true;\n        }\n\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.hasLastMessage !== hasLastMessage) {\n            return true;\n        }\n\n        if (nextState.isBlocked !== isBlocked) {\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatIsBlocked', this.onUpdateChatIsBlocked);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatIsBlocked', this.onUpdateChatIsBlocked);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatLastMessage);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chatId) return;\n\n        this.setState({\n            clearHistory: update.inProgress\n        });\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chat_id, last_message } = update;\n        const { chatId } = this.props;\n\n        if (chat_id !== chatId) return;\n\n        this.setState({\n            hasLastMessage: Boolean(last_message)\n        });\n    };\n\n    onUpdateChatIsBlocked = update => {\n        const { chat_id, is_blocked } = update;\n        const { chatId } = this.props;\n\n        if (chat_id !== chatId) return;\n\n        this.setState({\n            isBlocked: is_blocked\n        });\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    handleUnblock = () => {\n        const { chatId } = this.props;\n\n        unblockSender({ '@type': 'messageSenderChat', chat_id: chatId });\n    };\n\n    handleStartBot = async () => {\n        const { chatId, options } = this.props;\n\n        await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n        if (options && options.botStartMessage) {\n            const { botUserId, parameter } = options.botStartMessage;\n\n            await sendBotStartMessage(chatId, botUserId, parameter);\n        } else {\n            await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: 0,\n                input_message_content: {\n                    '@type': 'inputMessageText',\n                    text: {\n                        '@type': 'formattedText',\n                        text: '/start',\n                        entities: []\n                    },\n                    disable_web_page_preview: true,\n                    clear_draft: true\n                }\n            });\n        }\n    };\n\n    render() {\n        const { chatId, options, t } = this.props;\n        const { hasLastMessage, clearHistory } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { type, is_blocked } = chat;\n        if (!type) return null;\n\n        if (is_blocked) {\n            return <FooterCommand command={t('Unblock')} onCommand={this.handleUnblock} />;\n        }\n\n        if (options && options.botStartMessage) {\n            const isBot = isBotChat(chatId);\n            if (isBot) {\n                return <FooterCommand command={t('BotStart')} onCommand={this.handleStartBot} />;\n            }\n        }\n\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                if (!basicGroup) return null;\n\n                const { status } = basicGroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return null;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                        }\n                    }\n                }\n                break;\n            }\n            case 'chatTypeSecret':\n            case 'chatTypePrivate': {\n                const isBot = isBotChat(chatId);\n                if (isBot && (!hasLastMessage || clearHistory)) {\n                    return <FooterCommand command={t('BotStart')} onCommand={this.handleStartBot} />;\n                }\n\n                return <InputBox />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(type.supergroup_id);\n                if (!supergroup) return null;\n\n                const { is_channel, status } = supergroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={is_channel ? t('ChannelJoin') : t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return (\n                            <FooterCommand\n                                command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                onCommand={this.handleJoin}\n                            />\n                        );\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (is_channel) {\n                            return <NotificationsCommand chatId={chatId} />;\n                        } else {\n                            return <InputBox />;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return (\n                                <FooterCommand\n                                    command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                    onCommand={this.handleJoin}\n                                />\n                            );\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default withTranslation()(Footer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -3.000000)' fillRule='nonzero'>\n        <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M18.8833789,7.00672773 L19,7 C19.5128358,7 19.9355072,7.38604019 19.9932723,7.88337887 L20,8 L20,10 L22,10 C22.5128358,10 22.9355072,10.3860402 22.9932723,10.8833789 L23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L20,12 L20,14 C20,14.5128358 19.6139598,14.9355072 19.1166211,14.9932723 L19,15 C18.4871642,15 18.0644928,14.6139598 18.0067277,14.1166211 L18,14 L18,12 L16,12 C15.4871642,12 15.0644928,11.6139598 15.0067277,11.1166211 L15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L18,10 L18,8 C18,7.48716416 18.3860402,7.06449284 18.8833789,7.00672773 L19,7 L18.8833789,7.00672773 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />\n    </g>,\n    'AddMember'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d=\"M19.36,2.72L20.78,4.14L15.06,9.85C16.13,11.39 16.28,13.24 15.38,14.44L9.06,8.12C10.26,7.22 12.11,7.37 13.65,8.44L19.36,2.72M5.93,17.57C3.92,15.56 2.69,13.16 2.35,10.92L7.23,8.83L14.67,16.27L12.58,21.15C10.34,20.81 7.94,19.58 5.93,17.57Z\" />,\n    'Broom'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport AddMemberIcon from '../../Assets/Icons/AddMember';\nimport BroomIcon from '../../Assets/Icons/Broom';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MoreVertIcon from '../../Assets/Icons/More';\nimport RemoveMemberIcon from '../../Assets/Icons/RemoveMember';\nimport UnpinIcon from '../../Assets/Icons/PinOff';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport { requestUnpinMessage } from '../../Actions/Client';\nimport { clearHistory, leaveChat } from '../../Actions/Chat';\nimport { canClearHistory, canDeleteChat, getViewInfoTitle, isPrivateChat, getDeleteChatTitle, hasOnePinnedMessage, canSwitchBlocked, getChatSender } from '../../Utils/Chat';\nimport { requestBlockSender, unblockSender } from '../../Actions/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleButtonClick = async event => {\n        const { currentTarget: anchorEl } = event;\n\n        const chatId = AppStore.getChatId();\n        const chat = await TdLibController.send({ '@type': 'getChat', chat_id: chatId });\n        ChatStore.set(chat);\n\n        this.setState({ anchorEl });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        clearHistory(AppStore.getChatId());\n    };\n\n    handleDeleteChat = () => {\n        this.handleMenuClose();\n\n        leaveChat(AppStore.getChatId());\n    };\n\n    handleUnpin = () => {\n        this.handleMenuClose();\n\n        const chatId = AppStore.getChatId();\n\n        const media = MessageStore.getMedia(chatId);\n        if (!media) return false;\n\n        const { pinned } = media;\n        if (!pinned) return false;\n        if (pinned.length !== 1) return false;\n\n        requestUnpinMessage(chatId, pinned[0].id);\n    };\n\n    handleSwitchBlocked = () => {\n        this.handleMenuClose();\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const sender = getChatSender(chatId);\n        const { is_blocked } = chat;\n        if (is_blocked) {\n            unblockSender(sender);\n        } else {\n            requestBlockSender(sender);\n        }\n\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl } = this.state;\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { is_blocked } = chat;\n\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\n        const unpinMessage = hasOnePinnedMessage(chatId);\n        const switchBlocked = canSwitchBlocked(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='main-menu-button'\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleChatInfo}>\n                        <ListItemIcon>\n                            {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\n                        </ListItemIcon>\n                        <ListItemText primary={getViewInfoTitle(chatId, t)} />\n                    </MenuItem>\n                    {clearHistory && (\n                        <MenuItem onClick={this.handleClearHistory}>\n                            <ListItemIcon>\n                                <BroomIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('ClearHistory')} />\n                        </MenuItem>\n                    )}\n                    {deleteChat && deleteChatTitle && (\n                        <MenuItem onClick={this.handleDeleteChat}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={deleteChatTitle} />\n                        </MenuItem>\n                    )}\n                    {unpinMessage && (\n                        <MenuItem onClick={this.handleUnpin}>\n                            <ListItemIcon>\n                                <UnpinIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('UnpinMessageAlertTitle')} />\n                        </MenuItem>\n                    )}\n                    {switchBlocked && (\n                        <MenuItem onClick={this.handleSwitchBlocked}>\n                            <ListItemIcon>\n                                {is_blocked ? <AddMemberIcon /> : <RemoveMemberIcon />}\n                            </ListItemIcon>\n                            <ListItemText primary={is_blocked ? t('Unblock') : t('BlockContact')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatSubtitle, isAccentChatSubtitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './HeaderChatSubtitle.css';\n\nclass HeaderChatSubtitle extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.off('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserChatAction = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group.id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId } = this.props;\n\n        const subtitle = getChatSubtitle(chatId, true);\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n\n        return (\n            <div className={classNames('header-chat-subtitle', { 'header-chat-subtitle-accent': isAccentSubtitle })}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nHeaderChatSubtitle.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChatSubtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport HeaderChatSubtitle from './HeaderChatSubtitle';\nimport './HeaderChat.css';\n\nclass HeaderChat extends React.Component {\n    render() {\n        const { className, chatId, onClick } = this.props;\n\n        return (\n            <div className={classNames('header-chat', className)} onClick={onClick}>\n                <ChatTile chatId={chatId} size={44} />\n                <div className='header-chat-content'>\n                    <DialogTitle chatId={chatId} />\n                    <HeaderChatSubtitle chatId={chatId} />\n                </div>\n            </div>\n        );\n    }\n}\n\nHeaderChat.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './AnimatedItem.css';\n\nclass AnimatedItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.containerRef = React.createRef();\n        this.item1Ref = React.createRef();\n        this.item2Ref = React.createRef();\n\n        this.state = { };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return nextProps.item !== this.props.item;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { item } = props;\n        const { to, prevItem } = state;\n\n        if (item !== prevItem) {\n            return {\n                prevItem: item,\n                from: to,\n                to: item,\n                scrollDown: item > to\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        const { scrollDown } = this.props;\n        const { to } = this.state;\n\n        this.animate('', to, scrollDown);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { item, scrollDown } = this.props;\n        const { from, to } = this.state;\n\n        if (prevProps.item !== item) {\n            this.animate(from, to, scrollDown);\n        }\n    }\n\n    animate = (from, to, scrollDown) => {\n        const { height } = this.props;\n\n        const container = this.containerRef.current;\n        const item1 = this.item1Ref.current;\n        const item2 = this.item2Ref.current;\n\n        if (!container || !item1 || !item2) return;\n\n        const duration = '250ms';\n        const timingFunction = 'ease-in-out';\n\n        if (scrollDown) {\n            container.style.cssText = `transform: translateY(-${height}px)`;\n            item1.style.cssText = 'opacity: 0';\n            item2.style.cssText = 'opacity: 1';\n            requestAnimationFrame(() => {\n                container.style.cssText = `transform: translateY(0); transition: transform ${duration} ${timingFunction}`;\n                item1.style.cssText = `opacity: 1; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n                item2.style.cssText = `opacity: 0; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n            });\n        } else {\n            container.style.cssText = 'transform: translateY(0px)';\n            item1.style.cssText = 'opacity: 1';\n            item2.style.cssText = 'opacity: 0';\n            requestAnimationFrame(() => {\n                container.style.cssText = `transform: translateY(-${height}px); transition: transform ${duration} ${timingFunction}`;\n                item1.style.cssText = `opacity: 0; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n                item2.style.cssText = `opacity: 1; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n            });\n        }\n    };\n\n    render() {\n        const { scrollDown, height } = this.props;\n        const { from, to } = this.state;\n\n        // console.log('[c] render', [from, to, scrollDown]);\n\n        return (\n            <div className='animated-item' style={{ height }}>\n                <div className='animated-item-placeholder'>{to}</div>\n                <div ref={this.containerRef} className='animated-item-wrapper'>\n                    <div ref={this.item1Ref} className='animated-item-1' style={{ height }}>{scrollDown ? to : from }</div>\n                    <div ref={this.item2Ref} className='animated-item-2' style={{ height }}>{scrollDown ? from : to }</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAnimatedItem.propTypes = {\n    item: PropTypes.string,\n    scrollDown: PropTypes.bool,\n    height: PropTypes.number\n};\n\nAnimatedItem.defaultProps = {\n    item: null,\n    scrollDown: true,\n    height: 21\n}\n\nexport default AnimatedItem;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport AnimatedItem from './AnimatedItem';\nimport './AnimatedCounter.css';\n\nclass AnimatedCounter extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { counter } = props;\n        const { prevCounter } = state;\n\n        if (counter !== prevCounter) {\n            return {\n                prevCounter: counter,\n\n                scrollDown: counter > prevCounter\n            };\n        }\n\n        return null;\n    }\n\n    render() {\n        const { counter, height, reverse } = this.props;\n        const { scrollDown } = this.state;\n        if (!counter) return null;\n\n        const counterStr = counter + '';\n\n        return (\n            <div className='animated-counter' style={{ height }}>\n                {[...counterStr].reverse().map((x, index) => <AnimatedItem key={index} item={x} scrollDown={reverse ? !scrollDown : scrollDown} height={height} />)}\n            </div>\n        );\n    }\n}\n\nAnimatedCounter.propTypes = {\n    counter: PropTypes.number,\n    height: PropTypes.number,\n    reverse: PropTypes.bool\n};\n\nAnimatedCounter.defaultProps = {\n    counter: 0,\n    height: 21,\n    reverse: false\n}\n\nexport default AnimatedCounter;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport { clearSelection, deleteMessages, forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './HeaderCommand.css';\nimport AnimatedCounter from './AnimatedCounter';\n\nclass HeaderCommand extends React.Component {\n    handleCancel = () => {\n        clearSelection();\n    };\n\n    handleDelete = () => {\n        let id = 0;\n        let messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        deleteMessages(id, messageIds);\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        forwardMessages(id, messageIds);\n    };\n\n    render() {\n        const { t, count } = this.props;\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        return (\n            <div className='header-command'>\n                {canBeForwarded && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleForward}>\n                        {t('Forward')}\n                        <span>&nbsp;</span>\n                        <AnimatedCounter counter={count}/>\n                    </Button>\n                )}\n                {canBeDeleted && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleDelete}>\n                        {t('Delete')}\n                        <span>&nbsp;</span>\n                        <AnimatedCounter counter={count}/>\n                    </Button>\n                )}\n                <div className='header-command-space' />\n                <Button color='primary' className='header-command-button' onClick={this.handleCancel}>\n                    {t('Cancel')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nexport default withTranslation()(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.3888889,16 C13.7263962,16 14,16.4477153 14,17 C14,17.5128358 13.7640866,17.9355072 13.4601574,17.9932723 L13.3888889,18 L3.61111111,18 C3.27360376,18 3,17.5522847 3,17 C3,16.4871642 3.23591345,16.0644928 3.53984265,16.0067277 L3.61111111,16 L13.3888889,16 Z M21.6775853,3 L21.7874884,3.00503549 C22.3661813,3.05833764 22.8187635,3.52822285 22.8187635,4.1 C22.8187635,4.42111738 22.6731917,4.72620184 22.4202543,4.93518226 L20.7728252,6.29631085 L20.4502303,9.71680948 L22.7117368,12.1691998 C23.1304556,12.6232608 23.0880258,13.3185404 22.6169671,13.7221503 C22.4080732,13.9011336 22.1383003,14 21.8588096,14 L18,14 L18,17.375 C18,17.6936258 17.6185148,17.9565637 17.1254379,17.9951304 L17,18 C16.4477153,18 16,17.720178 16,17.375 L16,17.375 L16,14 L12.1411782,14 C11.5109229,14 11,13.5075132 11,12.9 C11,12.6305944 11.1025675,12.370556 11.288251,12.1691998 L13.5497575,9.71680948 L13.2271626,6.29631085 L11.5797335,4.93518226 C11.101208,4.5398179 11.0457907,3.84538792 11.4559554,3.38412949 C11.6727589,3.140319 11.9892641,3 12.3224024,3 L21.6775853,3 Z M8.66666667,11 C8.85076158,11 9,11.4477153 9,12 C9,12.5128358 8.87131994,12.9355072 8.70554038,12.9932723 L8.66666667,13 L3.33333333,13 C3.14923842,13 3,12.5522847 3,12 C3,11.4871642 3.12868006,11.0644928 3.29445962,11.0067277 L3.33333333,11 L8.66666667,11 Z M19.7289592,5 L14.2710408,5 L14.919153,5.62138118 C15.1441218,5.83707131 15.2849972,6.14241408 15.3118231,6.47248045 L15.5530612,9.44068174 C15.5815232,9.79087913 15.4791848,10.1386429 15.2703267,10.401463 L14,12 L20,12 L18.7296733,10.401463 C18.5208152,10.1386429 18.4184768,9.79087913 18.4469388,9.44068174 L18.6881769,6.47248045 C18.7150028,6.14241408 18.8558782,5.83707131 19.080847,5.62138118 L19.7289592,5 Z M10.5555556,6 C10.8010154,6 11,6.44771525 11,7 C11,7.51283584 10.8284266,7.93550716 10.6073872,7.99327227 L10.5555556,8 L3.44444444,8 C3.19898456,8 3,7.55228475 3,7 C3,6.48716416 3.17157342,6.06449284 3.39261283,6.00672773 L3.44444444,6 L10.5555556,6 Z'/>,\n    'PlaylistEdit'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './PinnedMessageBorder.css';\n\nclass PinnedMessageBorder extends React.Component {\n\n    drawRect = (x, y, width, height, radius) => {\n        return `M${x},${y + radius}a${radius},${radius},0,0,1,${width},0v${height - 2 * radius}a${radius},${radius},0,0,1,${-width},0Z`;\n    };\n\n    getClipPath = (id, barHeight, count) => {\n        const radius = 1;\n\n        let d = '';\n        if (count === 3) {\n            d = this.drawRect(0, 0, 2, barHeight, radius)\n                + this.drawRect(0, 11, 2, barHeight + 1, radius)\n                + this.drawRect(0, 23, 2, barHeight, radius);\n        } else {\n            for (let i = 0; i < count; i++) {\n                d += this.drawRect(0, (barHeight + 2) * i, 2, barHeight, radius);\n            }\n        }\n\n        return (\n            <clipPath id={id}>\n                <path d={d}/>\n            </clipPath>\n        );\n    };\n\n    getBarHeight = (count, index) => {\n        let barHeight = 32;\n        if (count === 1) {\n            barHeight = 32;\n        } else if (count === 2) {\n            barHeight = 15;\n        } else if (count === 3) {\n            barHeight = 9;\n        } else if (count === 4) {\n            barHeight = 7;\n        } else if (count > 3) {\n            barHeight = 7;\n        }\n\n        return barHeight;\n    };\n\n    getMarkHeight = (count, index) => {\n        let barHeight = 32;\n        if (count === 1) {\n            barHeight = 32;\n        } else if (count === 2) {\n            barHeight = 15;\n        } else if (count === 3) {\n            barHeight = index === 1 ? 10 : 9;\n        } else if (count === 4) {\n            barHeight = 7;\n        } else if (count > 3) {\n            barHeight = 7;\n        }\n\n        return barHeight;\n    };\n\n    getMarkTranslateY = (index, barHeight, count) => {\n        if (count === 1) {\n            return 0;\n        } else if (count === 2) {\n            return index === 0 ? 0 : barHeight + 2;\n        }\n\n        if (count === 3) {\n            if (index === 0) {\n                return 0;\n            } else if (index === 1) {\n                return 11;\n            }\n\n            return 23;\n        } else {\n            return (barHeight + 2) * index;\n        }\n    };\n\n    getTrackTranslateY = (index, count, barHeight, trackHeight) => {\n        if (count <= 4) {\n            return 0;\n        }\n\n        if (index <= 1) {\n            return 0;\n        } else if (index >= count - 2) {\n            return trackHeight - 32;\n        }\n\n        return (barHeight + 4) / 2 + (index - 2) * (barHeight + 2);\n    };\n\n    getTrackHeight = (count, barHeight) => {\n        return count <= 3 ? 32 : barHeight * count + 2 * (count - 1);\n    };\n\n    render() {\n        const { count, index } = this.props;\n        if (count === 1) {\n            return (\n                <div className='pinned-message-border'>\n                    <div className='pinned-message-border-wrapper-1'/>\n                </div>);\n        }\n\n        const barHeight = this.getBarHeight(count, index);\n        const markHeight = this.getMarkHeight(count, index);\n        const trackHeight = this.getTrackHeight(count, barHeight);\n\n        const clipPathId = `clipPath_${count}`;\n        const clipPath = this.getClipPath(clipPathId, barHeight, count);\n\n        const markTranslateY = this.getMarkTranslateY(index, barHeight, count);\n        const trackTranslateY = this.getTrackTranslateY(index, count, barHeight, trackHeight);\n\n        return (\n            <div className={classNames('pinned-message-border', { 'pinned-message-border-mask': count > 4 })}>\n                <div className='pinned-message-border-wrapper' style={{ clipPath: `url(#${clipPathId})`, width: 2, height: trackHeight, transform: `translateY(-${trackTranslateY}px)` }}>\n                    <svg height='0' width='0'>\n                        <defs>{clipPath}</defs>\n                    </svg>\n                    <div className='pinned-message-border-mark' style={{ height: markHeight, transform: `translateY(${markTranslateY}px)` }}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nPinnedMessageBorder.propTypes = {\n    count: PropTypes.number,\n    index: PropTypes.number\n};\n\nexport default PinnedMessageBorder;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ReplyTile from '../Tile/ReplyTile';\nimport PlaylistEditIcon from '../../Assets/Icons/PlaylistEdit';\nimport { getContent, getReplyMinithumbnail, getReplyThumbnail, isDeletedMessage } from '../../Utils/Message';\nimport { openChat } from '../../Actions/Client';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\nimport AnimatedCounter from './AnimatedCounter';\nimport PinnedMessageBorder from './PinnedMessageBorder';\n\nclass PinnedMessage extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const media = MessageStore.getMedia(chatId);\n\n            const pinned = media ? media.pinned : [];\n\n            const messageId = pinned && pinned.length > 0 ? pinned[0].id : 0;\n            const thumbnail = getReplyThumbnail(chatId, messageId);\n            const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                pinned,\n                prevMessageId: 0,\n                messageId,\n                minithumbnail,\n                thumbnail,\n                lastPhoto: {\n                    messageId,\n                    minithumbnail,\n                    thumbnail\n                }\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.props;\n        const { clientData, pinned, messageId } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.pinned !== pinned) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        const { prevMessageId, messageId } = this.state;\n\n        if (prevProps.chatId !== chatId) {\n            this.animateText(messageId, prevMessageId, 0);\n        }\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('clientUpdateCurrentPinnedMessage', this.onClientUpdateCurrentPinnedMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('clientUpdateCurrentPinnedMessage', this.onClientUpdateCurrentPinnedMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    onClientUpdateCurrentPinnedMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chatId) {\n            return;\n        }\n\n        this.scrollToMessageId(update.messageId);\n    };\n\n    onUpdateMessageIsPinned = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n        if (!message.is_pinned) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { pinned } = this.state;\n        const { chat_id, is_permanent, message_ids } = update;\n        const messageIds = new Map(message_ids.map(x => [x, x]));\n        if (chatId !== chat_id) {\n            return;\n        }\n        if (!pinned.some(x => messageIds.has(x.id))) {\n            return;\n        }\n        if (!is_permanent) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { pinned } = this.state;\n        const { chat_id, message_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n        if (!pinned.some(x => x.id === message_id)) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    animateText = (messageId, prevMessageId, duration = 250) => {\n        const textElement = document.getElementById('pinned-message-animated-text');\n        const text1Element = document.getElementById('pinned-message-animated-text-1');\n        const text2Element = document.getElementById('pinned-message-animated-text-2');\n        if (!textElement || !text1Element || !text2Element) return;\n\n        const timingFunction = 'ease-in-out';\n\n        const scrollDown = prevMessageId === 0 || messageId < prevMessageId;\n        if (scrollDown) {\n            textElement.style.cssText = 'transform: translateY(-19px)';\n            text1Element.style.cssText = 'opacity: 0';\n            text2Element.style.cssText = 'opacity: 1';\n            requestAnimationFrame(() => {\n                textElement.style.cssText = `transform: translateY(0); transition: transform ${duration}ms ${timingFunction}`;\n                text1Element.style.cssText = `opacity: 1; transition: opacity ${duration}ms ${timingFunction}`;\n                text2Element.style.cssText = `opacity: 0; transition: opacity ${duration}ms ${timingFunction}`;\n            });\n        } else {\n            textElement.style.cssText = 'transform: translateY(0px)';\n            text1Element.style.cssText = 'opacity: 1';\n            text2Element.style.cssText = 'opacity: 0';\n            requestAnimationFrame(() => {\n                textElement.style.cssText = `transform: translateY(-19px); transition: transform ${duration}ms ${timingFunction}`;\n                text1Element.style.cssText = `opacity: 0; transition: opacity ${duration}ms ${timingFunction}`;\n                text2Element.style.cssText = `opacity: 1; transition: opacity ${duration}ms ${timingFunction}`;\n            });\n        }\n    };\n\n    setPinnedState = () => {\n        const { chatId } = this.props;\n        const { messageId: currentMessageId, prevMessageId: currentPrevMessageId } = this.state;\n\n        const clientData = ChatStore.getClientData(chatId);\n\n        const media = MessageStore.getMedia(chatId);\n        const pinned = media ? media.pinned : [];\n\n        let messageId = pinned.some(x => x.id === currentMessageId) ? currentMessageId : 0;\n        if (!messageId && pinned.length > 0) {\n            messageId = pinned[0].id;\n        }\n        let prevMessageId = currentMessageId === messageId ? currentPrevMessageId : currentMessageId;\n\n        const thumbnail = getReplyThumbnail(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        MessageStore.currentPinned = { chatId, id: messageId };\n        this.setState({\n            clientData,\n            pinned,\n            prevMessageId,\n            messageId,\n            thumbnail,\n            minithumbnail,\n            lastPhoto: {\n                messageId,\n                thumbnail,\n                minithumbnail\n            }\n        }, () => {\n            if (this.state.prevMessageId === 0) return;\n            if (currentMessageId === this.state.messageId) return;\n\n            this.animateText(this.state.messageId, this.state.prevMessageId);\n        });\n    };\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId } = update;\n        if (chatId !== currentChatId) return;\n\n        this.setPinnedState();\n    };\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    scrollToMessageId = nextMessageId => {\n        const { chatId } = this.props;\n        const { messageId, thumbnail, minithumbnail } = this.state;\n\n        const nextThumbnail = getReplyThumbnail(chatId, nextMessageId);\n        const nextMinithumbnail = getReplyMinithumbnail(chatId, nextMessageId);\n\n        const lastPhoto = nextThumbnail ? {\n            messageId: nextMessageId,\n            thumbnail: nextThumbnail,\n            minithumbnail: nextMinithumbnail\n        } : {\n            messageId,\n            thumbnail,\n            minithumbnail\n        }\n\n        MessageStore.currentPinned = { chatId, id: messageId };\n        this.setState({\n            prevMessageId: messageId,\n            messageId: nextMessageId,\n            thumbnail: nextThumbnail,\n            minithumbnail: nextMinithumbnail,\n            lastPhoto\n        }, () => {\n            if (this.state.prevMessageId === 0) return;\n            if (messageId === this.state.messageId) return;\n\n            this.animateText(this.state.messageId, this.state.prevMessageId);\n        });\n    };\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { pinned, messageId } = this.state;\n        if (!pinned.length) return;\n\n        if (!messageId) return;\n        if (event.nativeEvent.which !== 1) return;\n\n        MessageStore.clickedPinned = { chatId, id: messageId };\n\n        openChat(chatId, messageId);\n\n        const index = pinned.findIndex(x => x.id === messageId);\n        if (index === -1) return;\n\n        const nextIndex = index >= pinned.length - 1 ? 0 : index + 1;\n\n        this.scrollToMessageId(pinned[nextIndex].id);\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n    };\n\n    handleEditClick = event => {\n        const { chatId } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateOpenPinned',\n            chatId\n        })\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { messageId, prevMessageId, pinned, thumbnail, minithumbnail, lastPhoto, clientData } = this.state;\n\n        if (!chatId) return null;\n\n        if (clientData) {\n            const { unpinned } = clientData;\n            if (unpinned) return null;\n        }\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const prevMessage = MessageStore.get(chatId, prevMessageId);\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        let prevContent = !prevMessage ? '' : getContent(prevMessage, t);\n        if (isDeletedMessage(prevMessage)) {\n            content = t('DeletedMessage');\n        }\n\n        let index = 0;\n        let caption = t('PinnedMessage');\n        if (pinned && pinned.length > 1) {\n            index = pinned ? pinned.findIndex(x => x.id === messageId) : -1;\n            if (pinned.length === 2) {\n                caption = index === 1 ? t('PreviousPinnedMessage') : t('PinnedMessage');\n            } else {\n                caption = (\n                    <>\n                        {t('PinnedMessage')}\n                        {index > 0 && (\n                            <>\n                                {' #'}\n                                <AnimatedCounter counter={pinned.length - index} height={19} reverse={true}/>\n                            </>)\n                        }\n                    </>);\n            }\n        }\n\n        const scrollDown = prevMessageId === 0 || messageId < prevMessageId;\n\n        return (\n            <>\n                <ListItem button className={classNames('pinned-message', { 'pinned-message-photo': thumbnail })} onMouseDown={this.handleClick}>\n                    <PinnedMessageBorder index={pinned.length - index - 1} count={pinned.length}/>\n                    <CSSTransition\n                        in={!!thumbnail}\n                        classNames='pinned-message-tile'\n                        timeout={250}\n                        mountOnEnter={true}\n                        unmountOnExit={true}>\n                        <div>\n                            <ReplyTile\n                                chatId={chatId}\n                                messageId={lastPhoto ? lastPhoto.messageId : null}\n                                thumbnail={lastPhoto ? lastPhoto.thumbnail : null}\n                                minithumbnail={lastPhoto ? lastPhoto.minithumbnail : null}\n                            />\n                        </div>\n                    </CSSTransition>\n                    <div className='pinned-message-content'>\n                        <div className='pinned-message-title'>{caption}</div>\n                        <div className='pinned-message-subtitle'>\n                            <div id='pinned-message-animated-text'>\n                                <div id='pinned-message-animated-text-1'>{scrollDown ? content : prevContent}</div>\n                                <div id='pinned-message-animated-text-2'>{scrollDown ? prevContent : content}</div>\n                            </div>\n                        </div>\n                    </div>\n                    { pinned.length > 1 && (\n                        <IconButton\n                            className='pinned-message-edit-button'\n                            aria-label='Edit'\n                            onClick={this.handleEditClick}\n                            onMouseDown={this.handleMouseDown}>\n                            <PlaylistEditIcon />\n                        </IconButton>\n                    )}\n                </ListItem>\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderChat from '../Tile/HeaderChat';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport PinnedMessage from './PinnedMessage';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport {\n    getChatSubtitle,\n    getChatTitle,\n    isAccentChatSubtitle\n} from '../../Utils/Chat';\nimport { openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Header.css';\n\nclass Header extends Component {\n    state = {\n        authorizationState: AppStore.getAuthorizationState(),\n        connectionState: AppStore.getConnectionState()\n    };\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    openChatDetails = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { isSmallWidth } = AppStore;\n\n        if (isSmallWidth) {\n            openChat(chatId, null, true);\n        } else {\n            changeChatDetailsVisibility(true);\n        }\n    };\n\n    handleSearchChat = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            authorizationState,\n            connectionState,\n            selectionCount,\n        } = this.state;\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        return (\n            <div className={classNames('header-details', { 'header-details-selection': selectionCount > 0 })}>\n                <div className='header-details-content'>\n                    <HeaderCommand count={selectionCount} />\n                    <div className='header-details-row'>\n                        {showProgressAnimation ? (\n                            <div\n                                className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                                onClick={this.openChatDetails}>\n                                <span className='header-status-content'>{title}</span>\n                                <HeaderProgress />\n                                <span className={classNames('header-status-title', { 'header-status-accent': isAccentSubtitle })}>\n                                    {subtitle}\n                                </span>\n                                <span className='header-status-tail' />\n                            </div>\n                        ) : (\n                            <HeaderChat\n                                className={classNames('grow', 'cursor-pointer')}\n                                chatId={chatId}\n                                onClick={this.openChatDetails}\n                            />\n                        )}\n                        <PinnedMessage chatId={chatId} />\n                        {chat && (\n                            <>\n                                <IconButton\n                                    className='header-right-second-button'\n                                    aria-label='Search'\n                                    onClick={this.handleSearchChat}>\n                                    <SearchIcon />\n                                </IconButton>\n                                <MainMenuButton openChatDetails={this.openChatDetails} />\n                            </>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/core/Slider';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className='header-player-button' color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div className='volume-button-panel'>\n                        <Slider\n                            min={0}\n                            max={1}\n                            step={0.01}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            orientation='vertical'\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default VolumeButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default RepeatButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default ShuffleButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { audioPlaybackRate, playbackRate } = PlayerStore;\n\n        this.state = {\n            audioPlaybackRate,\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    onClientUpdateMediaAudioPlaybackRate = update => {\n        const { audioPlaybackRate } = update;\n\n        this.setState({ audioPlaybackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { audio } = this.props;\n        const { audioPlaybackRate, playbackRate } = this.state;\n\n        const rate = audio ? audioPlaybackRate : playbackRate;\n        const nextRate = rate === PLAYER_PLAYBACKRATE_NORMAL\n            ? PLAYER_PLAYBACKRATE_FAST\n            : PLAYER_PLAYBACKRATE_NORMAL;\n\n        if (audio) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaAudioPlaybackRate',\n                audioPlaybackRate: nextRate\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaybackRate',\n                playbackRate: nextRate\n            });\n        }\n    };\n\n    render() {\n        const { audio } = this.props;\n        const { audioPlaybackRate, playbackRate } = this.state;\n\n        const rate = audio ? audioPlaybackRate : playbackRate;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={rate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nPlaybackRateButton.defaultProps = {\n    audio: false\n}\n\nPlaybackRateButton.propTypes = {\n    audio: PropTypes.bool\n}\n\nexport default PlaybackRateButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport './Time.css';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { duration } = this.props;\n\n        const currentTime = 0;\n        const reverse = false;\n\n        this.state = {\n            reverse,\n            currentTime,\n            duration,\n            currentTimeString: getDurationString(currentTime, duration, reverse),\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime, duration } = update;\n        const { reverse } = this.state;\n\n        this.setState({\n            currentTime,\n            duration,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, reverse)\n        });\n    };\n\n    handleReverse = event => {\n        event.stopPropagation();\n        event.preventDefault();\n\n        const { currentTime, duration, reverse } = this.state;\n\n        this.setState({\n            reverse: !reverse,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, !reverse)\n        });\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return (\n            <div className='header-player-time' onClick={this.handleReverse}>\n                {currentTimeString}\n            </div>\n        );\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport MediaAudio from '../Message/Media/Audio';\nimport MediaVoiceNote from '../Message/Media/VoiceNote';\nimport { openMedia } from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { isCurrentSource, playlistItemEquals } from '../../Utils/Player';\nimport { openInstantViewMedia } from '../../Utils/InstantView';\nimport { SCROLL_PRECISION } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, block, playlist } = PlayerStore;\n        this.state = {\n            message,\n            block,\n            playlist,\n\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { playlist, message, block } = this.state;\n        if (!message && !block) return;\n        if (!playlist) return;\n\n        const index = [...playlist.items]\n            .reverse()\n            .findIndex(x => playlistItemEquals(x, message || block));\n        if (index === -1) return;\n\n        const item = this.itemRefMap.get(index);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.off('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { source } = update;\n\n        switch (source['@type']) {\n            case 'message': {\n\n                this.setState({\n                    message: source,\n                    block: null\n                })\n                break;\n            }\n            case 'instantViewSource': {\n\n                this.setState({\n                    message: null,\n                    block: source.block\n                });\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { message, block } = this.state;\n        const { source } = update;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { message, block } = this.state;\n        const { source, playlist } = update;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({\n                playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    getPageBlock(block, instantView) {\n        if (!block) return null;\n\n        let element = null;\n        switch (block['@type']) {\n            case 'pageBlockAudio': {\n                element = (\n                    <MediaAudio\n                        block={block}\n                        audio={block.audio}\n                        openMedia={() => openInstantViewMedia(block.audio, block.caption, block, instantView, true)} />\n                );\n                break;\n            }\n            case 'pageBlockVoiceNote': {\n                element = (\n                    <MediaVoiceNote\n                        block={block}\n                        voiceNote={block.voice_note}\n                        openMedia={() => openInstantViewMedia(block.voice_note, block.caption, block, instantView, true)} />\n                );\n                break;\n            }\n        }\n\n        return element;\n    }\n\n    render() {\n        const { open, playlist } = this.state;\n\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { items } = playlist;\n        if (!items) return null;\n        if (items.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        let iv = null;\n        if (items[0]['@type'] === 'instantViewSource') {\n            iv = playlist.source.instantView;\n        }\n\n        const getMediaFunc = items[0]['@type'] === 'message'\n            ? x => getMedia(x, () => openMedia(x.chat_id, x.id))\n            : x => this.getPageBlock(x, iv)\n\n        return (\n            <div className='playlist'>\n                <div className='playlist-wrapper'>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {[...items]\n                            .reverse()\n                            .map((x, index) => (\n                                <div key={x.id || index} ref={el => this.itemRefMap.set(index, el)} className='playlist-item'>\n                                    {getMediaFunc(x)}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nPlaylist.propTypes = {\n\n};\n\nexport default Playlist;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { loadInstantViewContent } from '../Utils/File';\nimport { setInstantViewContent } from './Client';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openMediaInstantView(instantView, block) {\n    const url = urlCache.get(instantView);\n    if (!url) return;\n\n    console.log('[IV] open', instantView);\n    loadInstantViewContent(instantView);\n    setInstantViewContent({ instantView, block, url });\n}\n\nlet timestamp = null;\n\nconst ivCache = new Map();\nconst urlCache = new Map();\n\nexport async function openInstantView(url) {\n    try {\n        let result = null;\n        if (ivCache.has(url)) {\n            result = ivCache.get(url);\n        } else {\n            const now = (timestamp = new Date());\n            result = await TdLibController.send({\n                '@type': 'getWebPageInstantView',\n                url,\n                force_full: true\n            });\n            ivCache.set(url, result);\n            urlCache.set(result, url);\n            if (timestamp !== now) return;\n        }\n\n        console.log('[IV] open', result);\n        loadInstantViewContent(result);\n        setInstantViewContent({ instantView: result, url });\n    } catch {\n        const newWindow = window.open();\n        newWindow.opener = null;\n        newWindow.location = url;\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { supportsStreaming } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDate, getDateHint, getMessageAudio, hasAudio, hasVoice, useAudioPlaybackRate } from '../../Utils/Message';\nimport { getCurrentTime, getMediaTitle, getMediaMimeType, getMediaSrc, isCurrentSource, playlistItemEquals } from '../../Utils/Player';\nimport { openMediaInstantView } from '../../Actions/InstantView';\nimport { clamp } from '../../Utils/Common';\nimport { PLAYER_PLAYBACKRATE_NORMAL, PLAYER_SEEK_STEP_BIG } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, block, instantView, playlist } = PlayerStore;\n        const { currentTime, duration } = getCurrentTime(message);\n\n        this.state = {\n            currentTime,\n            duration,\n            message,\n            block,\n            instantView,\n            playlist,\n            playing: false,\n            src: getMediaSrc(message),\n            mimeType: getMediaMimeType(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { message, block, playlist, src, playing } = this.state;\n\n        if (nextState.block !== block) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.addMediaSessionHandlers();\n\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n        PlayerStore.on('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    componentWillUnmount() {\n        this.removeMediaSessionHandlers();\n\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.off('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.off('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.off('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n        PlayerStore.off('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    addMediaSessionHandlers() {\n        const { mediaSession } = navigator;\n        if (!mediaSession) return;\n\n        try {\n            mediaSession.setActionHandler('nexttrack', this.handleNext);\n            mediaSession.setActionHandler('previoustrack', this.handlePrev);\n            mediaSession.setActionHandler('seekforward', this.handleSeekForward);\n            mediaSession.setActionHandler('seekbackward', this.handleSeekBackward);\n            mediaSession.setActionHandler('seekto', this.handleSeekTo);\n        } catch {\n\n        }\n    }\n\n    handleSeekForward = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n    };\n\n    handleSeekBackward = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n    };\n\n    handleSeekTo = event => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(event.seekTime);\n    };\n\n    handleSeek = currentTime => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n    };\n\n    removeMediaSessionHandlers() {\n        const { mediaSession } = navigator;\n        if (!mediaSession) return;\n\n        try{\n            mediaSession.setActionHandler('nexttrack', null);\n            mediaSession.setActionHandler('previoustrack', null);\n            mediaSession.setActionHandler('seekforward', null);\n            mediaSession.setActionHandler('seekbackward', null);\n            mediaSession.setActionHandler('seekto', null);\n        }catch {\n\n        }\n    }\n\n    fadeOutVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.pause();\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    fadeInVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        player.volume = 0;\n        player.play();\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / totalIterations * (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    onClientUpdateRecordStart = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (!player.paused) {\n            this.fadeOutVolume(250);\n            this.pausedForRecord = true;\n        }\n    };\n\n    onClientUpdateRecordStop = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (player.paused && this.pausedForRecord) {\n            this.fadeInVolume(250);\n            this.pausedForRecord = false;\n        }\n    };\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        const audio = hasAudio(message || block);\n        if (audio) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaAudioPlaybackRate = update => {\n        const { audioPlaybackRate } = update;\n\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        if (!hasAudio(message || block)) return;\n        if (!useAudioPlaybackRate(message || block)) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = audioPlaybackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaSeek = update => {\n        const { source, value, duration } = update;\n        const { message, block } = this.state;\n\n        if (!isCurrentSource(message? message.chat_id : 0, message? message.id : 0, block, source)) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n        if (!player.duration) {\n            this.currentValue = { value, duration };\n            return;\n        }\n\n        player.currentTime = value * player.duration;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(AppStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.fadeOutVolume(250);\n    };\n\n    startPlayingFile = source => {\n        if (!source) return;\n\n        const { playlist } = PlayerStore;\n        const { src: prevSrc } = this.state;\n\n        const src = getMediaSrc(source);\n        const mimeType = getMediaMimeType(source);\n        const { currentTime, duration } = getCurrentTime(source);\n        const playing = Boolean(src);\n\n        const srcSource = source['@type'] === 'instantViewSource'\n            ? { message: null, block: source.block, instantView: source.instantView }\n            : { message: source, block: null, instantView: null };\n\n        this.setState(\n            {\n                currentTime,\n                duration,\n                playlist,\n                playing,\n                src,\n                ...srcSource,\n                mimeType\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                if (prevSrc !== src) {\n                    player.load();\n                    if (this.currentValue) {\n                        player.currentTime = this.currentValue.value * this.currentValue.duration;\n                        this.currentValue = null;\n                    } else {\n                        player.currentTime = currentTime;\n                    }\n                }\n\n                if (this.playingMediaViewer) {\n                    player.pause();\n\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateMediaPause',\n                        source\n                    });\n                } else if (player.paused) {\n                    player.play();\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, fileId } = update;\n        const { message, block, instantView } = this.state;\n\n        if (message) {\n            const { chat_id, id, content } = message;\n            if (!content) return;\n            if (chatId !== chat_id || messageId !== id) return;\n\n            let startPlaying = false;\n            switch (content['@type']) {\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (web_page) {\n                        const { audio, voice_note, video_note } = web_page;\n\n                        if (audio) {\n                            if (supportsStreaming()) return;\n\n                            const { audio: file } = audio;\n                            if (file) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n\n                        if (voice_note) {\n                            const { voice } = voice_note;\n                            if (voice) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n\n                        if (video_note) {\n                            const { video } = video_note;\n                            if (video) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n                    if (audio) {\n                        if (supportsStreaming()) return;\n\n                        const { audio: file } = audio;\n                        if (file) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageVoiceNote': {\n                    const { voice_note } = content;\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            if (startPlaying) {\n                this.startPlayingFile(message);\n            }\n        } else if (block) {\n            let startPlaying = false;\n            switch (block['@type']) {\n                case 'pageBlockAudio': {\n                    const { audio } = block;\n                    if (audio) {\n                        if (supportsStreaming()) return;\n\n                        const { audio: file } = audio;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n                case 'pageBlockVoiceNote': {\n                    const { voice_note } = block;\n                    if (voice_note) {\n                        const { voice: file } = voice_note;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n                case 'pageBlockVideoNote': {\n                    const { video_note } = block;\n                    if (video_note) {\n                        const { video: file } = video_note;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            if (startPlaying) {\n                this.startPlayingFile({ '@type': 'instantViewSource', block, instantView });\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist, source } = update;\n        const { message, block } = this.state;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({ playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            block: null,\n            instantView: null,\n            playlist: null,\n            playing: false,\n            src: null,\n            mimeType: null\n        }, () => {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { source } = update;\n        const { message, block, src } = this.state;\n\n        if (isCurrentSource(message ? message.chat_id : 0, message ? message.id : 0, block, source)) {\n            if (!src) return;\n\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            this.pausedForRecord = false;\n            if (player.paused) {\n                player.play();\n            } else {\n                player.pause();\n            }\n        } else {\n            this.startPlayingFile(source);\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            source\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            source,\n            moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    source,\n                    moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        const video = this.videoRef.current;\n        this.setCurrentTime({ currentTime: 0, duration: video.duration });\n\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleLoadedMetadata = () => {\n        let { message, block, instantView, currentTime } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { audioPlaybackRate, playbackRate, volume } = PlayerStore;\n\n        const audio = hasAudio(message || block);\n        const voiceNote = hasVoice(message || block);\n\n        let rate = PLAYER_PLAYBACKRATE_NORMAL;\n        if (voiceNote) {\n            rate = playbackRate;\n        } else if (audio && useAudioPlaybackRate(message || block)) {\n            rate = audioPlaybackRate;\n        }\n\n        player.playbackRate = rate;\n        player.volume = volume;\n        player.muted = false;\n        if (this.currentValue) {\n            player.currentTime = player.duration * this.currentValue.value;\n            this.currentValue = null;\n        } else {\n            player.currentTime = currentTime;\n        }\n\n        player.play();\n\n        const { buffered, duration, videoWidth, videoHeight } = player;\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaLoadedMetadata',\n            source,\n            buffered,\n            duration,\n            videoWidth,\n            videoHeight\n        });\n\n        if (audio) {\n            return;\n        }\n        if (voiceNote) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleProgress = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { buffered } = player;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaProgress',\n            source,\n            buffered\n        });\n    }\n\n    handleTimeUpdate = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { currentTime, buffered, duration } = player;\n\n        this.setState({ currentTime });\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            source,\n            duration,\n            currentTime,\n            buffered,\n            timestamp: Date.now()\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleCanPlay = () => {\n\n    };\n\n    handleVideoPlay = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        this.setState({ playing: true });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { currentTime, duration } = player;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            source,\n            currentTime,\n            duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            source\n        });\n    };\n\n    hasPrev = (item, playlist) => {\n        if (!item) return false;\n        if (!playlist || !playlist.items.length) return false;\n\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\n        if (index === -1) return false;\n\n        return index + 1 < playlist.items.length;\n    };\n\n    hasNext = (item, playlist) => {\n        if (!item) return false;\n        if (!playlist || !playlist.items.length) return false;\n\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message, block, instantView } = this.state;\n        if (message) {\n            openChat(message.chat_id, message.id);\n            return;\n        }\n\n        if (block && instantView) {\n            openMediaInstantView(instantView, block);\n            return;\n        }\n    };\n\n    setCurrentTime = currentTime => {\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        if (!useAudioPlaybackRate(message || block)) return;\n\n        const audio = getMessageAudio(message.chat_id, message.id);\n        if (!audio) return;\n\n        const { audio: file } = audio;\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { playing, message, block, duration, playlist, src, mimeType } = this.state;\n\n        const audio = hasAudio(message || block);\n        const useAudioRate = useAudioPlaybackRate(message || block);\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message || block, t);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = false; //!audio;\n        const showPlaybackRate = !audio || useAudioRate;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message || block, playlist);\n        const hasNext = this.hasNext(message || block, playlist);\n\n        const source = src ? <source src={src} type={mimeType}/> : null;\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    disablePictureInPicture={true}\n                    onLoadedMetadata={this.handleLoadedMetadata}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onEnded={this.handleVideoEnded}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onProgress={this.handleProgress}\n                >\n                    {source}\n                </video>\n                {(message || block) && (\n                    <div className='header-player'>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className='header-player-button'\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                        </div>\n                        <Time duration={duration}/>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton audio={audio} />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className='header-player-button' onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { getChatSender, getChatUserId } from '../../Utils/Chat';\nimport { requestBlockSender } from '../../Actions/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ActionBar.css';\n\nclass ActionBar extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    onUpdateChatActionBar = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'removeChatActionBar',\n            chat_id: chatId\n        });\n    };\n\n    handleReportSpam = () => {\n        const { chatId } = this.props;\n\n        requestBlockSender(getChatSender(chatId));\n    };\n\n    handleReportUnrelatedLocation = () => {\n        const { chatId } = this.props;\n\n        requestBlockSender(getChatSender(chatId));\n    };\n\n    handleSharePhoneNumber = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'sharePhoneNumber',\n            user_id: userId\n        });\n    };\n\n    handleAddContact = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        const { user_id, phone_number, first_name, last_name } = user;\n\n        TdLibController.send({\n            '@type': 'addContact',\n            contact: {\n                '@type': 'contact',\n                phone_number,\n                first_name,\n                last_name,\n                vcard: '',\n                user_id\n            },\n            share_phone_number: false\n        });\n    };\n\n    handleBlockUser = () => {\n        const { chatId } = this.props;\n\n        requestBlockSender(getChatSender(chatId));\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        if (!chatId) return null;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { action_bar } = chat;\n        if (!action_bar) return null;\n\n        let content = null;\n        switch (action_bar['@type']) {\n            case 'chatActionBarSharePhoneNumber': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleSharePhoneNumber}>\n                        {t('ShareMyPhone')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarAddContact': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                        {t('AddContactChat')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportAddBlock': {\n                content = (\n                    <>\n                        <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                            {t('AddContactChat')}\n                        </Button>\n                        <Button color='secondary' className='header-command-button' onClick={this.handleBlockUser}>\n                            {t('ReportSpamUser')}\n                        </Button>\n                    </>\n                );\n                break;\n            }\n            case 'chatActionBarUnrelatedLocation': {\n                content = (\n                    <Button\n                        color='secondary'\n                        className='header-command-button'\n                        onClick={this.handleReportUnrelatedLocation}>\n                        {t('ReportSpamLocation')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportSpam': {\n                content = (\n                    <Button color='secondary' className='header-command-button' onClick={this.handleReportSpam}>\n                        {t('ReportSpam')}\n                    </Button>\n                );\n                break;\n            }\n        }\n\n        return (\n            <div className='action-bar' onMouseDown={this.handleClick}>\n                <div className='action-bar-content'>{content}</div>\n                <div className='action-bar-close-button'>\n                    <IconButton onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nActionBar.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(ActionBar);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,5 C19.6568542,5 21,6.34314575 21,8 L21,20 C21,21.6568542 19.6568542,23 18,23 L9,23 C7.34314575,23 6,21.6568542 6,20 L6,8 C6,6.34314575 7.34314575,5 9,5 L18,5 Z M18,7 L9,7 C8.44771525,7 8,7.44771525 8,8 L8,20 C8,20.5522847 8.44771525,21 9,21 L18,21 C18.5522847,21 19,20.5522847 19,20 L19,8 C19,7.44771525 18.5522847,7 18,7 Z M15,1 C15.5522847,1 16,1.44771525 16,2 C16,2.55228475 15.5522847,3 15,3 L15,3 L5,3 C4.44771525,3 4,3.44771525 4,4 L4,4 L4,16 C4,16.5522847 3.55228475,17 3,17 C2.44771525,17 2,16.5522847 2,16 L2,16 L2,4 C2,2.34314575 3.34314575,1 5,1 L5,1 Z' />,\n    'Copy'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,3 C19.6568542,3 21,4.34314575 21,6 L21,18 C21,19.6568542 19.6568542,21 18,21 L6,21 C4.34314575,21 3,19.6568542 3,18 L3,6 C3,4.34314575 4.34314575,3 6,3 L18,3 Z M18,5 L6,5 C5.44771525,5 5,5.44771525 5,6 L5,18 C5,18.5522847 5.44771525,19 6,19 L18,19 C18.5522847,19 19,18.5522847 19,18 L19,6 C19,5.44771525 18.5522847,5 18,5 Z M15.7928932,8.29289322 C16.1834175,7.90236893 16.8165825,7.90236893 17.2071068,8.29289322 C17.5976311,8.68341751 17.5976311,9.31658249 17.2071068,9.70710678 L17.2071068,9.70710678 L11.2071068,15.7071068 C10.8165825,16.0976311 10.1834175,16.0976311 9.79289322,15.7071068 L9.79289322,15.7071068 L7.29289322,13.2071068 C6.90236893,12.8165825 6.90236893,12.1834175 7.29289322,11.7928932 C7.68341751,11.4023689 8.31658249,11.4023689 8.70710678,11.7928932 L8.70710678,11.7928932 L10.5,13.5857864 Z' />,\n    'FrameCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='currentColor' strokeWidth='2' fill='none' fillRule='evenodd' strokeLinecap='round' transform='translate(4, 1)'>\n        <path d='M2,3 L14,3 C15.1045695,3 16,3.8954305 16,5 L16,17 C16,18.1045695 15.1045695,19 14,19 L2,19 C0.8954305,19 0,18.1045695 0,17 L0,10 L0,10'/>\n        <polyline strokeLinejoin='round' points='4 11.5 6.5 14 12.5 8'/>\n        <polyline strokeLinejoin='round' points='3 0 -2.87547763e-14 3 3 6'/>\n    </g>,\n    'RemoveCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CopyIcon from '../../Assets/Icons/Copy';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport FrameCheckIcon from '../../Assets/Icons/FrameCheck';\nimport EditIcon from '../../Assets/Icons/Edit';\nimport RemoveCheckIcon from '../../Assets/Icons/RemoveCheck';\nimport ShareIcon from '../../Assets/Icons/Share';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/PinOff';\nimport { isPublicSupergroup } from '../../Utils/Supergroup';\nimport { canMessageBeClosed, canMessageBeDeleted, canMessageBeEdited, canMessageBeForwarded, canMessageBeUnvoted, isEmptySelection, isMessagePinned } from '../../Utils/Message';\nimport { canPinMessages, canSendMessages } from '../../Utils/Chat';\nimport { cancelPollAnswer, stopPoll } from '../../Actions/Poll';\nimport { copy } from '../../Utils/Text';\nimport { clearSelection, deleteMessages, editMessage, forwardMessages, requestPinMessage, requestUnpinMessage, replyMessage, selectMessage } from '../../Actions/Client';\nimport { saveBlob } from '../../Utils/File';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessageMenu.css';\n\nclass MessageMenu extends React.PureComponent {\n    state = {\n        confirmStopPoll: false\n    };\n\n    handleConfirmStopPoll = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            confirmStopPoll: true,\n            contextMenu: false\n        });\n    };\n\n    handleCloseConfirm = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ confirmStopPoll: false });\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        if (confirmStopPoll) {\n            this.setState({ confirmStopPoll: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleCopyLink = event => {\n        const { onClose, copyLink, t } = this.props;\n\n        onClose(event);\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleCopyPublicMessageLink = async event => {\n        const { onClose, chatId, messageId, t } = this.props;\n\n        onClose(event);\n\n        const httpUrl = await TdLibController.send({\n            '@type': 'getMessageLink',\n            chat_id: chatId,\n            message_id: messageId,\n            for_album: false,\n            for_comment: false\n        });\n\n        if (!httpUrl) return;\n        const { link: copyLink } = httpUrl;\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleReply = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        replyMessage(chatId, messageId);\n    };\n\n    handlePin = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n\n        if (isMessagePinned(chatId, messageId)) {\n            requestUnpinMessage(chatId, messageId);\n        } else {\n            requestPinMessage(chatId, messageId);\n        }\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleEdit = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        editMessage(chatId, messageId);\n    };\n\n    handleSelect = event => {\n        const { chatId, messageId, onClose } = this.props;\n        onClose(event);\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        deleteMessages(chatId, [messageId]);\n    };\n\n    handleDownload = event => {\n        const { chatId, messageId } = this.props;\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { sticker } = content;\n        if (!sticker) return;\n\n        const { sticker: file } = sticker;\n        if (!file) return;\n\n        const blob = FileStore.getBlob(file.id);\n        if (!blob) return;\n\n        saveBlob(blob, 'sticker.tgs');\n    };\n\n    render() {\n        const { t, chatId, messageId, anchorPosition, copyLink, open, onClose, source } = this.props;\n        const { confirmStopPoll } = this.state;\n        if (!confirmStopPoll && !open) return null;\n\n        const isPinned = isMessagePinned(chatId, messageId);\n        const canBeUnvoted = canMessageBeUnvoted(chatId, messageId) && source === 'chat';\n        const canBeClosed = canMessageBeClosed(chatId, messageId) && source === 'chat';\n        const canBeReplied = canSendMessages(chatId) && source === 'chat';\n        const canBePinned = canPinMessages(chatId) && !isServiceMessage(MessageStore.get(chatId, messageId));\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        const canBeDeleted = canMessageBeDeleted(chatId, messageId);\n        const canBeEdited = canMessageBeEdited(chatId, messageId) && !AppStore.recording && source === 'chat';\n        const canBeSelected = !MessageStore.hasSelectedMessage(chatId, messageId) && !isServiceMessage(MessageStore.get(chatId, messageId));\n        const canCopyLink = Boolean(copyLink);\n        const canCopyPublicMessageLink = isPublicSupergroup(chatId);\n\n        const hasItems =\n            canBeUnvoted || canBeClosed || canBeReplied || canBePinned || canBeForwarded || canBeDeleted || canBeEdited || canBeSelected || canCopyLink || canCopyPublicMessageLink;\n        if (!hasItems) {\n            return null;\n        }\n\n        return (\n            <>\n                <Popover\n                    open={true}\n                    onClose={onClose}\n                    anchorReference='anchorPosition'\n                    anchorPosition={anchorPosition}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {/*<MenuItem onClick={this.handleDownload}>*/}\n                        {/*    <ListItemIcon>*/}\n                        {/*        <CopyIcon />*/}\n                        {/*    </ListItemIcon>*/}\n                        {/*    <ListItemText primary={t('Download')} />*/}\n                        {/*</MenuItem>*/}\n                        {canBeSelected && (\n                            <MenuItem onClick={this.handleSelect}>\n                                <ListItemIcon>\n                                    <FrameCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Select')} />\n                            </MenuItem>\n                        )}\n                        {canCopyPublicMessageLink && (\n                            <MenuItem onClick={this.handleCopyPublicMessageLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyMessageLink')} />\n                            </MenuItem>\n                        )}\n                        {canCopyLink && (\n                            <MenuItem onClick={this.handleCopyLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyLink')} />\n                            </MenuItem>\n                        )}\n                        {canBeReplied && (\n                            <MenuItem onClick={this.handleReply}>\n                                <ListItemIcon>\n                                    <ShareIcon style={{transform: 'scaleX(-1)'}}/>\n                                </ListItemIcon>\n                                <ListItemText primary={t('Reply')} />\n                            </MenuItem>\n                        )}\n                        {canBePinned && (\n                            <MenuItem onClick={this.handlePin}>\n                                {isPinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinMessage')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinMessage')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canBeForwarded && (\n                            <MenuItem onClick={this.handleForward}>\n                                <ListItemIcon>\n                                    <ShareIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Forward')} />\n                            </MenuItem>\n                        )}\n                        {canBeEdited && (\n                            <MenuItem onClick={this.handleEdit}>\n                                <ListItemIcon>\n                                    <EditIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Edit')} />\n                            </MenuItem>\n                        )}\n                        {canBeDeleted && (\n                            <MenuItem color='secondary' onClick={this.handleDelete}>\n                                <ListItemIcon>\n                                    <DeleteIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Delete')} />\n                            </MenuItem>\n                        )}\n                        {canBeUnvoted && (\n                            <MenuItem onClick={this.handleUnvote}>\n                                <ListItemIcon>\n                                    <RemoveCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Unvote')} />\n                            </MenuItem>\n                        )}\n                        {canBeClosed && (\n                            <MenuItem onClick={this.handleConfirmStopPoll}>\n                                <ListItemIcon>\n                                    <StopIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('StopPoll')} />\n                            </MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={confirmStopPoll}\n                    onClose={this.handleCloseConfirm}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirm} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleStopPoll} color='primary'>\n                            {t('Stop')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n\n}\n\nMessageMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    copyLink: PropTypes.string\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(MessageMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z' />,\n    'PinFilled'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport PinIcon from '../../Assets/Icons/PinFilled';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Status from './Status';\nimport { albumHistoryEquals } from '../../Utils/Common';\nimport { getDate, getDateHint, getViews } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Meta.css';\n\nclass Meta extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, messageIds } = props;\n        const { prevChatId, prevMessageId, prevMessageIds } = state;\n\n        if (prevChatId !== chatId || prevMessageId !== messageId || albumHistoryEquals(prevMessageIds, messageIds)) {\n\n            const ids = [messageId, ...(messageIds || [])].filter(x => Boolean(x));\n            const id = ids[ids.length - 1];\n\n            const message = MessageStore.get(chatId, id);\n            if (!message) return null;\n\n            const { date, edit_date: editDate, interaction_info: interactionInfo, is_outgoing: isOutgoing } = message;\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                prevMessageIds: messageIds,\n\n                message,\n                date,\n                editDate,\n                interactionInfo,\n                isOutgoing,\n                isPinned: ids.some(x => MessageStore.get(chatId, x).is_pinned)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageInteractionInfo', this.onUpdateMessageInteractionInfo);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.off('updateMessageInteractionInfo', this.onUpdateMessageInteractionInfo);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    onUpdateMessageIsPinned = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId, messageIds } = this.props;\n\n        const ids = [messageId, ...(messageIds || [])].filter(x => Boolean(x));\n\n        if (chat_id !== chatId) return;\n        if (!ids.some(x => x === message_id)) return;\n\n        this.setState({ isPinned: ids.some(x => MessageStore.get(chatId, x).is_pinned) });\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id, edit_date: editDate } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n        if (message.chat_id !== chat_id) return;\n        if (message.id !== message_id) return;\n\n        this.setState({ editDate });\n    };\n\n    onUpdateMessageInteractionInfo = update => {\n        const { chat_id, message_id, interaction_info } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n        if (message.chat_id !== chat_id) return;\n        if (message.id !== message_id) return;\n\n        this.setState({ interactionInfo: interaction_info });\n    };\n\n    render() {\n        const { className, chatId, messageId, onDateClick, t, style } = this.props;\n        const { date, editDate, isOutgoing, isPinned, interactionInfo } = this.state;\n\n        const { view_count: views } = interactionInfo || { view_count: 0, forward_count: 0 };\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n        const viewsStr = getViews(views);\n\n        return (\n            <div className={classNames('meta', className)} style={style}>\n                {/*{messageId}*/}\n                <span>&ensp;</span>\n                {views > 0 && (\n                    <>\n                        <VisibilityIcon className='meta-views-icon' />\n                        <span className='meta-views' title={views}>\n                            &nbsp;\n                            {viewsStr}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {isPinned && (\n                    <>\n                        <PinIcon className='meta-pin-icon' />\n                        <span>&nbsp;</span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n                {isOutgoing && <Status chatId={chatId} messageId={messageId} />}\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number,\n    messageIds: PropTypes.arrayOf(PropTypes.number),\n    onDateClick: PropTypes.func\n};\n\nexport default withTranslation()(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport Audio from '../Media/Audio';\nimport Document from '../Media/Document';\nimport MessageMenu from '../MessageMenu';\nimport Meta from '../Meta';\nimport Photo from '../Media/Photo';\nimport Video from '../Media/Video';\nimport { getText, getWebPage, isEmptySelection, openMedia } from '../../../Utils/Message';\nimport { selectMessage } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './AlbumItem.css';\n\nclass AlbumItem extends React.Component {\n\n    state = {\n        contextMenu: false\n    };\n\n    getAlbumItem = (message, displaySize) => {\n        const { chat_id, id, content } = message;\n\n        switch (content['@type']) {\n            case 'messageAudio': {\n                const inlineMeta = (\n                    <Meta\n                        className='meta-hidden'\n                        key={`${chat_id}_${id}_meta`}\n                        chatId={chat_id}\n                        messageId={id}\n                    />\n                );\n\n                const webPage = getWebPage(message);\n                const text = getText(message, !!webPage ? null : inlineMeta, x => x);\n\n                return (\n                    <>\n                        <Audio\n                            type='message'\n                            chatId={chat_id}\n                            messageId={id}\n                            audio={content.audio}\n                            displaySize={displaySize}\n                            style={{ width: '100%', height: '100%' }}\n                            openMedia={this.openMedia}/>\n                        { text && text.length > 0 && (\n                            <div className={'message-text'}>\n                                {text}\n                            </div>\n                        )}\n                    </>\n                );\n            }\n            case 'messagePhoto': {\n                return (\n                    <Photo\n                        type='message'\n                        chatId={chat_id}\n                        messageId={id}\n                        photo={content.photo}\n                        displaySize={displaySize}\n                        style={{ width: '100%', height: '100%' }}\n                        openMedia={this.openMedia}/>\n                    );\n            }\n            case 'messageVideo': {\n                return (\n                    <Video\n                        type='message'\n                        chatId={chat_id}\n                        messageId={id}\n                        video={content.video}\n                        displaySize={displaySize}\n                        style={{ width: '100%', height: '100%' }}\n                        openMedia={this.openMedia}/>\n                );\n            }\n            case 'messageDocument': {\n                const inlineMeta = (\n                    <Meta\n                        className='meta-hidden'\n                        key={`${chat_id}_${id}_meta`}\n                        chatId={chat_id}\n                        messageId={id}\n                    />\n                );\n\n                const webPage = getWebPage(message);\n                const text = getText(message, !!webPage ? null : inlineMeta, x => x);\n\n                return (\n                    <>\n                        <Document\n                            type='message'\n                            chatId={chat_id}\n                            messageId={id}\n                            document={content.document}\n                            displaySize={displaySize}\n                            style={{ width: '100%', height: '100%' }}\n                            openMedia={this.openMedia}/>\n                        { text && text.length > 0 && (\n                            <div className={'message-text'}>\n                                {text}\n                            </div>\n                        )}\n                    </>\n                );\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { message } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (message.chat_id === update.chatId && message.id === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { message } = this.props;\n        const { chat_id: chatId, id: messageId } = message;\n\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    openMedia = event => {\n        if (MessageStore.selectedItems.size > 0) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { message } = this.props;\n        if (!message) return;\n\n        const { chat_id, id } = message;\n\n        openMedia(chat_id, id);\n    };\n\n    handleSelection = event => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { message } = this.props;\n        const { chat_id: chatId, id: messageId } = message;\n\n        if (MessageStore.selectedItems.size === 0) return;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    render() {\n        const { message, position, displaySize, source } = this.props;\n        const { contextMenu, copyLink, top, left, selected, highlighted } = this.state;\n\n        const { chat_id, id } = message;\n\n        let style = {};\n        let className = 'album-document-item';\n        if (position) {\n            style = { width: position.width, height: position.height * displaySize };\n            className = 'album-item'\n        }\n\n        return (\n            <>\n                <div\n                    className={classNames(className, { 'album-item-highlighted': highlighted && !selected}, { 'item-selected': selected })}\n                    onClick={this.handleSelection}\n                    onContextMenu={this.handleOpenContextMenu}\n                    style={style}>\n                    <div className='album-item-wrapper'>{this.getAlbumItem(message, displaySize)}</div>\n                    {(selected || highlighted) && (\n                        <div className='album-item-selection'>\n                            <div className='album-item-selection-mark'>\n                                { selected && <CheckMarkIcon className='album-item-select-tick' /> }\n                            </div>\n                        </div>\n                    )}\n                </div>\n                <MessageMenu\n                    chatId={chat_id}\n                    messageId={id}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                    source={source}\n                />\n            </>\n        );\n    }\n}\n\nAlbumItem.propTypes = {\n    message: PropTypes.object,\n    position: PropTypes.object,\n    displaySize: PropTypes.number\n};\n\nexport default AlbumItem;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { date, i18n } = this.props;\n\n        const showYear = new Date(date * 1000).getFullYear() !== new Date().getFullYear();\n        const options = showYear\n            ? {\n                  day: 'numeric',\n                  month: 'long',\n                  year: 'numeric'\n              }\n            : {\n                  day: 'numeric',\n                  month: 'long'\n              };\n\n        return (\n            <div className='day-meta'>\n                <div className='day-meta-wrapper'>\n                    <div>{new Date(date * 1000).toLocaleDateString([i18n.language], options)}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className='forward-arrow' ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', 'forward')}>\n                <div>{t('ForwardedMessage')}</div>\n                <div className='forward-subtitle'>\n                    {t('From') + ' '}\n                    {/*<Tooltip*/}\n                    {/*    title={tooltip}*/}\n                    {/*    classes={{ popper: 'forward-arrow-popper', tooltip: 'forward-tooltip' }}*/}\n                    {/*    PopperProps={{*/}\n                    {/*        popperOptions: {*/}\n                    {/*            modifiers: {*/}\n                    {/*                arrow: {*/}\n                    {/*                    enabled: Boolean(arrowRef),*/}\n                    {/*                    element: arrowRef*/}\n                    {/*                }*/}\n                    {/*            }*/}\n                    {/*        }*/}\n                    {/*    }}*/}\n                    {/*    placement='top'>*/}\n                        <a onClick={this.openForward}>{title}</a>\n                    {/*</Tooltip>*/}\n                </div>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/// based on https://github.com/evgeny-nadymov/telegram-wp/blob/master/TelegramClient.WP81/Views/Controls/GroupedMessages.cs\n\nconst POSITION_FLAG_LEFT = 1;\nconst POSITION_FLAG_RIGHT = 2;\nconst POSITION_FLAG_TOP = 4;\nconst POSITION_FLAG_BOTTOM = 8;\n\nclass MessageGroupedLayoutAttempt {\n    constructor(lineCounts, heights) {\n        this.lineCounts = lineCounts;\n        this.heights = heights;\n    }\n}\n\nclass GroupedMessagePosition {\n    aspectRatio;\n    isEdge;\n    flags;\n    isLast;\n    leftSpanOffset;\n    minX;\n    maxX;\n    minY;\n    maxY;\n    height;\n    width;\n    siblingHeights;\n    spanSize;\n\n    set(minX, maxX, minY, maxY, w, h, flags) {\n        this.minX = minX;\n        this.maxX = maxX;\n        this.minY = minY;\n        this.maxY = maxY;\n        this.spanSize = w;\n        this.width = w;\n        this.height = h;\n        this.flags = flags;\n    }\n\n    getInfo() {\n        return `minX=${this.minX}\\nmaxX=${this.maxX}\\nminY=${this.minY}\\nmaxY=${this.maxY}\\nspanSize=${this.spanSize}\\nwidth=${this.width}\\nheight=${this.height}\\nflags=${this.flags}\\nsiblingHeights=${this.siblingHeights}\\nleftSpanOffset=${this.leftSpanOffset}`;\n    }\n}\n\nclass GroupedMessages {\n\n    constructor() {\n        this.posArray = [];\n        this.positions = new Map();\n        this.maxSizeWidth = 800;\n        this.hasSibling = false;\n        this.scale = 1.0;\n    }\n\n    multiHeight(array, start, end) {\n        let sum = 0.0;\n        for (let i = start; i < end; i++) {\n            sum += array[i];\n        }\n\n        return 800.0 * this.scale / sum;\n    }\n\n    calculate(messages, desiredWidth) {\n        this.posArray = [];\n        this.positions = new Map();\n        this.messages = messages;\n\n        if (!messages) return;\n        const { length } = messages;\n        if (length <= 1) {\n            return;\n        }\n\n        this.totalWidth = 0;\n        this.totalHeight = 0.0;\n\n        this.scale = desiredWidth / this.maxSizeWidth;\n        this.maxSizeWidth = desiredWidth;\n\n        const firstSpanAdditionalSize = Math.trunc(200 * this.scale);\n        const minHeight = Math.trunc(120 * this.scale);\n        const minWidth = Math.trunc(96 * this.scale);\n        const paddingsWidth = Math.trunc(32 * this.scale);\n        const maxSizeHeight = 814.0 * this.scale;\n        let averageAspectRatio = 1.0;\n        let proportions = '';\n        const isOut = false;\n        let maxX = 0;\n        let forceCalc = false;\n\n        for (let i = 0; i < length; i++) {\n            const message = messages[i];\n            const { w, h } = GroupedMessages.getWidthHeight(message);\n\n            const position = new GroupedMessagePosition();\n            position.isLast = i === messages.length - 1;\n            position.aspectRatio = w / h;\n            if (position.aspectRatio > 1.2) {\n                proportions += 'w';\n            } else if (position.aspectRatio < 0.8) {\n                proportions += 'n';\n            } else {\n                proportions += 'q';\n            }\n\n            averageAspectRatio += position.aspectRatio;\n            if (position.aspectRatio > 2.0) {\n                forceCalc = true;\n            }\n\n            this.positions.set(message, position);\n            this.posArray.push(position);\n        }\n\n        const maxAspectRation = this.maxSizeWidth / maxSizeHeight;\n        averageAspectRatio = averageAspectRatio / length;\n\n        if (!forceCalc && (length === 2 || length === 3 || length === 4)){\n            switch (length) {\n                case 2: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n\n                    if (proportions === 'ww' && averageAspectRatio > 1.4 * maxAspectRation && position1.aspectRatio - position2.aspectRatio < 0.2) {\n                        const height = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, Math.min(this.maxSizeWidth / position2.aspectRatio, maxSizeHeight / 2.0))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, this.maxSizeWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position2.set(0, 0, 1, 1, this.maxSizeWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = height * 2;\n                    } else if (proportions === 'ww' || proportions === 'qq') {\n                        const width = this.maxSizeWidth / 2;\n                        const height = Math.round(Math.min(width / position1.aspectRatio, Math.min(width / position2.aspectRatio, maxSizeHeight))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, width, height, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, width, height, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        maxX = 1;\n\n                        this.totalWidth = width + width;\n                        this.totalHeight = height;\n                    } else {\n                        let secondWidth = Math.max(0.4 * this.maxSizeWidth, Math.round((this.maxSizeWidth / position1.aspectRatio / (1.0 / position1.aspectRatio + 1.0 / position2.aspectRatio))));\n                        let firstWidth = this.maxSizeWidth - secondWidth;\n                        if (firstWidth < minWidth) {\n                            const diff = minWidth - firstWidth;\n                            firstWidth = minWidth;\n                            secondWidth -= diff;\n                        }\n\n                        const height = Math.min(maxSizeHeight, Math.round(Math.min(firstWidth / position1.aspectRatio, secondWidth / position2.aspectRatio))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, firstWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, secondWidth, height, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        maxX = 1;\n\n                        this.totalWidth = firstWidth + secondWidth;\n                        this.totalHeight = height;\n                    }\n\n                    break;\n                }\n                case 3: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n                    const position3 = this.posArray[2];\n                    if (proportions[0] === 'n')\n                    {\n                        const thirdHeight = Math.min(maxSizeHeight * 0.5, Math.round(position2.aspectRatio * this.maxSizeWidth / (position3.aspectRatio + position2.aspectRatio)));\n                        const secondHeight = maxSizeHeight - thirdHeight;\n                        const rightWidth = Math.max(minWidth, Math.min(this.maxSizeWidth * 0.5, Math.round(Math.min(thirdHeight * position3.aspectRatio, secondHeight * position2.aspectRatio))));\n\n                        const leftWidth = Math.round(Math.min(maxSizeHeight * position1.aspectRatio + paddingsWidth, this.maxSizeWidth - rightWidth));\n                        position1.set(0, 0, 0, 1, leftWidth, 1.0, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, rightWidth, secondHeight / maxSizeHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position3.set(0, 1, 1, 1, rightWidth, thirdHeight / maxSizeHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        position3.spanSize = this.maxSizeWidth;\n\n                        position1.siblingHeights = [thirdHeight / maxSizeHeight, secondHeight / maxSizeHeight];\n\n                        if (isOut) {\n                            position1.spanSize = this.maxSizeWidth - rightWidth;\n                        } else {\n                            position2.spanSize = this.maxSizeWidth - leftWidth;\n                            position3.leftSpanOffset = leftWidth;\n                        }\n                        this.hasSibling = true;\n                        maxX = 1;\n\n                        this.totalWidth = leftWidth + rightWidth;\n                        this.totalHeight = 1.0;\n                    }\n                    else\n                    {\n                        const firstHeight = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, (maxSizeHeight) * 0.66)) / maxSizeHeight;\n                        position1.set(0, 1, 0, 0, this.maxSizeWidth, firstHeight, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n\n                        const width = this.maxSizeWidth / 2;\n                        const secondHeight = Math.min(maxSizeHeight - firstHeight, Math.round(Math.min(width / position2.aspectRatio, width / position3.aspectRatio))) / maxSizeHeight;\n                        position2.set(0, 0, 1, 1, width, secondHeight, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM);\n                        position3.set(1, 1, 1, 1, width, secondHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        maxX = 1;\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = firstHeight + secondHeight;\n                    }\n\n                    break;\n                }\n                case 4: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n                    const position3 = this.posArray[2];\n                    const position4 = this.posArray[3];\n                    if (proportions[0] === 'w') {\n                        const h0 = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, maxSizeHeight * 0.66)) / maxSizeHeight;\n                        position1.set(0, 2, 0, 0, this.maxSizeWidth, h0, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n\n                        let h = Math.round(this.maxSizeWidth / (position2.aspectRatio + position3.aspectRatio + position4.aspectRatio));\n                        const w0 = Math.max(minWidth, Math.min(this.maxSizeWidth * 0.4, h * position2.aspectRatio));\n                        const w2 = Math.max(Math.max(minWidth, this.maxSizeWidth * 0.33), h * position4.aspectRatio);\n                        const w1 = this.maxSizeWidth - w0 - w2;\n                        h = Math.min(maxSizeHeight - h0, h);\n                        h /= maxSizeHeight;\n                        position2.set(0, 0, 1, 1, w0, h, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM);\n                        position3.set(1, 1, 1, 1, w1, h, POSITION_FLAG_BOTTOM);\n                        position4.set(2, 2, 1, 1, w2, h, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        maxX = 2;\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = h0 + h;\n                    } else {\n                        const w = Math.max(minWidth, Math.round(maxSizeHeight / (1.0 / position2.aspectRatio + 1.0 / position3.aspectRatio + 1.0 / position4.aspectRatio)));\n                        const h0 = Math.min(0.33, Math.max(minHeight, w / position2.aspectRatio) / maxSizeHeight);\n                        const h1 = Math.min(0.33, Math.max(minHeight, w / position3.aspectRatio) / maxSizeHeight);\n                        const h2 = 1.0 - h0 - h1;\n                        const w0 = Math.round(Math.min(maxSizeHeight * position1.aspectRatio + paddingsWidth, this.maxSizeWidth - w));\n\n                        position1.set(0, 0, 0, 2, w0, h0 + h1 + h2, POSITION_FLAG_LEFT | POSITION_FLAG_TOP | POSITION_FLAG_BOTTOM);\n                        position2.set(1, 1, 0, 0, w, h0, POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position3.set(0, 1, 1, 1, w, h1, POSITION_FLAG_RIGHT);\n                        position3.spanSize = this.maxSizeWidth;\n                        position4.set(0, 1, 2, 2, w, h2, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        position4.spanSize = this.maxSizeWidth;\n\n                        if (isOut) {\n                            position1.spanSize = this.maxSizeWidth - w;\n                        } else {\n                            position2.spanSize = this.maxSizeWidth - w0;\n                            position3.leftSpanOffset = w0;\n                            position4.leftSpanOffset = w0;\n                        }\n                        position1.siblingHeights = [ h0, h1, h2 ];\n                        this.hasSibling = true;\n                        maxX = 1;\n\n                        this.totalWidth = w + w0;\n                        this.totalHeight = h0 + h1 + h2;\n                    }\n                    break;\n                }\n            }\n        } else {\n            const croppedRatios = new Array(this.posArray.length);\n            for (let i = 0; i < length; i++) {\n                if (averageAspectRatio > 1.1) {\n                    croppedRatios[i] = Math.max(1.0, this.posArray[i].aspectRatio);\n                } else {\n                    croppedRatios[i] = Math.min(1.0, this.posArray[i].aspectRatio);\n                }\n                croppedRatios[i] = Math.max(0.66667, Math.min(1.7, croppedRatios[i]));\n            }\n\n            let firstLine;\n            let secondLine;\n            let thirdLine;\n            let fourthLine;\n            const attempts = [];\n            for (firstLine = 1; firstLine < croppedRatios.length; firstLine++) {\n                secondLine = croppedRatios.length - firstLine;\n                if (firstLine > 3 || secondLine > 3) {\n                    continue;\n                }\n                attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, croppedRatios.length)]));\n            }\n\n            for (firstLine = 1; firstLine < croppedRatios.length - 1; firstLine++) {\n                for (secondLine = 1; secondLine < croppedRatios.length - firstLine; secondLine++) {\n                    thirdLine = croppedRatios.length - firstLine - secondLine;\n                    if (firstLine > 3 || secondLine > (averageAspectRatio < 0.85 ? 4 : 3) || thirdLine > 3) {\n                        continue;\n                    }\n                    attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine, thirdLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, firstLine + secondLine), this.multiHeight(croppedRatios, firstLine + secondLine, croppedRatios.length)]));\n                }\n            }\n\n            for (firstLine = 1; firstLine < croppedRatios.length - 2; firstLine++) {\n                for (secondLine = 1; secondLine < croppedRatios.length - firstLine; secondLine++) {\n                    for (thirdLine = 1; thirdLine < croppedRatios.length - firstLine - secondLine; thirdLine++) {\n                        fourthLine = croppedRatios.length - firstLine - secondLine - thirdLine;\n                        if (firstLine > 3 || secondLine > 3 || thirdLine > 3 || fourthLine > 3) {\n                            continue;\n                        }\n                        attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine, thirdLine, fourthLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, firstLine + secondLine), this.multiHeight(croppedRatios, firstLine + secondLine, firstLine + secondLine + thirdLine), this.multiHeight(croppedRatios, firstLine + secondLine + thirdLine, croppedRatios.length)]));\n                    }\n                }\n            }\n\n            let optimal = null;\n            let optimalDiff = 0.0;\n            let maxHeight = this.maxSizeWidth / 3 * 4;\n            for (let i = 0; i < attempts.length; i++) {\n                const attempt = attempts[i];\n                let height = 0;\n                let minLineHeight = Number.MAX_VALUE;\n                for (let j = 0; j < attempt.heights.length; j++) {\n                    height += attempt.heights[j];\n                    if (attempt.heights[j] < minLineHeight) {\n                        minLineHeight = attempt.heights[j];\n                    }\n                }\n\n                let diff = Math.abs(height - maxHeight);\n                if (attempt.lineCounts.length > 1) {\n                    if (attempt.lineCounts[0] > attempt.lineCounts[1] || (attempt.lineCounts.length > 2 && attempt.lineCounts[1] > attempt.lineCounts[2]) || (attempt.lineCounts.length > 3 && attempt.lineCounts[2] > attempt.lineCounts[3])) {\n                        diff *= 1.5;\n                    }\n                }\n\n                if (minLineHeight < minWidth) {\n                    diff *= 1.5;\n                }\n\n                if (optimal === null || diff < optimalDiff) {\n                    optimal = attempt;\n                    optimalDiff = diff;\n                }\n            }\n\n            if (optimal === null) {\n                return;\n            }\n\n            let index = 0;\n            let y = 0.0;\n\n            for (let i = 0; i < optimal.lineCounts.length; i++) {\n                let c = optimal.lineCounts[i];\n                let lineHeight = optimal.heights[i];\n                let spanLeft = this.maxSizeWidth;\n                let posToFix = null;\n                maxX = Math.max(maxX, c - 1);\n                for (let j = 0; j < c; j++) {\n                    let ratio = croppedRatios[index];\n                    let width = Math.trunc(ratio * lineHeight);\n                    spanLeft -= width;\n                    let pos = this.posArray[index];\n                    let flags = 0;\n                    if (i === 0) {\n                        flags |= POSITION_FLAG_TOP;\n                    }\n                    if (i === optimal.lineCounts.length - 1) {\n                        flags |= POSITION_FLAG_BOTTOM;\n                    }\n                    if (j === 0) {\n                        flags |= POSITION_FLAG_LEFT;\n                        if (isOut) {\n                            posToFix = pos;\n                        }\n                    }\n                    if (j === c - 1) {\n                        flags |= POSITION_FLAG_RIGHT;\n                        if (!isOut) {\n                            posToFix = pos;\n                        }\n                    }\n                    pos.set(j, j, i, i, width, lineHeight / maxSizeHeight, flags);\n                    index++;\n                }\n                posToFix.width += spanLeft;\n                posToFix.spanSize += spanLeft;\n                y += lineHeight;\n            }\n\n            this.totalWidth = this.maxSizeWidth;\n            this.totalHeight = y / maxSizeHeight;\n        }\n    }\n\n    static getWidthHeight(message) {\n        let w = 0;\n        let h = 0;\n        let sizes = [];\n        switch (message.content['@type']){\n            case 'messagePhoto': {\n                const { photo, minithumbnail } = message.content;\n                if (photo) {\n                    sizes = photo.sizes;\n                } else if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                }\n\n                break;\n            }\n            case 'messageVideo': {\n                const { video, thumbnail, minithumbnail } = message.content;\n                if (video) {\n                    const { width, height } = video;\n                    sizes.push({ width, height });\n                } else if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                } else if (thumbnail) {\n                    sizes.push(thumbnail);\n                }\n\n                break;\n            }\n            case 'messageDocument': {\n                const { thumbnail, minithumbnail } = message.content;\n                if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                } else if (thumbnail) {\n                    sizes.push(thumbnail);\n                } else {\n                    sizes.push({ width: 90, height: 90 });\n                }\n\n                break;\n            }\n        }\n\n        const photoSize = GroupedMessages.getPhotoSize(sizes, 1280);\n        if (photoSize) {\n            w = photoSize.width;\n            h = photoSize.height;\n        }\n\n        return { w, h };\n    }\n\n    static getPhotoSize(sizes, side, byMinSize) {\n        if (!sizes || !sizes.length) return null;\n\n        let lastSide = 0;\n        let lastSize = null;\n        for (let i = 0; i < sizes.length; i++) {\n            const { width: w, height: h } = sizes[i];\n\n            if (byMinSize) {\n                const currentSide = h >= w ? w : h;\n                if (!lastSize || (side > 100 && side > lastSide && lastSide < currentSide)) {\n                    lastSide = currentSide;\n                    lastSize = sizes[i];\n                }\n\n            } else {\n                const currentSide = w >= h ? w : h;\n                if (!lastSize || (side > 100 && currentSide <= side && lastSide < currentSide)) {\n                    lastSide = currentSide;\n                    lastSize = sizes[i];\n                }\n            }\n        }\n\n        return lastSize;\n    }\n}\n\nexport default GroupedMessages;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport './UnreadSeparator.css';\n\nfunction UnreadSeparator(props) {\n    const { t } = props;\n\n    return <div className='unread-separator'>{t('UnreadMessages')}</div>;\n}\n\nexport default withTranslation()(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './EmptyTile.css';\n\nfunction EmptyTile(props) {\n    const { dialog, small, big, style } = props;\n\n    return (\n        <div\n            className={classNames(\n                'chat-tile',\n                { 'tile-dialog': dialog },\n                { 'tile-small': small },\n                { 'tile-big': big }\n            )}\n            style={style}/>\n    );\n}\n\nEmptyTile.propTypes = {};\n\nexport default EmptyTile;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport AlbumItem from './AlbumItem';\nimport DayMeta from '../DayMeta';\nimport Forward from '../Forward';\nimport GroupedMessages from './GroupedMessages';\nimport UnreadSeparator from '../UnreadSeparator';\nimport MessageAuthor from '../MessageAuthor';\nimport Reply from '../Reply';\nimport Meta from '../Meta';\nimport ChatTile from '../../Tile/ChatTile';\nimport EmptyTile from '../../Tile/EmptyTile';\nimport UserTile from '../../Tile/UserTile';\nimport { albumHistoryEquals } from '../../../Utils/Common';\nimport { selectMessage } from '../../../Actions/Client';\nimport { getText, getWebPage, isEmptySelection, showMessageForward } from '../../../Utils/Message';\nimport { isChannelChat, isMeChat, isPrivateChat } from '../../../Utils/Chat';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './Album.css';\n\nclass Album extends React.Component {\n    state = { };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { messageIds } = this.props;\n        const { emojiMatches, selected, highlighted } = this.state;\n\n        if (!albumHistoryEquals(nextProps.messageIds, messageIds)) {\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { displaySize, chatId, messageIds } = props;\n\n        if (messageIds !== state.prevMessageIds) {\n            const grouped = new GroupedMessages();\n            grouped.calculate(messageIds.map(x => MessageStore.get(chatId, x)), displaySize);\n\n            return {\n                grouped,\n                prevMessageIds: messageIds\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            if (highlighted) {\n                this.setState({ highlighted: false, lastHighlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false, lastHighlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            this.setState({ selected: messageIds.every(x => MessageStore.hasSelectedMessage(chatId, x)) });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageIds, displaySize } = this.props;\n        const { emojiMatches: oldEmojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (!messageIds.some(x => x === message_id)) return;\n\n        const grouped = new GroupedMessages();\n        grouped.calculate(messageIds.map(x => MessageStore.get(chatId, x)), displaySize);\n\n        const emojiMatches = null; //getEmojiMatches(chatId, messageId);\n        if (emojiMatches !== oldEmojiMatches) {\n            this.setState({ emojiMatches, grouped });\n        } else {\n            this.setState({ grouped });\n        }\n    };\n\n    handleSelection = () => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { chatId, messageIds } = this.props;\n        const { selected } = this.state;\n\n        if (selected) {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], false);\n            }\n        } else {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], true);\n            }\n        }\n    };\n\n    render() {\n        let { showTail, source } = this.props;\n        const { chatId, messageIds, displaySize, showUnreadSeparator, showTitle, showDate, t = x => x } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n        const { grouped } = this.state;\n        if (!grouped) {\n            return null;\n        }\n\n        if (!messageIds.length) {\n            return null;\n        }\n\n        let messageId = messageIds[messageIds.length - 1];\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageIds={messageIds}\n            />\n        );\n        const webPage = getWebPage(message);\n        let text = null;\n        for (let i = 0; i < messageIds.length; i++) {\n            const m = MessageStore.get(chatId, messageIds[i]);\n            const t = getText(m, !!webPage ? null : inlineMeta, t);\n            if (t && t.length) {\n                if (text !== null) {\n                    text = null;\n                    break;\n                } else {\n                    text = t;\n                    messageId = messageIds[i];\n                }\n            }\n        }\n        const hasCaption = text !== null && text.length > 0;\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': !hasCaption\n                })}\n                chatId={chatId}\n                messageIds={messageIds}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        // const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isMeChat(chatId) && forward_info) {\n                switch (forward_info.origin['@type']) {\n                    case 'messageForwardOriginHiddenUser': {\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginUser': {\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginChannel': {\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\n                        break;\n                    }\n                }\n            } else if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender.user_id) {\n                tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\n            }\n        }\n\n        const style = { width: grouped.totalWidth - 2 - 2 };\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto');\n\n        const items = grouped.messages.map(x => (\n            <AlbumItem\n                key={x.id}\n                message={x}\n                position={grouped.positions.get(x)}\n                displaySize={displaySize}\n                source={source}\n            />));\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', 'message-album', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        // 'message-highlighted': highlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames(\n                                    'message-content', {\n                                    'message-bubble': withBubble,\n                                    'message-bubble-out': withBubble && isOutgoing\n                                })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                <div className={classNames(\n                                    'album',\n                                    { 'album-caption': hasCaption },\n                                    { 'album-title': hasTitle }\n                                    )}>\n                                    <div className='album-wrapper' style={{ width: grouped.totalWidth }}>\n                                        {items}\n                                    </div>\n                                </div>\n                                <div\n                                    className={classNames('message-text', {\n                                        'message-text-1emoji': emojiMatches === 1,\n                                        'message-text-2emoji': emojiMatches === 2,\n                                        'message-text-3emoji': emojiMatches === 3\n                                    })}>\n                                    {text}\n                                </div>\n                                {withBubble && meta}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAlbum.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageIds: PropTypes.arrayOf(PropTypes.number).isRequired,\n    displaySize: PropTypes.number,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n};\n\nAlbum.defaultProps = {\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showData: false\n};\n\nexport default Album;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport AlbumItem from './AlbumItem';\nimport DayMeta from '../DayMeta';\nimport Forward from '../Forward';\nimport UnreadSeparator from '../UnreadSeparator';\nimport MessageAuthor from '../MessageAuthor';\nimport Reply from '../Reply';\nimport Meta from '../Meta';\nimport ChatTile from '../../Tile/ChatTile';\nimport EmptyTile from '../../Tile/EmptyTile';\nimport UserTile from '../../Tile/UserTile';\nimport { albumHistoryEquals } from '../../../Utils/Common';\nimport { selectMessage } from '../../../Actions/Client';\nimport { getText, getWebPage, isEmptySelection, showMessageForward } from '../../../Utils/Message';\nimport { isChannelChat, isMeChat, isPrivateChat } from '../../../Utils/Chat';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './DocumentAlbum.css';\n\nclass DocumentAlbum extends React.Component {\n    state = { };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { messageIds } = this.props;\n        const { emojiMatches, lastSelected, selected, lastHighlighted, highlighted } = this.state;\n\n        if (!albumHistoryEquals(nextProps.messageIds, messageIds)) {\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            return true;\n        }\n\n        if (nextState.lastSelected !== lastSelected) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        if (nextState.lastHighlighted !== lastHighlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { displaySize, chatId, messageIds } = props;\n\n        if (messageIds !== state.prevMessageIds) {\n\n            return {\n                prevMessageIds: messageIds\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            if (highlighted) {\n                this.setState({ highlighted: false, lastHighlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false, lastHighlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            this.setState({\n                selected: messageIds.every(x => MessageStore.hasSelectedMessage(chatId, x)),\n                lastSelected: messageIds.length > 0 && MessageStore.hasSelectedMessage(chatId, messageIds[messageIds.length - 1])\n            });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        this.setState({ selected: false, lastSelected: false });\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageIds, displaySize } = this.props;\n        const { emojiMatches: oldEmojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (!messageIds.some(x => x === message_id)) return;\n\n        const emojiMatches = null; //getEmojiMatches(chatId, messageId);\n        if (emojiMatches !== oldEmojiMatches) {\n            this.setState({ emojiMatches });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelection = () => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { chatId, messageIds } = this.props;\n        const { selected } = this.state;\n\n        if (selected) {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], false);\n            }\n        } else {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], true);\n            }\n        }\n    };\n\n    render() {\n        let { showTail, source } = this.props;\n        const { chatId, messageIds, displaySize, showUnreadSeparator, showTitle, showDate, t = x => x } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            lastSelected,\n            highlighted,\n            lastHighlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        if (!messageIds.length) {\n            return null;\n        }\n\n        let messageId = messageIds[messageIds.length - 1];\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageIds={messageIds}\n            />\n        );\n        const webPage = getWebPage(message);\n        let text = null;\n        for (let i = 0; i < messageIds.length; i++) {\n            const m = MessageStore.get(chatId, messageIds[i]);\n            const t = getText(m, !!webPage ? null : inlineMeta, t);\n            if (t && t.length) {\n                if (text !== null) {\n                    text = null;\n                    break;\n                } else {\n                    text = t;\n                    messageId = messageIds[i];\n                }\n            }\n        }\n        const hasCaption = text !== null && text.length > 0;\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': false\n                })}\n                chatId={chatId}\n                messageIds={messageIds}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        // const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isMeChat(chatId) && forward_info) {\n                switch (forward_info.origin['@type']) {\n                    case 'messageForwardOriginHiddenUser': {\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginUser': {\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginChannel': {\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\n                        break;\n                    }\n                }\n            } else if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender.user_id) {\n                tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\n            }\n        }\n\n        const style = {  };\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto');\n\n        const items = messageIds.map(x => MessageStore.get(chatId, x)).map(m => (\n            <AlbumItem\n                key={m.id}\n                message={m}\n                position={null}\n                displaySize={displaySize}\n                source={source}\n            />));\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', 'message-album', 'message-document-album', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-album-last-selected': lastSelected,\n                        // 'message-highlighted': highlighted && !selected,\n                        'message-album-last-highlighted': lastHighlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames(\n                                    'message-content', {\n                                        'message-bubble': withBubble,\n                                        'message-bubble-out': withBubble && isOutgoing\n                                    })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                <div className={classNames(\n                                    'album',\n                                    'document-album',\n                                    { 'album-caption': false },\n                                    { 'album-title': hasTitle }\n                                )}>\n                                    <div className='album-wrapper'>\n                                        {items}\n                                    </div>\n                                </div>\n                                {/*<div*/}\n                                {/*    className={classNames('message-text', {*/}\n                                {/*        'message-text-1emoji': emojiMatches === 1,*/}\n                                {/*        'message-text-2emoji': emojiMatches === 2,*/}\n                                {/*        'message-text-3emoji': emojiMatches === 3*/}\n                                {/*    })}>*/}\n                                {/*    {text}*/}\n                                {/*</div>*/}\n                                {withBubble && meta}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDocumentAlbum.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageIds: PropTypes.arrayOf(PropTypes.number).isRequired,\n    displaySize: PropTypes.number,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n};\n\nDocumentAlbum.defaultProps = {\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showData: false\n};\n\nexport default DocumentAlbum;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { dragParams } = AppStore;\n\n        this.state = { dragParams };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        const { dragParams } = AppStore;\n\n        this.setState({ dragParams });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSendFiles',\n            files\n        });\n    };\n\n    render() {\n        const { dragParams } = this.state;\n        if (!dragParams) return null;\n\n        return (\n            <div\n                className='files-drop-target'\n                onDragEnter={this.handleDragEnter}\n                onDragLeave={this.handleDragLeave}\n                onDrop={this.handleDrop}>\n                <div className='files-drop-target-wrapper'>\n                    <div className='files-drop-target-text'>\n                        <div className='files-drop-target-title'>Drop files here</div>\n                        <div className='files-drop-target-subtitle'>to send them</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDisplayName } from '../../Utils/HOC';\n\nconst MessageContext = React.createContext({\n    chatId: 0,\n    messageId: 0\n});\n\nexport default MessageContext;\n\nexport function withMessage(Component) {\n    class MessageComponent extends React.Component {\n        render() {\n            return <MessageContext.Consumer>{value => <Component chatId={value ? value.chatId : 0} messageId={value? value.messageId: 0} {...this.props} />}</MessageContext.Consumer>;\n        }\n    }\n    MessageComponent.displayName = `WithMessage(${getDisplayName(Component)})`;\n\n    return MessageComponent;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8.5,18.31L5.69,15.5L12.06,9.12H7.11V5.69H18.31V16.89H14.89V11.94L8.5,18.31Z' />,\n    'ArrowTopRight'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M21,12L14,5V9C7,10 4,15 3,20C5.5,16.5 9,14.9 14,14.9V19L21,12Z' />,\n    'ShareFilled'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withMessage } from '../MessageContext';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowTopRightIcon from '../../../Assets/Icons/ArrowTopRight';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport PendingIcon from '../../../Assets/Icons/Pending';\nimport ShareFilledIcon from '../../../Assets/Icons/ShareFilled';\nimport { getUserFullName } from '../../../Utils/User';\nimport { getChatTitle } from '../../../Utils/Chat';\nimport { setText, showAlert, showInputPasswordAlert, showOpenGameAlert, showOpenUrlAlert, showRequestUrlAlert, showSnackbar } from '../../../Actions/Client';\nimport { openChatSelect } from '../../../Actions/Message';\nimport LStore from '../../../Stores/LocalizationStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './KeyboardButton.css';\n\nclass KeyboardButton extends React.Component {\n    state = {\n        loading: false\n    }\n\n    handleCallbackQueryAnswer = (type, result, message) => {\n        const { chatId } = this.props;\n        const { sender, content, via_bot_user_id } = message;\n        const { text, show_alert, url } = result;\n        const { game } = content;\n\n        let title = '';\n        if (message) {\n            if (via_bot_user_id) {\n                title = getUserFullName(via_bot_user_id, null);\n            } else {\n                title = getChatTitle(chatId, false);\n            }\n        }\n        title = title || LStore.getString('Bot');\n\n        if (text) {\n            if (show_alert) {\n                showAlert({\n                    title,\n                    message: text,\n                    ok: LStore.getString('OK')\n                });\n            } else {\n                showSnackbar(text, closeSnackbar => snackKey => {\n                    return (\n                        <IconButton\n                            key='close'\n                            aria-label='Close'\n                            color='inherit'\n                            className='notification-close-button'\n                            onClick={() => { closeSnackbar(snackKey); }}>\n                            <CloseIcon />\n                        </IconButton>\n                    )\n                });\n            }\n        } else if (url) {\n            if (type['@type'] === 'inlineKeyboardButtonTypeCallbackGame') {\n                const userId = via_bot_user_id ? via_bot_user_id : sender.user_id;\n                const user = UserStore.get(userId);\n\n                showOpenGameAlert(game, { message, url, userId, isVerified: user && user.is_verified });\n            } else {\n                showOpenUrlAlert(url, { punycode: false, ask: false, tryTelegraph: true });\n            }\n        }\n    };\n\n    handleClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId, type } = this.props;\n\n        switch (type['@type']) {\n            case 'inlineKeyboardButtonTypeBuy': {\n                showAlert({\n                    title: LStore.getString('AppName'),\n                    message: LStore.getString('PaymentsNotSupported'),\n                    ok: LStore.getString('OK')\n                });\n                break;\n            }\n            case 'inlineKeyboardButtonTypeCallback':\n            case 'inlineKeyboardButtonTypeCallbackGame': {\n                /// gamee, querty_bot\n\n                const { data } = type;\n\n                const message = MessageStore.get(chatId, messageId);\n                if (!message) break;\n\n                const { sender, content, via_bot_user_id } = message;\n                if (!content) break;\n\n                let payload = null;\n                let game = null;\n                if (type['@type'] === 'inlineKeyboardButtonTypeCallbackGame') {\n                    game = content.game;\n                    if (!game) break;\n\n                    payload = { '@type': 'callbackQueryPayloadGame', game_short_name: game.short_name };\n                } else {\n                    payload = { '@type': 'callbackQueryPayloadData', data };\n                }\n\n                this.setState({ loading: true });\n                const result = await TdLibController.send({\n                    '@type': 'getCallbackQueryAnswer',\n                    chat_id: chatId,\n                    message_id: messageId,\n                    payload\n                }).finally(() => {\n                    this.setState({ loading: false });\n                });\n\n                this.handleCallbackQueryAnswer(type, result, message);\n                break;\n            }\n            case 'inlineKeyboardButtonTypeCallbackWithPassword': {\n                /// BotFather + transfer bot\n                const { data } = type;\n\n                const message = MessageStore.get(chatId, messageId);\n                if (!message) break;\n\n                this.setState({ loading: true });\n                const passwordState = await TdLibController.send({\n                    '@type': 'getPasswordState'\n                }).finally(() => {\n                    this.setState({ loading: false });\n                });\n\n                const { has_password } = passwordState;\n                if (!has_password) break;\n\n                showInputPasswordAlert(passwordState, async (password, onCloseDialog, onError) => {\n                    console.log('[pwd] onPassword', password);\n                    this.setState({ loading: true });\n                    let error = null;\n                    const result = await TdLibController.send({\n                        '@type': 'getCallbackQueryAnswer',\n                        chat_id: chatId,\n                        message_id: messageId,\n                        payload: { '@type': 'callbackQueryPayloadDataWithPassword', data, password }\n                    }).catch(e => {\n                        error = e;\n                    }).finally(() => {\n                        this.setState({ loading: false });\n                    });\n\n                    if (error) {\n                        console.log('[pwd] onPassword error', error);\n                        onError && onError(error);\n                    } else if (result) {\n                        console.log('[pwd] onPassword result', result);\n                        onCloseDialog && onCloseDialog();\n                        this.handleCallbackQueryAnswer(type, result, message);\n                    }\n                });\n                break;\n            }\n            case 'inlineKeyboardButtonTypeLoginUrl': {\n                const { url, id, forward_text } = type;\n\n                this.setState({ loading: true });\n                let hasError = false;\n                const result = await TdLibController.send({\n                    '@type': 'getLoginUrlInfo',\n                    chat_id: chatId,\n                    message_id: messageId,\n                    button_id: id\n                }).catch(e => {\n                    hasError = true;\n                }).finally(() => {\n                    this.setState({ loading: false });\n                });\n\n                if (hasError) {\n                    showOpenUrlAlert(url, { punycode: false, ask: true, tryTelegraph: true });\n                } else {\n                    switch (result['@type']) {\n                        case 'loginUrlInfoOpen': {\n                            const { url, skip_confirm } = result;\n\n                            showOpenUrlAlert(url, { punycode: false, ask: !skip_confirm, tryTelegraph: true });\n                            break;\n                        }\n                        case 'loginUrlInfoRequestConfirmation': {\n                            const { url } = result;\n\n\n                            console.log('[login] result', result);\n                            showRequestUrlAlert(url, { result, chatId, messageId, buttonId: id });\n                            break;\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'inlineKeyboardButtonTypeSwitchInline': {\n                /// youtube\n                const { in_current_chat, query } = type;\n\n                const message = MessageStore.get(chatId, messageId);\n                if (!message) break;\n\n                const { sender, via_bot_user_id } = message;\n                let userId = sender.user_id;\n                if (via_bot_user_id !== 0) {\n                    userId = via_bot_user_id;\n                }\n\n                const user = UserStore.get(userId);\n                if (!user) break;\n\n                const inline = `@${user.username} ${query}`;\n\n                if (in_current_chat){\n                    setText(inline);\n                } else {\n                    openChatSelect({ switchInline: inline });\n                }\n\n                break;\n            }\n            case 'inlineKeyboardButtonTypeUrl': {\n                /// qwerty_bot\n                const { url } = type;\n\n                showOpenUrlAlert(url, { punycode: false, ask: true, tryTelegraph: true });\n                break;\n            }\n        }\n    };\n\n    getIcon(type) {\n        switch (type['@type']) {\n            case 'inlineKeyboardButtonTypeBuy': {\n                return null;\n            }\n            case 'inlineKeyboardButtonTypeCallback':\n            case 'inlineKeyboardButtonTypeCallbackGame': {\n                return null;\n            }\n            case 'inlineKeyboardButtonTypeCallbackWithPassword': {\n                return null;\n            }\n            case 'inlineKeyboardButtonTypeLoginUrl': {\n                return <ArrowTopRightIcon className='keyboard-button-icon'/>\n            }\n            case 'inlineKeyboardButtonTypeSwitchInline': {\n                const { in_current_chat } = type;\n\n                return !in_current_chat && <ShareFilledIcon className='keyboard-button-icon'/>;\n            }\n            case 'inlineKeyboardButtonTypeUrl': {\n                return <ArrowTopRightIcon className='keyboard-button-icon'/>\n            }\n        }\n    }\n\n    render() {\n        const { text, type } = this.props;\n        const { loading } = this.state;\n\n        const icon = this.getIcon(type);\n\n        return (\n            <ListItem className='keyboard-button' button onClick={this.handleClick}>\n                {text}\n                {icon}\n                {loading && (\n                    <PendingIcon\n                        className='keyboard-button-progress'\n                        viewBox='0 0 14 14'\n                    />\n                )}\n            </ListItem>\n        );\n    }\n\n}\n\nKeyboardButton.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    text: PropTypes.string,\n    type: PropTypes.object,\n    onClick: PropTypes.func\n};\n\nexport default withMessage(KeyboardButton);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardButton from './KeyboardButton';\nimport './KeyboardRow.css';\n\nclass KeyboardRow extends React.Component {\n    render() {\n        const { row } = this.props;\n        if (!row) return null;\n        if (!row.length) return null;\n\n        return (\n            <div className='keyboard-row'>\n                {row.map((x, i) => (<KeyboardButton key={i} text={x.text} type={x.type}/>))}\n            </div>\n        );\n    }\n}\n\nKeyboardRow.propTypes = {\n    row: PropTypes.array\n};\n\nexport default KeyboardRow;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardRow from './KeyboardRow';\nimport MessageContext from '../MessageContext';\nimport './ReplyMarkup.css';\n\nclass ReplyMarkup extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevChatId, prevMessageId } = state;\n        const { chatId, messageId } = props;\n\n\n        if (prevChatId !== chatId && prevMessageId !== messageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                message: {\n                    chatId,\n                    messageId\n                }\n            }\n        }\n\n        return null;\n    }\n\n    render() {\n        const { markup } = this.props;\n        const { message } = this.state;\n\n        if (!markup) return null;\n        if (markup['@type'] !== 'replyMarkupInlineKeyboard') return null;\n\n        const { rows } = markup;\n        if (!rows.length) return null;\n\n        return (\n            <div className='reply-markup'>\n                <MessageContext.Provider value={message}>\n                    {rows.map((x, i) => (<KeyboardRow key={i} row={x}/>))}\n                </MessageContext.Provider>\n            </div>\n        );\n    }\n}\n\nReplyMarkup.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    markup: PropTypes.object\n};\n\nexport default ReplyMarkup;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Animation from './Animation';\nimport Audio from './Audio';\nimport Document from './Document';\nimport Photo from './Photo';\nimport Sticker, { StickerSourceEnum } from './Sticker';\nimport Video from './Video';\nimport VideoNote from './VideoNote';\nimport VoiceNote from './VoiceNote';\nimport { getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { openInstantView } from '../../../Actions/InstantView';\nimport { getFormattedText, getTwitterInstagramEntities } from '../../../Utils/Message';\nimport {\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\n    PHOTO_DISPLAY_SIZE,\n    PHOTO_DISPLAY_SMALL_SIZE,\n    PHOTO_SIZE\n} from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nclass WebPage extends React.Component {\n    getMedia = () => {\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return [\n                null,\n                <Sticker\n                    chatId={chatId}\n                    messageId={messageId}\n                    sticker={sticker}\n                    openMedia={openMedia}\n                    source={StickerSourceEnum.MESSAGE}\n                />\n            ];\n        }\n\n        if (voice_note) {\n            return [\n                null,\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (video_note) {\n            return [\n                null,\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (audio) {\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\n        }\n\n        if (document) {\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return [\n                    null,\n                    <Animation stretch={true} chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                ];\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return [null, <Video stretch={true} chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo' || type === 'telegram_megagroup' || type === 'telegram_channel') &&\n                (site_name || title || description && description.text.length > 0) &&\n                photoSize &&\n                (photoSize.width === photoSize.height || Math.max(photoSize.width, photoSize.height) < PHOTO_SIZE );\n            let totalLength = 0;\n            if (site_name) {\n                totalLength += site_name.length;\n            }\n            if (title) {\n                totalLength += title.length;\n            }\n            if (description) {\n                totalLength += description.text.length;\n            }\n\n            const extraSmallPhoto = smallPhoto && totalLength < 50;\n\n            const style =\n                smallPhoto || extraSmallPhoto\n                    ? {\n                          float: 'right',\n                          marginLeft: 6\n                      }\n                    : {};\n\n            return [\n                smallPhoto ? (\n                    <Photo\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\n                        style={style}\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        openMedia={openMedia}\n                    />\n                ) : null,\n                !smallPhoto ? <Photo stretch={true} chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\n            ];\n        }\n\n        return [null, null];\n    };\n\n    handleInstantViewClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { url } = web_page;\n\n        openInstantView(url);\n    };\n\n    getWebPage() {\n        const { chatId, messageId, t } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { instant_view_version, site_name } = web_page;\n        let { description, title } = web_page;\n\n        if (description['@type'] === 'formattedText') {\n            description = getFormattedText(description);\n        } else if (typeof description === 'string' && site_name && (site_name.toLowerCase() === 'twitter' || site_name.toLowerCase() === 'instagram')) {\n            // const { text: t2, entities: e2 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'twitter' ? 1 : 2, title, []);\n            // title = getFormattedText({ '@type': 'formattedText', text: title, entities: e2 });\n\n            const { text: t1, entities: e1 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'instagram' ? 1 : 2, description, []);\n            description = getFormattedText({ '@type': 'formattedText', text: description, entities: e1 });\n        }\n\n        const webPageContent = (\n            <>\n                {site_name && <div className='web-page-site-name'>{site_name}</div>}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\n        const webPageInstantView = instant_view_version > 0 && (\n            <Button\n                variant='outlined'\n                color='primary'\n                classes={{\n                    outlinedPrimary: 'message-control',\n                    disabled: 'message-control-disabled'\n                }}\n                fullWidth\n                onClick={this.handleInstantViewClick}\n                className='web-page-button'>\n                <SvgIcon>\n                    <path d='M10.5159727,16.7438514 C10.1741929,18.1203636 10.687342,18.4055299 11.6053255,17.4005852 L15.4613785,12.9698209 C16.3535455,11.8808642 16.1300862,11.0059438 14.8452805,10.7872179 L12.9861121,10.4429102 L12.9861121,10.4429102 C12.8775019,10.4227962 12.8057616,10.3184447 12.8258756,10.2098345 C12.8265392,10.2062511 12.8273007,10.2026864 12.8281591,10.1991446 L13.5436135,7.24719783 C13.8863521,5.8619451 13.3150978,5.61107807 12.4582164,6.59275159 C11.2270125,7.98097123 10.2913754,9.02966176 9.65130514,9.73882318 C9.42814828,9.98606827 9.06894462,10.3719875 8.57369417,10.8965808 C7.48829706,12.1010165 8.05955136,12.9745105 9.31498713,13.1932365 L11.0917769,13.5117472 L11.0917769,13.5117472 C11.2005008,13.5312372 11.2728391,13.6351751 11.253349,13.743899 C11.2525988,13.7480841 11.2517153,13.7522442 11.2506999,13.756373 L10.5159727,16.7438514 Z' />\n                </SvgIcon>\n                {t('InstantView')}\n            </Button>\n        );\n\n        return (\n            <>\n                {webPageMediaTop}\n                {webPageContent}\n                {webPageMediaBottom}\n                {webPageInstantView}\n            </>\n        );\n    }\n\n    render() {\n        const { meta } = this.props;\n\n        return (\n            <>\n                <div className='web-page'>\n                    <div className='border' />\n                    <div className='web-page-wrapper'>{this.getWebPage()}</div>\n                </div>\n                {meta}\n            </>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    displayExtraSmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\n};\n\nexport default withTranslation()(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport DayMeta from './DayMeta';\nimport Reply from './Reply';\nimport ReplyMarkup from './Markup/ReplyMarkup';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageAuthor from './MessageAuthor';\nimport MessageMenu from './MessageMenu';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport EmptyTile from '../Tile/EmptyTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport { startMessageEditing, stopMessageEditing } from '../../Actions/Message';\nimport {\n    getEmojiMatches,\n    getText,\n    getWebPage,\n    openMedia,\n    showMessageForward,\n    isMetaBubble,\n    canMessageBeForwarded,\n    getMessageStyle,\n    isEmptySelection\n} from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { canSendMessages, isChannelChat, isGroupChat, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport {\n    openUser,\n    openChat,\n    selectMessage,\n    openReply,\n    replyMessage,\n    forwardMessages\n} from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Message.css';\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            emojiMatches: getEmojiMatches(chatId, messageId),\n            selected: false,\n            highlighted: false,\n            shook: false,\n\n            contextMenu: false,\n            copyLink: null,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, showTail, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, shook, emojiMatches } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('Message.shouldComponentUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('Message.shouldComponentUpdate true messageId');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            // console.log('Message.shouldComponentUpdate true sendingState');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            // console.log('Message.shouldComponentUpdate true showUnreadSeparator');\n            return true;\n        }\n\n        if (nextProps.showTail !== showTail) {\n            // console.log('Message.shouldComponentUpdate true showTail');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            // console.log('Message.shouldComponentUpdate true showTitle');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('Message.shouldComponentUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            // console.log('Message.shouldComponentUpdate true selected');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            // console.log('Message.shouldComponentUpdate true highlighted');\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            // console.log('Message.shouldComponentUpdate true shook');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            // console.log('Message.shouldComponentUpdate true emojiMatches');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (shook) {\n                this.setState({ shook: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ shook: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ shook: true });\n            }\n        }\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        this.updateMessageContent = update;\n        setTimeout(this.handleUpdateMessageContentAndEditedOnce, 50);\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        this.updateMessageEdited = update;\n        setTimeout(this.handleUpdateMessageContentAndEditedOnce, 50);\n    };\n\n    handleUpdateMessageContentAndEditedOnce = () => {\n        const { updateMessageContent, updateMessageEdited } = this;\n        this.updateMessageContent = null;\n        this.updateMessageEdited = null;\n\n        if (!updateMessageContent && !updateMessageEdited) return;\n\n        const { chatId, messageId } = this.props;\n\n        let handled = false;\n        if (updateMessageContent) {\n            const { emojiMatches } = this.state;\n            const newEmojiMatches = getEmojiMatches(chatId, messageId);\n            if (newEmojiMatches !== emojiMatches) {\n                handled = true;\n                this.setState({ emojiMatches: newEmojiMatches });\n            }\n        }\n\n        if (handled) return;\n\n        startMessageEditing(chatId, messageId);\n        this.forceUpdate(() => {\n            stopMessageEditing(chatId, messageId);\n        });\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            replyMessage(chatId, messageId);\n\n            return;\n        }\n\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        if (canBeForwarded) {\n            forwardMessages(chatId, [messageId]);\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        let { showTail } = this.props;\n        const { t, chatId, messageId, showUnreadSeparator, showTitle, showDate, source } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        // console.log('Message.render', messageId);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender, reply_markup } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageId={messageId}\n            />\n        );\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': isMetaBubble(chatId, messageId)\n                })}\n                chatId={chatId}\n                messageId={messageId}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const webPage = getWebPage(message);\n        const text = getText(message, !!webPage ? null : inlineMeta, t, { chatId, messageId });\n        const hasCaption = text !== null && text.length > 0;\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing) || (isGroupChat(chatId) && isOutgoing);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isMeChat(chatId) && forward_info) {\n                switch (forward_info.origin['@type']) {\n                    case 'messageForwardOriginHiddenUser': {\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginUser': {\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginChannel': {\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\n                        break;\n                    }\n                }\n            } else if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender.user_id) {\n                tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\n            }\n        }\n\n        const style = getMessageStyle(chatId, messageId);\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded =\n            !hasCaption  && (\n                content['@type'] === 'messageAnimation' ||\n                content['@type'] === 'messageVideo' ||\n                content['@type'] === 'messagePhoto' ||\n                content['@type'] === 'messageInvoice' && content.photo) || reply_markup && reply_markup['@type'] === 'replyMarkupInlineKeyboard';\n\n        // console.log('[p] m.render id=' + message.id);\n\n        // return (\n        //     <StubMessage>\n        //         {text}\n        //         {media}\n        //         <WebPage\n        //             chatId={chatId}\n        //             messageId={messageId}\n        //             openMedia={this.openMedia}\n        //             meta={inlineMeta}\n        //         />\n        //     </StubMessage>\n        // );\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-highlighted': highlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div>\n                                <div\n                                    className={classNames('message-content', {\n                                        'message-bubble': withBubble,\n                                        'message-bubble-out': withBubble && isOutgoing\n                                    })}\n                                    style={style}>\n                                    {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                        <div className='message-title'>\n                                            {showTitle && !showForward && (\n                                                <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser/>\n                                            )}\n                                            {showForward && <Forward forwardInfo={forward_info} />}\n                                        </div>\n                                    )}\n                                    {showReply && (\n                                        <Reply\n                                            chatId={chatId}\n                                            messageId={reply_to_message_id}\n                                            onClick={this.handleReplyClick}\n                                        />\n                                    )}\n                                    {media}\n                                    <div\n                                        className={classNames('message-text', {\n                                            'message-text-1emoji': emojiMatches === 1,\n                                            'message-text-2emoji': emojiMatches === 2,\n                                            'message-text-3emoji': emojiMatches === 3\n                                        })}>\n                                        {text}\n                                    </div>\n                                    {webPage && (\n                                        <WebPage\n                                            chatId={chatId}\n                                            messageId={messageId}\n                                            openMedia={this.openMedia}\n                                            meta={inlineMeta}\n                                        />\n                                    )}\n                                    {withBubble && meta}\n                                </div>\n                                {reply_markup && (\n                                    <ReplyMarkup\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        markup={reply_markup}\n                                    />\n                                )}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n                <MessageMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                    source={source}\n                />\n            </div>\n        );\n    }\n}\n\nMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    sendingState: PropTypes.object,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n}\n\nMessage.defaultProps = {\n    sendingState: null,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showDate: false\n}\n\n// const enhance = compose(\n//     withSaveRef(),\n//     withTranslation(),\n//     withRestoreRef()\n// );\n\nconst message = withTranslation(['translation', 'local'], { withRef: true })(Message);\n\nexport default message;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport DayMeta from './DayMeta';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\nimport MessageMenu from './MessageMenu';\n\nconst chatPhotoStyle = {\n    width: 96,\n    height: 96,\n    borderRadius: '50%',\n    margin: '0 auto 5px'\n};\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            highlighted: false,\n            contextMenu: false,\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, t } = this.props;\n        const { highlighted, contextMenu } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, showUnreadSeparator, showDate } = this.props;\n        const { highlighted, contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content, date } = message;\n        if (!content) return null;\n        if (content['@type'] === 'messageChatUpgradeTo') return null;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('service-message', { 'message-highlighted': highlighted })}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='service-message-wrapper'>\n                        <div className='service-message-content'>\n                            <div>{text}</div>\n                        </div>\n                    </div>\n                    {photo && (\n                        <Photo\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            displaySize={96}\n                            style={chatPhotoStyle}\n                            openMedia={this.openMedia}\n                        />\n                    )}\n                </div>\n                <MessageMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={null}\n                    source={'chat'}\n                />\n            </div>\n        );\n    }\n}\n\nServiceMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showUnreadSeparator: PropTypes.bool\n}\n\nServiceMessage.defaultProps = {\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\n// import { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady, cacheLoaded } = AppStore;\n        this.state = {\n            chatId,\n            dialogsReady,\n            cacheLoaded\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        if (nextState.cacheLoaded !== this.state.cacheLoaded) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    onClientUpdateCacheLoaded = update => {\n        const { cacheLoaded } = AppStore;\n\n        this.setState({ cacheLoaded });\n    };\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = AppStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t, force } = this.props;\n        const { chatId, dialogsReady, cacheLoaded } = this.state;\n        if (chatId) return null;\n        // if (!dialogsReady && !cacheLoaded) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    {/*<BubblesLogo className='placeholder-logo' />*/}\n                    <div className='placeholder-meta'>{t('SelectChatToStartMessaging')}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { onClick } = this.props;\n\n        return (\n            <div className='scroll-down-button'>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default ScrollDownButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.off('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ sticker, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateStickerPreview',\n                    sticker\n                });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker, timestamp: 0, showPreview: false });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    getSticker(stickerId) {\n        const { items } = this.state;\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? items[stickerIndex] : null;\n    }\n\n    render() {\n        const { hint, items, sticker, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.HINTS}\n                />\n            </div>\n        ));\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint scrollbars-hidden'>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default StickersHint;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport ActionBar from './ActionBar';\nimport Album from '../Message/Album/Album';\nimport DocumentAlbum from '../Message/Album/DocumentAlbum';\nimport FilesDropTarget from './FilesDropTarget';\nimport InputBoxHints from './InputBoxHints';\nimport Message from '../Message/Message';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, historyEquals, getScrollMessage, mapEquals } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { canMessageBeEdited, filterDuplicateMessages, forwardInfoEquals, senderEquals } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendMediaMessages, canSendMessages, getChatFullInfo, getChatMedia, getSupergroupId, isChannelChat, isGroupChat, isMeChat } from '../../Utils/Chat';\nimport { closePinned, editMessage, highlightMessage, openChat } from '../../Actions/Client';\nimport { sendBotStartMessage } from '../../Actions/Message';\nimport { ALBUM_MESSAGES_LIMIT, MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S, SCROLL_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    SCROLL_TO_POSITION: 'SCROLL_TO_POSITION',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION',\n    NONE: 'NONE'\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.lastRequests = new Map();\n        this.sessionId = {\n            date: new Date(),\n            loading: false,\n            completed: false,\n            loadMigratedHistory: false\n        };\n\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n        this.scrollDownButtonRef = React.createRef();\n\n        this.defferedActions = [];\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n        this.updatePinnedMessage = throttle(this.updatePinnedMessage, 200);\n    }\n\n    hasLastMessage() {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return false;\n\n        const { last_message } = chat;\n        if (!last_message) return true;\n\n        return history.length > 0 && history[history.length - 1].id >= last_message.id;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: props.chatId !== state.prevChatId ? 0 : state.separatorMessageId,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] componentDidUpdate\n        //     scrollBehaviorNone=${this.scrollBehaviorNone}\n        //     scrollDownVisible=${scrollDownVisible}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[ml] shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('[ml] shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            // console.log('[ml] shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            // console.log('[ml] shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            // console.trace('[ml] shouldComponentUpdate history', nextState.history, history);\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            // console.log('[ml] shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            // console.log('[ml] shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            // console.log('[ml] shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        // console.log('[ml] shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId, messageId } = this.props;\n        this.handleSelectChat(chatId, null, messageId, null);\n\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.on('clientUpdateStartMessageEditing', this.onClientUpdateStartMessageEditing);\n        MessageStore.on('clientUpdateStopMessageEditing', this.onClientUpdateStopMessageEditing);\n        MessageStore.on('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSendSucceeded);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.off('clientUpdateStartMessageEditing', this.onClientUpdateStartMessageEditing);\n        MessageStore.off('clientUpdateStopMessageEditing', this.onClientUpdateStopMessageEditing);\n        MessageStore.off('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSendSucceeded);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateStartMessageEditing = update => {\n        const { chatId, messageId } = update;\n        const { chatId: currentChatId } = this.props;\n        if (currentChatId !== chatId) return;\n\n        const { history } = this.state;\n        if (!history.length) return;\n\n        const { current: list } = this.listRef;\n        if (list.offsetHeight + list.scrollTop < list.scrollHeight){\n            return;\n        }\n\n        if (!history.some(x => x.chat_id === chatId && x.id === messageId)) return;\n\n        this.scrollBottomAfterEditing = {\n            chatId,\n            messageId\n        };\n    };\n\n    onClientUpdateStopMessageEditing = update => {\n        const { chatId, messageId } = update;\n        const { chatId: currentChatId } = this.props;\n        if (currentChatId !== chatId) return;\n\n        const { scrollBottomAfterEditing } = this;\n        if (!scrollBottomAfterEditing) return;\n\n        if (chatId !== scrollBottomAfterEditing.chatId) return;\n        if (messageId !== scrollBottomAfterEditing.messageId) return;\n\n        const { current: list } = this.listRef;\n        list.scrollTop = list.scrollHeight - list.offsetHeight;\n        this.scrollBottomAfterEditing = null;\n    };\n\n    onUpdateMessageIsPinned = update => {\n        const { chat_id, message_id, is_pinned } = update;\n        const { chatId, filter } = this.props;\n        if (chatId !== chat_id) return;\n        if (!filter) return;\n\n        if (is_pinned) {\n            const message = MessageStore.get(chat_id, message_id);\n\n            const list = this.listRef.current;\n\n            let scrollBehavior = message.is_outgoing && !isServiceMessage(message) ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n            if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            }\n\n            const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n            const history = [message];\n            this.scrollBehaviorNone = true;\n            this.insert(history, newState, () => {\n                this.scrollBehaviorNone = false;\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            });\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, history);\n            this.viewMessages(history);\n        } else {\n            this.deleteHistory([message_id]);\n\n            const media = MessageStore.getMedia(chatId);\n            if (media && !media.pinned.length) {\n                closePinned();\n            }\n        }\n    };\n\n    onKeyDown = event => {\n        // if (event.keyCode === 27) {\n        //     if (MessageStore.selectedItems.size > 0) {\n        //         console.log('[k] messagesList onKeyDown');\n        //         clearSelection();\n        //         event.stopPropagation();\n        //         event.preventDefault();\n        //     }\n        // }\n    };\n\n    onClientUpdateTryEditMessage = async update => {\n        if (this.hasLastMessage()) {\n            const { history } = this.state;\n\n            for (let i = history.length - 1; i >= 0; i--) {\n                const message = history[i];\n                if (canMessageBeEdited(message.chat_id, message.id)) {\n                    editMessage(message.chat_id, message.id);\n\n                    return;\n                }\n            }\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: this.props.chatId,\n            query: '',\n            sender_user_id: UserStore.getMyId(),\n            from_message_id: 0,\n            offset: 0,\n            limit: 100,\n            filter: { '@type': 'searchMessagesFilterEmpty' }\n        });\n\n        for (let i = 0; i < result.messages.length; i++) {\n            const message = result.messages[i];\n            if (canMessageBeEdited(message.chat_id, message.id)) {\n                editMessage(message.chat_id, message.id);\n\n                return;\n            }\n        }\n    };\n\n    onClientUpdateDialogsReady = async update => {\n        const { list } = update;\n        if (!list) return;\n        if (list['@type'] !== 'chatListMain') return;\n\n        const { history } = this.state;\n        if (history && history.length > 0) return;\n\n        await FileStore.initDB(async () => {\n            const { chatId, messageId } = this.props;\n            if (chatId) {\n                const chat = ChatStore.get(chatId);\n                if (chat) {\n                    const { type } = chat;\n                    switch (type['@type']) {\n                        case 'chatTypePrivate':\n                        case 'chatTypeSecret': {\n                            await TdLibController.send({\n                                '@type': 'createPrivateChat',\n                                user_id: type.user_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeBasicGroup': {\n                            await TdLibController.send({\n                                '@type': 'createBasicGroupChat',\n                                basic_group_id: type.basic_group_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeSupergroup': {\n                            await TdLibController.send({\n                                '@type': 'createSupergroupChat',\n                                supergroup_id: type.supergroup_id,\n                                force: false\n                            });\n                            break;\n                        }\n                    }\n                    this.handleSelectChat(chatId, 0, messageId, 0);\n                }\n            }\n        });\n    };\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) {\n            this.defferedActions.forEach(x => x());\n            this.defferedActions = [];\n        }\n    };\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n\n            this.updateItemsInView();\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        this.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.hasLastMessage()) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const { date } = message;\n        if (date === 0) return;\n\n        const list = this.listRef.current;\n\n        let scrollBehavior = message.is_outgoing && !isServiceMessage(message) ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(history, newState, () => {\n            this.scrollBehaviorNone = false;\n            this.handleScrollBehavior(scrollBehavior, this.snapshot);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        this.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n        // console.log ( '%c%s', 'color: green; font: 1.2rem/1 Tahoma;', `selectChat messageId=${messageId}, prevMessageId=${previousMessageId}` );\n        this.sessionId = {\n            date: new Date(),\n            loading: false,\n            completed: false,\n            loadMigratedHistory: false\n        };\n        const { sessionId } = this;\n\n        this.prevScrollTop = null;\n        this.defferedActions = [];\n\n        const scrollPosition = null; //ChatStore.getScrollPosition(chatId);\n\n        if (chat) {\n            if (previousChatId !== chatId && !this.props.filter) {\n                TdLibController.send({\n                    '@type': 'openChat',\n                    chat_id: chatId\n                });\n            }\n\n            const unread = !messageId && chat.unread_count > 1;\n            let fromMessageId = 0;\n            if (unread && chat.last_read_inbox_message_id) {\n                fromMessageId = chat.last_read_inbox_message_id;\n            } else if (messageId) {\n                fromMessageId = messageId;\n            } else if (scrollPosition) {\n                fromMessageId = scrollPosition.messageId;\n            }\n            const offset = unread || messageId || scrollPosition ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit = unread || messageId || scrollPosition ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            sessionId.loading = true;\n            const result = await this.getRequest(chat.id, fromMessageId, offset, limit)\n            .catch(error => {\n                return {\n                    '@type': 'messages',\n                    messages: [],\n                    total_count: 0\n                };\n            }).finally(() => {\n                sessionId.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = this.state.separatorMessageId;\n            if (chatId !== previousChatId) {\n                separatorMessageId = Number.MAX_VALUE;\n                if (chat && chat.unread_count > 1) {\n                    for (let i = result.messages.length - 1; i >= 0; i--) {\n                        const { id } = result.messages[i];\n                        if (\n                            !result.messages[i].is_outgoing &&\n                            id > chat.last_read_inbox_message_id &&\n                            id < separatorMessageId\n                        ) {\n                            separatorMessageId = id;\n                        } else {\n                            break;\n                        }\n                    }\n                }\n                separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            }\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            } else if (scrollPosition) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_POSITION;\n            }\n\n            this.cancelUpdatePinnedMessage = true;\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot, scrollPosition);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n                requestAnimationFrame(() => {\n                    this.cancelUpdatePinnedMessage = false;\n                });\n\n                this.loadIncompleteHistory(result, limit);\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            this.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            if (previousChatId !== chatId && !this.props.filter) {\n                // getChatFullInfo(chatId);\n                getChatMedia(chatId);\n                if (this.props.options) {\n                    const { botStartMessage } = this.props.options;\n                    if (botStartMessage && canSendMessages(chatId) && isGroupChat(chatId)) {\n                        const { botUserId, parameter } = botStartMessage;\n\n                        await sendBotStartMessage(chatId, botUserId, parameter);\n                    }\n                }\n            }\n        } else {\n            sessionId.loading = true;\n            this.replace(0, [], () => {\n                sessionId.loading = false;\n            });\n        }\n\n        if (previousChatId !== chatId && !this.props.filter) {\n            if (previousChat) {\n                TdLibController.send({\n                    '@type': 'closeChat',\n                    chat_id: previousChatId\n                });\n\n                const scrollMessage = getScrollMessage(this.snapshot, this.itemsRef);\n                // console.log('[scroll] start setScrollPosition', [previousChatId, previousChat, this.snapshot, scrollMessage]);\n                const message = this.messages[scrollMessage.index];\n                if (message) {\n                    const { chatId, messageId } = message.props;\n                    // console.log('[scroll] stop setScrollPosition', [previousChatId, previousChat], { chatId, messageId, offset: scrollMessage.offset });\n                    ChatStore.setScrollPosition(previousChatId, { chatId, messageId, offset: scrollMessage.offset });\n                }\n            }\n        }\n    }\n\n    viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        const viewAction = () => {\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: messages[0].chat_id,\n                message_ids: messages.map(x => x.id)\n            });\n        };\n\n        if (window.hasFocus) {\n            viewAction();\n        } else {\n            this.defferedActions.push(viewAction);\n        }\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async (result, limit) => {\n        const MAX_ITERATIONS = 5;\n        let complete = this.isCompleteHistory(result, MESSAGE_SLICE_LIMIT);\n\n        for (let i = 0; i < MAX_ITERATIONS && !complete; i++) {\n            result = await this.onLoadNext();\n            complete = this.isCompleteHistory(result, MESSAGE_SLICE_LIMIT);\n        }\n    };\n\n    isCompleteHistory = (result, limit) => {\n        if (!result) return false;\n        if (!result.messages.length) return true;   // end of the history\n\n        return result.messages.length >= limit;\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { sessionId } = this;\n\n        if (!chatId) return;\n        if (sessionId.loading) return;\n\n        if (sessionId.loadMigratedHistory) {\n            return await this.onLoadMigratedHistory();\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        let result = null;\n        const lastRequestKey = `${chatId}_${fromMessageId}`;\n        if (this.lastRequests.has(lastRequestKey)) {\n            result = this.lastRequests.get(`${chatId}_${fromMessageId}`);\n        } else {\n            sessionId.loading = true;\n            result = await this.getRequest(chatId, fromMessageId, 0, limit)\n                .finally(() => {\n                    sessionId.loading = false;\n                });\n        }\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (!result.messages.length) {\n            this.lastRequests.set(lastRequestKey, result);\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        this.insertNext(result.messages, state => {\n            if (result.messages.length > 0) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n                setTimeout(() => {\n                    const { history: currentHistory } = this.state;\n                    if (currentHistory.length >= MESSAGE_SLICE_LIMIT * 3) {\n                        this.setState({\n                            history: currentHistory.slice(0, MESSAGE_SLICE_LIMIT * 3)\n                        });\n                    }\n                }, 100);\n            }\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { sessionId } = this;\n\n        if (!chatId) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        let fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) {\n            fullInfo = await getChatFullInfo(chatId);\n        }\n        if (!fullInfo.upgraded_from_basic_group_id) {\n            return;\n        }\n\n        sessionId.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n        if (sessionId.loading) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n        const limit = fromMessageId === 0? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        sessionId.loading = true;\n        const result = await this.getRequest(basicGroupChat.id, fromMessageId, 0, limit)\n        .finally(() => {\n            sessionId.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(result.messages, state => {\n            if (result.messages.length > 0) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n            }\n\n            this.loadIncompleteHistory(result, limit);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { sessionId } = this;\n\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (sessionId.loading) return;\n        if (this.hasLastMessage()) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        sessionId.loading = true;\n        const result = await this.getRequest(chatId, fromMessageId, -limit + 1, limit)\n            .finally(() => {\n                sessionId.loading = false;\n            });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(result.messages, {}, () => {\n            this.scrollBehaviorNone = false;\n            if (result.messages.length > 0) {\n                setTimeout(() => {\n                    const { history: currentHistory } = this.state;\n                    if (currentHistory.length > MESSAGE_SLICE_LIMIT * 3) {\n                        this.setState({\n                            history: currentHistory.slice(currentHistory.length - MESSAGE_SLICE_LIMIT * 3)\n                        }, () => {\n                            this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n                        });\n                    }\n                }, 0);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        let history = [...this.state.history];\n        const index = history.findIndex(x => x.id === oldMessageId);\n        if (index !== -1) {\n            history.splice(index, 1, message);\n        } else {\n            history = this.state.history;\n        }\n\n        this.setState({ history }, callback);\n    }\n\n    insert(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({\n            history: history.concat(this.state.history).sort((a, b) => {\n                if (a.id < b.id) {\n                    return -1;\n                } else if (a.id > b.id) {\n                    return 1;\n                }\n\n                return 0;\n            })\n        }, callback);\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            callback && callback();\n            return;\n        }\n\n        this.setState({\n            history: history.concat(this.state.history)//.slice(0, 100)\n        }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({\n            history: this.state.history.concat(history),\n            ...newState\n        }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    updateItemsInView = () => {\n        if (!this.messages) return null;\n\n        const messages = [];\n        const messagesMap = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId, messageIds } = message.props;\n                if (messageId) {\n                    const key = `${chatId}_${messageId}`;\n                    messagesMap.set(key, key);\n                    messages.push({ chatId, messageId });\n                } else if (messageIds) {\n                    for (let j = 0; j < messageIds.length; j++) {\n                        const key = `${chatId}_${messageIds[j]}`;\n                        messagesMap.set(key, key);\n                        messages.push({ chatId, messageId: messageIds[j] });\n                    }\n                }\n            }\n        }\n\n        if (!mapEquals(this.inViewMap, messagesMap)) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMessagesInView', messages: messagesMap });\n\n            // console.log('[messages] !mapEquals', this.inViewMap, messagesMap, !mapEquals(this.inViewMap, messagesMap));\n            this.inViewMap = messagesMap;\n\n            return messages;\n        }\n\n        return null;\n    };\n\n    updatePinnedMessage = scrollToNext => {\n        const { chatId, filter } = this.props;\n        if (filter) return;\n\n        const { prevScrollTop } = this;\n        if (prevScrollTop === null) {\n            // console.log('[pin] handleScroll 3.1');\n            return;\n        }\n        // const { prevScrollTop } = this;\n        // if (prevScrollTop === null) return;\n\n        const media = MessageStore.getMedia(chatId);\n        if (!media) return;\n        if (!media.pinned) return;\n        if (media.pinned.length <= 1) return;\n\n        const messages = [];\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId, messageIds } = message.props;\n                if (messageId) {\n                    messages.push({ chatId, messageId });\n                } else if (messageIds) {\n                    for (let j = 0; j < messageIds.length; j++) {\n                        messages.push({ chatId, messageId: messageIds[j] });\n                    }\n                }\n            }\n        }\n\n        if (!messages) return;\n        if (messages.length <= 1) return;\n\n        const minId = messages[0].messageId;\n        const maxId = messages[messages.length - 1].messageId;\n\n        let id = 0;\n        for (let i = 0; i < media.pinned.length; i++) {\n            const pinned = media.pinned[i];\n            if (pinned.id >= minId && pinned.id <= maxId) {\n                id = pinned.id;\n                break;\n            }\n        }\n\n        if (!id) {\n            const pinnedMinId = media.pinned[media.pinned.length - 1].id;\n            const pinnedMaxId = media.pinned[0].id\n\n            if (pinnedMaxId < minId) {\n                id = pinnedMaxId;\n            } else if (pinnedMinId > maxId) {\n                id = pinnedMinId;\n            }\n        }\n\n        const { clickedPinned, currentPinned } = MessageStore;\n        // console.log('[pin] handleScroll 3', { id, clickedPinned, currentPinned, scrollToNext, prevScrollTop: this.prevScrollTop });\n        if (id && (!currentPinned || currentPinned.chatId === chatId && currentPinned.id !== id)) {\n\n\n            if (scrollToNext && clickedPinned && clickedPinned.chatId === chatId && clickedPinned.id < id) {\n                // console.log('[pin] handleScroll 3.2');\n                return;\n            }\n\n            // console.log('[pin] handleScroll 4', { chatId, id });\n            TdLibController.clientUpdate({ '@type': 'clientUpdateCurrentPinnedMessage', chatId, messageId: id });\n        } else {\n            // console.log('[pin] handleScroll 3.3');\n        }\n    };\n\n    updateScrollDownVisibility = () => {\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (this.hasLastMessage() && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevHistory = history;\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] handleScroll\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const scrollToNext = this.prevScrollTop > list.scrollTop;\n\n        this.updateItemsInView();\n\n        if (!this.cancelUpdatePinnedMessage) {\n            this.updatePinnedMessage(scrollToNext);\n        }\n\n        this.updateScrollDownVisibility();\n\n        if (this.prevScrollTop !== null) {\n            if (scrollToNext && list.scrollTop <= SCROLL_PRECISION) {\n                this.onLoadNext();\n            }\n\n            if (!scrollToNext && (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION)) {\n                this.onLoadPrevious();\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot, position) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n        // console.log('[pin] handleScrollBehavior', scrollBehavior);\n\n        // console.log(\n        //     `[ml] handleScrollBehavior\n        //     scrollBehavior=${scrollBehavior}\n        //     snapshot.scrollTop=${scrollTop}\n        //     snapshot.offsetHeight=${offsetHeight}\n        //     snapshot.scrollHeight=${scrollHeight}`\n        // );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_POSITION: {\n                this.scrollToPosition(position);\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n            case ScrollBehaviorEnum.NONE: {\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] keepScrollPosition before\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     snapshot.scrollTop=${snapshot.scrollTop}\n        //     snapshot.scrollHeight=${snapshot.scrollHeight}\n        //     snapshot.offsetHeight=${snapshot.offsetHeight}`\n        // );\n\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n\n        // console.log(\n        //     `[ml] keepScrollPosition after\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        const chat = ChatStore.get(chatId);\n        const pinnedMessageMargin = 0; //chat && chat.pinned_message_id ? 55 : 0;\n\n        // console.log(\n        //     `MessagesList.scrollToUnread before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop - pinnedMessageMargin; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToUnread after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToPosition = position => {\n        // console.log('[scroll] scrollToPosition', this.props.chatId, position);\n        const { messageId, offset } = position;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = node.offsetTop - offset;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToMessage before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`,\n        //     this.itemsMap\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId\n                    || itemComponent.props.messageIds && itemComponent.props.messageIds.indexOf(messageId) !== -1) {\n                    if (list.offsetHeight < node.offsetHeight) {\n                        // scroll to the message top\n                        list.scrollTop = node.offsetTop;\n                    } else {\n                        // scroll message to the center of screen\n                        list.scrollTop = node.offsetTop - list.offsetHeight / 2.0 + node.offsetHeight / 2.0;\n                    }\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        if (!scrolled) {\n            this.handleSelectChat(chatId, chatId, messageId, messageId);\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToMessage after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        // if (!scrolled) {\n        //     this.scrollToBottom();\n        // }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToBottom before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            // console.log(\n            //     `MessagesList.scrollToBottom after\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        } else {\n            // console.log(\n            //     `MessagesList.scrollToBottom after (no changes)\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        }\n    };\n\n    getRequest = (chatId, fromMessageId, offset, limit) => {\n        const { filter } = this.props;\n\n        if (filter) {\n            if (fromMessageId === 0 && offset === 0 && limit === MESSAGE_SLICE_LIMIT) {\n                const media = MessageStore.getMedia(chatId);\n                if (media && media.pinned && media.pinned.length > 0) {\n                    return Promise.resolve({\n                        '@type': 'messages',\n                        messages: [...media.pinned]\n                    });\n                }\n            }\n\n            return TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                from_message_id: fromMessageId,\n                offset,\n                limit,\n                filter,\n                sender_user_id: null,\n                query: null\n            });\n        }\n\n        return TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset,\n            limit\n        });\n    };\n\n    scrollToStart = async () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const hasLastMessage = history.some(x => x.chat_id === chatId && chat && chat.last_message && chat.last_message.id === x.id);\n        if (hasLastMessage) {\n            this.scrollToBottom();\n        } else {\n            this.handleSelectChat(chatId, chatId, 0, messageId);\n        }\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendMediaMessages(chatId)) return;\n\n        if (!event.dataTransfer) return;\n        if (!event.dataTransfer.types.some(x => x === 'Files')) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: true,\n            dataTransfer: event.dataTransfer\n        });\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    showMessageTitle(message, prevMessage, isFirst, isFirstUnread) {\n        if (!message) return false;\n\n        const { chat_id, date, is_outgoing, sender, content, forward_info } = message;\n\n        if (isFirst) {\n            return true;\n        }\n\n        if (isFirstUnread) {\n            return true;\n        }\n\n        if (isChannelChat(chat_id)) {\n            return true;\n        }\n\n        return (\n            prevMessage &&\n            (isServiceMessage(prevMessage) ||\n                prevMessage.content['@type'] === 'messageSticker' ||\n                prevMessage.content['@type'] === 'messageVideoNote' ||\n                !senderEquals(sender, prevMessage.sender) ||\n                is_outgoing !== prevMessage.is_outgoing ||\n                (isMeChat(chat_id) && !forwardInfoEquals(forward_info, prevMessage.forward_info)) ||\n                date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S)\n        );\n    }\n\n    showMessageDate(message, prevMessage, isFirst) {\n        if (isFirst) {\n            return true;\n        }\n\n        const date = new Date(message.date * 1000);\n        const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n\n        if (\n            date.getFullYear() !== prevDate.getFullYear() ||\n            date.getMonth() !== prevDate.getMonth() ||\n            date.getDate() !== prevDate.getDate()\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { chatId, filter } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('[ml] render ', history);\n\n        this.itemsMap.clear();\n\n        if (clearHistory) {\n            this.messages = null;\n        } else {\n            this.messages = [];\n            for (let i = 0; i < history.length; i++) {\n                const message = history[i];\n                const { chat_id, media_album_id, ttl, content, is_outgoing } = message;\n                let albumAdded = false;\n                if (media_album_id !== '0' && !ttl && (content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto')) {\n                    const album = [message];\n                    for (let j = i + 1; j < i + ALBUM_MESSAGES_LIMIT && j < history.length; j++) {\n                        if (history[j].media_album_id === media_album_id) {\n                            album.push(history[j]);\n                        } else {\n                            break;\n                        }\n                    }\n\n                    if (album.length > 1) {\n                        const x = message;\n                        const prevMessage = i > 0 ? history[i - 1] : null;\n                        const nextMessage = i + album.length < history.length ? history[i + album.length] : null;\n\n                        const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage ? separatorMessageId === nextMessage.id : false;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || !senderEquals(x.sender, nextMessage.sender)\n                            || (isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info))\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        this.messages.push((\n                            <Album\n                                key={`chat_id=${chat_id} media_album_id=${media_album_id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                ref={el => album.forEach((x, index) => { this.itemsMap.set(i + index, el) })}\n                                chatId={chat_id}\n                                messageIds={album.map(x => x.id)}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={album.map(x => x.id).some(x => x.id === separatorMessageId)}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />));\n                        i += (album.length - 1);\n                        albumAdded = true;\n                    }\n                } else if (media_album_id !== '0' && !ttl && (content['@type'] === 'messageDocument' || content['@type'] === 'messageAudio')) {\n                    const album = [message];\n                    for (let j = i + 1; j < i + ALBUM_MESSAGES_LIMIT && j < history.length; j++) {\n                        if (history[j].media_album_id === media_album_id) {\n                            album.push(history[j]);\n                        } else {\n                            break;\n                        }\n                    }\n\n                    if (album.length > 1) {\n                        const x = message;\n                        const prevMessage = i > 0 ? history[i - 1] : null;\n                        const nextMessage = i + album.length < history.length ? history[i + album.length] : null;\n\n                        const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage ? separatorMessageId === nextMessage.id : false;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || !senderEquals(x.sender, nextMessage.sender)\n                            || (isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info))\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        this.messages.push((\n                            <DocumentAlbum\n                                key={`chat_id=${chat_id} media_album_id=${media_album_id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                ref={el => album.forEach((x, index) => { this.itemsMap.set(i + index, el) })}\n                                chatId={chat_id}\n                                messageIds={album.map(x => x.id)}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={album.map(x => x.id).some(x => x.id === separatorMessageId)}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />));\n                        i += (album.length - 1);\n                        albumAdded = true;\n                    }\n                }\n\n                if (!albumAdded) {\n                    /// history[4] id=5 prev\n                    /// history[5] id=6 current\n                    /// history[6] id=7 next\n                    /// ...\n                    /// history[9] id=10\n\n                    const x = message;\n                    const prevMessage = i > 0 ? history[i - 1] : null;\n                    const nextMessage = i < history.length - 1 ? history[i + 1] : null;\n\n                    const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                    let m = null;\n                    if (isServiceMessage(x)) {\n                        m = (\n                            <ServiceMessage\n                                key={`chat_id=${x.chat_id} id=${x.id} date=${showDate}`}\n                                ref={el => this.itemsMap.set(i, el)}\n                                chatId={x.chat_id}\n                                messageId={x.id}\n                                showUnreadSeparator={separatorMessageId === x.id}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />\n                        );\n                    } else {\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage && separatorMessageId === nextMessage.id;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || !senderEquals(x.sender, nextMessage.sender)\n                            || isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info)\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        m = (\n                            <Message\n                                key={`chat_id=${x.chat_id} id=${x.id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                ref={el => this.itemsMap.set(i, el)}\n                                chatId={x.chat_id}\n                                messageId={x.id}\n                                sendingState={x.sending_state}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={separatorMessageId === x.id}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />\n                        );\n                    }\n\n                    this.messages.push(m);\n                }\n            }\n        }\n\n        return (\n            <div\n                className={classNames('messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <ActionBar chatId={chatId} />\n                <Placeholder />\n                {scrollDownVisible && (\n                    <ScrollDownButton ref={this.scrollDownButtonRef} onClick={this.handleScrollDownClick} />\n                )}\n                <FilesDropTarget />\n                <StickersHint />\n                {/*<InputBoxHints />*/}\n            </div>\n        );\n    }\n}\n\nMessagesList.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number,\n    options: PropTypes.object,\n    filter: PropTypes.object\n};\n\nexport default MessagesList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport HeaderCommand from './HeaderCommand';\nimport { clearSelection, closePinned } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './PinnedMessagesHeader.css'\n\nclass PinnedMessagesHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const media = MessageStore.getMedia(props.chatId);\n\n        this.state = {\n            selectedCount: MessageStore.selectedItems.size,\n            pinnedCount: media && media.pinned.length ? media.pinned.length : 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { selectedCount, pinnedCount } = this.state;\n\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n\n        if (nextState.pinnedCount !== pinnedCount) {\n            return true;\n        }\n\n        return true;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n    }\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n        if (chatId !== chat_id) return;\n\n        const media = MessageStore.getMedia(chatId);\n        const pinnedCount = media && media.pinned.length ? media.pinned.length : 0\n\n        this.setState({\n            pinnedCount\n        });\n    };\n\n    onUpdateMessageIsPinned = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n        if (chatId !== chat_id) return;\n\n        const media = MessageStore.getMedia(chatId);\n        const pinnedCount = media && media.pinned.length ? media.pinned.length : 0\n\n        this.setState({\n            pinnedCount\n        });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({\n            selectedCount: MessageStore.selectedItems.size\n        });\n    }\n\n    handleClose = () => {\n        const { selectedCount } = this.state;\n        if (selectedCount > 0) {\n            clearSelection();\n        }\n\n        closePinned();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { selectedCount, pinnedCount } = this.state;\n\n        let title = t('PinnedMessages');\n        if (pinnedCount === 1) {\n            title = t('PinnedMessage');\n        } else if (pinnedCount > 1) {\n            title = `${pinnedCount} ${t('PinnedMessages')}`;\n        }\n\n        return (\n            <div className={classNames('header-details', { 'header-details-selection': selectedCount > 0 })}>\n                <IconButton\n                    className='header-left-button main-menu-button'\n                    onClick={this.handleClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-details-content'>\n                    <HeaderCommand count={selectedCount}/>\n                    <div className={classNames('header-status', 'grow')}>\n                        <span className='header-status-content'>{title}</span>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nPinnedMessagesHeader.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(PinnedMessagesHeader);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport MessagesList from './MessagesList';\nimport PinnedMessagesHeader from './PinnedMessagesHeader';\nimport { requestUnpinMessage } from '../../Actions/Client';\nimport { canPinMessages } from '../../Utils/Chat';\nimport MessageStore from '../../Stores/MessageStore';\nimport './PinnedMessages.css';\n\nclass PinnedMessages extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevChatId } = state;\n        const { chatId } = props;\n        if (prevChatId !== chatId) {\n            return {\n                prevChatId: chatId,\n                opened: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateOpenPinned', this.onClientUpdateOpenPinned);\n        MessageStore.on('clientUpdateClosePinned', this.onClientUpdateClosePinned);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateOpenPinned', this.onClientUpdateOpenPinned);\n        MessageStore.off('clientUpdateClosePinned', this.onClientUpdateClosePinned);\n    }\n\n    onClientUpdateOpenPinned = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId } = update;\n\n        if (currentChatId !== chatId) return;\n\n        this.setState({\n            opened: true\n        });\n    };\n\n    onClientUpdateClosePinned = update => {\n        this.setState({\n            opened: false\n        });\n    };\n\n    handleUnpinAll = async () => {\n        const { chatId } = this.props;\n\n        requestUnpinMessage(chatId, null);\n    }\n\n    render() {\n        const { chatId, t } = this.props;\n        const { opened } = this.state;\n        if (!opened) return null;\n\n        const unpinAllTitle = canPinMessages(chatId) ? t('UnpinAllMessages') : t('HidePinnedMessages');\n\n        return (\n            <div className='pinned-messages'>\n                <div className='pinned-messages-wrapper'>\n                    <div className='dialog-background'/>\n                    <div className='dialog-details-wrapper'>\n                        <PinnedMessagesHeader chatId={chatId} />\n                        <MessagesList chatId={chatId} filter={{ '@type': 'searchMessagesFilterPinned' }}/>\n                        <FooterCommand command={unpinAllTitle} onCommand={this.handleUnpinAll} />\n                    </div>\n                </div>\n            </div>\n        );\n\n        // return (\n        //     <SidebarPage open={opened} timeout={250} onClose={this.handleClose}>\n        //\n        //     </SidebarPage>\n        // );\n    }\n}\n\nPinnedMessages.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessages);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { copy } from '../../Utils/Text';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '../../Assets/Icons/More';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { forward } from '../../Actions/Client';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        const inputMessageContent = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: link,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: false\n        };\n\n        forward(inputMessageContent);\n    };\n\n    render() {\n        const { t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='sticker-set-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableEnforceFocus={true}\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0,\n            scroll: false,\n            scrollTop: false,\n            scrollBottom: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n\n        if (stickerSet !== nextState.stickerSet) {\n            return true;\n        }\n\n        if (sticker !== nextState.sticker) {\n            return true;\n        }\n\n        if (scroll !== nextState.scroll) {\n            return true;\n        }\n\n        if (scrollTop !== nextState.scrollTop) {\n            return true;\n        }\n\n        if (scrollBottom !== nextState.scrollBottom) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.off('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet }, () => {\n            setTimeout(() => {\n                this.handleScroll();\n            }, 0);\n        });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 5;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    // handleMouseOver = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     if (!this.mouseDown) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    // };\n\n    // handleMouseDown = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    //\n    //     this.mouseDown = true;\n    //     document.addEventListener('mouseup', this.handleMouseUp);\n    //\n    //     event.preventDefault();\n    //     event.stopPropagation();\n    //     return false;\n    // };\n\n    getSticker(stickerId) {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return null;\n\n        const { stickers } = stickerSet;\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? stickers[stickerIndex] : null;\n    }\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleScroll = () => {\n        const content = this.contentRef.current;\n        if (!content) {\n            return;\n        }\n\n        const hasScroll = content.scrollHeight > content.offsetHeight;\n        const scrollTop = hasScroll && content.scrollTop === 0;\n        const scrollBottom = hasScroll && (content.scrollTop + content.offsetHeight) === content.scrollHeight;\n        const scroll = hasScroll && content.scrollTop > 0 && (content.scrollTop + content.offsetHeight) < content.scrollHeight;\n\n        this.setState({\n            scrollTop,\n            scrollBottom,\n            scroll\n        });\n    }\n\n    handleInViewport = (fileId, elementRect) => {\n        const { current } = this.contentRef;\n        if (!current) return false;\n\n        const contentRect = current.getBoundingClientRect();\n        const top = elementRect.top - contentRect.top;\n        const bottom = elementRect.bottom - contentRect.bottom;\n        // below bottom edge\n        if (top > contentRect.height) {\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\n            return false;\n        }\n        // upper top edge\n        if (bottom < - contentRect.height) {\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\n            return false;\n        }\n\n        // console.log('[rlottie] handleInViewport', [fileId, true]);\n        return true;\n    };\n\n    render() {\n        const { t } = this.props;\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={true}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.STICKER_SET}\n                    inViewportFunc={this.handleInViewport}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        return (\n            <Dialog\n                className={classNames(\n                    'sticker-set-dialog',\n                    { 'sticker-set-dialog-scroll': scroll },\n                    { 'sticker-set-dialog-scroll-top': scrollTop },\n                    { 'sticker-set-dialog-scroll-bottom': scrollBottom },\n                )}\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: 'sticker-set-dialog-paper' }}>\n                <DialogTitle\n                    className={classNames('sticker-set-dialog-title', { 'sticker-set-dialog-disabled': Boolean(sticker) })}\n                    disableTypography>\n                    <IconButton\n                        aria-label='Close'\n                        onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                    <Typography variant='h6' id='sticker-set-dialog-title-text' className='sticker-set-dialog-title-typography' noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton />\n                </DialogTitle>\n                <DialogContent\n                    ref={this.contentRef}\n                    classes={{ root: classNames('sticker-set-dialog-content-root', 'scrollbars-hidden') }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onScroll={this.handleScroll}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames('sticker-set-dialog-actions', { 'sticker-set-dialog-disabled': Boolean(sticker) })}>\n                    <Button className='sticker-set-dialog-action-button' disableElevation variant='contained' color={is_installed ? 'secondary' : 'primary'} onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('AddStickers')}\n                    </Button>\n                </DialogActions>\n                {<StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nexport default withTranslation()(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { closeChatSelect } from '../../Actions/Message';\nimport './SelectChatPlaceholder.css';\n\nclass SelectChatPlaceholder extends React.Component {\n\n    handleClick = () => {\n        closeChatSelect();\n    }\n\n    render() {\n        const { t } = this.props;\n\n        return (\n            <div className='switch-inline-placeholder' onClick={this.handleClick}>\n                <div className='switch-inline-text'>{t('SelectChat') + '...'}</div>\n            </div>\n        );\n    }\n\n}\n\nSelectChatPlaceholder.propTypes = {};\n\nexport default withTranslation()(SelectChatPlaceholder);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport PinnedMessages from './PinnedMessages';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport SelectChatPlaceholder from './SelectChatPlaceholder';\nimport { getSrc } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: AppStore.getChatId(),\n            messageId: AppStore.getMessageId(),\n            selectedCount: 0,\n            wallpaper: null,\n            wallpaperSrc: null,\n            chatSelectOptions: null,\n            chatOpenOptions: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, selectedCount, wallpaper, chatSelectOptions, chatOpenOptions } = this.state;\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n        if (nextState.wallpaper !== wallpaper) {\n            return true;\n        }\n        if (nextState.chatSelectOptions !== chatSelectOptions) {\n            return true;\n        }\n        if (nextState.chatOpenOptions !== chatOpenOptions) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateChatSelect', this.onClientUpdateChatSelect);\n        ChatStore.on('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        ChatStore.on('clientUpdateClearOpenChatOptions', this.onClientUpdateClearOpenChatOptions);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateChatSelect', this.onClientUpdateChatSelect);\n        ChatStore.off('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        ChatStore.on('clientUpdateClearOpenChatOptions', this.onClientUpdateClearOpenChatOptions);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateClearOpenChatOptions = update => {\n        this.setState({\n            chatOpenOptions: null\n        });\n    }\n\n    onClientUpdateChatSelect = update => {\n        const { options } = update;\n\n        this.setState({\n            chatSelectOptions: options\n        });\n    };\n\n    onClientUpdateDocumentBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { document: file } = document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        if (this.thumbnailTime) {\n            if (this.thumbnailTime.wallpaper === wallpaper) {\n                const diff = new Date() - this.thumbnailTime.time;\n                if (diff < 250) {\n                    setTimeout(() => {\n                        this.forceUpdate();\n                    }, 250);\n                    return;\n                }\n            }\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBackground = update => {\n        const { wallpaper } = update;\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.setState({\n            wallpaper\n        });\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatSelectOptions } = this.state;\n        const { nextChatId: chatId, nextMessageId: messageId, options: chatOpenOptions } = update;\n\n        this.setState({\n            chatId,\n            messageId,\n            chatOpenOptions,\n            chatSelectOptions: chatOpenOptions && chatOpenOptions.closeChatSelect ? null: chatSelectOptions\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, chatOpenOptions, wallpaper, chatSelectOptions } = this.state;\n\n        let style = null;\n        let src = null;\n        if (wallpaper) {\n            const { document } = wallpaper;\n            if (document) {\n                const { thumbnail, document: file } = document;\n                if (file) {\n                    src = getSrc(file);\n                }\n\n                if (!src && thumbnail) {\n                    src = getSrc(thumbnail.file);\n                }\n            }\n\n            style = {\n                backgroundImage: src ? `url(${src})` : null\n            }\n        }\n\n        return (\n            <div className='dialog-details' style={style}>\n                <div className='dialog-background'/>\n                <div className='dialog-details-wrapper'>\n                    <HeaderPlayer />\n                    <Header chatId={chatId} />\n                    <MessagesList ref={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} options={chatOpenOptions} />\n                    <Footer chatId={chatId} options={chatOpenOptions}/>\n                </div>\n                {chatSelectOptions && <SelectChatPlaceholder/>}\n                <PinnedMessages chatId={chatId}/>\n                <StickerSetDialog />\n                <ChatInfoDialog />\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSaveRef } from '../../Utils/HOC';\nimport { withIV } from './IVContext';\nimport { getPageBlock } from '../../Utils/InstantView';\nimport './Article.css';\n\nconst articleRefs = new Map();\n\nclass Article extends React.PureComponent {\n    render() {\n        const { forwardedRef, iv } = this.props;\n        if (!iv) return null;\n\n        const { page_blocks, is_rtl } = iv;\n        if (!page_blocks) return;\n\n        articleRefs.clear();\n        const blocks = page_blocks.map((x, index) => getPageBlock(x, iv, index, ref => { articleRefs.set(x, ref) }));\n\n        return (\n            <article ref={forwardedRef} dir={is_rtl ? 'rtl' : 'ltr'}>\n                {blocks}\n            </article>\n        );\n    }\n}\n\nArticle.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withIV\n);\n\nexport { articleRefs };\n\nexport default enhance(Article);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.91421356,11.5 L16.2071068,5.20710678 C16.5976311,4.81658249 16.5976311,4.18341751 16.2071068,3.79289322 C15.8165825,3.40236893 15.1834175,3.40236893 14.7928932,3.79289322 L7.79289322,10.7928932 C7.40236893,11.1834175 7.40236893,11.8165825 7.79289322,12.2071068 L14.7928932,19.2071068 C15.1834175,19.5976311 15.8165825,19.5976311 16.2071068,19.2071068 C16.5976311,18.8165825 16.5976311,18.1834175 16.2071068,17.7928932 L9.91421356,11.5 Z' />,\n    'Left'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            top: false,\n            bottom: false\n        };\n\n        this.scrollRef = React.createRef();\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { text } = this.props;\n        const { top, bottom } = this.state;\n\n        if (nextProps.text !== text) return true;\n        if (nextState.top !== top) return true;\n        if (nextState.bottom !== bottom) return true;\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.handleScroll();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.handleScroll();\n        }\n    }\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleScroll = () => {\n        const scroll = this.scrollRef.current;\n        if (!scroll) return;\n\n        const top = scroll.scrollTop === 0 && scroll.scrollHeight > scroll.offsetHeight;\n        const bottom = scroll.scrollTop + scroll.offsetHeight === scroll.scrollHeight && scroll.scrollHeight > scroll.offsetHeight;\n\n        this.setState({\n            top,\n            bottom\n        })\n    };\n\n    render() {\n        const { text } = this.props;\n        const { top, bottom } = this.state;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div\n                    ref={this.scrollRef}\n                    className={classNames(\n                        'scrollbars-hidden',\n                        'media-caption-wrapper', {\n                            'media-caption-wrapper-top': top,\n                            'media-caption-wrapper-bottom': bottom,\n                            'media-caption-wrapper-both': !top && !bottom\n                        })}\n                    onScroll={this.handleScroll}>\n                    <div className='media-caption-text'>{text}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Caption from '../InstantView/Blocks/Caption';\nimport SafeLink from '../Additional/SafeLink';\nimport Player from '../Player/Player';\nimport { getSrc, getViewerFile, getViewerMinithumbnail, getViewerThumbnail } from '../../Utils/File';\nimport { getThumb } from '../../Utils/Media';\nimport { isEmptyText } from '../../Utils/InstantView';\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass InstantViewMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { media, size, caption, url } = props;\n\n        if (media !== state.prevMedia) {\n            const thumbnail = getViewerThumbnail(media);\n            const minithumbnail = getViewerMinithumbnail(media);\n\n            let [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                const { video } = media;\n                if (video) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${video.mime_type}`;\n                }\n            }\n\n            return {\n                prevMedia: media,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                thumbnail,\n                minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n        if (!videoInfo) return;\n\n        const { file } = this.state;\n        if (file.id !== videoInfo.fileId) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewViewerContent',\n            content: null\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = update;\n        const { media, size } = this.props;\n        const { file } = this.state;\n\n        if (file && file.id === fileId) {\n            const [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n\n            this.setState({\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { fileId } = update;\n        const { thumbnail } = this.state;\n\n        if (thumbnail && thumbnail.file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { media, caption, url } = this.props;\n        if (!media) return null;\n\n        const {\n            width,\n            height,\n            file,\n            src,\n            mimeType,\n            thumbnail,\n            minithumbnail,\n            isPlaying,\n            supportsStreaming\n        } = this.state;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\n        videoWidth = w;\n        videoHeight = h;\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\n\n        switch (media['@type']) {\n            case 'video': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <Player\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            fileId={file.id}\n                            width={videoWidth}\n                            height={videoHeight}\n                            poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </Player>\n                        {!isPlaying && !supportsStreaming && thumb}\n                    </div>\n                );\n                break;\n            }\n            case 'animation': {\n                // content = (\n                //     <Animation\n                //         type='preview'\n                //         stretch={true}\n                //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\n                //         animation={media}\n                //         onClick={this.handleContentClick}\n                //         showProgress={false}\n                //         style={{ borderRadius: 0 }}\n                //     />\n                // );\n\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            onClick={this.handleContentClick}\n                            loop\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </video>\n                        {!isPlaying && thumb}\n                    </div>\n                );\n                break;\n            }\n            default: {\n                content = (\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                );\n            }\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                {caption && (!isEmptyText(caption.text) || !isEmptyText(caption.credit) || url) && (\n                    <MediaCaption\n                        text={\n                            <>\n                                <Caption text={caption.text} credit={caption.credit} />\n                                <SafeLink url={url} />\n                            </>\n                        }\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewerContent.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object,\n    url: PropTypes.string\n};\n\nexport default InstantViewMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children, className, style } = this.props;\n\n        const cx = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow },\n            className\n        );\n\n        return (\n            <div className={cx} style={style} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle, style } = this.props;\n\n        return (\n            <div className='media-viewer-footer-text' style={style}>\n                <div className='media-viewer-footer-text-wrapper'>\n                    <span>{title}</span>\n                    {Boolean(subtitle) && (\n                        <span>\n                            &nbsp;\n                            {subtitle}\n                        </span>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames('media-viewer-footer-button', {\n                    'media-viewer-footer-button-checked': checked,\n                    'media-viewer-footer-button-disabled': disabled\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerFooterButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '../../Assets/Icons/Download';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerDownloadButton extends React.Component {\n    state = {  };\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.fileId !== this.props.chatId) {\n            this.checkFileLoaded();\n        }\n    }\n\n    checkFileLoaded() {\n        // console.log('[down] checkLoaded');\n        const { fileId } = this.props;\n        const blob = FileStore.getBlob(fileId);\n        if (blob) {\n            // console.log('[down] checkLoaded blob');\n            return;\n        }\n\n        const file = FileStore.get(fileId);\n        if (!file) {\n            // console.log('[down] checkLoaded file');\n            return;\n        }\n\n        const { local } = file;\n        if (!local) return;\n        if (!local.is_downloading_completed) return;\n\n        // console.log('[down] checkLoaded getLocal');\n        const store = FileStore.getStore();\n        FileStore.getLocalFile(store, file, null, () => {\n            // console.log('[down] checkLoaded getLocal complete');\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        });\n    }\n\n    componentDidMount() {\n        this.checkFileLoaded();\n\n        FileStore.on('updateFile', this.onUpdateFile);\n\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('updateFile', this.onUpdateFile);\n\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onUpdateFile = update => {\n        const { fileId } = this.props;\n        const { file } = update;\n\n        if (file.id !== fileId) return;\n\n        if (file.local.is_downloading_completed) {\n            this.checkFileLoaded();\n        }\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title, children, disabled: propsDisabled } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled || propsDisabled} title={title} onClick={this.handleClick}>\n                {children || <SaveIcon />}\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string,\n    disabled: PropTypes.bool\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withIV } from '../InstantView/IVContext';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport InstantViewMediaViewerContent from './InstantViewMediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getBlockCaption, getBlockMedia, getBlockUrl, getValidBlocks, isValidMediaBlock } from '../../Utils/InstantView';\nimport { cancelPreloadIVMediaViewerContent, getViewerFile, preloadIVMediaViewerContent, saveMedia } from '../../Utils/File';\nimport { getInputMediaContent } from '../../Utils/Media';\nimport { forward, setInstantViewViewerContent } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewMediaViewer.css';\n\nclass InstantViewMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            index: -1,\n            hasPreviousMedia: false,\n            hasNextMedia: false,\n            blocks: []\n        };\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const { index, blocks } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        if (!media) return;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n\n        const isVideo = media['@type'] === 'video';\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    loadContent() {\n        const { iv, media } = this.props;\n\n        const blocks = getValidBlocks(iv, isValidMediaBlock);\n        const index = blocks.findIndex(x => getBlockMedia(x) === media);\n\n        this.setState({\n            blocks,\n            index,\n            hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n            hasNextMedia: this.hasNextMedia(index, blocks)\n        });\n\n        preloadIVMediaViewerContent(index, blocks);\n    }\n\n    hasPreviousMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < blocks.length;\n    }\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index + 1;\n\n        if (!this.hasPreviousMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    hasNextMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    }\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index - 1;\n\n        if (!this.hasNextMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    loadMedia = index => {\n        const { blocks } = this.state;\n\n        if (index < 0) return false;\n        if (index >= blocks.length) return false;\n\n        this.setState(\n            {\n                index,\n                hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n                hasNextMedia: this.hasNextMedia(index, blocks)\n            }\n        );\n\n        preloadIVMediaViewerContent(index, blocks);\n        return true;\n    };\n\n    handleClose = () => {\n        setInstantViewViewerContent(null);\n\n        const { index, blocks } = this.state;\n        if (index !== -1) {\n            cancelPreloadIVMediaViewerContent(index, blocks);\n        }\n    };\n\n    handleForward = () => {\n        const { media } = this.props;\n\n        const inputMessageContent = getInputMediaContent(media, null);\n        if (!inputMessageContent) return;\n\n        forward(inputMessageContent);\n    };\n\n    handleSave = () => {\n        const { media } = this.props;\n\n        saveMedia(media, null);\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    render() {\n        const { size, t } = this.props;\n        const { index, blocks, hasNextMedia, hasPreviousMedia } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        const caption = getBlockCaption(block);\n        const url = getBlockUrl(block);\n\n        const [width, height, file] = getViewerFile(media, size);\n\n        let title = '';\n        if (media['@type'] === 'photo') {\n            title = t('AttachPhoto');\n        }\n        if (media['@type'] === 'video') {\n            title = t('AttachVideo');\n        } else if (media['@type'] === 'animation') {\n            title = t('AttachGif');\n        }\n        const maxCount = blocks.length;\n\n        return (\n            <div className={classNames('instant-view-media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount > 1 && index >= 0 ? LStore.formatString('Of', index + 1, maxCount) : null}\n                        style={{ marginLeft: 128 }}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerFooterButton title={t('Forward')} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='media-viewer-content-column'>\n                        <InstantViewMediaViewerContent media={media} size={size} caption={caption} url={url} />\n                    </div>\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewer.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withIV\n);\n\nexport default enhance(InstantViewMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Article from './Article';\nimport { articleRefs } from './Article';\nimport InstantViewMediaViewer from '../Viewer/InstantViewMediaViewer';\nimport IVContext from './IVContext';\nimport MediaViewerButton from '../Viewer/MediaViewerButton';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport { itemsInView, throttle } from '../../Utils/Common';\nimport { getInnerBlocks } from '../../Utils/InstantView';\nimport { openInstantView } from '../../Actions/InstantView';\nimport { setInstantViewContent, setInstantViewViewerContent } from '../../Actions/Client';\nimport { scrollTop } from '../../Utils/DOM';\nimport { modalManager } from '../../Utils/Modal';\nimport { IV_PHOTO_SIZE } from '../../Constants';\nimport InstantViewStore from '../../Stores/InstantViewStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewer.css';\n\nclass InstantViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.articleRef = React.createRef();\n        this.instantViewerRef = React.createRef();\n\n        this.state = {};\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.instantView !== state.prevInstantView) {\n            return {\n                prevInstantView: props.instantView,\n                hasPrev: InstantViewStore.hasPrev(),\n                hasScroll: false,\n                media: null,\n                caption: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { instantView } = this.props;\n        const { hasScroll, hasPrev, media, caption, url } = this.state;\n\n        if (instantView !== nextProps.instantView) {\n            return true;\n        }\n\n        if (hasScroll !== nextState.hasScroll) {\n            return true;\n        }\n\n        if (hasPrev !== nextState.hasPrev) {\n            return true;\n        }\n\n        if (media !== nextState.media) {\n            return true;\n        }\n\n        if (caption !== nextState.caption) {\n            return true;\n        }\n\n        if (url !== nextState.url) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.handleScroll();\n        this.scrollToBlock(this.props.block, 'smooth');\n\n        KeyboardManager.add(this.keyboardHandler);\n        InstantViewStore.on('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        KeyboardManager.remove(this.keyboardHandler);\n        InstantViewStore.off('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    onClientUpdateInstantViewViewerContent = update => {\n        const { content } = update;\n        if (!content) {\n            this.setState({ media: null, caption: null, url: null });\n            return;\n        }\n\n        const { media, caption, url, instantView } = content;\n\n        if (this.props.instantView !== instantView) return;\n\n        this.setState({ media, caption, url });\n    };\n\n    onClientUpdateInstantViewUrl = async update => {\n        const { url } = update;\n        const active = InstantViewStore.getCurrent();\n        const { instantView, url: oldUrl } = this.props;\n\n        if (active !== instantView) return;\n\n        if (instantView && url.startsWith(oldUrl)) {\n            const hash = new URL(url).hash;\n            if (url.indexOf('#') === url.length - 1) {\n                this.scrollTop('smooth');\n\n                return;\n            } else if (hash && this.scrollToHash(hash, 'smooth')) {\n\n                return;\n            }\n        }\n\n        openInstantView(url);\n    };\n\n    scrollToBlock(block, behavior) {\n        if (!block) return false;\n\n        if (!articleRefs) return false;\n\n        const ref = articleRefs.get(block);\n        if (!ref) return false;\n\n        const element = ReactDOM.findDOMNode(ref);\n        return this.scrollToElement(element, behavior);\n    }\n\n    scrollToElement(element, behavior) {\n        if (!element) return false;\n\n        const details = [];\n        let finished = false;\n        let currentElement = element;\n        do {\n            currentElement = currentElement.parentNode;\n            if (currentElement) {\n                if (currentElement.nodeName === 'DETAILS') {\n                    details.push(currentElement);\n                } else if (currentElement.nodeName === 'ARTICLE') {\n                    finished = true;\n                }\n            } else {\n                finished = true;\n            }\n        } while (!finished);\n\n        details.forEach(x => (x.open = true));\n\n        element.scrollIntoView({\n            block: 'center',\n            behavior\n        });\n\n        return true;\n    }\n\n    scrollToHash(hash, behavior) {\n        if (!hash) return false;\n\n        const element = document.getElementById(hash.substr(1));\n\n        return this.scrollToElement(element, behavior);\n    }\n\n    scrollTop(behavior) {\n        const element = this.instantViewerRef.current;\n\n        switch (behavior) {\n            case 'smooth': {\n                scrollTop(element);\n                break;\n            }\n            default: {\n                element.scrollTo({\n                    top: 0,\n                    behavior\n                });\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { instantView, block, url } = this.props;\n\n        const hash = new URL(url).hash;\n        if (prevProps.instantView !== instantView) {\n            if (prevProps.url !== url) {\n                if (url.indexOf('#') === url.length - 1) {\n                    this.scrollTop('auto');\n                } else if (hash) {\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    this.scrollTop('auto');\n                }\n            } else {\n                if (hash) {\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    this.scrollTop('smooth');\n                }\n            }\n\n            this.handleScroll();\n        }\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                event.stopPropagation();\n                event.preventDefault();\n\n                const { media } = this.state;\n\n                if (media) {\n                    setInstantViewViewerContent(null);\n                    return;\n                }\n\n                this.handleClose();\n                break;\n            }\n        }\n    };\n\n    handleClose() {\n        setInstantViewContent(null);\n    }\n\n    handleBack = () => {\n        const { hasPrev, hasScroll } = this.state;\n        if (hasScroll) {\n            this.scrollTop('smooth');\n            return;\n        }\n\n        if (hasPrev) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdatePrevInstantView'\n            });\n            return;\n        }\n\n        this.handleClose();\n    };\n\n    handleScroll = () => {\n        const element = this.instantViewerRef.current;\n        this.setState({\n            hasScroll: element.scrollTop > 50\n        });\n\n        this.updateItemsInView();\n    };\n\n    updateItemsInView() {\n        if (!this.mounted) return;\n\n        const { instantView } = this.props;\n        if (!instantView) return;\n\n        const { page_blocks } = instantView;\n\n        const blocks = new Map();\n        const items = itemsInView(this.instantViewerRef, this.articleRef);\n\n        for (let i = 0; i < items.length; i++) {\n            const block = page_blocks[items[i]];\n            blocks.set(block, block);\n\n            const innerBlocks = getInnerBlocks(block);\n            innerBlocks.forEach(x => blocks.set(x, x));\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateBlocksInView',\n            blocks\n        });\n    }\n\n    render() {\n        const { instantView } = this.props;\n        const { hasPrev, hasScroll, media, caption, url } = this.state;\n        if (!instantView) return null;\n\n        return (\n            <IVContext.Provider value={instantView}>\n                <div ref={this.instantViewerRef} className='instant-viewer' onScroll={this.handleScroll}>\n                    <div className='instant-viewer-left-column' onClick={this.handleBack}>\n                        <MediaViewerButton\n                            className='instant-viewer-left-button'\n                            style={{ alignItems: 'flex-start' }}\n                            onClick={this.handleBack}>\n                            <NavigateBeforeIcon\n                                style={{\n                                    transition: 'transform 0.25s ease-out',\n                                    transform: hasScroll ? 'rotate(90deg)' : 'rotate(0deg)'\n                                }}\n                            />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='instant-viewer-content-column'>\n                        <div>\n                            <Article ref={this.articleRef} />\n                        </div>\n                    </div>\n                    <div className='instant-viewer-right-column'>\n                        <MediaViewerButton className='instant-viewer-right-button' onClick={this.handleClose}>\n                            <CloseIcon />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {media && <InstantViewMediaViewer media={media} size={IV_PHOTO_SIZE} caption={caption} url={url} />}\n            </IVContext.Provider>\n        );\n    }\n}\n\nInstantViewer.propTypes = {\n    instantView: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(InstantViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaInfo.css';\n\nclass MediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date, sender } = message;\n\n        const dateHint = getDateHint(date);\n\n        const tileControl = sender.user_id ? <UserTile userId={sender.user_id} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    {tileControl}\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor sender={sender} />\n                        </div>\n                        <div className='media-info-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Player from '../Player/Player';\nimport { getMediaFile, getMediaMinithumbnail, getMediaThumbnail, getSrc } from '../../Utils/File';\nimport { getText, isAnimationMessage, isEmbedMessage, isVideoMessage } from '../../Utils/Message';\nimport { getThumb } from '../../Utils/Media';\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n\n        this.videoRef = React.createRef();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size, t } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            const thumbnail = getMediaThumbnail(chatId, messageId);\n            const minithumbnail = getMediaMinithumbnail(chatId, messageId);\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            const { content } = message;\n            const { web_page: webPage } = content;\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text,\n                thumbnail,\n                minithumbnail,\n                webPage\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n        if (!videoInfo) return;\n\n        const { file } = this.state;\n        if (file.id !== videoInfo.fileId) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerContent',\n            content: null\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const thumbnail = getMediaThumbnail(chatId, messageId);\n            this.setState({\n                thumbnail\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size, t } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            const [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n\n        const { source } = this.state;\n        if (!source) return;\n\n        source.loadNextBuffer();\n    };\n\n\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            width,\n            height,\n            file,\n            src,\n            supportsStreaming,\n            mimeType,\n            text,\n            minithumbnail,\n            thumbnail,\n            webPage,\n            isPlaying\n        } = this.state;\n\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.file : null);\n\n        const isEmbed = isEmbedMessage(chatId, messageId);\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\n        videoWidth = w;\n        videoHeight = h;\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\n\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <Player\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        fileId={file.id}\n                        width={videoWidth}\n                        height={videoHeight}\n                        poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </Player>\n                    {!isPlaying && !supportsStreaming && thumb}\n                </div>\n            );\n        } else if (isAnimation) {\n            // const message = MessageStore.get(chatId, messageId);\n            //\n            // content = (\n            //     <Animation\n            //         type='preview'\n            //         stretch={true}\n            //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\n            //         animation={message.content.animation || message.content.web_page.animation}\n            //         onClick={this.handleContentClick}\n            //         showProgress={false}\n            //         style={{ borderRadius: 0 }}\n            //         />\n            // );\n\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </video>\n                    {!isPlaying && thumb}\n                </div>\n            );\n        } else if (webPage && webPage.embed_url) {\n            let { embed_url: url } = webPage;\n\n            switch (webPage.site_name) {\n                case 'Coub': {\n                    break;\n                }\n                case 'SoundCloud': {\n                    break;\n                }\n                case 'Spotify': {\n                    break;\n                }\n                case 'Twitch': {\n                    url += `&parent=${window.location.hostname}`;\n                    break;\n                }\n                case 'YouTube': {\n                    url += '?iv_load_policy=3&controls=2&playsinline=1&rel=0&modestbranding=0&autoplay=1&enablejsapi=0&widgetid=1&showinfo=0';\n                    break;\n                }\n                case 'Vimeo': {\n                    url += '?playsinline=true&autoplay=true&dnt=true&title=false';\n                    break;\n                }\n                case 'КиноПоиск': {\n                    break;\n                }\n                case 'Яндекс.Музыка': {\n                    break;\n                }\n            }\n\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <iframe src={url} width={videoWidth} height={videoHeight} frameBorder={0} allowFullScreen={true} scrolling='no' style={{ background: 'black' }}/>\n                </div>\n            );\n        } else {\n            content = (\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n            );\n        }\n\n        return (\n            <>\n                <div className='media-viewer-content'>\n                    {content}\n                    {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                </div>\n                {text && text.length > 0 && !isVideo && !isEmbed && <MediaCaption text={text} />}\n            </>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewerContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport MediaInfo from '../Tile/MediaInfo';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { forwardMessages, setMediaViewerContent } from '../../Actions/Client';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveMedia\n} from '../../Utils/File';\nimport {\n    canMessageBeDeleted,\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isEmbedMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { modalManager } from '../../Utils/Modal';\nimport { PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\nimport LStore from '../../Stores/LocalizationStore';\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        KeyboardManager.add(this.keyboardHandler);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                if (!fullscreenElement) {\n                    this.handlePrevious();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!fullscreenElement) {\n                    this.handleNext();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n        }\n\n        const isVideo = isVideoMessage(chatId, currentMessageId);\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        let media = null;\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                media = animation;\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                media = document;\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    media = animation;\n                    break;\n                }\n\n                if (document) {\n                    media = document;\n                    break;\n                }\n\n                if (photo) {\n                    media = photo;\n                    break;\n                }\n\n                if (video) {\n                    media = video;\n                    break;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                media = video;\n                break;\n            }\n        }\n\n        saveMedia(media, message);\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        forwardMessages(chatId, [currentMessageId]);\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users } = message;\n\n        const canBeDeleted = canMessageBeDeleted(chatId, currentMessageId);\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file, mimeType] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isEmbedMessage(chatId, currentMessageId)) {\n            title = '';\n        } else if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                <div className='media-viewer-footer'>\n                    <MediaInfo chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount > 1 && index >= 0 ? LStore.formatString('Of', maxCount - index, maxCount) : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} disabled={isEmbedMessage(chatId, currentMessageId)} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'/>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        const { onClose } = this.props;\n\n        onClose && onClose(event);\n    };\n\n    handlePhotoClick = event => {\n        if (event) event.stopPropagation();\n\n        const { onPrevious } = this.props;\n\n        onPrevious && onPrevious(event);\n    };\n\n    render() {\n        const { file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        return (\n            <div className='media-viewer-content' onClick={this.handleContentClick} >\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handlePhotoClick}/>\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n\n    onClose: PropTypes.func,\n    onPrevious: PropTypes.func\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaInfo.css';\n\nclass ProfileMediaInfo extends React.Component {\n    render() {\n        const { chatId, date, style } = this.props;\n\n        return (\n            <div className='media-info' style={style}>\n                <div className='media-info-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor sender={{ '@type': 'messageSenderChat', chat_id: chatId }} />\n                        </div>\n                        {date && (\n                            <div className='media-info-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaInfo from '../Tile/ProfileMediaInfo';\nimport { forward, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat, isMeChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport LStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory(photo);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                this.handleClose();\n                event.preventDefault();\n                event.stopPropagation();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        let inputFile = null;\n        let inputMessagePhoto = null;\n        const inHistory = this.history && index >= 0 && index < this.history.length;\n        if (inHistory) {\n            const photo = getProfilePhoto(this.history[index]);\n            if (!photo) return;\n\n            let { big: file } = photo;\n            if (!file) return;\n\n            inputFile = {\n                '@type': 'inputFileId',\n                id: file.id\n            };\n        } else {\n            const chatPhoto = getPhotoFromChat(chatId);\n            if (!chatPhoto) return;\n\n            const { big: file } = chatPhoto;\n            if (!file) return;\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) return;\n\n            inputFile = {\n                '@type': 'inputFileBlob',\n                data: blob,\n                name: ''\n            };\n        }\n\n        if (!inputFile) return;\n\n        const inputMessageContent = {\n            '@type': 'inputMessagePhoto',\n            photo: inputFile,\n            thumbnail: null,\n            added_sticker_file_ids: [],\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            caption: {\n                '@type': 'formattedText',\n                text: '',\n                entities: null\n            },\n            ttl: 0\n        };\n\n        forward(inputMessageContent);\n    };\n\n    handleDelete = async () => {\n        const { chatId } = this.props;\n        const {\n            currentIndex,\n            totalCount,\n            hasNextMedia,\n            hasPreviousMedia\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo = index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n\n        const { id } = photo;\n        if (!id) return;\n\n        await TdLibController.send({\n            '@type': 'deleteProfilePhoto',\n            profile_photo_id: id\n        });\n\n        this.history.splice(index, 1);\n        if (!this.history.length) {\n            this.handleClose();\n            return;\n        }\n\n        this.setState({\n            totalCount: totalCount - 1\n        });\n\n        if (hasNextMedia) {\n            const nextIndex = currentIndex - 1;\n\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\n                if (nextIndex === 0) {\n                    this.loadNext();\n                }\n            });\n        }\n\n        if (hasPreviousMedia) {\n            const nextIndex = currentIndex;\n\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\n                if (nextIndex === this.history.length - 1) {\n                    this.loadPrevious();\n                }\n            });\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, { }, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, { }, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, obj, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                ...obj,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount,\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const inHistory = index >= 0 && index < this.history.length;\n        const profilePhoto = inHistory ? getProfilePhoto(this.history[index]) : null;\n        const profilePhotoBig = profilePhoto ? profilePhoto.big : null;\n        const profilePhotoBlob = profilePhotoBig ? profilePhotoBig.blob || FileStore.getBlob(profilePhotoBig.id) : null;\n        const photo = profilePhotoBlob ? profilePhoto : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n        const isMe = isMeChat(chatId);\n\n        return (\n            <div className={classNames('media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaInfo chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)}/>\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount > 1 && index >= 0 ? LStore.formatString('Of', index + 1, totalCount) : null}\n                    />\n                    <div style={{ width: 64 }}/>\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerDownloadButton title={t('Forward')} fileId={file.id} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerDownloadButton>\n                    {isMe && (\n                        <MediaViewerFooterButton title={t('Delete')} onClick={this.handleDelete}>\n                            <DeleteIcon />\n                        </MediaViewerFooterButton>\n                    )}\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClose={this.handleClose} onPrevious={this.handlePrevious}/>\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { modalManager } from '../../Utils/Modal';\nimport { getFormattedText } from '../../Utils/Message';\nimport './AlertDialog.css';\n\nclass AlertDialog extends React.Component {\n\n    handleClose = result => {\n        const { onClose } = this.props;\n\n        onClose && onClose(false);\n    };\n\n    render() {\n        const { params, t } = this.props;\n        if (!params) return null;\n\n        let { title, message, ok, cancel } = params;\n\n        if (message['@type'] === 'formattedText') {\n            message = getFormattedText(message, t, {});\n        }\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{title}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {message}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    { cancel && (\n                        <Button onClick={() => this.handleClose(false)} color='primary'>\n                            {cancel}\n                        </Button>\n                    )}\n                    { ok && (\n                        <Button onClick={() => this.handleClose(true)} color='primary'>\n                            {ok}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nAlertDialog.propTypes = {\n    params: PropTypes.object\n};\n\nexport default withTranslation()(AlertDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { getUserShortName } from '../../Utils/User';\nimport { getFormattedText, getSimpleMarkupEntities } from '../../Utils/Message';\nimport { getChatLocation, isChannelChat } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './BlockSenderDialog.css';\n\nclass BlockSenderDialog extends React.Component {\n    state = {\n        reportSpam: true,\n        deleteChat: true\n    };\n\n    handleReportSpamChange = () => {\n        const { reportSpam } = this.state;\n\n        this.setState({\n            reportSpam: !reportSpam\n        });\n    };\n\n    handleDeleteChatChange = () => {\n        const { deleteChat } = this.state;\n\n        this.setState({\n            deleteChat: !deleteChat\n        });\n    };\n\n    render() {\n        const { sender, onClose, t } = this.props;\n        if (!sender) return null;\n\n        const { reportSpam, deleteChat } = this.state;\n\n        let title = null;\n        let text = null;\n        const entities = [];\n        let reportText = null;\n        switch (sender['@type']) {\n            case 'messageSenderUser': {\n                const { user_id } = sender;\n\n                title = LStore.formatString('BlockUserTitle', getUserShortName(user_id, t));\n                text = LStore.formatString('BlockUserAlert', getUserShortName(user_id, t));\n                text = getSimpleMarkupEntities(text, entities);\n                reportText = LStore.getString('BlockContact');\n                break;\n            }\n            case 'messageSenderChat': {\n                const { chat_id } = sender;\n\n                const location = getChatLocation(chat_id);\n                if (location) {\n                    title = LStore.getString('ReportUnrelatedGroup');\n                    if (location.address) {\n                        text = LStore.formatString('ReportUnrelatedGroupText', location.address);\n                        text = getSimpleMarkupEntities(text, entities);\n                    } else {\n                        text = LStore.getString('ReportUnrelatedGroupTextNoAddress');\n                    }\n                } else {\n                    title = LStore.getString('ReportSpamTitle');\n                    if (isChannelChat(chat_id)) {\n                        text = LStore.getString('ReportSpamAlertChannel');\n                    } else {\n                        text = LStore.getString('ReportSpamAlertGroup');\n                    }\n                }\n                reportText = LStore.getString('ReportChat');\n                break;\n            }\n        }\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, null)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>\n                    {title}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {getFormattedText({ '@type': 'formattedText', text, entities })}\n                    </DialogContentText>\n                    { sender['@type'] === 'messageSenderUser' && (\n                        <div className='block-sender-params'>\n                            <FormControlLabel\n                                control={<Checkbox checked={reportSpam} onChange={this.handleReportSpamChange} color='primary' />}\n                                label={t('DeleteReportSpam')}\n                            />\n                            <FormControlLabel\n                                control={<Checkbox checked={deleteChat} onChange={this.handleDeleteChatChange} color='primary' />}\n                                label={t('DeleteThisChat')}\n                            />\n                        </div>\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, null)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, sender && sender['@type'] === 'messageSenderUser' ? { reportSpam, deleteChat } : null)} color='secondary'>\n                        {reportText}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n\n}\n\nBlockSenderDialog.propTypes = {\n    sender: PropTypes.object\n};\n\nexport default withTranslation()(BlockSenderDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport ChatTile from '../Tile/ChatTile';\nimport { getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport ChatStore from '../../Stores/ChatStore';\n\nclass ClearHistoryDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n        const { prevChatId } = state;\n\n        const chat = ChatStore.get(chatId);\n\n        const { can_be_deleted_for_all_users: canBeDeletedForAllUsers } = chat;\n\n        if (prevChatId !== chatId) {\n            return {\n                prevChatId: chatId,\n                canBeDeletedForAllUsers,\n                revoke: canBeDeletedForAllUsers\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n        const { canBeDeletedForAllUsers, revoke } = this.state;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                open={true}\n                transitionDuration={0}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <div>\n                            <DialogContentText id='delete-dialog-description'>\n                                Are you sure you want clear history?\n                            </DialogContentText>\n                            {\n                                canBeDeletedForAllUsers && (\n                                    <FormControlLabel\n                                        control={\n                                            <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                        }\n                                        label={\n                                            isPrivateChat(chatId)\n                                                ? `Also delete for ${getChatShortTitle(chatId, false, t)}`\n                                                : 'Delete for all members'\n                                        }\n                                        style={{ marginLeft: 0 }}\n                                    />\n                                )\n                            }\n                        </div>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nClearHistoryDialog.propTypes = {\n    chatId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(ClearHistoryDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { getChatShortTitle, isChannelChat, isPrivateChat, isSupergroup } from '../../Utils/Chat';\nimport { sprintf } from '../../Utils/Language';\nimport { modalManager } from '../../Utils/Modal';\nimport MessageStore from '../../Stores/MessageStore';\nimport LStore from '../../Stores/LocalizationStore';\n\nclass DeleteMessagesDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageIds } = props;\n        const { prevChatId, prevMessageIds } = state;\n\n        let canBeDeletedForAllUsers = true;\n        for (let messageId of messageIds) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        if (prevChatId !== chatId && prevMessageIds !== messageIds) {\n            return {\n                prevChatId: chatId,\n                prevMessageIds: messageIds,\n                canBeDeletedForAllUsers,\n                revoke: canBeDeletedForAllUsers\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, messageIds, onClose, t } = this.props;\n        const { canBeDeletedForAllUsers, revoke } = this.state;\n\n        const count = messageIds ? messageIds.length : 0;\n\n        let confirm = count === 1 ? t('AreYouSureDeleteSingleMessage') : t('AreYouSureDeleteFewMessages');\n        if (isSupergroup(chatId) && !isChannelChat(chatId)) {\n            confirm = count === 1 ? t('AreYouSureDeleteSingleMessageMega') : t('AreYouSureDeleteFewMessagesMega');\n        }\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{LStore.formatString('DeleteMessagesTitle', LStore.formatPluralString('messages', count))}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {confirm}\n                    </DialogContentText>\n                    { !isSupergroup(chatId) && canBeDeletedForAllUsers && (\n                        <FormControlLabel\n                            control={<Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />}\n                            label={\n                                isPrivateChat(chatId)\n                                    ? sprintf(t, 'DeleteForUser', getChatShortTitle(chatId, false, t))\n                                    : t('DeleteForAll')\n                            }\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nDeleteMessagesDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(DeleteMessagesDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './InputPasswordDialog.css';\n\nclass InputPasswordDialog extends React.Component {\n\n    state = { };\n\n    handleChange = e => {\n        this.password = e.target.value;\n    };\n\n    handleClickShowPassword = () => {\n        const { showPassword } = this.state;\n\n        this.setState({ showPassword: !showPassword });\n    };\n\n    getErrorMessage = error => {\n        const { t } = this.props;\n\n        if (!error) return null;\n\n        if (error.message === 'PASSWORD_HASH_INVALID') {\n            return t('InvalidPassword');\n        } else if (error.message.startsWith('Too Many Requests: retry after ')) {\n            const str = error.message.replace('Too Many Requests: retry after ', '');\n            try {\n                const time = parseInt(str);\n                const timeString = time < 60\n                    ? LStore.formatPluralString('Seconds', time)\n                    : LStore.formatPluralString('Minutes', Math.floor(time / 60));\n\n                return LStore.formatString('FloodWaitTime', timeString);\n            } catch (e) {\n                return error.message;\n            }\n        }\n\n        return error.message;\n    }\n\n    render() {\n        const { state, error, onClose, t } = this.props;\n        if (!state) return null;\n\n        const { showPassword, loading } = this.state;\n        const { password_hint: passwordHint } = state;\n\n        const errorMessage = this.getErrorMessage(error);\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{t('TwoStepVerificationTitle')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {t('PleaseEnterCurrentPasswordTransfer')}\n                    </DialogContentText>\n                    <FormControl className='auth-input' fullWidth>\n                        <InputLabel htmlFor='adornment-password' error={Boolean(error)}>{t('LoginPassword')}</InputLabel>\n                        <Input\n                            fullWidth\n                            autoFocus\n                            autoComplete='off'\n                            id='adornment-password'\n                            type={showPassword ? 'text' : 'password'}\n                            disabled={loading}\n                            error={Boolean(error)}\n                            onChange={this.handleChange}\n                            endAdornment={\n                                <InputAdornment position='end'>\n                                    <IconButton\n                                        aria-label='Toggle password visibility'\n                                        onClick={this.handleClickShowPassword}\n                                        edge='end'>\n                                        {showPassword ? <Visibility /> : <VisibilityOff />}\n                                    </IconButton>\n                                </InputAdornment>\n                            }\n                        />\n                        {passwordHint && <FormHelperText id='password-hint-text'>{passwordHint}</FormHelperText>}\n                        <FormHelperText id='password-error-text' error>{errorMessage || ' '}</FormHelperText>\n                    </FormControl>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, this.password)} color='primary'>\n                        {t('OK')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nInputPasswordDialog.propTypes = {\n    state: PropTypes.object,\n    error: PropTypes.object,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(InputPasswordDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport ChatTile from '../Tile/ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId, false, t)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                open={true}\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId, t)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nLeaveChatDialog.propTypes = {\n    chatId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(LeaveChatDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { getUserFullName } from '../../Utils/User';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './OpenGameDialog.css';\n\nclass OpenGameDialog extends React.Component {\n    render() {\n        const { game, params, onClose, t } = this.props;\n        if (!game) return null;\n\n        const { userId } = params;\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={e => onClose(e, false)}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {LStore.formatString('BotPermissionGameAlert', getUserFullName(userId))}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={e => onClose(e, false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={e => onClose(e, true)} color='primary'>\n                        {t('OK')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nOpenGameDialog.propTypes = {\n    game: PropTypes.object,\n    params: PropTypes.object,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(OpenGameDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './OpenUrlDialog.css';\n\nclass OpenUrlDialog extends React.Component {\n    render() {\n        const { url, onClose, t } = this.props;\n        if (!url) return null;\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={e => onClose(e, false)}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{t('OpenUrlTitle')}</DialogTitle>\n                <DialogContent style={{ overflowWrap: 'break-word' }}>\n                    <DialogContentText>\n                        {LStore.formatString('OpenUrlAlert2', url)}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={e => onClose(e, false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={e => onClose(e, true)} color='primary'>\n                        {t('Open')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nOpenUrlDialog.propTypes = {\n    url: PropTypes.string,\n    params: PropTypes.object,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(OpenUrlDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { modalManager } from '../../Utils/Modal';\nimport { getUserFullName, getUserShortName } from '../../Utils/User';\nimport { getFormattedText, getSimpleMarkupEntities } from '../../Utils/Message';\nimport LStore from '../../Stores/LocalizationStore';\nimport UserStore from '../../Stores/UserStore';\nimport './RequestUrlDialog.css';\n\nclass RequestUrlDialog extends React.Component {\n    state = {\n        value1: true,\n        value2: true\n    };\n\n    handleValue1Change = () => {\n        const { value1 } = this.state;\n\n        this.setState({ value1: !value1 });\n    };\n\n    handleValue2Change = () => {\n        const { value2 } = this.state;\n\n        this.setState({ value2: !value2 });\n    };\n\n    render() {\n        const { url, params, onClose, t } = this.props;\n        if (!url) return null;\n\n        const { value1, value2 } = this.state;\n\n        const { result } = params;\n        if (!result) return null;\n\n        const { domain, bot_user_id, request_write_access } = result;\n\n        let text1 = LStore.formatString('OpenUrlOption1', domain, getUserFullName(UserStore.getMyId()));\n        const entities1 = [];\n        text1 = getSimpleMarkupEntities(text1, entities1);\n        const option1 = (\n            <FormControlLabel\n                control={<Checkbox color='primary' checked={value1} onChange={this.handleValue1Change}/>}\n                label={getFormattedText({ '@type': 'formattedText', text: text1, entities: entities1 }, t)}\n            />\n        );\n\n        let option2 = null;\n        if (request_write_access) {\n            let text2 = LStore.formatString('OpenUrlOption2', getUserShortName(bot_user_id, t));\n            const entities2 = [];\n            text2 = getSimpleMarkupEntities(text2, entities2);\n            option2 = (\n                <FormControlLabel\n                    control={<Checkbox color='primary' checked={value2} onChange={this.handleValue2Change}/>}\n                    label={getFormattedText({ '@type': 'formattedText', text: text2, entities: entities2 }, t)}\n                />\n            );\n        }\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={e => onClose(e, false)}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{t('OpenUrlTitle')}</DialogTitle>\n                <DialogContent style={{ display: 'flex', flexDirection: 'column', overflowWrap: 'break-word' }}>\n                    <DialogContentText>\n                        {LStore.formatString('OpenUrlAlert2', url)}\n                    </DialogContentText>\n                    {option1}\n                    {option2}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={e => onClose(e, false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={e => onClose(e, true, { value1, value2 })} color='primary'>\n                        {t('Open')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nRequestUrlDialog.propTypes = {\n    url: PropTypes.string,\n    params: PropTypes.object,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(RequestUrlDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { getChatShortTitle, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport ChatStore from '../../Stores/ChatStore';\nimport './PinMessageDialog.css';\n\nclass PinMessageDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n        const { prevChatId, prevMessageId } = state;\n\n        if (prevChatId !== chatId && prevMessageId !== messageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageIds: messageId,\n                revoke: !isPrivateChat(chatId)\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n        const { revoke } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        let text = '';\n        switch (chat.type['@type']) {\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                text = t('PinMessageAlertChat');\n                break;\n            }\n            case 'chatTypeBasicGroup': {\n                text = t('PinMessageAlert');\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                if (isChannelChat(chatId)) {\n                    text = t('PinMessageAlertChannel');\n                } else {\n                    text = t('PinMessageAlert');\n                }\n                break;\n            }\n        }\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {text}\n                    </DialogContentText>\n                    <>\n                        {\n                            isPrivateChat(chatId) && (\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                    }\n                                    label={`Also pin for ${getChatShortTitle(chatId, false, t)}`}\n                                />\n                            )\n                        }\n                    </>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPinMessageDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(PinMessageDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n\n                const { onTimeout } = this.props;\n                if (onTimeout) {\n                    onTimeout();\n                }\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired,\n    onTimeout: PropTypes.func\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { modalManager } from '../../Utils/Modal';\nimport './UnpinMessageDialog.css';\n\nclass UnpinMessageDialog extends React.Component {\n\n    render() {\n        const { messageId, onClose, t } = this.props;\n\n        const text = messageId ? t('UnpinMessageAlert') : t('UnpinAllMessagesAlert');\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {text}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nUnpinMessageDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(UnpinMessageDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AlertDialog from './Popup/AlertDialog';\nimport BlockSenderDialog from './Popup/BlockSenderDialog';\nimport ClearHistoryDialog from './Popup/ClearHistoryDialog';\nimport DeleteMessagesDialog from './Popup/DeleteMessagesDialog';\nimport InputPasswordDialog from './Popup/InputPasswordDialog';\nimport LeaveChatDialog from './Popup/LeaveChatDialog';\nimport OpenGameDialog from './Popup/OpenGameDialog';\nimport OpenUrlDialog from './Popup/OpenUrlDialog';\nimport RequestUrlDialog from './Popup/RequestUrlDialog';\nimport PinMessageDialog from './Popup/PinMessageDialog';\nimport NotificationTimer from './Additional/NotificationTimer';\nimport UnpinMessageDialog from './Popup/UnpinMessageDialog';\nimport { canDeleteChat, canPinMessages, getChatLocation, isChatMember, isCreator, isMeChat } from '../Utils/Chat';\nimport { blockSender, pinMessage as pinMessageAction, unpinAllMessages, unpinMessage as unpinMessageAction } from '../Actions/Message';\nimport { clearSelection, closePinned } from '../Actions/Client';\nimport { openGameInBrowser } from '../Utils/Game';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../Constants';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport { reportChat } from '../Actions/Chat';\n\nclass Actions extends React.PureComponent {\n    state = {\n        leaveChat: null,\n        clearHistory: null,\n        deleteMessages: null,\n        pinMessage: null,\n        unpinMessage: null,\n        alert: null,\n        openUrlAlert: null,\n        openGameAlert: null,\n        requestUrlAlert: null,\n        inputPasswordAlert: null,\n        requestBlockSenderAlert: null\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateRequestBlockSender', this.onClientUpdateBlockSender);\n        AppStore.on('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\n        AppStore.on('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\n        AppStore.on('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.on('clientUpdatePinMessage', this.onClientUpdatePinMessage);\n        AppStore.on('clientUpdateUnpinMessage', this.onClientUpdateUnpinMessage);\n        AppStore.on('clientUpdateAlert', this.onClientUpdateAlert);\n        AppStore.on('clientUpdateInputPasswordAlert', this.onClientUpdateInputPasswordAlert);\n        AppStore.on('clientUpdateSnackbar', this.onClientUpdateSnackbar);\n        AppStore.on('clientUpdateOpenUrlAlert', this.onClientUpdateOpenUrlAlert);\n        AppStore.on('clientUpdateOpenGameAlert', this.onClientUpdateOpenGameAlert);\n        AppStore.on('clientUpdateRequestUrlAlert', this.onClientUpdateRequestUrlAlert);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateRequestBlockSender', this.onClientUpdateBlockSender);\n        AppStore.off('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\n        AppStore.off('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\n        AppStore.off('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.off('clientUpdatePinMessage', this.onClientUpdatePinMessage);\n        AppStore.off('clientUpdateUnpinMessage', this.onClientUpdateUnpinMessage);\n        AppStore.off('clientUpdateAlert', this.onClientUpdateAlert);\n        AppStore.off('clientUpdateInputPasswordAlert', this.onClientUpdateInputPasswordAlert);\n        AppStore.off('clientUpdateSnackbar', this.onClientUpdateSnackbar);\n        AppStore.off('clientUpdateOpenUrlAlert', this.onClientUpdateOpenUrlAlert);\n        AppStore.off('clientUpdateOpenGameAlert', this.onClientUpdateOpenGameAlert);\n        AppStore.off('clientUpdateRequestUrlAlert', this.onClientUpdateRequestUrlAlert);\n    }\n\n    onClientUpdateBlockSender = update => {\n        const { sender } = update;\n\n        this.setState({ requestBlockSenderAlert: { sender }});\n    }\n\n    onClientUpdateInputPasswordAlert = update => {\n        const { state, onPassword } = update;\n\n        this.setState({ inputPasswordAlert: { state, onPassword } });\n    }\n\n    onClientUpdateOpenGameAlert = update => {\n        const { game, params } = update;\n\n        if (params && params.isVerified) {\n            this.openGameAlert = { game, params };\n            this.handleOpenGameContinue(null, true);\n        } else {\n            this.setState({ openGameAlert: { game, params } });\n        }\n    }\n\n    onClientUpdateOpenUrlAlert = update => {\n        const { url, params } = update;\n\n        if (params && !params.ask) {\n            this.openUrlAlert = { url, params };\n            this.handleOpenUrlContinue(null, true);\n        } else {\n            this.setState({ openUrlAlert: { url, params } });\n        }\n    };\n\n    onClientUpdateRequestUrlAlert = update => {\n        const { url, params } = update;\n\n        this.setState({ requestUrlAlert: { url, params } });\n    }\n\n    onClientUpdateSnackbar = update => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n        const { message, action } = update;\n\n        enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: action(closeSnackbar)\n        });\n    };\n\n    onClientUpdateAlert = update => {\n        const { params } = update;\n\n        this.setState({ alert: { params } });\n    };\n\n    onClientUpdateUnpinMessage = update => {\n        const { chatId, messageId } = update;\n\n        if (isMeChat(chatId)) {\n            this.unpinMessage = {\n                chatId,\n                messageId\n            };\n            this.handleUnpinMessageContinue(true, false);\n        } else {\n            this.setState({\n                unpinMessage: {\n                    chatId,\n                    messageId\n                }\n            });\n        }\n    };\n\n    onClientUpdatePinMessage = update => {\n        const { chatId, messageId } = update;\n\n        if (isMeChat(chatId)) {\n            this.pinMessage = {\n                chatId,\n                messageId\n            };\n            this.handlePinMessageContinue(true, false);\n        } else {\n            this.setState({\n                pinMessage: {\n                    chatId,\n                    messageId\n                }\n            });\n        }\n    };\n\n    onClientUpdateDeleteMessages = update => {\n        const { chatId, messageIds } = update;\n\n        this.setState({\n            deleteMessages: {\n                chatId,\n                messageIds\n            }\n        });\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { chatId } = update;\n\n        this.setState({ leaveChat : { chatId } });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = update;\n\n        this.setState({ clearHistory : { chatId } });\n    };\n\n    handleClearHistoryContinue = (result, revoke) => {\n        const { t } = this.props;\n\n        const { clearHistory } = this.state;\n        if (!clearHistory) return;\n\n        this.setState({ clearHistory: null });\n\n        if (!result) return;\n\n        const chatId = AppStore.getChatId();\n        const message = t('HistoryClearedUndo');\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false,\n            revoke\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, [request]);\n    };\n\n    handleLeaveContinue = async (result, undo = true) => {\n        const { leaveChat } = this.state || this;\n        if (!leaveChat) return;\n\n        const { chatId } = leaveChat;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        this.leaveChat = null;\n        this.setState({ leaveChat: null });\n\n        if (!result) return;\n\n        const message = this.getLeaveChatNotification(chatId);\n        const requests = [];\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                if (isChatMember(chatId)) {\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\n                }\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\n            }\n            case 'chatTypeSupergroup': {\n                if (isCreator(chatId)) {\n                    requests.push({\n                        '@type': 'setChatMemberStatus',\n                        chat_id: chatId,\n                        user_id: UserStore.getMyId(),\n                        status: {\n                            '@type': 'chatMemberStatusCreator',\n                            is_member: false\n                        }\n                    });\n                } else if (isChatMember(chatId)) {\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\n                }\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\n            }\n        }\n\n        if (undo) {\n            this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, requests);\n        } else {\n            try {\n                for (let i = 0; i < requests.length; i++) {\n                    await TdLibController.send(requests[i]);\n                }\n            } finally {\n\n            }\n        }\n    };\n\n    handleDeleteMessagesContinue = (result, revoke) => {\n        const { deleteMessages } = this.state;\n        if (!deleteMessages) return;\n\n        const { chatId, messageIds } = deleteMessages;\n\n        clearSelection();\n        this.setState({ deleteMessages: null });\n\n        if (!result) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: messageIds,\n            revoke\n        });\n    };\n\n    getLeaveChatNotification = chatId => {\n        const { t } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return t('ChatDeletedUndo');\n        if (!chat.type) return t('ChatDeletedUndo');\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ChatDeletedUndo');\n            }\n        }\n\n        return t('ChatDeletedUndo');\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, requests) => {\n        const { t, enqueueSnackbar, closeSnackbar } = this.props;\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                for (let i = 0; i < requests.length; i++) {\n                    await TdLibController.send(requests[i]);\n                }\n            } finally {\n                closeSnackbar(snackKey);\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            closeSnackbar(snackKey);\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n        };\n\n        AppStore.addScheduledAction(key, Number.MAX_VALUE, action, cancel);\n\n        TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: true });\n        const snackKey = enqueueSnackbar(message, {\n            persist: true,\n            key,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='progress'\n                    color='inherit'\n                    className='progress-button'>\n                    <NotificationTimer\n                        timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS}\n                        onTimeout={() => {\n                            action();\n                            AppStore.removeScheduledAction(key);\n                        }}/>\n                </IconButton>,\n                <Button\n                    key='undo'\n                    color='primary'\n                    size='small'\n                    onClick={() => {\n                        cancel();\n                        AppStore.removeScheduledAction(key);\n                    }}>\n                    {t('Undo')}\n                </Button>\n            ]\n        });\n    };\n\n    handlePinMessageContinue = (result, revoke) => {\n        let { pinMessage } = this.state;\n        pinMessage = pinMessage || this.pinMessage;\n        if (!pinMessage) return;\n\n        const { chatId, messageId } = pinMessage;\n\n        clearSelection();\n        this.setState({ pinMessage: null });\n        this.pinMessage = null;\n\n        if (!result) return;\n\n        pinMessageAction(chatId, messageId, false, !revoke);\n    };\n\n    handleUnpinMessageContinue = async result => {\n        let { unpinMessage } = this.state;\n        unpinMessage = unpinMessage || this.unpinMessage;\n        if (!unpinMessage) return;\n\n        const { chatId, messageId } = unpinMessage;\n\n        clearSelection();\n        this.setState({ unpinMessage: null });\n        this.unpinMessage = null;\n\n        if (!result) return;\n\n        if (canPinMessages(chatId)) {\n            if (messageId) {\n                await unpinMessageAction(chatId, messageId);\n            } else {\n                closePinned();\n\n                await unpinAllMessages(chatId);\n            }\n        } else {\n            closePinned();\n\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId,\n                clientData: { ...data, ...{ unpinned: true } }\n            });\n        }\n    };\n\n    handleAlertContinue = result => {\n        this.setState({ alert: null });\n    };\n\n    handleOpenUrlContinue = (event, result) => {\n        const openUrlAlert = this.state.openUrlAlert || this.openUrlAlert;\n\n        this.setState({ openUrlAlert: null });\n        this.openUrlAlert = null;\n\n        if (!result) return;\n\n        const { url, onClick } = openUrlAlert;\n        if (!url) return;\n\n        if (onClick) {\n            onClick(event);\n        } else {\n            const newWindow = window.open();\n            newWindow.opener = null;\n            newWindow.location = url;\n        }\n    };\n\n    handleOpenGameContinue = (event, result) => {\n        const openGameAlert = this.state.openGameAlert || this.openGameAlert;\n\n        this.setState({ openGameAlert: null });\n        this.openGameAlert = null;\n\n        if (!result) return;\n\n        const { game, params } = openGameAlert;\n        if (!game) return;\n        if (!params) return;\n\n        const { url, message } = params;\n        if (!url) return;\n        if (!message) return;\n\n        openGameInBrowser(url, message);\n    };\n\n    handleRequestUrlContinue = async (event, open, values) => {\n        const { requestUrlAlert } = this.state;\n        this.setState({ requestUrlAlert: null });\n\n        if (!open) return;\n\n        const { params } = requestUrlAlert;\n        if (!params) return;\n\n        const { result, chatId, messageId, buttonId } = params;\n        if (!result) return;\n\n        if (!values.value1) {\n            this.openUrlAlert = { url: result.url };\n            this.handleOpenUrlContinue(event, open);\n        } else {\n            const httpUrl = await TdLibController.send({\n                '@type': 'getLoginUrl',\n                chat_id: chatId,\n                message_id: messageId,\n                button_id: buttonId,\n                allow_write_access: result.request_write_access && values.value2\n            });\n\n            this.openUrlAlert = { url: httpUrl.url };\n            this.handleOpenUrlContinue(event, open);\n        }\n    };\n\n    handleInputPasswordContinue = (result, password) => {\n        const { inputPasswordAlert } = this.state;\n        const onCloseDialog = () => this.setState({ inputPasswordAlert: null });\n        const onError = error => this.setState({ inputPasswordAlert: { ...inputPasswordAlert, error } })\n\n        if (!result) {\n            onCloseDialog();\n            return;\n        }\n\n        const { onPassword } = inputPasswordAlert;\n        onPassword && onPassword(password, onCloseDialog, onError);\n    };\n\n    handleBlockSenderContinue = async (result, params) => {\n        const { requestBlockSenderAlert } = this.state;\n\n        this.setState({ requestBlockSenderAlert: null });\n\n        if (!result) {\n            return;\n        }\n\n        const { sender } = requestBlockSenderAlert;\n        if (!sender) return;\n\n        let chatId = null;\n        switch (sender['@type']) {\n            case 'messageSenderUser': {\n                blockSender(sender);\n                chatId = await TdLibController.send({ '@type': 'createPrivateChat', user_id: sender.user_id });\n                break;\n            }\n            case 'messageSenderChat': {\n                chatId = sender.chat_id;\n                break;\n            }\n        }\n\n        if (!params || params.reportSpam) {\n            const reason = getChatLocation(chatId)\n                ? { '@type': 'chatReportReasonUnrelatedLocation' }\n                : { '@type': 'chatReportReasonSpam' };\n\n            reportChat(chatId, reason);\n        }\n\n        if (!params || params.deleteChat) {\n            const deleteChat = canDeleteChat(chatId);\n            if (!deleteChat) return;\n\n            this.leaveChat = { chatId };\n            this.handleLeaveContinue(true, false);\n        }\n    };\n\n    render() {\n        const {\n            leaveChat,\n            clearHistory,\n            deleteMessages,\n            pinMessage,\n            unpinMessage,\n            alert,\n            openUrlAlert,\n            openGameAlert,\n            requestUrlAlert,\n            inputPasswordAlert,\n            requestBlockSenderAlert\n        } = this.state;\n        if (leaveChat) {\n            const { chatId } = leaveChat;\n\n            return (\n                <LeaveChatDialog\n                    chatId={chatId}\n                    onClose={this.handleLeaveContinue} />\n                );\n        } else if (clearHistory) {\n            const { chatId } = clearHistory;\n\n            return (\n                <ClearHistoryDialog\n                    chatId={chatId}\n                    onClose={this.handleClearHistoryContinue} />\n                );\n        } else if (deleteMessages) {\n            const { chatId, messageIds } = deleteMessages;\n\n            return (\n                <DeleteMessagesDialog\n                    chatId={chatId}\n                    messageIds={messageIds}\n                    onClose={this.handleDeleteMessagesContinue} />\n                );\n        } else if (pinMessage) {\n            const { chatId, messageId } = pinMessage;\n\n            return (\n                <PinMessageDialog\n                    chatId={chatId}\n                    messageId={messageId}\n                    onClose={this.handlePinMessageContinue} />\n            );\n        } else if (unpinMessage) {\n            const { chatId, messageId } = unpinMessage;\n\n            return (\n                <UnpinMessageDialog\n                    chatId={chatId}\n                    messageId={messageId}\n                    onClose={this.handleUnpinMessageContinue} />\n            );\n        } else if (alert) {\n            const { params } = alert;\n\n            return (\n                <AlertDialog\n                    params={params}\n                    onClose={this.handleAlertContinue} />\n            );\n        } else if (openUrlAlert) {\n            const { url, params } = openUrlAlert;\n\n            return (\n                <OpenUrlDialog\n                    url={url}\n                    params={params}\n                    onClose={this.handleOpenUrlContinue}/>\n            );\n        } else if (openGameAlert) {\n            const { game, params } = openGameAlert;\n\n            return (\n                <OpenGameDialog\n                    game={game}\n                    params={params}\n                    onClose={this.handleOpenGameContinue}/>\n            );\n        } else if (requestUrlAlert) {\n            const { url, params } = requestUrlAlert;\n\n            return (\n                <RequestUrlDialog\n                    url={url}\n                    params={params}\n                    onClose={this.handleRequestUrlContinue}/>\n            );\n        } else if (inputPasswordAlert) {\n            const { state, error } = inputPasswordAlert;\n\n            return (\n                <InputPasswordDialog\n                    state={state}\n                    error={error}\n                    onClose={this.handleInputPasswordContinue}/>\n            );\n        } else if (requestBlockSenderAlert) {\n            const { sender } = requestBlockSenderAlert;\n\n            return (\n                <BlockSenderDialog\n                    sender={sender}\n                    onClose={this.handleBlockSenderContinue}/>\n            );\n        }\n\n        return null;\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(Actions);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function openGameInBrowser(url, message) {\n    let sharedPreferences = {};\n    try {\n        sharedPreferences = JSON.parse(localStorage.getItem('botshare')) || { };\n    } catch (e) { }\n\n    const existing = sharedPreferences['' + message.id];\n    let hash = existing ? existing : ''\n    let addHash = 'tgShareScoreUrl=' + encodeURIComponent('tg://share_game_score?hash=');\n    if (!existing) {\n        const chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n        const array = new Uint8Array(1);\n        for (let i = 0; i < 20; i++) {\n            window.crypto.getRandomValues(array)\n            hash += chars[array[0] % chars.length];\n        }\n\n        sharedPreferences['' + message.id] = hash;\n        localStorage.setItem('botshare', JSON.stringify(sharedPreferences));\n    }\n    addHash += hash;\n    const index = url.indexOf('#');\n    if (index < 0) {\n        url += '#' + addHash;\n    } else {\n        const curHash = url.substring(0, index + 1);\n        if (curHash.indexOf('=') >= 0 || curHash.indexOf('?') >= 0) {\n            url += '&' + addHash;\n        } else {\n            if (curHash.length > 0) {\n                url += '?' + addHash;\n            } else {\n                url += addHash;\n            }\n        }\n    }\n\n    const newWindow = window.open();\n    newWindow.opener = null;\n    newWindow.location = url;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../Utils/HOC';\nimport withLanguage from '../Language';\nimport withSnackbarNotifications from '../Notifications';\nimport PipPlayer from './Player/PipPlayer';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport InstantViewer from './InstantView/InstantViewer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport InstantViewStore from '../Stores/InstantViewStore';\nimport UserStore from '../Stores/UserStore';\nimport PlayerStore from '../Stores/PlayerStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\nimport Actions from './Actions';\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, isSmallWidth } = AppStore;\n\n        this.state = {\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            isSmallWidth,\n            forwardInfo: null,\n            instantViewContent: null,\n            videoInfo: null\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.on('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.off('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.off('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n\n        this.setState({\n            videoInfo\n        });\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        const { content } = update;\n\n        this.setState({\n            instantViewContent: content\n        });\n    };\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup, options } = update;\n\n        this.handleSelectChat(chatId, messageId, popup, options || AppStore.chatSelectOptions);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        const { isChatDetailsVisible } = AppStore;\n\n        this.setState({ isChatDetailsVisible });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        const { mediaViewerContent } = AppStore;\n\n        this.setState({ mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        const { profileMediaViewerContent } = AppStore;\n\n        this.setState({ profileMediaViewerContent });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false, options = {}) => {\n        const currentChatId = AppStore.getChatId();\n        const currentDialogChatId = AppStore.dialogChatId;\n        const currentMessageId = AppStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId && !options) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId && !options) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId, options);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const {\n            instantViewContent,\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            forwardInfo,\n            videoInfo,\n            isSmallWidth\n        } = this.state;\n\n        return (\n            <>\n                <div\n                    className={classNames('page', {\n                        'page-small': isSmallWidth,\n                        'page-third-column': isChatDetailsVisible\n                    })}>\n                    <Dialogs />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                <Actions/>\n                {instantViewContent && <InstantViewer {...instantViewContent} />}\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n                {videoInfo && <PipPlayer {...videoInfo}/>}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}